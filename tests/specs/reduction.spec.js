import {verify} from '../../../fdv/verifier';

import {
  INSPECT,
} from '../../../fdlib/src/helpers';

// the main goal of this file is to check whether constraint pairs with a leaf var are reduced if possible (^ | => ->)
// the actual outcomes are not very relevant. we prefer to catch a rewrite explicitly but a solve is fine too.

let ENABLED = false; // Note: adds 4 mins for partial and >30min for complete suite
let PARTIAL = true;
let MAX_PER_TEST = PARTIAL ? 1 : 200;
let counter = 0;

// .skip() causes about a minute overhead
// the weird structure is just to circumvent linter :)
(ENABLED ? describe : ((x = _ => _) => (x.only = _ => x)())()).only('fdh/specs/reduction.spec', function() {

  describe('void constraints', function() {

    describe('ALL', function() {

      describe('binary', function() {

        let both = testBinaryBinary.bind(undefined, '&', '', ''); // A & B, A @ C  and  A & B, C @ A
        let lhs = testBinaryBinary.bind(undefined, '&', '', 'lhs'); // A & B, A @ C
        let rhs = testBinaryBinary.bind(undefined, '&', '', 'rhs'); // A & B, C @ A

        both('&', [0, 1], [0, 1], [0, 1]);
        both('&', [0, 1], [0, 1], [0, 2]);
        both('&', [0, 1], [0, 2], [0, 1]);
        both('&', [0, 1], [0, 2], [0, 2]);
        both('&', [0, 2], [0, 1], [0, 1]);
        both('&', [0, 2], [0, 1], [0, 2]);
        both('&', [0, 2], [0, 2], [0, 1]);
        both('&', [0, 2], [0, 2], [0, 2]);
        both('&', [0, 2], [0, 1], [1, 2]);
        both('&', [0, 2], [1, 2], [0, 1]);
        both('&', [0, 2], [1, 2], [1, 2]);
        both('&', [0, 10]);
        both('&', [0, 0, 9, 9]);
        both('&', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('&', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!=', [0, 1], [0, 1], [0, 1]);
        both('!=', [0, 1], [0, 1], [0, 2]);
        both('!=', [0, 1], [0, 2], [0, 1]);
        both('!=', [0, 1], [0, 2], [0, 2]);
        both('!=', [0, 2], [0, 1], [0, 1]);
        both('!=', [0, 2], [0, 1], [0, 2]);
        both('!=', [0, 2], [0, 2], [0, 1]);
        both('!=', [0, 2], [0, 2], [0, 2]);
        both('!=', [0, 2], [0, 1], [1, 2]);
        both('!=', [0, 2], [1, 2], [0, 1]);
        both('!=', [0, 2], [1, 2], [1, 2]);
        both('!=', [0, 10]);
        both('!=', [0, 0, 9, 9]);
        both('!=', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!=', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('->', [0, 1], [0, 1], [0, 1]);
        lhs('->', [0, 1], [0, 1], [0, 2]);
        lhs('->', [0, 1], [0, 2], [0, 1]);
        lhs('->', [0, 1], [0, 2], [0, 2]);
        lhs('->', [0, 2], [0, 1], [0, 1]);
        lhs('->', [0, 2], [0, 1], [0, 2]);
        lhs('->', [0, 2], [0, 2], [0, 1]);
        lhs('->', [0, 2], [0, 2], [0, 2]);
        lhs('->', [0, 2], [0, 1], [1, 2]);
        lhs('->', [0, 2], [1, 2], [0, 1]);
        lhs('->', [0, 2], [1, 2], [1, 2]);
        lhs('->', [0, 10]);
        lhs('->', [0, 0, 9, 9]);
        lhs('->', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('->', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('->', [0, 1], [0, 1], [0, 1]);
        rhs('->', [0, 1], [0, 1], [0, 2]);
        rhs('->', [0, 1], [0, 2], [0, 1]);
        rhs('->', [0, 1], [0, 2], [0, 2]);
        rhs('->', [0, 2], [0, 1], [0, 1]);
        rhs('->', [0, 2], [0, 1], [0, 2]);
        rhs('->', [0, 2], [0, 2], [0, 1]);
        rhs('->', [0, 2], [0, 2], [0, 2]);
        rhs('->', [0, 2], [0, 1], [1, 2]);
        rhs('->', [0, 2], [1, 2], [0, 1]);
        rhs('->', [0, 2], [1, 2], [1, 2]);
        rhs('->', [0, 10]);
        rhs('->', [0, 0, 9, 9]);
        rhs('->', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('->', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<', 'reject', [0, 1], [0, 1], [0, 1]);
        lhs('<', [0, 1], [0, 1], [0, 2]);
        lhs('<', 'reject', [0, 1], [0, 2], [0, 1]);
        lhs('<', [0, 1], [0, 2], [0, 2]);
        lhs('<', 'reject', [0, 2], [0, 1], [0, 1]);
        lhs('<', [0, 2], [0, 1], [0, 2]);
        lhs('<', 'reject', [0, 2], [0, 2], [0, 1]);
        lhs('<', [0, 2], [0, 2], [0, 2]);
        lhs('<', [0, 2], [0, 1], [1, 2]);
        lhs('<', 'reject', [0, 2], [1, 2], [0, 1]);
        lhs('<', [0, 2], [1, 2], [1, 2]);
        lhs('<', [0, 10]);
        lhs('<', 'reject', [0, 0, 9, 9]);
        lhs('<', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<', 'reject', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<', [0, 1], [0, 1], [0, 1]);
        rhs('<', [0, 1], [0, 1], [0, 2]);
        rhs('<', [0, 1], [0, 2], [0, 1]);
        rhs('<', [0, 1], [0, 2], [0, 2]);
        rhs('<', [0, 2], [0, 1], [0, 1]);
        rhs('<', [0, 2], [0, 1], [0, 2]);
        rhs('<', [0, 2], [0, 2], [0, 1]);
        rhs('<', [0, 2], [0, 2], [0, 2]);
        rhs('<', [0, 2], [0, 1], [1, 2]);
        rhs('<', [0, 2], [1, 2], [0, 1]);
        rhs('<', [0, 2], [1, 2], [1, 2]);
        rhs('<', [0, 10]);
        rhs('<', [0, 0, 9, 9]);
        rhs('<', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<=', [0, 1], [0, 1], [0, 1]);
        lhs('<=', [0, 1], [0, 1], [0, 2]);
        lhs('<=', [0, 1], [0, 2], [0, 1]);
        lhs('<=', [0, 1], [0, 2], [0, 2]);
        lhs('<=', [0, 2], [0, 1], [0, 1]);
        lhs('<=', [0, 2], [0, 1], [0, 2]);
        lhs('<=', [0, 2], [0, 2], [0, 1]);
        lhs('<=', [0, 2], [0, 2], [0, 2]);
        lhs('<=', [0, 2], [0, 1], [1, 2]);
        lhs('<=', [0, 2], [1, 2], [0, 1]);
        lhs('<=', [0, 2], [1, 2], [1, 2]);
        lhs('<=', [0, 10]);
        lhs('<=', [0, 0, 9, 9]);
        lhs('<=', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<=', 'reject', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<=', [0, 1], [0, 1], [0, 1]);
        rhs('<=', [0, 1], [0, 1], [0, 2]);
        rhs('<=', [0, 1], [0, 2], [0, 1]);
        rhs('<=', [0, 1], [0, 2], [0, 2]);
        rhs('<=', [0, 2], [0, 1], [0, 1]);
        rhs('<=', [0, 2], [0, 1], [0, 2]);
        rhs('<=', [0, 2], [0, 2], [0, 1]);
        rhs('<=', [0, 2], [0, 2], [0, 2]);
        rhs('<=', [0, 2], [0, 1], [1, 2]);
        rhs('<=', [0, 2], [1, 2], [0, 1]);
        rhs('<=', [0, 2], [1, 2], [1, 2]);
        rhs('<=', [0, 10]);
        rhs('<=', [0, 0, 9, 9]);
        rhs('<=', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<=', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!&', [0, 1], [0, 1], [0, 1]);
        both('!&', [0, 1], [0, 1], [0, 2]);
        both('!&', [0, 1], [0, 2], [0, 1]);
        both('!&', [0, 1], [0, 2], [0, 2]);
        both('!&', [0, 2], [0, 1], [0, 1]);
        both('!&', [0, 2], [0, 1], [0, 2]);
        both('!&', [0, 2], [0, 2], [0, 1]);
        both('!&', [0, 2], [0, 2], [0, 2]);
        both('!&', 'reject', [0, 2], [0, 1], [1, 2]);
        both('!&', [0, 2], [1, 2], [0, 1]);
        both('!&', 'reject', [0, 2], [1, 2], [1, 2]);
        both('!&', [0, 10]);
        both('!&', [0, 0, 9, 9]);
        both('!&', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!&', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('!->', [0, 1], [0, 1], [0, 1]);
        lhs('!->', [0, 1], [0, 1], [0, 2]);
        lhs('!->', [0, 1], [0, 2], [0, 1]);
        lhs('!->', [0, 1], [0, 2], [0, 2]);
        lhs('!->', [0, 2], [0, 1], [0, 1]);
        lhs('!->', [0, 2], [0, 1], [0, 2]);
        lhs('!->', [0, 2], [0, 2], [0, 1]);
        lhs('!->', [0, 2], [0, 2], [0, 2]);
        lhs('!->', 'reject', [0, 2], [0, 1], [1, 2]);
        lhs('!->', [0, 2], [1, 2], [0, 1]);
        lhs('!->', 'reject', [0, 2], [1, 2], [1, 2]);
        lhs('!->', [0, 10]);
        lhs('!->', [0, 0, 9, 9]);
        lhs('!->', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('!->', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('!->', 'reject', [0, 1], [0, 1], [0, 1]);
        rhs('!->', 'reject', [0, 1], [0, 1], [0, 2]);
        rhs('!->', 'reject', [0, 1], [0, 2], [0, 1]);
        rhs('!->', 'reject', [0, 1], [0, 2], [0, 2]);
        rhs('!->', 'reject', [0, 2], [0, 1], [0, 1]);
        rhs('!->', 'reject', [0, 2], [0, 1], [0, 2]);
        rhs('!->', 'reject', [0, 2], [0, 2], [0, 1]);
        rhs('!->', 'reject', [0, 2], [0, 2], [0, 2]);
        rhs('!->', 'reject', [0, 2], [0, 1], [1, 2]);
        rhs('!->', 'reject', [0, 2], [1, 2], [0, 1]);
        rhs('!->', 'reject', [0, 2], [1, 2], [1, 2]);
        rhs('!->', 'reject', [0, 10]);
        rhs('!->', 'reject', [0, 0, 9, 9]);
        rhs('!->', 'reject', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('!->', 'reject', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!|', 'reject', [0, 1], [0, 1], [0, 1]);
        both('!|', 'reject', [0, 1], [0, 1], [0, 2]);
        both('!|', 'reject', [0, 1], [0, 2], [0, 1]);
        both('!|', 'reject', [0, 1], [0, 2], [0, 2]);
        both('!|', 'reject', [0, 2], [0, 1], [0, 1]);
        both('!|', 'reject', [0, 2], [0, 1], [0, 2]);
        both('!|', 'reject', [0, 2], [0, 2], [0, 1]);
        both('!|', 'reject', [0, 2], [0, 2], [0, 2]);
        both('!|', 'reject', [0, 2], [0, 1], [1, 2]);
        both('!|', 'reject', [0, 2], [1, 2], [0, 1]);
        both('!|', 'reject', [0, 2], [1, 2], [1, 2]);
        both('!|', 'reject', [0, 10]);
        both('!|', 'reject', [0, 0, 9, 9]);
        both('!|', 'reject', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!|', 'reject', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('==', [0, 1], [0, 1], [0, 1]);
        both('==', [0, 1], [0, 1], [0, 2]);
        both('==', [0, 1], [0, 2], [0, 1]);
        both('==', [0, 1], [0, 2], [0, 2]);
        both('==', [0, 2], [0, 1], [0, 1]);
        both('==', [0, 2], [0, 1], [0, 2]);
        both('==', [0, 2], [0, 2], [0, 1]);
        both('==', [0, 2], [0, 2], [0, 2]);
        both('==', [0, 2], [0, 1], [1, 2]);
        both('==', [0, 2], [1, 2], [0, 1]);
        both('==', [0, 2], [1, 2], [1, 2]);
        both('==', [0, 10]);
        both('==', [0, 0, 9, 9]);
        both('==', 'reject', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('==', 'reject', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!^', [0, 1], [0, 1], [0, 1]);
        both('!^', [0, 1], [0, 1], [0, 2]);
        both('!^', [0, 1], [0, 2], [0, 1]);
        both('!^', [0, 1], [0, 2], [0, 2]);
        both('!^', [0, 2], [0, 1], [0, 1]);
        both('!^', [0, 2], [0, 1], [0, 2]);
        both('!^', [0, 2], [0, 2], [0, 1]);
        both('!^', [0, 2], [0, 2], [0, 2]);
        both('!^', [0, 2], [0, 1], [1, 2]);
        both('!^', [0, 2], [1, 2], [0, 1]);
        both('!^', [0, 2], [1, 2], [1, 2]);
        both('!^', [0, 10]);
        both('!^', [0, 0, 9, 9]);
        both('!^', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!^', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('^', [0, 1], [0, 1], [0, 1]);
        both('^', [0, 1], [0, 1], [0, 2]);
        both('^', [0, 1], [0, 2], [0, 1]);
        both('^', [0, 1], [0, 2], [0, 2]);
        both('^', [0, 2], [0, 1], [0, 1]);
        both('^', [0, 2], [0, 1], [0, 2]);
        both('^', [0, 2], [0, 2], [0, 1]);
        both('^', [0, 2], [0, 2], [0, 2]);
        both('^', 'reject', [0, 2], [0, 1], [1, 2]);
        both('^', [0, 2], [1, 2], [0, 1]);
        both('^', 'reject', [0, 2], [1, 2], [1, 2]);
        both('^', [0, 10]);
        both('^', [0, 0, 9, 9]);
        both('^', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('^', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
      });

      describe('ternary with shared arg', function() {

        let both = testBinaryTernarySharedArgs.bind(undefined, '&', '', ''); // A & B, R = A @ C  and  A & B, R = C @ A
        let lhs = testBinaryTernarySharedArgs.bind(undefined, '&', '', 'lhs'); // A & B, R = A @ C
        let rhs = testBinaryTernarySharedArgs.bind(undefined, '&', '', 'rhs'); // A & B, R = C @ A

        // A & B, R = A &? C
        both('&?', [0, 1], [0, 1], [0, 1], [0, 1]);
        both('&?', [0, 1], [0, 1], [0, 1], [0, 2]);
        both('&?', [0, 1], [0, 1], [0, 2], [0, 2]);
        both('&?', [0, 1], [0, 2], [0, 2], [0, 2]);
        both('&?', [0, 2], [0, 1], [0, 1], [0, 1]);
        both('&?', [0, 2], [0, 1], [0, 1], [0, 2]);
        both('&?', [0, 2], [0, 1], [0, 2], [0, 2]);
        both('&?', [0, 2], [0, 2], [0, 2], [0, 2]);
        both('&?', [0, 2], [1, 2], [0, 1], [0, 1]);
        both('&?', [0, 2], [1, 2], [1, 2], [0, 1]);
        both('&?', [0, 2], [1, 2], [1, 2], [1, 2]);
        both('&?', [0, 1], [0, 10]);
        both('&?', [0, 1], [0, 0, 9, 9]);
        both('&?', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('&?', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('==?', [0, 1], [0, 1], [0, 1], [0, 1]);
        both('==?', 'issame', [0, 1], [0, 1], [0, 1], [0, 2]);
        both('==?', 'issame', [0, 1], [0, 1], [0, 2], [0, 2]);
        both('==?', 'issame', [0, 1], [0, 2], [0, 2], [0, 2]);
        both('==?', 'issame', [0, 2], [0, 1], [0, 1], [0, 1]);
        both('==?', 'issame', [0, 2], [0, 1], [0, 1], [0, 2]);
        both('==?', 'issame', [0, 2], [0, 1], [0, 2], [0, 2]);
        both('==?', 'issame', [0, 2], [0, 2], [0, 2], [0, 2]);
        both('==?', 'issame', [0, 2], [1, 2], [0, 1], [0, 1]);
        both('==?', 'issame', [0, 2], [1, 2], [1, 2], [0, 1]);
        both('==?', 'issame', [0, 2], [1, 2], [1, 2], [1, 2]);
        both('==?', 'issame', [0, 1], [0, 10]);
        both('==?', 'issame', [0, 1], [0, 0, 9, 9]);
        both('==?', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('==?', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!=?', 'xor', [0, 1], [0, 1], [0, 1], [0, 1]);
        both('!=?', 'isdiff', [0, 1], [0, 1], [0, 1], [0, 2]);
        both('!=?', 'isdiff', [0, 1], [0, 1], [0, 2], [0, 2]);
        both('!=?', 'isdiff', [0, 1], [0, 2], [0, 2], [0, 2]);
        both('!=?', 'isdiff', [0, 2], [0, 1], [0, 1], [0, 1]);
        both('!=?', 'isdiff', [0, 2], [0, 1], [0, 1], [0, 2]);
        both('!=?', 'isdiff', [0, 2], [0, 1], [0, 2], [0, 2]);
        both('!=?', 'isdiff', [0, 2], [0, 2], [0, 2], [0, 2]);
        both('!=?', 'isdiff', [0, 2], [1, 2], [0, 1], [0, 1]);
        both('!=?', 'isdiff', [0, 2], [1, 2], [1, 2], [0, 1]);
        both('!=?', 'isdiff', [0, 2], [1, 2], [1, 2], [1, 2]);
        both('!=?', 'isdiff', [0, 1], [0, 10]);
        both('!=?', 'xor', [0, 1], [0, 0, 9, 9]);
        both('!=?', 'isdiff', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!=?', 'isdiff', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<?', [0, 1], [0, 1], [0, 1], [0, 1]);
        lhs('<?', 'islt', [0, 1], [0, 1], [0, 1], [0, 2]);
        lhs('<?', 'islt', [0, 1], [0, 1], [0, 2], [0, 2]);
        lhs('<?', 'islt', [0, 1], [0, 2], [0, 2], [0, 2]);
        lhs('<?', [0, 2], [0, 1], [0, 1], [0, 1]);
        lhs('<?', 'islt', [0, 2], [0, 1], [0, 1], [0, 2]);
        lhs('<?', 'islt', [0, 2], [0, 1], [0, 2], [0, 2]);
        lhs('<?', 'islt', [0, 2], [0, 2], [0, 2], [0, 2]);
        lhs('<?', [0, 2], [1, 2], [0, 1], [0, 1]);
        lhs('<?', [0, 2], [1, 2], [1, 2], [0, 1]);
        lhs('<?', 'islt', [0, 2], [1, 2], [1, 2], [1, 2]);
        lhs('<?', 'islt', [0, 1], [0, 10]);
        lhs('<?', [0, 1], [0, 0, 9, 9]);
        lhs('<?', 'islt', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<?', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<?', 'islt', [0, 1], [0, 1], [0, 1], [0, 1]);
        rhs('<?', 'islt', [0, 1], [0, 1], [0, 1], [0, 2]);
        rhs('<?', 'islt', [0, 1], [0, 1], [0, 2], [0, 2]);
        rhs('<?', 'islt', [0, 1], [0, 2], [0, 2], [0, 2]);
        rhs('<?', 'islt', [0, 2], [0, 1], [0, 1], [0, 1]);
        rhs('<?', 'islt', [0, 2], [0, 1], [0, 1], [0, 2]);
        rhs('<?', 'islt', [0, 2], [0, 1], [0, 2], [0, 2]);
        rhs('<?', 'islt', [0, 2], [0, 2], [0, 2], [0, 2]);
        rhs('<?', 'islt', [0, 2], [1, 2], [0, 1], [0, 1]);
        rhs('<?', 'islt', [0, 2], [1, 2], [1, 2], [0, 1]);
        rhs('<?', 'islt', [0, 2], [1, 2], [1, 2], [1, 2]);
        rhs('<?', 'islt', [0, 1], [0, 10]);
        rhs('<?', 'islt', [0, 1], [0, 0, 9, 9]);
        rhs('<?', 'islt', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<?', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<=?', [0, 1], [0, 1], [0, 1], [0, 1]);
        lhs('<=?', 'islte', [0, 1], [0, 1], [0, 1], [0, 2]);
        lhs('<=?', 'islte', [0, 1], [0, 1], [0, 2], [0, 2]);
        lhs('<=?', 'islte', [0, 1], [0, 2], [0, 2], [0, 2]);
        lhs('<=?', 'islte', [0, 2], [0, 1], [0, 1], [0, 1]);
        lhs('<=?', 'islte', [0, 2], [0, 1], [0, 1], [0, 2]);
        lhs('<=?', 'islte', [0, 2], [0, 1], [0, 2], [0, 2]);
        lhs('<=?', 'islte', [0, 2], [0, 2], [0, 2], [0, 2]);
        lhs('<=?', 'islte', [0, 2], [1, 2], [0, 1], [0, 1]);
        lhs('<=?', 'islte', [0, 2], [1, 2], [1, 2], [0, 1]);
        lhs('<=?', 'islte', [0, 2], [1, 2], [1, 2], [1, 2]);
        lhs('<=?', 'islte', [0, 1], [0, 10]);
        lhs('<=?', 'islte', [0, 1], [0, 0, 9, 9]);
        lhs('<=?', 'islte', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<=?', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<=?', [0, 1], [0, 1], [0, 1], [0, 1]);
        rhs('<=?', 'islte', [0, 1], [0, 1], [0, 1], [0, 2]);
        rhs('<=?', 'islte', [0, 1], [0, 1], [0, 2], [0, 2]);
        rhs('<=?', 'islte', [0, 1], [0, 2], [0, 2], [0, 2]);
        rhs('<=?', [0, 2], [0, 1], [0, 1], [0, 1]);
        rhs('<=?', 'islte', [0, 2], [0, 1], [0, 1], [0, 2]);
        rhs('<=?', 'islte', [0, 2], [0, 1], [0, 2], [0, 2]);
        rhs('<=?', 'islte', [0, 2], [0, 2], [0, 2], [0, 2]);
        rhs('<=?', [0, 2], [1, 2], [0, 1], [0, 1]);
        rhs('<=?', [0, 2], [1, 2], [1, 2], [0, 1]);
        rhs('<=?', 'islte', [0, 2], [1, 2], [1, 2], [1, 2]);
        rhs('<=?', 'islte', [0, 1], [0, 10]);
        rhs('<=?', [0, 1], [0, 0, 9, 9]);
        rhs('<=?', 'islte', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<=?', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!&?', 'isnall', [0, 1], [0, 1], [0, 1], [0, 1]);
        both('!&?', 'isnall', [0, 1], [0, 1], [0, 1], [0, 2]);
        both('!&?', 'isnall', [0, 1], [0, 1], [0, 2], [0, 2]);
        both('!&?', 'isnall', [0, 1], [0, 2], [0, 2], [0, 2]);
        both('!&?', 'isnall', [0, 2], [0, 1], [0, 1], [0, 1]);
        both('!&?', 'isnall', [0, 2], [0, 1], [0, 1], [0, 2]);
        both('!&?', 'isnall', [0, 2], [0, 1], [0, 2], [0, 2]);
        both('!&?', 'isnall', [0, 2], [0, 2], [0, 2], [0, 2]);
        both('!&?', 'isnall', [0, 2], [1, 2], [0, 1], [0, 1]);
        both('!&?', 'isnall', [0, 2], [1, 2], [1, 2], [0, 1]);
        both('!&?', [0, 2], [1, 2], [1, 2], [1, 2]);
        both('!&?', 'isnall', [0, 1], [0, 10]);
        both('!&?', 'isnall', [0, 1], [0, 0, 9, 9]);
        both('!&?', 'isnall', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!&?', 'isnall', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('|?', [0, 1], [0, 1], [0, 1], [0, 1]);
        both('|?', [0, 1], [0, 1], [0, 1], [0, 2]);
        both('|?', [0, 1], [0, 1], [0, 2], [0, 2]);
        both('|?', [0, 1], [0, 2], [0, 2], [0, 2]);
        both('|?', [0, 2], [0, 1], [0, 1], [0, 1]);
        both('|?', [0, 2], [0, 1], [0, 1], [0, 2]);
        both('|?', [0, 2], [0, 1], [0, 2], [0, 2]);
        both('|?', [0, 2], [0, 2], [0, 2], [0, 2]);
        both('|?', [0, 2], [1, 2], [0, 1], [0, 1]);
        both('|?', [0, 2], [1, 2], [1, 2], [0, 1]);
        both('|?', [0, 2], [1, 2], [1, 2], [1, 2]);
        both('|?', [0, 1], [0, 10]);
        both('|?', [0, 1], [0, 0, 9, 9]);
        both('|?', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('|?', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!|?', [0, 1], [0, 1], [0, 1], [0, 1]);
        both('!|?', [0, 1], [0, 1], [0, 1], [0, 2]);
        both('!|?', [0, 1], [0, 1], [0, 2], [0, 2]);
        both('!|?', [0, 1], [0, 2], [0, 2], [0, 2]);
        both('!|?', [0, 2], [0, 1], [0, 1], [0, 1]);
        both('!|?', [0, 2], [0, 1], [0, 1], [0, 2]);
        both('!|?', [0, 2], [0, 1], [0, 2], [0, 2]);
        both('!|?', [0, 2], [0, 2], [0, 2], [0, 2]);
        both('!|?', [0, 2], [1, 2], [0, 1], [0, 1]);
        both('!|?', [0, 2], [1, 2], [1, 2], [0, 1]);
        both('!|?', [0, 2], [1, 2], [1, 2], [1, 2]);
        both('!|?', [0, 1], [0, 10]);
        both('!|?', [0, 1], [0, 0, 9, 9]);
        both('!|?', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!|?', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('+', [0, 1], [0, 1], [0, 1], [0, 1]);
        both('+', [0, 1], [0, 1], [0, 1], [0, 2]);
        both('+', [0, 1], [0, 1], [0, 2], [0, 2]);
        both('+', [0, 1], [0, 2], [0, 2], [0, 2]);
        both('+', 'isdiff', [0, 2], [0, 1], [0, 1], [0, 1]);
        both('+', 'isdiff', [0, 2], [0, 1], [0, 1], [0, 2]);
        both('+', 'isdiff', [0, 2], [0, 1], [0, 2], [0, 2]);
        both('+', 'sum', [0, 2], [0, 2], [0, 2], [0, 2]);
        both('+', 'sum', [0, 2], [1, 2], [0, 1], [0, 1]);
        both('+', 'sum', [0, 2], [1, 2], [1, 2], [0, 1]);
        both('+', [0, 2], [1, 2], [1, 2], [1, 2]);
        both('+', 'isdiff', [0, 20], [0, 1], [0, 1], [0, 1]);
        both('+', [0, 20], [0, 10]);
        both('+', [0, 20], [0, 0, 9, 9]);
        both('+', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('+', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('-', 'minus', [0, 1], [0, 1], [0, 1], [0, 1]);
        lhs('-', 'minus', [0, 1], [0, 1], [0, 1], [0, 2]);
        lhs('-', 'minus', [0, 1], [0, 1], [0, 2], [0, 2]);
        lhs('-', 'minus', [0, 1], [0, 2], [0, 2], [0, 2]);
        lhs('-', 'minus', [0, 2], [0, 1], [0, 1], [0, 1]);
        lhs('-', 'minus', [0, 2], [0, 1], [0, 1], [0, 2]);
        lhs('-', 'minus', [0, 2], [0, 1], [0, 2], [0, 2]);
        lhs('-', 'minus', [0, 2], [0, 2], [0, 2], [0, 2]);
        lhs('-', 'minus', [0, 2], [1, 2], [0, 1], [0, 1]);
        lhs('-', 'minus', [0, 2], [1, 2], [1, 2], [0, 1]);
        lhs('-', 'minus', [0, 2], [1, 2], [1, 2], [1, 2]);
        lhs('-', 'minus', [0, 20], [0, 1], [0, 1], [0, 1]);
        lhs('-', 'minus', [0, 20], [0, 10]);
        lhs('-', 'minus', [0, 20], [0, 0, 9, 9]);
        lhs('-', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('-', 'minus', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('-', [0, 1], [0, 1], [0, 1], [0, 1]);
        rhs('-', 'minus', [0, 1], [0, 1], [0, 1], [0, 2]);
        rhs('-', 'minus', [0, 1], [0, 1], [0, 2], [0, 2]);
        rhs('-', 'minus', [0, 1], [0, 2], [0, 2], [0, 2]);
        rhs('-', [0, 2], [0, 1], [0, 1], [0, 1]);
        rhs('-', 'minus', [0, 2], [0, 1], [0, 1], [0, 2]);
        rhs('-', 'minus', [0, 2], [0, 1], [0, 2], [0, 2]);
        rhs('-', 'minus', [0, 2], [0, 2], [0, 2], [0, 2]);
        rhs('-', [0, 2], [1, 2], [0, 1], [0, 1]);
        rhs('-', [0, 2], [1, 2], [1, 2], [0, 1]);
        rhs('-', 'minus', [0, 2], [1, 2], [1, 2], [1, 2]);
        rhs('-', [0, 20], [0, 1], [0, 1], [0, 1]);
        rhs('-', 'minus', [0, 20], [0, 10]);
        rhs('-', [0, 20], [0, 0, 9, 9]);
        rhs('-', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('-', 'reject', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('*', [0, 1], [0, 1], [0, 1], [0, 1]);
        both('*', [0, 1], [0, 1], [0, 1], [0, 2]);
        both('*', [0, 1], [0, 1], [0, 2], [0, 2]);
        both('*', [0, 1], [0, 2], [0, 2], [0, 2]);
        both('*', [0, 2], [0, 1], [0, 1], [0, 1]);
        both('*', [0, 2], [0, 1], [0, 1], [0, 2]);
        both('*', [0, 2], [0, 1], [0, 2], [0, 2]);
        both('*', 'product', [0, 2], [0, 2], [0, 2], [0, 2]);
        both('*', 'product', [0, 2], [1, 2], [0, 1], [0, 1]);
        both('*', 'product', [0, 2], [1, 2], [1, 2], [0, 1]);
        both('*', 'product', [0, 2], [1, 2], [1, 2], [1, 2]);
        both('*', [0, 100], [0, 1], [0, 1], [0, 1]);
        both('*', 'product', [0, 100], [0, 10]);
        both('*', 'product', [0, 100], [0, 0, 9, 9]);
        both('*', 'product', [0, 100], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('*', 'product', [0, 100], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('/', 'div', [0, 1], [0, 1], [0, 1], [0, 1]);
        lhs('/', 'div', [0, 1], [0, 1], [0, 1], [0, 2]);
        lhs('/', 'div', [0, 1], [0, 1], [0, 2], [0, 2]);
        lhs('/', 'div', [0, 1], [0, 2], [0, 2], [0, 2]);
        lhs('/', 'div', [0, 2], [0, 1], [0, 1], [0, 1]);
        lhs('/', 'div', [0, 2], [0, 1], [0, 1], [0, 2]);
        lhs('/', 'div', [0, 2], [0, 1], [0, 2], [0, 2]);
        lhs('/', 'div', [0, 2], [0, 2], [0, 2], [0, 2]);
        lhs('/', 'div', [0, 2], [1, 2], [0, 1], [0, 1]);
        lhs('/', 'div', [0, 2], [1, 2], [1, 2], [0, 1]);
        lhs('/', 'div', [0, 2], [1, 2], [1, 2], [1, 2]);
        lhs('/', 'div', [0, 20], [0, 1], [0, 1], [0, 1]);
        lhs('/', 'div', [0, 20], [0, 10]);
        lhs('/', 'div', [0, 20], [0, 0, 9, 9]);
        lhs('/', 'div', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('/', 'div', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('/', 'div', [0, 1], [0, 1], [0, 1], [0, 1]);
        rhs('/', 'div', [0, 1], [0, 1], [0, 1], [0, 2]);
        rhs('/', 'div', [0, 1], [0, 1], [0, 2], [0, 2]);
        rhs('/', 'div', [0, 1], [0, 2], [0, 2], [0, 2]);
        rhs('/', 'div', [0, 2], [0, 1], [0, 1], [0, 1]);
        rhs('/', 'div', [0, 2], [0, 1], [0, 1], [0, 2]);
        rhs('/', 'div', [0, 2], [0, 1], [0, 2], [0, 2]);
        rhs('/', 'div', [0, 2], [0, 2], [0, 2], [0, 2]);
        rhs('/', 'div', [0, 2], [1, 2], [0, 1], [0, 1]);
        rhs('/', 'div', [0, 2], [1, 2], [1, 2], [0, 1]);
        rhs('/', 'div', [0, 2], [1, 2], [1, 2], [1, 2]);
        rhs('/', 'div', [0, 20], [0, 1], [0, 1], [0, 1]);
        rhs('/', 'div', [0, 20], [0, 10]);
        rhs('/', 'div', [0, 20], [0, 0, 9, 9]);
        rhs('/', 'div', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('/', 'div', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
      });

      describe('ternary with shared result', function() {

        let both = testBinaryTernarySharedResult.bind(undefined, '&', '', ''); // A & B, R = A @ C  and  A & B, R = C @ A
        let lhs = testBinaryTernarySharedResult.bind(undefined, '&', '', 'lhs'); // A & B, R = A @ C
        let rhs = testBinaryTernarySharedResult.bind(undefined, '&', '', 'rhs'); // A & B, R = C @ A

        // A & B, R = A &? C
        both('&?', [0, 1], [0, 1], [0, 1], [0, 1]);
        both('&?', [0, 1], [0, 1], [0, 1], [0, 2]);
        both('&?', [0, 1], [0, 1], [0, 2], [0, 2]);
        both('&?', [0, 1], [0, 2], [0, 2], [0, 2]);
        both('&?', [0, 2], [0, 1], [0, 1], [0, 1]);
        both('&?', [0, 2], [0, 1], [0, 1], [0, 2]);
        both('&?', [0, 2], [0, 1], [0, 2], [0, 2]);
        both('&?', [0, 2], [0, 2], [0, 2], [0, 2]);
        both('&?', [0, 2], [1, 2], [0, 1], [0, 1]);
        both('&?', [0, 2], [1, 2], [1, 2], [0, 1]);
        both('&?', [0, 2], [1, 2], [1, 2], [1, 2]);
        both('&?', [0, 1], [0, 10]);
        both('&?', [0, 1], [0, 0, 9, 9]);
        both('&?', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('&?', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('==?', [0, 1], [0, 1], [0, 1], [0, 1]);
        both('==?', [0, 1], [0, 1], [0, 1], [0, 2]);
        both('==?', [0, 1], [0, 1], [0, 2], [0, 2]);
        both('==?', [0, 1], [0, 2], [0, 2], [0, 2]);
        both('==?', [0, 2], [0, 1], [0, 1], [0, 1]);
        both('==?', [0, 2], [0, 1], [0, 1], [0, 2]);
        both('==?', [0, 2], [0, 1], [0, 2], [0, 2]);
        both('==?', [0, 2], [0, 2], [0, 2], [0, 2]);
        both('==?', [0, 2], [1, 2], [0, 1], [0, 1]);
        both('==?', [0, 2], [1, 2], [1, 2], [0, 1]);
        both('==?', [0, 2], [1, 2], [1, 2], [1, 2]);
        both('==?', [0, 1], [0, 10]);
        both('==?', [0, 1], [0, 0, 9, 9]);
        both('==?', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('==?', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!=?', 'xor', [0, 1], [0, 1], [0, 1], [0, 1]);
        both('!=?', 'diff', [0, 1], [0, 1], [0, 1], [0, 2]);
        both('!=?', 'diff', [0, 1], [0, 1], [0, 2], [0, 2]);
        both('!=?', 'diff', [0, 1], [0, 2], [0, 2], [0, 2]);
        both('!=?', 'xor', [0, 2], [0, 1], [0, 1], [0, 1]);
        both('!=?', 'diff', [0, 2], [0, 1], [0, 1], [0, 2]);
        both('!=?', 'diff', [0, 2], [0, 1], [0, 2], [0, 2]);
        both('!=?', 'diff', [0, 2], [0, 2], [0, 2], [0, 2]);
        both('!=?', 'diff', [0, 2], [1, 2], [0, 1], [0, 1]);
        both('!=?', 'diff', [0, 2], [1, 2], [1, 2], [0, 1]);
        both('!=?', 'diff', [0, 2], [1, 2], [1, 2], [1, 2]);
        both('!=?', 'diff', [0, 1], [0, 10]);
        both('!=?', 'xor', [0, 1], [0, 0, 9, 9]);
        both('!=?', 'diff', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!=?', 'diff', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<?', [0, 1], [0, 1], [0, 1], [0, 1]);
        lhs('<?', 'lt', [0, 1], [0, 1], [0, 1], [0, 2]);
        lhs('<?', 'lt', [0, 1], [0, 1], [0, 2], [0, 2]);
        lhs('<?', 'lt', [0, 1], [0, 2], [0, 2], [0, 2]);
        lhs('<?', [0, 2], [0, 1], [0, 1], [0, 1]);
        lhs('<?', 'lt', [0, 2], [0, 1], [0, 1], [0, 2]);
        lhs('<?', 'lt', [0, 2], [0, 1], [0, 2], [0, 2]);
        lhs('<?', 'lt', [0, 2], [0, 2], [0, 2], [0, 2]);
        lhs('<?', 'reject', [0, 2], [1, 2], [0, 1], [0, 1]);
        lhs('<?', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
        lhs('<?', [0, 2], [1, 2], [1, 2], [1, 2]);
        lhs('<?', 'lt', [0, 1], [0, 10]);
        lhs('<?', [0, 1], [0, 0, 9, 9]);
        lhs('<?', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<?', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<?', [0, 1], [0, 1], [0, 1], [0, 1]);
        rhs('<?', [0, 1], [0, 1], [0, 1], [0, 2]);
        rhs('<?', [0, 1], [0, 1], [0, 2], [0, 2]);
        rhs('<?', 'lt', [0, 1], [0, 2], [0, 2], [0, 2]);
        rhs('<?', [0, 2], [0, 1], [0, 1], [0, 1]);
        rhs('<?', [0, 2], [0, 1], [0, 1], [0, 2]);
        rhs('<?', [0, 2], [0, 1], [0, 2], [0, 2]);
        rhs('<?', 'lt', [0, 2], [0, 2], [0, 2], [0, 2]);
        rhs('<?', 'lt', [0, 2], [1, 2], [0, 1], [0, 1]);
        rhs('<?', 'lt', [0, 2], [1, 2], [1, 2], [0, 1]);
        rhs('<?', [0, 2], [1, 2], [1, 2], [1, 2]);
        rhs('<?', 'lt', [0, 1], [0, 10]);
        rhs('<?', [0, 1], [0, 0, 9, 9]);
        rhs('<?', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<?', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<=?', 'imp', [0, 1], [0, 1], [0, 1], [0, 1]);
        lhs('<=?', 'lte', [0, 1], [0, 1], [0, 1], [0, 2]);
        lhs('<=?', 'lte', [0, 1], [0, 1], [0, 2], [0, 2]);
        lhs('<=?', 'lte', [0, 1], [0, 2], [0, 2], [0, 2]);
        lhs('<=?', 'imp', [0, 2], [0, 1], [0, 1], [0, 1]);
        lhs('<=?', 'lte', [0, 2], [0, 1], [0, 1], [0, 2]);
        lhs('<=?', 'lte', [0, 2], [0, 1], [0, 2], [0, 2]);
        lhs('<=?', 'lte', [0, 2], [0, 2], [0, 2], [0, 2]);
        lhs('<=?', [0, 2], [1, 2], [0, 1], [0, 1]);
        lhs('<=?', [0, 2], [1, 2], [1, 2], [0, 1]);
        lhs('<=?', 'lte', [0, 2], [1, 2], [1, 2], [1, 2]);
        lhs('<=?', 'lte', [0, 1], [0, 10]);
        lhs('<=?', 'imp', [0, 1], [0, 0, 9, 9]);
        lhs('<=?', 'imp', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<=?', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<=?', 'imp', [0, 1], [0, 1], [0, 1], [0, 1]);
        rhs('<=?', 'imp', [0, 1], [0, 1], [0, 1], [0, 2]);
        rhs('<=?', 'imp', [0, 1], [0, 1], [0, 2], [0, 2]);
        rhs('<=?', 'lte', [0, 1], [0, 2], [0, 2], [0, 2]);
        rhs('<=?', 'imp', [0, 2], [0, 1], [0, 1], [0, 1]);
        rhs('<=?', 'imp', [0, 2], [0, 1], [0, 1], [0, 2]);
        rhs('<=?', 'imp', [0, 2], [0, 1], [0, 2], [0, 2]);
        rhs('<=?', 'lte', [0, 2], [0, 2], [0, 2], [0, 2]);
        rhs('<=?', [0, 2], [1, 2], [0, 1], [0, 1]);
        rhs('<=?', [0, 2], [1, 2], [1, 2], [0, 1]);
        rhs('<=?', 'lte', [0, 2], [1, 2], [1, 2], [1, 2]);
        rhs('<=?', 'lte', [0, 1], [0, 10]);
        rhs('<=?', 'imp', [0, 1], [0, 0, 9, 9]);
        rhs('<=?', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<=?', 'imp', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!&?', 'nall', [0, 1], [0, 1], [0, 1], [0, 1]);
        both('!&?', 'nall', [0, 1], [0, 1], [0, 1], [0, 2]);
        both('!&?', 'nall', [0, 1], [0, 1], [0, 2], [0, 2]);
        both('!&?', 'nall', [0, 1], [0, 2], [0, 2], [0, 2]);
        both('!&?', 'nall', [0, 2], [0, 1], [0, 1], [0, 1]);
        both('!&?', 'nall', [0, 2], [0, 1], [0, 1], [0, 2]);
        both('!&?', 'nall', [0, 2], [0, 1], [0, 2], [0, 2]);
        both('!&?', 'nall', [0, 2], [0, 2], [0, 2], [0, 2]);
        both('!&?', [0, 2], [1, 2], [0, 1], [0, 1]);
        both('!&?', [0, 2], [1, 2], [1, 2], [0, 1]);
        both('!&?', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
        both('!&?', 'nall', [0, 1], [0, 10]);
        both('!&?', 'nall', [0, 1], [0, 0, 9, 9]);
        both('!&?', 'nall', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!&?', 'nall', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('|?', 'some', [0, 1], [0, 1], [0, 1], [0, 1]);
        both('|?', 'some', [0, 1], [0, 1], [0, 1], [0, 2]);
        both('|?', 'some', [0, 1], [0, 1], [0, 2], [0, 2]);
        both('|?', 'some', [0, 1], [0, 2], [0, 2], [0, 2]);
        both('|?', 'some', [0, 2], [0, 1], [0, 1], [0, 1]);
        both('|?', 'some', [0, 2], [0, 1], [0, 1], [0, 2]);
        both('|?', 'some', [0, 2], [0, 1], [0, 2], [0, 2]);
        both('|?', 'some', [0, 2], [0, 2], [0, 2], [0, 2]);
        both('|?', [0, 2], [1, 2], [0, 1], [0, 1]);
        both('|?', [0, 2], [1, 2], [1, 2], [0, 1]);
        both('|?', [0, 2], [1, 2], [1, 2], [1, 2]);
        both('|?', 'some', [0, 1], [0, 10]);
        both('|?', 'some', [0, 1], [0, 0, 9, 9]);
        both('|?', 'some', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('|?', 'some', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!|?', [0, 1], [0, 1], [0, 1], [0, 1]);
        both('!|?', [0, 1], [0, 1], [0, 1], [0, 2]);
        both('!|?', [0, 1], [0, 1], [0, 2], [0, 2]);
        both('!|?', [0, 1], [0, 2], [0, 2], [0, 2]);
        both('!|?', [0, 2], [0, 1], [0, 1], [0, 1]);
        both('!|?', [0, 2], [0, 1], [0, 1], [0, 2]);
        both('!|?', [0, 2], [0, 1], [0, 2], [0, 2]);
        both('!|?', [0, 2], [0, 2], [0, 2], [0, 2]);
        both('!|?', 'reject', [0, 2], [1, 2], [0, 1], [0, 1]);
        both('!|?', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
        both('!|?', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
        both('!|?', [0, 1], [0, 10]);
        both('!|?', [0, 1], [0, 0, 9, 9]);
        both('!|?', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!|?', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('+', 'sum', [0, 1], [0, 1], [0, 1], [0, 1]);
        both('+', 'sum', [0, 1], [0, 1], [0, 1], [0, 2]);
        both('+', 'sum', [0, 1], [0, 1], [0, 2], [0, 2]);
        both('+', 'sum', [0, 1], [0, 2], [0, 2], [0, 2]);
        both('+', 'some', [0, 2], [0, 1], [0, 1], [0, 1]);
        both('+', 'sum', [0, 2], [0, 1], [0, 1], [0, 2]);
        both('+', 'sum', [0, 2], [0, 1], [0, 2], [0, 2]);
        both('+', 'sum', [0, 2], [0, 2], [0, 2], [0, 2]);
        both('+', 'sum', [0, 2], [1, 2], [0, 1], [0, 1]);
        both('+', 'sum', [0, 2], [1, 2], [1, 2], [0, 1]);
        both('+', [0, 2], [1, 2], [1, 2], [1, 2]);
        both('+', 'some', [0, 20], [0, 1], [0, 1], [0, 1]);
        both('+', 'sum', [0, 20], [0, 10]);
        both('+', 'sum', [0, 20], [0, 0, 9, 9]);
        both('+', 'sum', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('+', 'sum', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('-', [0, 1], [0, 1], [0, 1], [0, 1]);
        lhs('-', [0, 1], [0, 1], [0, 1], [0, 2]);
        lhs('-', [0, 1], [0, 1], [0, 2], [0, 2]);
        lhs('-', 'minus', [0, 1], [0, 2], [0, 2], [0, 2]);
        lhs('-', [0, 2], [0, 1], [0, 1], [0, 1]);
        lhs('-', [0, 2], [0, 1], [0, 1], [0, 2]);
        lhs('-', [0, 2], [0, 1], [0, 2], [0, 2]);
        lhs('-', 'minus', [0, 2], [0, 2], [0, 2], [0, 2]);
        lhs('-', 'minus', [0, 2], [1, 2], [0, 1], [0, 1]);
        lhs('-', 'minus', [0, 2], [1, 2], [1, 2], [0, 1]);
        lhs('-', [0, 2], [1, 2], [1, 2], [1, 2]);
        lhs('-', [0, 20], [0, 1], [0, 1], [0, 1]);
        lhs('-', 'minus', [0, 20], [0, 10]);
        lhs('-', [0, 20], [0, 0, 9, 9]);
        lhs('-', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('-', 'minus', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('-', [0, 1], [0, 1], [0, 1], [0, 1]);
        rhs('-', 'minus', [0, 1], [0, 1], [0, 1], [0, 2]);
        rhs('-', 'minus', [0, 1], [0, 1], [0, 2], [0, 2]);
        rhs('-', 'minus', [0, 1], [0, 2], [0, 2], [0, 2]);
        rhs('-', [0, 2], [0, 1], [0, 1], [0, 1]);
        rhs('-', 'minus', [0, 2], [0, 1], [0, 1], [0, 2]);
        rhs('-', 'minus', [0, 2], [0, 1], [0, 2], [0, 2]);
        rhs('-', 'minus', [0, 2], [0, 2], [0, 2], [0, 2]);
        rhs('-', 'reject', [0, 2], [1, 2], [0, 1], [0, 1]);
        rhs('-', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
        rhs('-', [0, 2], [1, 2], [1, 2], [1, 2]);
        rhs('-', [0, 20], [0, 1], [0, 1], [0, 1]);
        rhs('-', 'minus', [0, 20], [0, 10]);
        rhs('-', [0, 20], [0, 0, 9, 9]);
        rhs('-', 'minus', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('-', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('*', [0, 1], [0, 1], [0, 1], [0, 1]);
        both('*', [0, 1], [0, 1], [0, 1], [0, 2]);
        both('*', [0, 1], [0, 1], [0, 2], [0, 2]);
        both('*', [0, 1], [0, 2], [0, 2], [0, 2]);
        both('*', [0, 2], [0, 1], [0, 1], [0, 1]);
        both('*', [0, 2], [0, 1], [0, 1], [0, 2]);
        both('*', [0, 2], [0, 1], [0, 2], [0, 2]);
        both('*', 'product', [0, 2], [0, 2], [0, 2], [0, 2]);
        both('*', [0, 2], [1, 2], [0, 1], [0, 1]);
        both('*', [0, 2], [1, 2], [1, 2], [0, 1]);
        both('*', 'product', [0, 2], [1, 2], [1, 2], [1, 2]);
        both('*', [0, 100], [0, 1], [0, 1], [0, 1]);
        both('*', 'product', [0, 100], [0, 10]);
        both('*', 'product', [0, 100], [0, 0, 9, 9]);
        both('*', 'product', [0, 100], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('*', 'product', [0, 100], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('/', 'div', [0, 1], [0, 1], [0, 1], [0, 1]);
        lhs('/', 'div', [0, 1], [0, 1], [0, 1], [0, 2]);
        lhs('/', 'div', [0, 1], [0, 1], [0, 2], [0, 2]);
        lhs('/', 'div', [0, 1], [0, 2], [0, 2], [0, 2]);
        lhs('/', 'div', [0, 2], [0, 1], [0, 1], [0, 1]);
        lhs('/', 'div', [0, 2], [0, 1], [0, 1], [0, 2]);
        lhs('/', 'div', [0, 2], [0, 1], [0, 2], [0, 2]);
        lhs('/', 'div', [0, 2], [0, 2], [0, 2], [0, 2]);
        lhs('/', 'div', [0, 2], [1, 2], [0, 1], [0, 1]);
        lhs('/', 'div', [0, 2], [1, 2], [1, 2], [0, 1]);
        lhs('/', 'div', [0, 2], [1, 2], [1, 2], [1, 2]);
        lhs('/', 'div', [0, 20], [0, 1], [0, 1], [0, 1]);
        lhs('/', 'div', [0, 20], [0, 10]);
        lhs('/', 'div', [0, 20], [0, 0, 9, 9]);
        lhs('/', 'reject', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('/', 'div', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('/', 'div', [0, 1], [0, 1], [0, 1], [0, 1]);
        rhs('/', 'div', [0, 1], [0, 1], [0, 1], [0, 2]);
        rhs('/', 'div', [0, 1], [0, 1], [0, 2], [0, 2]);
        rhs('/', 'div', [0, 1], [0, 2], [0, 2], [0, 2]);
        rhs('/', 'div', [0, 2], [0, 1], [0, 1], [0, 1]);
        rhs('/', 'div', [0, 2], [0, 1], [0, 1], [0, 2]);
        rhs('/', 'div', [0, 2], [0, 1], [0, 2], [0, 2]);
        rhs('/', 'div', [0, 2], [0, 2], [0, 2], [0, 2]);
        rhs('/', 'div', [0, 2], [1, 2], [0, 1], [0, 1]);
        rhs('/', 'div', [0, 2], [1, 2], [1, 2], [0, 1]);
        rhs('/', 'div', [0, 2], [1, 2], [1, 2], [1, 2]);
        rhs('/', 'div', [0, 20], [0, 1], [0, 1], [0, 1]);
        rhs('/', 'div', [0, 20], [0, 10]);
        rhs('/', 'div', [0, 20], [0, 0, 9, 9]);
        rhs('/', 'div', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('/', 'reject', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
      });
    });

    describe('DIFF', function() {

      describe('binary', function() {

        let both = testBinaryBinary.bind(undefined, '!=', '', ''); // A & B, A @ C  and  A & B, C @ A
        let lhs = testBinaryBinary.bind(undefined, '!=', '', 'lhs'); // A & B, A @ C
        let rhs = testBinaryBinary.bind(undefined, '!=', '', 'rhs'); // A & B, C @ A

        both('&', [0, 1], [0, 1], [0, 1]);
        both('&', [0, 1], [0, 1], [0, 2]);
        both('&', [0, 1], [0, 2], [0, 1]);
        both('&', [0, 1], [0, 2], [0, 2]);
        both('&', [0, 2], [0, 1], [0, 1]);
        both('&', [0, 2], [0, 1], [0, 2]);
        both('&', [0, 2], [0, 2], [0, 1]);
        both('&', [0, 2], [0, 2], [0, 2]);
        both('&', [0, 2], [0, 1], [1, 2]);
        both('&', [0, 2], [1, 2], [0, 1]);
        both('&', [0, 2], [1, 2], [1, 2]);
        both('&', [0, 10]);
        both('&', [0, 0, 9, 9]);
        both('&', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('&', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!=', [0, 1], [0, 1], [0, 1]); // A!=B,A!=C
        both('!=', 'diff,xor', [0, 1], [0, 1], [0, 2]); // A:[01] != B:[01], A:[01] != C:[02] -> A:0,B:1,C:[0022] of A:1,B:0,C:[12]
        both('!=', 'diff,xor', [0, 1], [0, 2], [0, 1]);
        both('!=', 'diff,diff', [0, 1], [0, 2], [0, 2]);
        both('!=', 'diff,diff', [0, 2], [0, 1], [0, 1]);
        both('!=', 'diff,diff', [0, 2], [0, 1], [0, 2]);
        both('!=', 'diff,diff', [0, 2], [0, 2], [0, 1]);
        both('!=', 'diff,diff', [0, 2], [0, 2], [0, 2]);
        both('!=', 'diff,diff', [0, 2], [0, 1], [1, 2]);
        both('!=', 'diff,diff', [0, 2], [1, 2], [0, 1]);
        both('!=', 'diff,diff', [0, 2], [1, 2], [1, 2]);
        both('!=', 'diff,diff', [0, 10]);
        both('!=', [0, 0, 9, 9]);
        both('!=', 'diff,diff', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!=', 'diff,diff', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('->', 'some', [0, 1], [0, 1], [0, 1]);
        lhs('->', 'some', [0, 1], [0, 1], [0, 2]);
        lhs('->', 'diff,imp', [0, 1], [0, 2], [0, 1]);
        lhs('->', 'diff,imp', [0, 1], [0, 2], [0, 2]);
        lhs('->', 'diff,imp', [0, 2], [0, 1], [0, 1]);
        lhs('->', 'diff,imp', [0, 2], [0, 1], [0, 2]);
        lhs('->', 'diff,imp', [0, 2], [0, 2], [0, 1]);
        lhs('->', 'diff,imp', [0, 2], [0, 2], [0, 2]);
        lhs('->', [0, 2], [0, 1], [1, 2]);
        lhs('->', 'diff,imp', [0, 2], [1, 2], [0, 1]);
        lhs('->', [0, 2], [1, 2], [1, 2]);
        lhs('->', 'diff,imp', [0, 10]);
        lhs('->', 'some', [0, 0, 9, 9]);
        lhs('->', 'some', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('->', 'some', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('->', 'nall', [0, 1], [0, 1], [0, 1]);
        rhs('->', 'nall', [0, 1], [0, 1], [0, 2]);
        rhs('->', 'diff,imp', [0, 1], [0, 2], [0, 1]);
        rhs('->', 'diff,imp', [0, 1], [0, 2], [0, 2]);
        rhs('->', 'diff,imp', [0, 2], [0, 1], [0, 1]);
        rhs('->', 'diff,imp', [0, 2], [0, 1], [0, 2]);
        rhs('->', 'diff,imp', [0, 2], [0, 2], [0, 1]);
        rhs('->', 'diff,imp', [0, 2], [0, 2], [0, 2]);
        rhs('->', [0, 2], [0, 1], [1, 2]);
        rhs('->', 'diff,imp', [0, 2], [1, 2], [0, 1]);
        rhs('->', [0, 2], [1, 2], [1, 2]);
        rhs('->', 'diff,imp', [0, 10]);
        rhs('->', 'nall', [0, 0, 9, 9]);
        rhs('->', 'nall', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('->', 'nall', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<', [0, 1], [0, 1], [0, 1]);
        lhs('<', 'lt,xor', [0, 1], [0, 1], [0, 2]);
        lhs('<', [0, 1], [0, 2], [0, 1]);
        lhs('<', 'diff,lt', [0, 1], [0, 2], [0, 2]);
        lhs('<', [0, 2], [0, 1], [0, 1]);
        lhs('<', 'lt,xor', [0, 2], [0, 1], [0, 2]);
        lhs('<', [0, 2], [0, 2], [0, 1]);
        lhs('<', 'diff,lt', [0, 2], [0, 2], [0, 2]);
        lhs('<', 'lt,xor', [0, 2], [0, 1], [1, 2]);
        lhs('<', [0, 2], [1, 2], [0, 1]);
        lhs('<', 'diff,lt', [0, 2], [1, 2], [1, 2]);
        lhs('<', 'diff,lt', [0, 10]);
        lhs('<', [0, 0, 9, 9]);
        lhs('<', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<', [0, 1], [0, 1], [0, 1]);
        rhs('<', [0, 1], [0, 1], [0, 2]);
        rhs('<', [0, 1], [0, 2], [0, 1]);
        rhs('<', [0, 1], [0, 2], [0, 2]);
        rhs('<', 'diff,lt', [0, 2], [0, 1], [0, 1]);
        rhs('<', 'diff,lt', [0, 2], [0, 1], [0, 2]);
        rhs('<', 'diff,lt', [0, 2], [0, 2], [0, 1]);
        rhs('<', 'diff,lt', [0, 2], [0, 2], [0, 2]);
        rhs('<', [0, 2], [0, 1], [1, 2]);
        rhs('<', 'diff,lt', [0, 2], [1, 2], [0, 1]);
        rhs('<', [0, 2], [1, 2], [1, 2]);
        rhs('<', 'diff,lt', [0, 10]);
        rhs('<', [0, 0, 9, 9]);
        rhs('<', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<=', 'some', [0, 1], [0, 1], [0, 1]);
        lhs('<=', 'lte,xor', [0, 1], [0, 1], [0, 2]);
        lhs('<=', 'diff,imp', [0, 1], [0, 2], [0, 1]);
        lhs('<=', 'diff,lte', [0, 1], [0, 2], [0, 2]);
        lhs('<=', 'some', [0, 2], [0, 1], [0, 1]);
        lhs('<=', 'diff,lte', [0, 2], [0, 1], [0, 2]);
        lhs('<=', 'diff,imp', [0, 2], [0, 2], [0, 1]);
        lhs('<=', 'diff,lte', [0, 2], [0, 2], [0, 2]);
        lhs('<=', 'diff,lte', [0, 2], [0, 1], [1, 2]);
        lhs('<=', 'diff,imp', [0, 2], [1, 2], [0, 1]);
        lhs('<=', 'diff,lte', [0, 2], [1, 2], [1, 2]);
        lhs('<=', 'diff,lte', [0, 10]);
        lhs('<=', 'some', [0, 0, 9, 9]);
        lhs('<=', 'some', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<=', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<=', 'nall', [0, 1], [0, 1], [0, 1]);
        rhs('<=', 'nall', [0, 1], [0, 1], [0, 2]);
        rhs('<=', 'diff,imp', [0, 1], [0, 2], [0, 1]);
        rhs('<=', 'diff,imp', [0, 1], [0, 2], [0, 2]);
        rhs('<=', 'diff,lte', [0, 2], [0, 1], [0, 1]);
        rhs('<=', 'diff,lte', [0, 2], [0, 1], [0, 2]);
        rhs('<=', 'diff,lte', [0, 2], [0, 2], [0, 1]);
        rhs('<=', 'diff,lte', [0, 2], [0, 2], [0, 2]);
        rhs('<=', 'diff,lte', [0, 2], [0, 1], [1, 2]);
        rhs('<=', 'diff,lte', [0, 2], [1, 2], [0, 1]);
        rhs('<=', 'diff,lte', [0, 2], [1, 2], [1, 2]);
        rhs('<=', 'diff,lte', [0, 10]);
        rhs('<=', 'nall', [0, 0, 9, 9]);
        rhs('<=', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<=', 'nall', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!&', 'imp', [0, 1], [0, 1], [0, 1]);
        both('!&', 'imp', [0, 1], [0, 1], [0, 2]);
        both('!&', 'diff,nall', [0, 1], [0, 2], [0, 1]);
        both('!&', 'diff,nall', [0, 1], [0, 2], [0, 2]);
        both('!&', 'diff,nall', [0, 2], [0, 1], [0, 1]);
        both('!&', 'diff,nall', [0, 2], [0, 1], [0, 2]);
        both('!&', 'diff,nall', [0, 2], [0, 2], [0, 1]);
        both('!&', 'diff,nall', [0, 2], [0, 2], [0, 2]);
        both('!&', [0, 2], [0, 1], [1, 2]);
        both('!&', 'diff,nall', [0, 2], [1, 2], [0, 1]);
        both('!&', [0, 2], [1, 2], [1, 2]);
        both('!&', 'diff,nall', [0, 10]);
        both('!&', 'imp', [0, 0, 9, 9]);
        both('!&', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!&', 'imp', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('!->', [0, 1], [0, 1], [0, 1]);
        lhs('!->', [0, 1], [0, 1], [0, 2]);
        lhs('!->', [0, 1], [0, 2], [0, 1]);
        lhs('!->', [0, 1], [0, 2], [0, 2]);
        lhs('!->', [0, 2], [0, 1], [0, 1]);
        lhs('!->', [0, 2], [0, 1], [0, 2]);
        lhs('!->', [0, 2], [0, 2], [0, 1]);
        lhs('!->', [0, 2], [0, 2], [0, 2]);
        lhs('!->', 'reject', [0, 2], [0, 1], [1, 2]);
        lhs('!->', [0, 2], [1, 2], [0, 1]);
        lhs('!->', 'reject', [0, 2], [1, 2], [1, 2]);
        lhs('!->', [0, 10]);
        lhs('!->', [0, 0, 9, 9]);
        lhs('!->', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('!->', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('!->', [0, 1], [0, 1], [0, 1]);
        rhs('!->', [0, 1], [0, 1], [0, 2]);
        rhs('!->', [0, 1], [0, 2], [0, 1]);
        rhs('!->', [0, 1], [0, 2], [0, 2]);
        rhs('!->', [0, 2], [0, 1], [0, 1]);
        rhs('!->', [0, 2], [0, 1], [0, 2]);
        rhs('!->', [0, 2], [0, 2], [0, 1]);
        rhs('!->', [0, 2], [0, 2], [0, 2]);
        rhs('!->', [0, 2], [0, 1], [1, 2]);
        rhs('!->', [0, 2], [1, 2], [0, 1]);
        rhs('!->', [0, 2], [1, 2], [1, 2]);
        rhs('!->', [0, 10]);
        rhs('!->', [0, 0, 9, 9]);
        rhs('!->', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('!->', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!|', [0, 1], [0, 1], [0, 1]);
        both('!|', [0, 1], [0, 1], [0, 2]);
        both('!|', [0, 1], [0, 2], [0, 1]);
        both('!|', [0, 1], [0, 2], [0, 2]);
        both('!|', [0, 2], [0, 1], [0, 1]);
        both('!|', [0, 2], [0, 1], [0, 2]);
        both('!|', [0, 2], [0, 2], [0, 1]);
        both('!|', [0, 2], [0, 2], [0, 2]);
        both('!|', 'reject', [0, 2], [0, 1], [1, 2]);
        both('!|', [0, 2], [1, 2], [0, 1]);
        both('!|', 'reject', [0, 2], [1, 2], [1, 2]);
        both('!|', [0, 10]);
        both('!|', [0, 0, 9, 9]);
        both('!|', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!|', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('==', 'xor', [0, 1], [0, 1], [0, 1]);
        both('==', 'xor', [0, 1], [0, 1], [0, 2]);
        both('==', 'diff', [0, 1], [0, 2], [0, 1]);
        both('==', 'diff', [0, 1], [0, 2], [0, 2]);
        both('==', 'xor', [0, 2], [0, 1], [0, 1]);
        both('==', 'diff', [0, 2], [0, 1], [0, 2]);
        both('==', 'diff', [0, 2], [0, 2], [0, 1]);
        both('==', 'diff', [0, 2], [0, 2], [0, 2]);
        both('==', 'diff', [0, 2], [0, 1], [1, 2]);
        both('==', 'diff', [0, 2], [1, 2], [0, 1]);
        both('==', 'diff', [0, 2], [1, 2], [1, 2]);
        both('==', 'diff', [0, 10]);
        both('==', 'xor', [0, 0, 9, 9]);
        both('==', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('==', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!^', 'xor', [0, 1], [0, 1], [0, 1]);
        both('!^', 'xor', [0, 1], [0, 1], [0, 2]);
        both('!^', 'diff', [0, 1], [0, 2], [0, 1]);
        both('!^', 'diff', [0, 1], [0, 2], [0, 2]);
        both('!^', 'diff', [0, 2], [0, 1], [0, 1]);
        both('!^', 'diff', [0, 2], [0, 1], [0, 2]);
        both('!^', 'diff', [0, 2], [0, 2], [0, 1]);
        both('!^', 'diff', [0, 2], [0, 2], [0, 2]);
        both('!^', [0, 2], [0, 1], [1, 2]);
        both('!^', 'diff', [0, 2], [1, 2], [0, 1]);
        both('!^', [0, 2], [1, 2], [1, 2]);
        both('!^', 'diff', [0, 10]);
        both('!^', 'xor', [0, 0, 9, 9]);
        both('!^', 'diff', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!^', 'diff', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('^', [0, 1], [0, 1], [0, 1]);
        both('^', [0, 1], [0, 1], [0, 2]);
        both('^', 'diff,xor', [0, 1], [0, 2], [0, 1]);
        both('^', 'diff,xor', [0, 1], [0, 2], [0, 2]);
        both('^', [0, 2], [0, 1], [0, 1]);
        both('^', 'diff,xor', [0, 2], [0, 1], [0, 2]);
        both('^', 'diff,xor', [0, 2], [0, 2], [0, 1]);
        both('^', 'diff,xor', [0, 2], [0, 2], [0, 2]);
        both('^', [0, 2], [0, 1], [1, 2]);
        both('^', 'diff,xor', [0, 2], [1, 2], [0, 1]);
        both('^', [0, 2], [1, 2], [1, 2]);
        both('^', 'diff,xor', [0, 10]);
        both('^', [0, 0, 9, 9]);
        both('^', 'diff,xor', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('^', 'diff,xor', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
      });

      describe('ternary with arg shared', function() {

        let both = testBinaryTernarySharedArgs.bind(undefined, '!=', '', ''); // A & B, R = A @ C  and  A & B, R = C @ A
        let lhs = testBinaryTernarySharedArgs.bind(undefined, '!=', '', 'lhs'); // A & B, R = A @ C
        let rhs = testBinaryTernarySharedArgs.bind(undefined, '!=', '', 'rhs'); // A & B, R = C @ A

        // A & B, R = A &? C
        both('&?', 'isall,xor', [0, 1], [0, 1], [0, 1], [0, 1]);
        both('&?', 'isall,xor', [0, 1], [0, 1], [0, 1], [0, 2]);
        both('&?', 'diff,isall', [0, 1], [0, 1], [0, 2], [0, 2]);
        both('&?', 'diff,isall', [0, 1], [0, 2], [0, 2], [0, 2]);
        both('&?', 'isall,xor', [0, 2], [0, 1], [0, 1], [0, 1]);
        both('&?', 'isall,xor', [0, 2], [0, 1], [0, 1], [0, 2]);
        both('&?', 'diff,isall', [0, 2], [0, 1], [0, 2], [0, 2]);
        both('&?', 'diff,isall', [0, 2], [0, 2], [0, 2], [0, 2]);
        both('&?', [0, 2], [1, 2], [0, 1], [0, 1]);
        both('&?', [0, 2], [1, 2], [1, 2], [0, 1]);
        both('&?', [0, 2], [1, 2], [1, 2], [1, 2]);
        both('&?', 'diff,isall', [0, 1], [0, 10]);
        both('&?', 'isall,xor', [0, 1], [0, 0, 9, 9]);
        both('&?', 'diff,isall', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('&?', 'diff,isall', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('==?', 'issame,xor', [0, 1], [0, 1], [0, 1], [0, 1]);
        both('==?', 'issame,xor', [0, 1], [0, 1], [0, 1], [0, 2]);
        both('==?', 'diff,issame', [0, 1], [0, 1], [0, 2], [0, 2]);
        both('==?', 'diff,issame', [0, 1], [0, 2], [0, 2], [0, 2]);
        both('==?', 'issame,xor', [0, 2], [0, 1], [0, 1], [0, 1]);
        both('==?', 'issame,xor', [0, 2], [0, 1], [0, 1], [0, 2]);
        both('==?', 'diff,issame', [0, 2], [0, 1], [0, 2], [0, 2]);
        both('==?', 'diff,issame', [0, 2], [0, 2], [0, 2], [0, 2]);
        both('==?', 'diff,issame', [0, 2], [1, 2], [0, 1], [0, 1]);
        both('==?', 'diff,issame', [0, 2], [1, 2], [1, 2], [0, 1]);
        both('==?', 'diff,issame', [0, 2], [1, 2], [1, 2], [1, 2]);
        both('==?', 'diff,issame', [0, 1], [0, 10]);
        both('==?', 'issame,xor', [0, 1], [0, 0, 9, 9]);
        both('==?', 'diff,issame', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('==?', 'diff,issame', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!=?', 'isdiff,xor', [0, 1], [0, 1], [0, 1], [0, 1]);
        both('!=?', 'isdiff,xor', [0, 1], [0, 1], [0, 1], [0, 2]);
        both('!=?', 'diff,isdiff', [0, 1], [0, 1], [0, 2], [0, 2]);
        both('!=?', 'diff,isdiff', [0, 1], [0, 2], [0, 2], [0, 2]);
        both('!=?', 'isdiff,xor', [0, 2], [0, 1], [0, 1], [0, 1]);
        both('!=?', 'isdiff,xor', [0, 2], [0, 1], [0, 1], [0, 2]);
        both('!=?', 'diff,isdiff', [0, 2], [0, 1], [0, 2], [0, 2]);
        both('!=?', 'diff,isdiff', [0, 2], [0, 2], [0, 2], [0, 2]);
        both('!=?', 'diff,isdiff', [0, 2], [1, 2], [0, 1], [0, 1]);
        both('!=?', 'diff,isdiff', [0, 2], [1, 2], [1, 2], [0, 1]);
        both('!=?', 'diff,isdiff', [0, 2], [1, 2], [1, 2], [1, 2]);
        both('!=?', 'diff,isdiff', [0, 1], [0, 10]);
        both('!=?', 'isdiff,xor', [0, 1], [0, 0, 9, 9]);
        both('!=?', 'diff,isdiff', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!=?', 'diff,isdiff', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<?', 'islt,xor', [0, 1], [0, 1], [0, 1], [0, 1]);
        lhs('<?', 'islt,xor', [0, 1], [0, 1], [0, 1], [0, 2]);
        lhs('<?', 'diff,islt', [0, 1], [0, 1], [0, 2], [0, 2]);
        lhs('<?', 'diff,islt', [0, 1], [0, 2], [0, 2], [0, 2]);
        lhs('<?', 'islt,xor', [0, 2], [0, 1], [0, 1], [0, 1]);
        lhs('<?', 'islt,xor', [0, 2], [0, 1], [0, 1], [0, 2]);
        lhs('<?', 'diff,islt', [0, 2], [0, 1], [0, 2], [0, 2]);
        lhs('<?', 'diff,islt', [0, 2], [0, 2], [0, 2], [0, 2]);
        lhs('<?', [0, 2], [1, 2], [0, 1], [0, 1]);
        lhs('<?', [0, 2], [1, 2], [1, 2], [0, 1]);
        lhs('<?', 'diff,islt', [0, 2], [1, 2], [1, 2], [1, 2]);
        lhs('<?', 'diff,islt', [0, 1], [0, 10]);
        lhs('<?', 'islt,xor', [0, 1], [0, 0, 9, 9]);
        lhs('<?', 'diff,islt', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<?', 'diff,islt', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<?', 'islt,xor', [0, 1], [0, 1], [0, 1], [0, 1]);
        rhs('<?', 'islt,xor', [0, 1], [0, 1], [0, 1], [0, 2]);
        rhs('<?', 'diff,islt', [0, 1], [0, 1], [0, 2], [0, 2]);
        rhs('<?', 'diff,islt', [0, 1], [0, 2], [0, 2], [0, 2]);
        rhs('<?', 'islt,xor', [0, 2], [0, 1], [0, 1], [0, 1]);
        rhs('<?', 'islt,xor', [0, 2], [0, 1], [0, 1], [0, 2]);
        rhs('<?', 'diff,islt', [0, 2], [0, 1], [0, 2], [0, 2]);
        rhs('<?', 'diff,islt', [0, 2], [0, 2], [0, 2], [0, 2]);
        rhs('<?', 'diff,islt', [0, 2], [1, 2], [0, 1], [0, 1]);
        rhs('<?', 'diff,islt', [0, 2], [1, 2], [1, 2], [0, 1]);
        rhs('<?', 'diff,islt', [0, 2], [1, 2], [1, 2], [1, 2]);
        rhs('<?', 'diff,islt', [0, 1], [0, 10]);
        rhs('<?', 'islt,xor', [0, 1], [0, 0, 9, 9]);
        rhs('<?', 'diff,islt', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<?', 'diff,islt', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<=?', 'islte,xor', [0, 1], [0, 1], [0, 1], [0, 1]);
        lhs('<=?', 'islte,xor', [0, 1], [0, 1], [0, 1], [0, 2]);
        lhs('<=?', 'diff,islte', [0, 1], [0, 1], [0, 2], [0, 2]);
        lhs('<=?', 'diff,islte', [0, 1], [0, 2], [0, 2], [0, 2]);
        lhs('<=?', 'islte,xor', [0, 2], [0, 1], [0, 1], [0, 1]);
        lhs('<=?', 'islte,xor', [0, 2], [0, 1], [0, 1], [0, 2]);
        lhs('<=?', 'diff,islte', [0, 2], [0, 1], [0, 2], [0, 2]);
        lhs('<=?', 'diff,islte', [0, 2], [0, 2], [0, 2], [0, 2]);
        lhs('<=?', 'diff,islte', [0, 2], [1, 2], [0, 1], [0, 1]);
        lhs('<=?', 'diff,islte', [0, 2], [1, 2], [1, 2], [0, 1]);
        lhs('<=?', 'diff,islte', [0, 2], [1, 2], [1, 2], [1, 2]);
        lhs('<=?', 'diff,islte', [0, 1], [0, 10]);
        lhs('<=?', 'islte,xor', [0, 1], [0, 0, 9, 9]);
        lhs('<=?', 'diff,islte', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<=?', 'diff,islte', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<=?', 'islte,xor', [0, 1], [0, 1], [0, 1], [0, 1]);
        rhs('<=?', 'islte,xor', [0, 1], [0, 1], [0, 1], [0, 2]);
        rhs('<=?', 'diff,islte', [0, 1], [0, 1], [0, 2], [0, 2]);
        rhs('<=?', 'diff,islte', [0, 1], [0, 2], [0, 2], [0, 2]);
        rhs('<=?', 'islte,xor', [0, 2], [0, 1], [0, 1], [0, 1]);
        rhs('<=?', 'islte,xor', [0, 2], [0, 1], [0, 1], [0, 2]);
        rhs('<=?', 'diff,islte', [0, 2], [0, 1], [0, 2], [0, 2]);
        rhs('<=?', 'diff,islte', [0, 2], [0, 2], [0, 2], [0, 2]);
        rhs('<=?', [0, 2], [1, 2], [0, 1], [0, 1]);
        rhs('<=?', [0, 2], [1, 2], [1, 2], [0, 1]);
        rhs('<=?', 'diff,islte', [0, 2], [1, 2], [1, 2], [1, 2]);
        rhs('<=?', 'diff,islte', [0, 1], [0, 10]);
        rhs('<=?', 'islte,xor', [0, 1], [0, 0, 9, 9]);
        rhs('<=?', 'diff,islte', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<=?', 'diff,islte', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!&?', 'isnall,xor', [0, 1], [0, 1], [0, 1], [0, 1]);
        both('!&?', 'isnall,xor', [0, 1], [0, 1], [0, 1], [0, 2]);
        both('!&?', 'diff,isnall', [0, 1], [0, 1], [0, 2], [0, 2]);
        both('!&?', 'diff,isnall', [0, 1], [0, 2], [0, 2], [0, 2]);
        both('!&?', 'isnall,xor', [0, 2], [0, 1], [0, 1], [0, 1]);
        both('!&?', 'isnall,xor', [0, 2], [0, 1], [0, 1], [0, 2]);
        both('!&?', 'diff,isnall', [0, 2], [0, 1], [0, 2], [0, 2]);
        both('!&?', 'diff,isnall', [0, 2], [0, 2], [0, 2], [0, 2]);
        both('!&?', 'diff,isnall', [0, 2], [1, 2], [0, 1], [0, 1]);
        both('!&?', 'diff,isnall', [0, 2], [1, 2], [1, 2], [0, 1]);
        both('!&?', [0, 2], [1, 2], [1, 2], [1, 2]);
        both('!&?', 'diff,isnall', [0, 1], [0, 10]);
        both('!&?', 'isnall,xor', [0, 1], [0, 0, 9, 9]);
        both('!&?', 'diff,isnall', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!&?', 'diff,isnall', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('|?', 'issome,xor', [0, 1], [0, 1], [0, 1], [0, 1]);
        both('|?', 'issome,xor', [0, 1], [0, 1], [0, 1], [0, 2]);
        both('|?', 'diff,issome', [0, 1], [0, 1], [0, 2], [0, 2]);
        both('|?', 'diff,issome', [0, 1], [0, 2], [0, 2], [0, 2]);
        both('|?', 'issome,xor', [0, 2], [0, 1], [0, 1], [0, 1]);
        both('|?', 'issome,xor', [0, 2], [0, 1], [0, 1], [0, 2]);
        both('|?', 'diff,issome', [0, 2], [0, 1], [0, 2], [0, 2]);
        both('|?', 'diff,issome', [0, 2], [0, 2], [0, 2], [0, 2]);
        both('|?', [0, 2], [1, 2], [0, 1], [0, 1]);
        both('|?', [0, 2], [1, 2], [1, 2], [0, 1]);
        both('|?', [0, 2], [1, 2], [1, 2], [1, 2]);
        both('|?', 'diff,issome', [0, 1], [0, 10]);
        both('|?', 'issome,xor', [0, 1], [0, 0, 9, 9]);
        both('|?', 'diff,issome', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('|?', 'diff,issome', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!|?', 'isnone,xor', [0, 1], [0, 1], [0, 1], [0, 1]);
        both('!|?', 'isnone,xor', [0, 1], [0, 1], [0, 1], [0, 2]);
        both('!|?', 'diff,isnone', [0, 1], [0, 1], [0, 2], [0, 2]);
        both('!|?', 'diff,isnone', [0, 1], [0, 2], [0, 2], [0, 2]);
        both('!|?', 'isnone,xor', [0, 2], [0, 1], [0, 1], [0, 1]);
        both('!|?', 'isnone,xor', [0, 2], [0, 1], [0, 1], [0, 2]);
        both('!|?', 'diff,isnone', [0, 2], [0, 1], [0, 2], [0, 2]);
        both('!|?', 'diff,isnone', [0, 2], [0, 2], [0, 2], [0, 2]);
        both('!|?', [0, 2], [1, 2], [0, 1], [0, 1]);
        both('!|?', [0, 2], [1, 2], [1, 2], [0, 1]);
        both('!|?', [0, 2], [1, 2], [1, 2], [1, 2]);
        both('!|?', 'diff,isnone', [0, 1], [0, 10]);
        both('!|?', 'isnone,xor', [0, 1], [0, 0, 9, 9]);
        both('!|?', 'diff,isnone', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!|?', 'diff,isnone', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('+', 'sum,xor', [0, 1], [0, 1], [0, 1], [0, 1]);
        both('+', 'sum,xor', [0, 1], [0, 1], [0, 1], [0, 2]);
        both('+', 'diff,sum', [0, 1], [0, 1], [0, 2], [0, 2]);
        both('+', 'diff,sum', [0, 1], [0, 2], [0, 2], [0, 2]);
        both('+', 'issome,xor', [0, 2], [0, 1], [0, 1], [0, 1]);
        both('+', 'sum,xor', [0, 2], [0, 1], [0, 1], [0, 2]);
        both('+', 'diff,sum', [0, 2], [0, 1], [0, 2], [0, 2]);
        both('+', 'diff,sum', [0, 2], [0, 2], [0, 2], [0, 2]);
        both('+', 'diff,sum', [0, 2], [1, 2], [0, 1], [0, 1]);
        both('+', 'diff,sum', [0, 2], [1, 2], [1, 2], [0, 1]);
        both('+', [0, 2], [1, 2], [1, 2], [1, 2]);
        both('+', 'issome,xor', [0, 20], [0, 1], [0, 1], [0, 1]);
        both('+', 'diff,issome', [0, 20], [0, 10]);
        both('+', 'issome,xor', [0, 20], [0, 0, 9, 9]);
        both('+', 'diff,issome', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('+', 'diff,issome', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('-', 'minus,xor', [0, 1], [0, 1], [0, 1], [0, 1]);
        lhs('-', 'minus,xor', [0, 1], [0, 1], [0, 1], [0, 2]);
        lhs('-', 'diff,minus', [0, 1], [0, 1], [0, 2], [0, 2]);
        lhs('-', 'diff,minus', [0, 1], [0, 2], [0, 2], [0, 2]);
        lhs('-', 'minus,xor', [0, 2], [0, 1], [0, 1], [0, 1]);
        lhs('-', 'minus,xor', [0, 2], [0, 1], [0, 1], [0, 2]);
        lhs('-', 'diff,minus', [0, 2], [0, 1], [0, 2], [0, 2]);
        lhs('-', 'diff,minus', [0, 2], [0, 2], [0, 2], [0, 2]);
        lhs('-', 'diff,minus', [0, 2], [1, 2], [0, 1], [0, 1]);
        lhs('-', 'diff,minus', [0, 2], [1, 2], [1, 2], [0, 1]);
        lhs('-', 'diff,minus', [0, 2], [1, 2], [1, 2], [1, 2]);
        lhs('-', 'minus,xor', [0, 20], [0, 1], [0, 1], [0, 1]);
        lhs('-', 'diff,minus', [0, 20], [0, 10]);
        lhs('-', 'minus,xor', [0, 20], [0, 0, 9, 9]);
        lhs('-', 'diff', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('-', 'diff,minus', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('-', 'minus,xor', [0, 1], [0, 1], [0, 1], [0, 1]);
        rhs('-', 'minus,xor', [0, 1], [0, 1], [0, 1], [0, 2]);
        rhs('-', 'diff,minus', [0, 1], [0, 1], [0, 2], [0, 2]);
        rhs('-', 'diff,minus', [0, 1], [0, 2], [0, 2], [0, 2]);
        rhs('-', 'minus,xor', [0, 2], [0, 1], [0, 1], [0, 1]);
        rhs('-', 'minus,xor', [0, 2], [0, 1], [0, 1], [0, 2]);
        rhs('-', 'diff,minus', [0, 2], [0, 1], [0, 2], [0, 2]);
        rhs('-', 'diff,minus', [0, 2], [0, 2], [0, 2], [0, 2]);
        rhs('-', [0, 2], [1, 2], [0, 1], [0, 1]);
        rhs('-', [0, 2], [1, 2], [1, 2], [0, 1]);
        rhs('-', 'diff,minus', [0, 2], [1, 2], [1, 2], [1, 2]);
        rhs('-', 'minus,xor', [0, 20], [0, 1], [0, 1], [0, 1]);
        rhs('-', 'diff,minus', [0, 20], [0, 10]);
        rhs('-', 'minus,xor', [0, 20], [0, 0, 9, 9]);
        rhs('-', 'diff,minus', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('-', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('*', 'product,xor', [0, 1], [0, 1], [0, 1], [0, 1]);
        both('*', 'product,xor', [0, 1], [0, 1], [0, 1], [0, 2]);
        both('*', 'diff,product', [0, 1], [0, 1], [0, 2], [0, 2]);
        both('*', 'diff,product', [0, 1], [0, 2], [0, 2], [0, 2]);
        both('*', 'product,xor', [0, 2], [0, 1], [0, 1], [0, 1]);
        both('*', 'product,xor', [0, 2], [0, 1], [0, 1], [0, 2]);
        both('*', 'diff,product', [0, 2], [0, 1], [0, 2], [0, 2]);
        both('*', 'diff,product', [0, 2], [0, 2], [0, 2], [0, 2]);
        both('*', 'diff,product', [0, 2], [1, 2], [0, 1], [0, 1]);
        both('*', 'diff,product', [0, 2], [1, 2], [1, 2], [0, 1]);
        both('*', 'diff,product', [0, 2], [1, 2], [1, 2], [1, 2]);
        both('*', 'product,xor', [0, 100], [0, 1], [0, 1], [0, 1]);
        both('*', 'diff,product', [0, 100], [0, 10]);
        both('*', 'product,xor', [0, 100], [0, 0, 9, 9]);
        both('*', 'diff,product', [0, 100], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('*', 'diff,product', [0, 100], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('/', 'div,xor', [0, 1], [0, 1], [0, 1], [0, 1]);
        lhs('/', 'div,xor', [0, 1], [0, 1], [0, 1], [0, 2]);
        lhs('/', 'diff,div', [0, 1], [0, 1], [0, 2], [0, 2]);
        lhs('/', 'diff,div', [0, 1], [0, 2], [0, 2], [0, 2]);
        lhs('/', 'div,xor', [0, 2], [0, 1], [0, 1], [0, 1]);
        lhs('/', 'div,xor', [0, 2], [0, 1], [0, 1], [0, 2]);
        lhs('/', 'diff,div', [0, 2], [0, 1], [0, 2], [0, 2]);
        lhs('/', 'diff,div', [0, 2], [0, 2], [0, 2], [0, 2]);
        lhs('/', 'diff,div', [0, 2], [1, 2], [0, 1], [0, 1]);
        lhs('/', 'diff,div', [0, 2], [1, 2], [1, 2], [0, 1]);
        lhs('/', 'diff,div', [0, 2], [1, 2], [1, 2], [1, 2]);
        lhs('/', 'div,xor', [0, 20], [0, 1], [0, 1], [0, 1]);
        lhs('/', 'diff,div', [0, 20], [0, 10]);
        lhs('/', 'div,xor', [0, 20], [0, 0, 9, 9]);
        lhs('/', 'diff,div', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('/', 'diff,div', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('/', 'div,xor', [0, 1], [0, 1], [0, 1], [0, 1]);
        rhs('/', 'div,xor', [0, 1], [0, 1], [0, 1], [0, 2]);
        rhs('/', 'diff,div', [0, 1], [0, 1], [0, 2], [0, 2]);
        rhs('/', 'diff,div', [0, 1], [0, 2], [0, 2], [0, 2]);
        rhs('/', 'div,xor', [0, 2], [0, 1], [0, 1], [0, 1]);
        rhs('/', 'div,xor', [0, 2], [0, 1], [0, 1], [0, 2]);
        rhs('/', 'diff,div', [0, 2], [0, 1], [0, 2], [0, 2]);
        rhs('/', 'diff,div', [0, 2], [0, 2], [0, 2], [0, 2]);
        rhs('/', 'diff,div', [0, 2], [1, 2], [0, 1], [0, 1]);
        rhs('/', 'diff,div', [0, 2], [1, 2], [1, 2], [0, 1]);
        rhs('/', 'diff,div', [0, 2], [1, 2], [1, 2], [1, 2]);
        rhs('/', 'div,xor', [0, 20], [0, 1], [0, 1], [0, 1]);
        rhs('/', 'diff,div', [0, 20], [0, 10]);
        rhs('/', 'div,xor', [0, 20], [0, 0, 9, 9]);
        rhs('/', 'diff,div', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('/', 'diff,div', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
      });

      describe('ternary with result shared', function() {

        let both = testBinaryTernarySharedResult.bind(undefined, '!=', '', ''); // A & B, R = A @ C  and  A & B, R = C @ A
        let lhs = testBinaryTernarySharedResult.bind(undefined, '!=', '', 'lhs'); // A & B, R = A @ C
        let rhs = testBinaryTernarySharedResult.bind(undefined, '!=', '', 'rhs'); // A & B, R = C @ A

        // A & B, R = A &? C
        both('&?', 'isnall', [0, 1], [0, 1], [0, 1], [0, 1]);
        both('&?', 'isnall', [0, 1], [0, 1], [0, 1], [0, 2]);
        both('&?', 'diff,isall', [0, 1], [0, 1], [0, 2], [0, 2]);
        both('&?', 'diff,isall', [0, 1], [0, 2], [0, 2], [0, 2]);
        both('&?', 'diff,isall', [0, 2], [0, 1], [0, 1], [0, 1]);
        both('&?', 'diff,isall', [0, 2], [0, 1], [0, 1], [0, 2]);
        both('&?', 'diff,isall', [0, 2], [0, 1], [0, 2], [0, 2]);
        both('&?', 'diff,isall', [0, 2], [0, 2], [0, 2], [0, 2]);
        both('&?', 'diff', [0, 2], [1, 2], [0, 1], [0, 1]);
        both('&?', 'diff', [0, 2], [1, 2], [1, 2], [0, 1]);
        both('&?', [0, 2], [1, 2], [1, 2], [1, 2]);
        both('&?', 'diff,isall', [0, 1], [0, 10]);
        both('&?', 'diff,isall', [0, 1], [0, 0, 9, 9]);
        both('&?', 'diff,isall', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('&?', 'diff,isall', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('==?', 'issame,xor', [0, 1], [0, 1], [0, 1], [0, 1]);
        both('==?', 'issame,xor', [0, 1], [0, 1], [0, 1], [0, 2]);
        both('==?', 'diff,issame', [0, 1], [0, 1], [0, 2], [0, 2]);
        both('==?', 'diff,issame', [0, 1], [0, 2], [0, 2], [0, 2]);
        both('==?', 'diff,issame', [0, 2], [0, 1], [0, 1], [0, 1]);
        both('==?', 'diff,issame', [0, 2], [0, 1], [0, 1], [0, 2]);
        both('==?', 'diff,issame', [0, 2], [0, 1], [0, 2], [0, 2]);
        both('==?', 'diff,issame', [0, 2], [0, 2], [0, 2], [0, 2]);
        both('==?', 'diff,issame', [0, 2], [1, 2], [0, 1], [0, 1]);
        both('==?', 'diff,issame', [0, 2], [1, 2], [1, 2], [0, 1]);
        both('==?', 'diff,issame', [0, 2], [1, 2], [1, 2], [1, 2]);
        both('==?', 'diff,issame', [0, 1], [0, 10]);
        both('==?', 'diff,issame', [0, 1], [0, 0, 9, 9]);
        both('==?', 'diff,issame', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('==?', 'diff,issame', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!=?', 'isdiff,xor', [0, 1], [0, 1], [0, 1], [0, 1]);
        both('!=?', 'isdiff,xor', [0, 1], [0, 1], [0, 1], [0, 2]);
        both('!=?', 'diff,isdiff', [0, 1], [0, 1], [0, 2], [0, 2]);
        both('!=?', 'diff,isdiff', [0, 1], [0, 2], [0, 2], [0, 2]);
        both('!=?', 'diff,isdiff', [0, 2], [0, 1], [0, 1], [0, 1]);
        both('!=?', 'diff,isdiff', [0, 2], [0, 1], [0, 1], [0, 2]);
        both('!=?', 'diff,isdiff', [0, 2], [0, 1], [0, 2], [0, 2]);
        both('!=?', 'diff,isdiff', [0, 2], [0, 2], [0, 2], [0, 2]);
        both('!=?', 'diff,isdiff', [0, 2], [1, 2], [0, 1], [0, 1]);
        both('!=?', 'diff,isdiff', [0, 2], [1, 2], [1, 2], [0, 1]);
        both('!=?', 'diff,isdiff', [0, 2], [1, 2], [1, 2], [1, 2]);
        both('!=?', 'diff,isdiff', [0, 1], [0, 10]);
        both('!=?', 'diff,isdiff', [0, 1], [0, 0, 9, 9]);
        both('!=?', 'diff,isdiff', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!=?', 'diff,isdiff', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<?', 'islt,xor', [0, 1], [0, 1], [0, 1], [0, 1]);
        lhs('<?', 'islt,xor', [0, 1], [0, 1], [0, 1], [0, 2]);
        lhs('<?', 'diff,islt', [0, 1], [0, 1], [0, 2], [0, 2]);
        lhs('<?', 'diff,islt', [0, 1], [0, 2], [0, 2], [0, 2]);
        lhs('<?', 'diff,islt', [0, 2], [0, 1], [0, 1], [0, 1]);
        lhs('<?', 'diff,islt', [0, 2], [0, 1], [0, 1], [0, 2]);
        lhs('<?', 'diff,islt', [0, 2], [0, 1], [0, 2], [0, 2]);
        lhs('<?', 'diff,islt', [0, 2], [0, 2], [0, 2], [0, 2]);
        lhs('<?', [0, 2], [1, 2], [0, 1], [0, 1]);
        lhs('<?', [0, 2], [1, 2], [1, 2], [0, 1]);
        lhs('<?', 'diff,islt', [0, 2], [1, 2], [1, 2], [1, 2]);
        lhs('<?', 'diff,islt', [0, 1], [0, 10]);
        lhs('<?', 'diff,islt', [0, 1], [0, 0, 9, 9]);
        lhs('<?', 'diff,islt', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<?', 'diff,islt', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<?', 'islt,xor', [0, 1], [0, 1], [0, 1], [0, 1]);
        rhs('<?', 'islt,xor', [0, 1], [0, 1], [0, 1], [0, 2]);
        rhs('<?', 'diff,islt', [0, 1], [0, 1], [0, 2], [0, 2]);
        rhs('<?', 'diff,islt', [0, 1], [0, 2], [0, 2], [0, 2]);
        rhs('<?', 'diff,islt', [0, 2], [0, 1], [0, 1], [0, 1]);
        rhs('<?', 'diff,islt', [0, 2], [0, 1], [0, 1], [0, 2]);
        rhs('<?', 'diff,islt', [0, 2], [0, 1], [0, 2], [0, 2]);
        rhs('<?', 'diff,islt', [0, 2], [0, 2], [0, 2], [0, 2]);
        rhs('<?', 'diff,islt', [0, 2], [1, 2], [0, 1], [0, 1]);
        rhs('<?', 'diff,islt', [0, 2], [1, 2], [1, 2], [0, 1]);
        rhs('<?', 'diff,islt', [0, 2], [1, 2], [1, 2], [1, 2]);
        rhs('<?', 'diff,islt', [0, 1], [0, 10]);
        rhs('<?', 'diff,islt', [0, 1], [0, 0, 9, 9]);
        rhs('<?', 'diff,islt', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<?', 'diff,islt', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<=?', 'islte,xor', [0, 1], [0, 1], [0, 1], [0, 1]);
        lhs('<=?', 'islte,xor', [0, 1], [0, 1], [0, 1], [0, 2]);
        lhs('<=?', 'diff,islte', [0, 1], [0, 1], [0, 2], [0, 2]);
        lhs('<=?', 'diff,islte', [0, 1], [0, 2], [0, 2], [0, 2]);
        lhs('<=?', 'diff,islte', [0, 2], [0, 1], [0, 1], [0, 1]);
        lhs('<=?', 'diff,islte', [0, 2], [0, 1], [0, 1], [0, 2]);
        lhs('<=?', 'diff,islte', [0, 2], [0, 1], [0, 2], [0, 2]);
        lhs('<=?', 'diff,islte', [0, 2], [0, 2], [0, 2], [0, 2]);
        lhs('<=?', 'diff,islte', [0, 2], [1, 2], [0, 1], [0, 1]);
        lhs('<=?', 'diff,islte', [0, 2], [1, 2], [1, 2], [0, 1]);
        lhs('<=?', 'diff,islte', [0, 2], [1, 2], [1, 2], [1, 2]);
        lhs('<=?', 'diff,islte', [0, 1], [0, 10]);
        lhs('<=?', 'diff,islte', [0, 1], [0, 0, 9, 9]);
        lhs('<=?', 'diff,islte', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<=?', 'diff,islte', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<=?', 'islte,xor', [0, 1], [0, 1], [0, 1], [0, 1]);
        rhs('<=?', 'islte,xor', [0, 1], [0, 1], [0, 1], [0, 2]);
        rhs('<=?', 'diff,islte', [0, 1], [0, 1], [0, 2], [0, 2]);
        rhs('<=?', 'diff,islte', [0, 1], [0, 2], [0, 2], [0, 2]);
        rhs('<=?', 'diff,islte', [0, 2], [0, 1], [0, 1], [0, 1]);
        rhs('<=?', 'diff,islte', [0, 2], [0, 1], [0, 1], [0, 2]);
        rhs('<=?', 'diff,islte', [0, 2], [0, 1], [0, 2], [0, 2]);
        rhs('<=?', 'diff,islte', [0, 2], [0, 2], [0, 2], [0, 2]);
        rhs('<=?', [0, 2], [1, 2], [0, 1], [0, 1]);
        rhs('<=?', [0, 2], [1, 2], [1, 2], [0, 1]);
        rhs('<=?', 'diff,islte', [0, 2], [1, 2], [1, 2], [1, 2]);
        rhs('<=?', 'diff,islte', [0, 1], [0, 10]);
        rhs('<=?', 'diff,islte', [0, 1], [0, 0, 9, 9]);
        rhs('<=?', 'diff,islte', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<=?', 'diff,islte', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!&?', 'isnall,xor', [0, 1], [0, 1], [0, 1], [0, 1]);
        both('!&?', 'isnall,xor', [0, 1], [0, 1], [0, 1], [0, 2]);
        both('!&?', 'diff,isnall', [0, 1], [0, 1], [0, 2], [0, 2]);
        both('!&?', 'diff,isnall', [0, 1], [0, 2], [0, 2], [0, 2]);
        both('!&?', 'diff,isnall', [0, 2], [0, 1], [0, 1], [0, 1]);
        both('!&?', 'diff,isnall', [0, 2], [0, 1], [0, 1], [0, 2]);
        both('!&?', 'diff,isnall', [0, 2], [0, 1], [0, 2], [0, 2]);
        both('!&?', 'diff,isnall', [0, 2], [0, 2], [0, 2], [0, 2]);
        both('!&?', 'diff,isnall', [0, 2], [1, 2], [0, 1], [0, 1]);
        both('!&?', 'diff,isnall', [0, 2], [1, 2], [1, 2], [0, 1]);
        both('!&?', [0, 2], [1, 2], [1, 2], [1, 2]);
        both('!&?', 'diff,isnall', [0, 1], [0, 10]);
        both('!&?', 'diff,isnall', [0, 1], [0, 0, 9, 9]);
        both('!&?', 'diff,isnall', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!&?', 'diff,isnall', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('|?', 'isnone', [0, 1], [0, 1], [0, 1], [0, 1]);
        both('|?', 'isnone', [0, 1], [0, 1], [0, 1], [0, 2]);
        both('|?', 'diff,issome', [0, 1], [0, 1], [0, 2], [0, 2]);
        both('|?', 'diff,issome', [0, 1], [0, 2], [0, 2], [0, 2]);
        both('|?', 'diff,issome', [0, 2], [0, 1], [0, 1], [0, 1]);
        both('|?', 'diff,issome', [0, 2], [0, 1], [0, 1], [0, 2]);
        both('|?', 'diff,issome', [0, 2], [0, 1], [0, 2], [0, 2]);
        both('|?', 'diff,issome', [0, 2], [0, 2], [0, 2], [0, 2]);
        both('|?', [0, 2], [1, 2], [0, 1], [0, 1]);
        both('|?', [0, 2], [1, 2], [1, 2], [0, 1]);
        both('|?', [0, 2], [1, 2], [1, 2], [1, 2]);
        both('|?', 'diff,issome', [0, 1], [0, 10]);
        both('|?', 'diff,issome', [0, 1], [0, 0, 9, 9]);
        both('|?', 'diff,issome', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('|?', 'diff,issome', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!|?', 'isnone,xor', [0, 1], [0, 1], [0, 1], [0, 1]);
        both('!|?', 'isnone,xor', [0, 1], [0, 1], [0, 1], [0, 2]);
        both('!|?', 'diff,isnone', [0, 1], [0, 1], [0, 2], [0, 2]);
        both('!|?', 'diff,isnone', [0, 1], [0, 2], [0, 2], [0, 2]);
        both('!|?', 'diff,isnone', [0, 2], [0, 1], [0, 1], [0, 1]);
        both('!|?', 'diff,isnone', [0, 2], [0, 1], [0, 1], [0, 2]);
        both('!|?', 'diff,isnone', [0, 2], [0, 1], [0, 2], [0, 2]);
        both('!|?', 'diff,isnone', [0, 2], [0, 2], [0, 2], [0, 2]);
        both('!|?', [0, 2], [1, 2], [0, 1], [0, 1]);
        both('!|?', [0, 2], [1, 2], [1, 2], [0, 1]);
        both('!|?', [0, 2], [1, 2], [1, 2], [1, 2]);
        both('!|?', 'diff,isnone', [0, 1], [0, 10]);
        both('!|?', 'diff,isnone', [0, 1], [0, 0, 9, 9]);
        both('!|?', 'diff,isnone', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!|?', 'diff,isnone', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('+', 'sum,xor', [0, 1], [0, 1], [0, 1], [0, 1]);
        both('+', 'sum,xor', [0, 1], [0, 1], [0, 1], [0, 2]);
        both('+', 'diff,sum', [0, 1], [0, 1], [0, 2], [0, 2]);
        both('+', 'diff,sum', [0, 1], [0, 2], [0, 2], [0, 2]);
        both('+', 'diff,sum', [0, 2], [0, 1], [0, 1], [0, 1]);
        both('+', 'diff,sum', [0, 2], [0, 1], [0, 1], [0, 2]);
        both('+', 'diff,sum', [0, 2], [0, 1], [0, 2], [0, 2]);
        both('+', 'diff,sum', [0, 2], [0, 2], [0, 2], [0, 2]);
        both('+', 'diff,sum', [0, 2], [1, 2], [0, 1], [0, 1]);
        both('+', 'diff,sum', [0, 2], [1, 2], [1, 2], [0, 1]);
        both('+', [0, 2], [1, 2], [1, 2], [1, 2]);
        both('+', 'diff,sum', [0, 20], [0, 1], [0, 1], [0, 1]);
        both('+', 'diff,sum', [0, 20], [0, 10]);
        both('+', 'diff,sum', [0, 20], [0, 0, 9, 9]);
        both('+', 'diff,sum', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('+', 'diff,sum', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('-', 'minus,xor', [0, 1], [0, 1], [0, 1], [0, 1]);
        lhs('-', 'minus,xor', [0, 1], [0, 1], [0, 1], [0, 2]);
        lhs('-', 'diff,minus', [0, 1], [0, 1], [0, 2], [0, 2]);
        lhs('-', 'diff,minus', [0, 1], [0, 2], [0, 2], [0, 2]);
        lhs('-', 'minus,xor', [0, 2], [0, 1], [0, 1], [0, 1]);
        lhs('-', 'minus,xor', [0, 2], [0, 1], [0, 1], [0, 2]);
        lhs('-', 'diff,minus', [0, 2], [0, 1], [0, 2], [0, 2]);
        lhs('-', 'diff,minus', [0, 2], [0, 2], [0, 2], [0, 2]);
        lhs('-', 'diff,minus', [0, 2], [1, 2], [0, 1], [0, 1]);
        lhs('-', 'diff,minus', [0, 2], [1, 2], [1, 2], [0, 1]);
        lhs('-', 'diff,minus', [0, 2], [1, 2], [1, 2], [1, 2]);
        lhs('-', 'minus,xor', [0, 20], [0, 1], [0, 1], [0, 1]);
        lhs('-', 'diff,minus', [0, 20], [0, 10]);
        lhs('-', 'diff,minus', [0, 20], [0, 0, 9, 9]);
        lhs('-', 'diff', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('-', 'diff,minus', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('-', 'minus,xor', [0, 1], [0, 1], [0, 1], [0, 1]);
        rhs('-', 'minus,xor', [0, 1], [0, 1], [0, 1], [0, 2]);
        rhs('-', 'diff,minus', [0, 1], [0, 1], [0, 2], [0, 2]);
        rhs('-', 'diff,minus', [0, 1], [0, 2], [0, 2], [0, 2]);
        rhs('-', 'minus,xor', [0, 2], [0, 1], [0, 1], [0, 1]);
        rhs('-', 'diff,minus', [0, 2], [0, 1], [0, 1], [0, 2]);
        rhs('-', 'diff,minus', [0, 2], [0, 1], [0, 2], [0, 2]);
        rhs('-', 'diff,minus', [0, 2], [0, 2], [0, 2], [0, 2]);
        rhs('-', [0, 2], [1, 2], [0, 1], [0, 1]);
        rhs('-', [0, 2], [1, 2], [1, 2], [0, 1]);
        rhs('-', 'diff,minus', [0, 2], [1, 2], [1, 2], [1, 2]);
        rhs('-', 'minus,xor', [0, 20], [0, 1], [0, 1], [0, 1]);
        rhs('-', 'diff,minus', [0, 20], [0, 10]);
        rhs('-', 'diff,minus', [0, 20], [0, 0, 9, 9]);
        rhs('-', 'diff,minus', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('-', 'diff', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('*', 'product,xor', [0, 1], [0, 1], [0, 1], [0, 1]);
        both('*', 'product,xor', [0, 1], [0, 1], [0, 1], [0, 2]);
        both('*', 'diff,product', [0, 1], [0, 1], [0, 2], [0, 2]);
        both('*', 'diff,product', [0, 1], [0, 2], [0, 2], [0, 2]);
        both('*', 'product,xor', [0, 2], [0, 1], [0, 1], [0, 1]);
        both('*', 'diff,product', [0, 2], [0, 1], [0, 1], [0, 2]);
        both('*', 'diff,product', [0, 2], [0, 1], [0, 2], [0, 2]);
        both('*', 'diff,product', [0, 2], [0, 2], [0, 2], [0, 2]);
        both('*', 'diff,product', [0, 2], [1, 2], [0, 1], [0, 1]);
        both('*', 'diff,product', [0, 2], [1, 2], [1, 2], [0, 1]);
        both('*', 'diff,product', [0, 2], [1, 2], [1, 2], [1, 2]);
        both('*', 'product,xor', [0, 100], [0, 1], [0, 1], [0, 1]);
        both('*', 'diff,product', [0, 100], [0, 10]);
        both('*', 'diff,product', [0, 100], [0, 0, 9, 9]);
        both('*', 'diff,product', [0, 100], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('*', 'diff,product', [0, 100], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('/', 'div,xor', [0, 1], [0, 1], [0, 1], [0, 1]);
        lhs('/', 'div,xor', [0, 1], [0, 1], [0, 1], [0, 2]);
        lhs('/', 'diff,div', [0, 1], [0, 1], [0, 2], [0, 2]);
        lhs('/', 'diff,div', [0, 1], [0, 2], [0, 2], [0, 2]);
        lhs('/', 'diff,div', [0, 2], [0, 1], [0, 1], [0, 1]);
        lhs('/', 'diff,div', [0, 2], [0, 1], [0, 1], [0, 2]);
        lhs('/', 'diff,div', [0, 2], [0, 1], [0, 2], [0, 2]);
        lhs('/', 'diff,div', [0, 2], [0, 2], [0, 2], [0, 2]);
        lhs('/', 'diff,div', [0, 2], [1, 2], [0, 1], [0, 1]);
        lhs('/', 'diff,div', [0, 2], [1, 2], [1, 2], [0, 1]);
        lhs('/', 'diff,div', [0, 2], [1, 2], [1, 2], [1, 2]);
        lhs('/', 'diff,div', [0, 20], [0, 1], [0, 1], [0, 1]);
        lhs('/', 'diff,div', [0, 20], [0, 10]);
        lhs('/', 'diff,div', [0, 20], [0, 0, 9, 9]);
        lhs('/', 'div', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('/', 'diff,div', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('/', 'div,xor', [0, 1], [0, 1], [0, 1], [0, 1]);
        rhs('/', 'div,xor', [0, 1], [0, 1], [0, 1], [0, 2]);
        rhs('/', 'diff,div', [0, 1], [0, 1], [0, 2], [0, 2]);
        rhs('/', 'diff,div', [0, 1], [0, 2], [0, 2], [0, 2]);
        rhs('/', 'diff,div', [0, 2], [0, 1], [0, 1], [0, 1]);
        rhs('/', 'diff,div', [0, 2], [0, 1], [0, 1], [0, 2]);
        rhs('/', 'diff,div', [0, 2], [0, 1], [0, 2], [0, 2]);
        rhs('/', 'diff,div', [0, 2], [0, 2], [0, 2], [0, 2]);
        rhs('/', 'div,xor', [0, 2], [1, 2], [0, 1], [0, 1]);
        rhs('/', 'diff,div', [0, 2], [1, 2], [1, 2], [0, 1]);
        rhs('/', 'diff,div', [0, 2], [1, 2], [1, 2], [1, 2]);
        rhs('/', 'diff,div', [0, 20], [0, 1], [0, 1], [0, 1]);
        rhs('/', 'diff,div', [0, 20], [0, 10]);
        rhs('/', 'diff,div', [0, 20], [0, 0, 9, 9]);
        rhs('/', 'diff,div', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('/', 'div', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
      });
    });

    describe('IMP', function() {

      describe('IMP_LHS', function() {

        describe('binary', function() {

          let both = testBinaryBinary.bind(undefined, '->', 'lhs', ''); // A & B, A @ C  and  A & B, C @ A
          let lhs = testBinaryBinary.bind(undefined, '->', 'lhs', 'lhs'); // A & B, A @ C
          let rhs = testBinaryBinary.bind(undefined, '->', 'lhs', 'rhs'); // A & B, C @ A

          both('&', [0, 1], [0, 1], [0, 1]);
          both('&', [0, 1], [0, 1], [0, 2]);
          both('&', [0, 1], [0, 2], [0, 1]);
          both('&', [0, 1], [0, 2], [0, 2]);
          both('&', [0, 2], [0, 1], [0, 1]);
          both('&', [0, 2], [0, 1], [0, 2]);
          both('&', [0, 2], [0, 2], [0, 1]);
          both('&', [0, 2], [0, 2], [0, 2]);
          both('&', [0, 2], [0, 1], [1, 2]);
          both('&', [0, 2], [1, 2], [0, 1]);
          both('&', [0, 2], [1, 2], [1, 2]);
          both('&', [0, 10]);
          both('&', [0, 0, 9, 9]);
          both('&', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('&', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!=', 'some', [0, 1], [0, 1], [0, 1]);
          both('!=', 'diff,imp', [0, 1], [0, 1], [0, 2]);
          both('!=', 'some', [0, 1], [0, 2], [0, 1]);
          both('!=', 'diff,imp', [0, 1], [0, 2], [0, 2]);
          both('!=', 'diff,imp', [0, 2], [0, 1], [0, 1]);
          both('!=', 'diff,imp', [0, 2], [0, 1], [0, 2]);
          both('!=', 'diff,imp', [0, 2], [0, 2], [0, 1]);
          both('!=', 'diff,imp', [0, 2], [0, 2], [0, 2]);
          both('!=', 'diff,imp', [0, 2], [0, 1], [1, 2]);
          both('!=', [0, 2], [1, 2], [0, 1]);
          both('!=', [0, 2], [1, 2], [1, 2]);
          both('!=', 'diff,imp', [0, 10]);
          both('!=', 'some', [0, 0, 9, 9]);
          both('!=', 'some', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!=', 'some', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('->', [0, 1], [0, 1], [0, 1]);
          lhs('->', [0, 1], [0, 1], [0, 2]);
          lhs('->', [0, 1], [0, 2], [0, 1]);
          lhs('->', [0, 1], [0, 2], [0, 2]);
          lhs('->', [0, 2], [0, 1], [0, 1]);
          lhs('->', [0, 2], [0, 1], [0, 2]);
          lhs('->', [0, 2], [0, 2], [0, 1]);
          lhs('->', [0, 2], [0, 2], [0, 2]);
          lhs('->', [0, 2], [0, 1], [1, 2]);
          lhs('->', [0, 2], [1, 2], [0, 1]);
          lhs('->', [0, 2], [1, 2], [1, 2]);
          lhs('->', [0, 10]);
          lhs('->', [0, 0, 9, 9]);
          lhs('->', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('->', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('->', 'imp,imp', [0, 1], [0, 1], [0, 1]);
          rhs('->', 'imp,imp', [0, 1], [0, 1], [0, 2]);
          rhs('->', 'imp,imp', [0, 1], [0, 2], [0, 1]);
          rhs('->', 'imp,imp', [0, 1], [0, 2], [0, 2]);
          rhs('->', 'imp,imp', [0, 2], [0, 1], [0, 1]);
          rhs('->', 'imp,imp', [0, 2], [0, 1], [0, 2]);
          rhs('->', 'imp,imp', [0, 2], [0, 2], [0, 1]);
          rhs('->', 'imp,imp', [0, 2], [0, 2], [0, 2]);
          rhs('->', [0, 2], [0, 1], [1, 2]);
          rhs('->', [0, 2], [1, 2], [0, 1]);
          rhs('->', [0, 2], [1, 2], [1, 2]);
          rhs('->', 'imp,imp', [0, 10]);
          rhs('->', 'imp,imp', [0, 0, 9, 9]);
          rhs('->', 'imp,imp', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('->', 'imp,imp', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<', [0, 1], [0, 1], [0, 1]);
          lhs('<', 'imp,lt', [0, 1], [0, 1], [0, 2]);
          lhs('<', [0, 1], [0, 2], [0, 1]);
          lhs('<', 'imp,lt', [0, 1], [0, 2], [0, 2]);
          lhs('<', [0, 2], [0, 1], [0, 1]);
          lhs('<', 'imp,lt', [0, 2], [0, 1], [0, 2]);
          lhs('<', [0, 2], [0, 2], [0, 1]);
          lhs('<', 'imp,lt', [0, 2], [0, 2], [0, 2]);
          lhs('<', 'imp,lt', [0, 2], [0, 1], [1, 2]);
          lhs('<', [0, 2], [1, 2], [0, 1]);
          lhs('<', [0, 2], [1, 2], [1, 2]);
          lhs('<', 'imp,lt', [0, 10]);
          lhs('<', [0, 0, 9, 9]);
          lhs('<', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<', [0, 1], [0, 1], [0, 1]);
          rhs('<', [0, 1], [0, 1], [0, 2]);
          rhs('<', [0, 1], [0, 2], [0, 1]);
          rhs('<', [0, 1], [0, 2], [0, 2]);
          rhs('<', [0, 2], [0, 1], [0, 1]);
          rhs('<', [0, 2], [0, 1], [0, 2]);
          rhs('<', [0, 2], [0, 2], [0, 1]);
          rhs('<', [0, 2], [0, 2], [0, 2]);
          rhs('<', [0, 2], [0, 1], [1, 2]);
          rhs('<', [0, 2], [1, 2], [0, 1]);
          rhs('<', [0, 2], [1, 2], [1, 2]);
          rhs('<', [0, 10]);
          rhs('<', [0, 0, 9, 9]);
          rhs('<', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<=', [0, 1], [0, 1], [0, 1]);
          lhs('<=', 'imp,lte', [0, 1], [0, 1], [0, 2]);
          lhs('<=', [0, 1], [0, 2], [0, 1]);
          lhs('<=', 'imp,lte', [0, 1], [0, 2], [0, 2]);
          lhs('<=', [0, 2], [0, 1], [0, 1]);
          lhs('<=', 'imp,lte', [0, 2], [0, 1], [0, 2]);
          lhs('<=', [0, 2], [0, 2], [0, 1]);
          lhs('<=', 'imp,lte', [0, 2], [0, 2], [0, 2]);
          lhs('<=', 'imp,lte', [0, 2], [0, 1], [1, 2]);
          lhs('<=', [0, 2], [1, 2], [0, 1]);
          lhs('<=', [0, 2], [1, 2], [1, 2]);
          lhs('<=', 'imp,lte', [0, 10]);
          lhs('<=', [0, 0, 9, 9]);
          lhs('<=', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<=', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<=', 'imp,imp', [0, 1], [0, 1], [0, 1]);
          rhs('<=', 'imp,imp', [0, 1], [0, 1], [0, 2]);
          rhs('<=', 'imp,imp', [0, 1], [0, 2], [0, 1]);
          rhs('<=', 'imp,imp', [0, 1], [0, 2], [0, 2]);
          rhs('<=', 'imp,lte', [0, 2], [0, 1], [0, 1]);
          rhs('<=', 'imp,lte', [0, 2], [0, 1], [0, 2]);
          rhs('<=', 'imp,lte', [0, 2], [0, 2], [0, 1]);
          rhs('<=', 'imp,lte', [0, 2], [0, 2], [0, 2]);
          rhs('<=', [0, 2], [0, 1], [1, 2]);
          rhs('<=', [0, 2], [1, 2], [0, 1]);
          rhs('<=', [0, 2], [1, 2], [1, 2]);
          rhs('<=', 'imp,lte', [0, 10]);
          rhs('<=', 'imp,imp', [0, 0, 9, 9]);
          rhs('<=', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<=', 'imp,imp', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!&', [0, 1], [0, 1], [0, 1]);
          both('!&', [0, 1], [0, 1], [0, 2]);
          both('!&', [0, 1], [0, 2], [0, 1]);
          both('!&', [0, 1], [0, 2], [0, 2]);
          both('!&', [0, 2], [0, 1], [0, 1]);
          both('!&', [0, 2], [0, 1], [0, 2]);
          both('!&', [0, 2], [0, 2], [0, 1]);
          both('!&', [0, 2], [0, 2], [0, 2]);
          both('!&', [0, 2], [0, 1], [1, 2]);
          both('!&', [0, 2], [1, 2], [0, 1]);
          both('!&', [0, 2], [1, 2], [1, 2]);
          both('!&', [0, 10]);
          both('!&', [0, 0, 9, 9]);
          both('!&', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!&', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('!->', [0, 1], [0, 1], [0, 1]);
          lhs('!->', [0, 1], [0, 1], [0, 2]);
          lhs('!->', [0, 1], [0, 2], [0, 1]);
          lhs('!->', [0, 1], [0, 2], [0, 2]);
          lhs('!->', [0, 2], [0, 1], [0, 1]);
          lhs('!->', [0, 2], [0, 1], [0, 2]);
          lhs('!->', [0, 2], [0, 2], [0, 1]);
          lhs('!->', [0, 2], [0, 2], [0, 2]);
          lhs('!->', 'reject', [0, 2], [0, 1], [1, 2]);
          lhs('!->', [0, 2], [1, 2], [0, 1]);
          lhs('!->', 'reject', [0, 2], [1, 2], [1, 2]);
          lhs('!->', [0, 10]);
          lhs('!->', [0, 0, 9, 9]);
          lhs('!->', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('!->', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('!->', [0, 1], [0, 1], [0, 1]);
          rhs('!->', [0, 1], [0, 1], [0, 2]);
          rhs('!->', [0, 1], [0, 2], [0, 1]);
          rhs('!->', [0, 1], [0, 2], [0, 2]);
          rhs('!->', [0, 2], [0, 1], [0, 1]);
          rhs('!->', [0, 2], [0, 1], [0, 2]);
          rhs('!->', [0, 2], [0, 2], [0, 1]);
          rhs('!->', [0, 2], [0, 2], [0, 2]);
          rhs('!->', [0, 2], [0, 1], [1, 2]);
          rhs('!->', [0, 2], [1, 2], [0, 1]);
          rhs('!->', [0, 2], [1, 2], [1, 2]);
          rhs('!->', [0, 10]);
          rhs('!->', [0, 0, 9, 9]);
          rhs('!->', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('!->', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!|', [0, 1], [0, 1], [0, 1]);
          both('!|', [0, 1], [0, 1], [0, 2]);
          both('!|', [0, 1], [0, 2], [0, 1]);
          both('!|', [0, 1], [0, 2], [0, 2]);
          both('!|', [0, 2], [0, 1], [0, 1]);
          both('!|', [0, 2], [0, 1], [0, 2]);
          both('!|', [0, 2], [0, 2], [0, 1]);
          both('!|', [0, 2], [0, 2], [0, 2]);
          both('!|', 'reject', [0, 2], [0, 1], [1, 2]);
          both('!|', [0, 2], [1, 2], [0, 1]);
          both('!|', 'reject', [0, 2], [1, 2], [1, 2]);
          both('!|', [0, 10]);
          both('!|', [0, 0, 9, 9]);
          both('!|', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!|', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('==', 'imp', [0, 1], [0, 1], [0, 1]);
          both('==', 'imp', [0, 1], [0, 1], [0, 2]);
          both('==', 'imp', [0, 1], [0, 2], [0, 1]);
          both('==', 'imp', [0, 1], [0, 2], [0, 2]);
          both('==', 'imp', [0, 2], [0, 1], [0, 1]);
          both('==', 'imp', [0, 2], [0, 1], [0, 2]);
          both('==', 'imp', [0, 2], [0, 2], [0, 1]);
          both('==', 'imp', [0, 2], [0, 2], [0, 2]);
          both('==', [0, 2], [0, 1], [1, 2]);
          both('==', [0, 2], [1, 2], [0, 1]);
          both('==', [0, 2], [1, 2], [1, 2]);
          both('==', 'imp', [0, 10]);
          both('==', 'imp', [0, 0, 9, 9]);
          both('==', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('==', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!^', 'imp', [0, 1], [0, 1], [0, 1]);
          both('!^', 'imp', [0, 1], [0, 1], [0, 2]);
          both('!^', 'imp', [0, 1], [0, 2], [0, 1]);
          both('!^', 'imp', [0, 1], [0, 2], [0, 2]);
          both('!^', 'imp', [0, 2], [0, 1], [0, 1]);
          both('!^', 'imp', [0, 2], [0, 1], [0, 2]);
          both('!^', 'imp', [0, 2], [0, 2], [0, 1]);
          both('!^', 'imp', [0, 2], [0, 2], [0, 2]);
          both('!^', [0, 2], [0, 1], [1, 2]);
          both('!^', [0, 2], [1, 2], [0, 1]);
          both('!^', [0, 2], [1, 2], [1, 2]);
          both('!^', 'imp', [0, 10]);
          both('!^', 'imp', [0, 0, 9, 9]);
          both('!^', 'imp', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!^', 'imp', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('^', 'some', [0, 1], [0, 1], [0, 1]);
          both('^', 'some', [0, 1], [0, 1], [0, 2]);
          both('^', 'some', [0, 1], [0, 2], [0, 1]);
          both('^', 'some', [0, 1], [0, 2], [0, 2]);
          both('^', 'some', [0, 2], [0, 1], [0, 1]);
          both('^', 'some', [0, 2], [0, 1], [0, 2]);
          both('^', 'some', [0, 2], [0, 2], [0, 1]);
          both('^', 'some', [0, 2], [0, 2], [0, 2]);
          both('^', [0, 2], [0, 1], [1, 2]);
          both('^', [0, 2], [1, 2], [0, 1]);
          both('^', [0, 2], [1, 2], [1, 2]);
          both('^', 'some', [0, 10]);
          both('^', 'some', [0, 0, 9, 9]);
          both('^', 'some', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('^', 'some', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
        });

        describe('ternary with shared arg', function() {

          let both = testBinaryTernarySharedArgs.bind(undefined, '->', 'lhs', ''); // A & B, R = A @ C  and  A & B, R = C @ A
          let lhs = testBinaryTernarySharedArgs.bind(undefined, '->', 'lhs', 'lhs'); // A & B, R = A @ C
          let rhs = testBinaryTernarySharedArgs.bind(undefined, '->', 'lhs', 'rhs'); // A & B, R = C @ A

          // A & B, R = A &? C
          both('&?', 'imp,isall', [0, 1], [0, 1], [0, 1], [0, 1]);
          both('&?', 'imp,isall', [0, 1], [0, 1], [0, 1], [0, 2]);
          both('&?', 'imp,isall', [0, 1], [0, 1], [0, 2], [0, 2]);
          both('&?', 'imp,isall', [0, 1], [0, 2], [0, 2], [0, 2]);
          both('&?', 'imp,isall', [0, 2], [0, 1], [0, 1], [0, 1]);
          both('&?', 'imp,isall', [0, 2], [0, 1], [0, 1], [0, 2]);
          both('&?', 'imp,isall', [0, 2], [0, 1], [0, 2], [0, 2]);
          both('&?', 'imp,isall', [0, 2], [0, 2], [0, 2], [0, 2]);
          both('&?', [0, 2], [1, 2], [0, 1], [0, 1]);
          both('&?', [0, 2], [1, 2], [1, 2], [0, 1]);
          both('&?', [0, 2], [1, 2], [1, 2], [1, 2]);
          both('&?', 'imp,isall', [0, 1], [0, 10]);
          both('&?', 'imp,isall', [0, 1], [0, 0, 9, 9]);
          both('&?', 'imp,isall', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('&?', 'imp,isall', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('==?', 'imp,issame', [0, 1], [0, 1], [0, 1], [0, 1]);
          both('==?', 'imp,issame', [0, 1], [0, 1], [0, 1], [0, 2]);
          both('==?', 'imp,issame', [0, 1], [0, 1], [0, 2], [0, 2]);
          both('==?', 'imp,issame', [0, 1], [0, 2], [0, 2], [0, 2]);
          both('==?', 'imp,issame', [0, 2], [0, 1], [0, 1], [0, 1]);
          both('==?', 'imp,issame', [0, 2], [0, 1], [0, 1], [0, 2]);
          both('==?', 'imp,issame', [0, 2], [0, 1], [0, 2], [0, 2]);
          both('==?', 'imp,issame', [0, 2], [0, 2], [0, 2], [0, 2]);
          both('==?', 'issame', [0, 2], [1, 2], [0, 1], [0, 1]);
          both('==?', 'issame', [0, 2], [1, 2], [1, 2], [0, 1]);
          both('==?', 'issame', [0, 2], [1, 2], [1, 2], [1, 2]);
          both('==?', 'imp,issame', [0, 1], [0, 10]);
          both('==?', 'imp,issame', [0, 1], [0, 0, 9, 9]);
          both('==?', 'imp,issame', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('==?', 'imp,issame', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!=?', 'imp,isdiff', [0, 1], [0, 1], [0, 1], [0, 1]);
          both('!=?', 'imp,isdiff', [0, 1], [0, 1], [0, 1], [0, 2]);
          both('!=?', 'imp,isdiff', [0, 1], [0, 1], [0, 2], [0, 2]);
          both('!=?', 'imp,isdiff', [0, 1], [0, 2], [0, 2], [0, 2]);
          both('!=?', 'imp,isdiff', [0, 2], [0, 1], [0, 1], [0, 1]);
          both('!=?', 'imp,isdiff', [0, 2], [0, 1], [0, 1], [0, 2]);
          both('!=?', 'imp,isdiff', [0, 2], [0, 1], [0, 2], [0, 2]);
          both('!=?', 'imp,isdiff', [0, 2], [0, 2], [0, 2], [0, 2]);
          both('!=?', 'isdiff', [0, 2], [1, 2], [0, 1], [0, 1]);
          both('!=?', 'isdiff', [0, 2], [1, 2], [1, 2], [0, 1]);
          both('!=?', 'isdiff', [0, 2], [1, 2], [1, 2], [1, 2]);
          both('!=?', 'imp,isdiff', [0, 1], [0, 10]);
          both('!=?', 'imp,isdiff', [0, 1], [0, 0, 9, 9]);
          both('!=?', 'imp,isdiff', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!=?', 'imp,isdiff', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<?', 'imp,islt', [0, 1], [0, 1], [0, 1], [0, 1]);
          lhs('<?', 'imp,islt', [0, 1], [0, 1], [0, 1], [0, 2]);
          lhs('<?', 'imp,islt', [0, 1], [0, 1], [0, 2], [0, 2]);
          lhs('<?', 'imp,islt', [0, 1], [0, 2], [0, 2], [0, 2]);
          lhs('<?', 'imp,islt', [0, 2], [0, 1], [0, 1], [0, 1]);
          lhs('<?', 'imp,islt', [0, 2], [0, 1], [0, 1], [0, 2]);
          lhs('<?', 'imp,islt', [0, 2], [0, 1], [0, 2], [0, 2]);
          lhs('<?', 'imp,islt', [0, 2], [0, 2], [0, 2], [0, 2]);
          lhs('<?', [0, 2], [1, 2], [0, 1], [0, 1]);
          lhs('<?', [0, 2], [1, 2], [1, 2], [0, 1]);
          lhs('<?', 'islt', [0, 2], [1, 2], [1, 2], [1, 2]);
          lhs('<?', 'imp,islt', [0, 1], [0, 10]);
          lhs('<?', 'imp,islt', [0, 1], [0, 0, 9, 9]);
          lhs('<?', 'imp,islt', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<?', 'imp,islt', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<?', 'imp,islt', [0, 1], [0, 1], [0, 1], [0, 1]);
          rhs('<?', 'imp,islt', [0, 1], [0, 1], [0, 1], [0, 2]);
          rhs('<?', 'imp,islt', [0, 1], [0, 1], [0, 2], [0, 2]);
          rhs('<?', 'imp,islt', [0, 1], [0, 2], [0, 2], [0, 2]);
          rhs('<?', 'imp,islt', [0, 2], [0, 1], [0, 1], [0, 1]);
          rhs('<?', 'imp,islt', [0, 2], [0, 1], [0, 1], [0, 2]);
          rhs('<?', 'imp,islt', [0, 2], [0, 1], [0, 2], [0, 2]);
          rhs('<?', 'imp,islt', [0, 2], [0, 2], [0, 2], [0, 2]);
          rhs('<?', 'islt', [0, 2], [1, 2], [0, 1], [0, 1]);
          rhs('<?', 'islt', [0, 2], [1, 2], [1, 2], [0, 1]);
          rhs('<?', 'islt', [0, 2], [1, 2], [1, 2], [1, 2]);
          rhs('<?', 'imp,islt', [0, 1], [0, 10]);
          rhs('<?', 'imp,islt', [0, 1], [0, 0, 9, 9]);
          rhs('<?', 'imp,islt', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<?', 'imp,islt', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<=?', 'imp,islte', [0, 1], [0, 1], [0, 1], [0, 1]);
          lhs('<=?', 'imp,islte', [0, 1], [0, 1], [0, 1], [0, 2]);
          lhs('<=?', 'imp,islte', [0, 1], [0, 1], [0, 2], [0, 2]);
          lhs('<=?', 'imp,islte', [0, 1], [0, 2], [0, 2], [0, 2]);
          lhs('<=?', 'imp,islte', [0, 2], [0, 1], [0, 1], [0, 1]);
          lhs('<=?', 'imp,islte', [0, 2], [0, 1], [0, 1], [0, 2]);
          lhs('<=?', 'imp,islte', [0, 2], [0, 1], [0, 2], [0, 2]);
          lhs('<=?', 'imp,islte', [0, 2], [0, 2], [0, 2], [0, 2]);
          lhs('<=?', 'islte', [0, 2], [1, 2], [0, 1], [0, 1]);
          lhs('<=?', 'islte', [0, 2], [1, 2], [1, 2], [0, 1]);
          lhs('<=?', 'islte', [0, 2], [1, 2], [1, 2], [1, 2]);
          lhs('<=?', 'imp,islte', [0, 1], [0, 10]);
          lhs('<=?', 'imp,islte', [0, 1], [0, 0, 9, 9]);
          lhs('<=?', 'imp,islte', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<=?', 'imp,islte', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<=?', 'imp,islte', [0, 1], [0, 1], [0, 1], [0, 1]);
          rhs('<=?', 'imp,islte', [0, 1], [0, 1], [0, 1], [0, 2]);
          rhs('<=?', 'imp,islte', [0, 1], [0, 1], [0, 2], [0, 2]);
          rhs('<=?', 'imp,islte', [0, 1], [0, 2], [0, 2], [0, 2]);
          rhs('<=?', 'imp,islte', [0, 2], [0, 1], [0, 1], [0, 1]);
          rhs('<=?', 'imp,islte', [0, 2], [0, 1], [0, 1], [0, 2]);
          rhs('<=?', 'imp,islte', [0, 2], [0, 1], [0, 2], [0, 2]);
          rhs('<=?', 'imp,islte', [0, 2], [0, 2], [0, 2], [0, 2]);
          rhs('<=?', [0, 2], [1, 2], [0, 1], [0, 1]);
          rhs('<=?', [0, 2], [1, 2], [1, 2], [0, 1]);
          rhs('<=?', 'islte', [0, 2], [1, 2], [1, 2], [1, 2]);
          rhs('<=?', 'imp,islte', [0, 1], [0, 10]);
          rhs('<=?', 'imp,islte', [0, 1], [0, 0, 9, 9]);
          rhs('<=?', 'imp,islte', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<=?', 'imp,islte', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!&?', 'imp,isnall', [0, 1], [0, 1], [0, 1], [0, 1]);
          both('!&?', 'imp,isnall', [0, 1], [0, 1], [0, 1], [0, 2]);
          both('!&?', 'imp,isnall', [0, 1], [0, 1], [0, 2], [0, 2]);
          both('!&?', 'imp,isnall', [0, 1], [0, 2], [0, 2], [0, 2]);
          both('!&?', 'imp,isnall', [0, 2], [0, 1], [0, 1], [0, 1]);
          both('!&?', 'imp,isnall', [0, 2], [0, 1], [0, 1], [0, 2]);
          both('!&?', 'imp,isnall', [0, 2], [0, 1], [0, 2], [0, 2]);
          both('!&?', 'imp,isnall', [0, 2], [0, 2], [0, 2], [0, 2]);
          both('!&?', 'isnall', [0, 2], [1, 2], [0, 1], [0, 1]);
          both('!&?', 'isnall', [0, 2], [1, 2], [1, 2], [0, 1]);
          both('!&?', [0, 2], [1, 2], [1, 2], [1, 2]);
          both('!&?', 'imp,isnall', [0, 1], [0, 10]);
          both('!&?', 'imp,isnall', [0, 1], [0, 0, 9, 9]);
          both('!&?', 'imp,isnall', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!&?', 'imp,isnall', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('|?', 'imp,issome', [0, 1], [0, 1], [0, 1], [0, 1]);
          both('|?', 'imp,issome', [0, 1], [0, 1], [0, 1], [0, 2]);
          both('|?', 'imp,issome', [0, 1], [0, 1], [0, 2], [0, 2]);
          both('|?', 'imp,issome', [0, 1], [0, 2], [0, 2], [0, 2]);
          both('|?', 'imp,issome', [0, 2], [0, 1], [0, 1], [0, 1]);
          both('|?', 'imp,issome', [0, 2], [0, 1], [0, 1], [0, 2]);
          both('|?', 'imp,issome', [0, 2], [0, 1], [0, 2], [0, 2]);
          both('|?', 'imp,issome', [0, 2], [0, 2], [0, 2], [0, 2]);
          both('|?', [0, 2], [1, 2], [0, 1], [0, 1]);
          both('|?', [0, 2], [1, 2], [1, 2], [0, 1]);
          both('|?', [0, 2], [1, 2], [1, 2], [1, 2]);
          both('|?', 'imp,issome', [0, 1], [0, 10]);
          both('|?', 'imp,issome', [0, 1], [0, 0, 9, 9]);
          both('|?', 'imp,issome', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('|?', 'imp,issome', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!|?', 'imp,isnone', [0, 1], [0, 1], [0, 1], [0, 1]);
          both('!|?', 'imp,isnone', [0, 1], [0, 1], [0, 1], [0, 2]);
          both('!|?', 'imp,isnone', [0, 1], [0, 1], [0, 2], [0, 2]);
          both('!|?', 'imp,isnone', [0, 1], [0, 2], [0, 2], [0, 2]);
          both('!|?', 'imp,isnone', [0, 2], [0, 1], [0, 1], [0, 1]);
          both('!|?', 'imp,isnone', [0, 2], [0, 1], [0, 1], [0, 2]);
          both('!|?', 'imp,isnone', [0, 2], [0, 1], [0, 2], [0, 2]);
          both('!|?', 'imp,isnone', [0, 2], [0, 2], [0, 2], [0, 2]);
          both('!|?', [0, 2], [1, 2], [0, 1], [0, 1]);
          both('!|?', [0, 2], [1, 2], [1, 2], [0, 1]);
          both('!|?', [0, 2], [1, 2], [1, 2], [1, 2]);
          both('!|?', 'imp,isnone', [0, 1], [0, 10]);
          both('!|?', 'imp,isnone', [0, 1], [0, 0, 9, 9]);
          both('!|?', 'imp,isnone', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!|?', 'imp,isnone', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('+', 'imp,sum', [0, 1], [0, 1], [0, 1], [0, 1]);
          both('+', 'imp,sum', [0, 1], [0, 1], [0, 1], [0, 2]);
          both('+', 'imp,sum', [0, 1], [0, 1], [0, 2], [0, 2]);
          both('+', 'imp,sum', [0, 1], [0, 2], [0, 2], [0, 2]);
          both('+', 'imp,issome', [0, 2], [0, 1], [0, 1], [0, 1]);
          both('+', 'imp,sum', [0, 2], [0, 1], [0, 1], [0, 2]);
          both('+', 'imp,sum', [0, 2], [0, 1], [0, 2], [0, 2]);
          both('+', 'imp,sum', [0, 2], [0, 2], [0, 2], [0, 2]);
          both('+', 'sum', [0, 2], [1, 2], [0, 1], [0, 1]);
          both('+', 'sum', [0, 2], [1, 2], [1, 2], [0, 1]);
          both('+', [0, 2], [1, 2], [1, 2], [1, 2]);
          both('+', 'imp,issome', [0, 20], [0, 1], [0, 1], [0, 1]);
          both('+', 'imp,issome', [0, 20], [0, 10]);
          both('+', 'imp,issome', [0, 20], [0, 0, 9, 9]);
          both('+', 'imp,issome', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('+', 'imp,issome', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('-', 'imp,minus', [0, 1], [0, 1], [0, 1], [0, 1]);
          lhs('-', 'imp,minus', [0, 1], [0, 1], [0, 1], [0, 2]);
          lhs('-', 'imp,minus', [0, 1], [0, 1], [0, 2], [0, 2]);
          lhs('-', 'imp,minus', [0, 1], [0, 2], [0, 2], [0, 2]);
          lhs('-', 'imp,minus', [0, 2], [0, 1], [0, 1], [0, 1]);
          lhs('-', 'imp,minus', [0, 2], [0, 1], [0, 1], [0, 2]);
          lhs('-', 'imp,minus', [0, 2], [0, 1], [0, 2], [0, 2]);
          lhs('-', 'imp,minus', [0, 2], [0, 2], [0, 2], [0, 2]);
          lhs('-', 'minus', [0, 2], [1, 2], [0, 1], [0, 1]);
          lhs('-', 'minus', [0, 2], [1, 2], [1, 2], [0, 1]);
          lhs('-', 'minus', [0, 2], [1, 2], [1, 2], [1, 2]);
          lhs('-', 'imp,minus', [0, 20], [0, 1], [0, 1], [0, 1]);
          lhs('-', 'imp,minus', [0, 20], [0, 10]);
          lhs('-', 'imp,minus', [0, 20], [0, 0, 9, 9]);
          lhs('-', 'imp', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('-', 'imp,minus', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('-', 'imp,minus', [0, 1], [0, 1], [0, 1], [0, 1]);
          rhs('-', 'imp,minus', [0, 1], [0, 1], [0, 1], [0, 2]);
          rhs('-', 'imp,minus', [0, 1], [0, 1], [0, 2], [0, 2]);
          rhs('-', 'imp,minus', [0, 1], [0, 2], [0, 2], [0, 2]);
          rhs('-', 'imp,minus', [0, 2], [0, 1], [0, 1], [0, 1]);
          rhs('-', 'imp,minus', [0, 2], [0, 1], [0, 1], [0, 2]);
          rhs('-', 'imp,minus', [0, 2], [0, 1], [0, 2], [0, 2]);
          rhs('-', 'imp,minus', [0, 2], [0, 2], [0, 2], [0, 2]);
          rhs('-', [0, 2], [1, 2], [0, 1], [0, 1]);
          rhs('-', [0, 2], [1, 2], [1, 2], [0, 1]);
          rhs('-', 'minus', [0, 2], [1, 2], [1, 2], [1, 2]);
          rhs('-', 'imp,minus', [0, 20], [0, 1], [0, 1], [0, 1]);
          rhs('-', 'imp,minus', [0, 20], [0, 10]);
          rhs('-', 'imp,minus', [0, 20], [0, 0, 9, 9]);
          rhs('-', 'imp,minus', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('-', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('*', 'imp,product', [0, 1], [0, 1], [0, 1], [0, 1]);
          both('*', 'imp,product', [0, 1], [0, 1], [0, 1], [0, 2]);
          both('*', 'imp,product', [0, 1], [0, 1], [0, 2], [0, 2]);
          both('*', 'imp,product', [0, 1], [0, 2], [0, 2], [0, 2]);
          both('*', 'imp,product', [0, 2], [0, 1], [0, 1], [0, 1]);
          both('*', 'imp,product', [0, 2], [0, 1], [0, 1], [0, 2]);
          both('*', 'imp,product', [0, 2], [0, 1], [0, 2], [0, 2]);
          both('*', 'imp,product', [0, 2], [0, 2], [0, 2], [0, 2]);
          both('*', 'product', [0, 2], [1, 2], [0, 1], [0, 1]);
          both('*', 'product', [0, 2], [1, 2], [1, 2], [0, 1]);
          both('*', 'product', [0, 2], [1, 2], [1, 2], [1, 2]);
          both('*', 'imp,product', [0, 100], [0, 1], [0, 1], [0, 1]);
          both('*', 'imp,product', [0, 100], [0, 10]);
          both('*', 'imp,product', [0, 100], [0, 0, 9, 9]);
          both('*', 'imp,product', [0, 100], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('*', 'imp,product', [0, 100], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('/', 'div,imp', [0, 1], [0, 1], [0, 1], [0, 1]);
          lhs('/', 'div,imp', [0, 1], [0, 1], [0, 1], [0, 2]);
          lhs('/', 'div,imp', [0, 1], [0, 1], [0, 2], [0, 2]);
          lhs('/', 'div,imp', [0, 1], [0, 2], [0, 2], [0, 2]);
          lhs('/', 'div,imp', [0, 2], [0, 1], [0, 1], [0, 1]);
          lhs('/', 'div,imp', [0, 2], [0, 1], [0, 1], [0, 2]);
          lhs('/', 'div,imp', [0, 2], [0, 1], [0, 2], [0, 2]);
          lhs('/', 'div,imp', [0, 2], [0, 2], [0, 2], [0, 2]);
          lhs('/', 'div', [0, 2], [1, 2], [0, 1], [0, 1]);
          lhs('/', 'div', [0, 2], [1, 2], [1, 2], [0, 1]);
          lhs('/', 'div', [0, 2], [1, 2], [1, 2], [1, 2]);
          lhs('/', 'div,imp', [0, 20], [0, 1], [0, 1], [0, 1]);
          lhs('/', 'div,imp', [0, 20], [0, 10]);
          lhs('/', 'div,imp', [0, 20], [0, 0, 9, 9]);
          lhs('/', 'div,imp', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('/', 'div,imp', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('/', 'div,imp', [0, 1], [0, 1], [0, 1], [0, 1]);
          rhs('/', 'div,imp', [0, 1], [0, 1], [0, 1], [0, 2]);
          rhs('/', 'div,imp', [0, 1], [0, 1], [0, 2], [0, 2]);
          rhs('/', 'div,imp', [0, 1], [0, 2], [0, 2], [0, 2]);
          rhs('/', 'div,imp', [0, 2], [0, 1], [0, 1], [0, 1]);
          rhs('/', 'div,imp', [0, 2], [0, 1], [0, 1], [0, 2]);
          rhs('/', 'div,imp', [0, 2], [0, 1], [0, 2], [0, 2]);
          rhs('/', 'div,imp', [0, 2], [0, 2], [0, 2], [0, 2]);
          rhs('/', 'div', [0, 2], [1, 2], [0, 1], [0, 1]);
          rhs('/', 'div', [0, 2], [1, 2], [1, 2], [0, 1]);
          rhs('/', 'div', [0, 2], [1, 2], [1, 2], [1, 2]);
          rhs('/', 'div,imp', [0, 20], [0, 1], [0, 1], [0, 1]);
          rhs('/', 'div,imp', [0, 20], [0, 10]);
          rhs('/', 'div,imp', [0, 20], [0, 0, 9, 9]);
          rhs('/', 'div,imp', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('/', 'div,imp', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
        });

        describe('ternary with shared result', function() {

          let both = testBinaryTernarySharedResult.bind(undefined, '->', 'lhs', ''); // A & B, R = A @ C  and  A & B, R = C @ A
          let lhs = testBinaryTernarySharedResult.bind(undefined, '->', 'lhs', 'lhs'); // A & B, R = A @ C
          let rhs = testBinaryTernarySharedResult.bind(undefined, '->', 'lhs', 'rhs'); // A & B, R = C @ A

          // A & B, R = A &? C
          both('&?', 'imp,isall', [0, 1], [0, 1], [0, 1], [0, 1]);
          both('&?', 'imp,isall', [0, 1], [0, 1], [0, 1], [0, 2]);
          both('&?', 'imp,isall', [0, 1], [0, 1], [0, 2], [0, 2]);
          both('&?', 'imp,isall', [0, 1], [0, 2], [0, 2], [0, 2]);
          both('&?', 'imp,isall', [0, 2], [0, 1], [0, 1], [0, 1]);
          both('&?', 'imp,isall', [0, 2], [0, 1], [0, 1], [0, 2]);
          both('&?', 'imp,isall', [0, 2], [0, 1], [0, 2], [0, 2]);
          both('&?', 'imp,isall', [0, 2], [0, 2], [0, 2], [0, 2]);
          both('&?', 'imp', [0, 2], [1, 2], [0, 1], [0, 1]);
          both('&?', [0, 2], [1, 2], [1, 2], [0, 1]);
          both('&?', [0, 2], [1, 2], [1, 2], [1, 2]);
          both('&?', 'imp,isall', [0, 1], [0, 10]);
          both('&?', 'imp,isall', [0, 1], [0, 0, 9, 9]);
          both('&?', 'imp,isall', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('&?', 'imp,isall', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('==?', 'imp,issame', [0, 1], [0, 1], [0, 1], [0, 1]);
          both('==?', 'imp,issame', [0, 1], [0, 1], [0, 1], [0, 2]);
          both('==?', 'imp,issame', [0, 1], [0, 1], [0, 2], [0, 2]);
          both('==?', 'imp,issame', [0, 1], [0, 2], [0, 2], [0, 2]);
          both('==?', 'imp,issame', [0, 2], [0, 1], [0, 1], [0, 1]);
          both('==?', 'imp,issame', [0, 2], [0, 1], [0, 1], [0, 2]);
          both('==?', 'imp,issame', [0, 2], [0, 1], [0, 2], [0, 2]);
          both('==?', 'imp,issame', [0, 2], [0, 2], [0, 2], [0, 2]);
          both('==?', 'imp,issame', [0, 2], [1, 2], [0, 1], [0, 1]);
          both('==?', [0, 2], [1, 2], [1, 2], [0, 1]);
          both('==?', [0, 2], [1, 2], [1, 2], [1, 2]);
          both('==?', 'imp,issame', [0, 1], [0, 10]);
          both('==?', 'imp,issame', [0, 1], [0, 0, 9, 9]);
          both('==?', 'imp,issame', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('==?', 'imp,issame', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!=?', 'imp,isdiff', [0, 1], [0, 1], [0, 1], [0, 1]);
          both('!=?', 'imp,isdiff', [0, 1], [0, 1], [0, 1], [0, 2]);
          both('!=?', 'imp,isdiff', [0, 1], [0, 1], [0, 2], [0, 2]);
          both('!=?', 'imp,isdiff', [0, 1], [0, 2], [0, 2], [0, 2]);
          both('!=?', 'imp,isdiff', [0, 2], [0, 1], [0, 1], [0, 1]);
          both('!=?', 'imp,isdiff', [0, 2], [0, 1], [0, 1], [0, 2]);
          both('!=?', 'imp,isdiff', [0, 2], [0, 1], [0, 2], [0, 2]);
          both('!=?', 'imp,isdiff', [0, 2], [0, 2], [0, 2], [0, 2]);
          both('!=?', 'imp,isdiff', [0, 2], [1, 2], [0, 1], [0, 1]);
          both('!=?', [0, 2], [1, 2], [1, 2], [0, 1]);
          both('!=?', [0, 2], [1, 2], [1, 2], [1, 2]);
          both('!=?', 'imp,isdiff', [0, 1], [0, 10]);
          both('!=?', 'imp,isdiff', [0, 1], [0, 0, 9, 9]);
          both('!=?', 'imp,isdiff', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!=?', 'imp,isdiff', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<?', 'imp,islt', [0, 1], [0, 1], [0, 1], [0, 1]);
          lhs('<?', 'imp,islt', [0, 1], [0, 1], [0, 1], [0, 2]);
          lhs('<?', 'imp,islt', [0, 1], [0, 1], [0, 2], [0, 2]);
          lhs('<?', 'imp,islt', [0, 1], [0, 2], [0, 2], [0, 2]);
          lhs('<?', 'imp,islt', [0, 2], [0, 1], [0, 1], [0, 1]);
          lhs('<?', 'imp,islt', [0, 2], [0, 1], [0, 1], [0, 2]);
          lhs('<?', 'imp,islt', [0, 2], [0, 1], [0, 2], [0, 2]);
          lhs('<?', 'imp,islt', [0, 2], [0, 2], [0, 2], [0, 2]);
          lhs('<?', [0, 2], [1, 2], [0, 1], [0, 1]);
          lhs('<?', [0, 2], [1, 2], [1, 2], [0, 1]);
          lhs('<?', [0, 2], [1, 2], [1, 2], [1, 2]);
          lhs('<?', 'imp,islt', [0, 1], [0, 10]);
          lhs('<?', 'imp,islt', [0, 1], [0, 0, 9, 9]);
          lhs('<?', 'imp,islt', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<?', 'imp,islt', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<?', 'imp,islt', [0, 1], [0, 1], [0, 1], [0, 1]);
          rhs('<?', 'imp,islt', [0, 1], [0, 1], [0, 1], [0, 2]);
          rhs('<?', 'imp,islt', [0, 1], [0, 1], [0, 2], [0, 2]);
          rhs('<?', 'imp,islt', [0, 1], [0, 2], [0, 2], [0, 2]);
          rhs('<?', 'imp,islt', [0, 2], [0, 1], [0, 1], [0, 1]);
          rhs('<?', 'imp,islt', [0, 2], [0, 1], [0, 1], [0, 2]);
          rhs('<?', 'imp,islt', [0, 2], [0, 1], [0, 2], [0, 2]);
          rhs('<?', 'imp,islt', [0, 2], [0, 2], [0, 2], [0, 2]);
          rhs('<?', 'imp,islt', [0, 2], [1, 2], [0, 1], [0, 1]);
          rhs('<?', [0, 2], [1, 2], [1, 2], [0, 1]);
          rhs('<?', [0, 2], [1, 2], [1, 2], [1, 2]);
          rhs('<?', 'imp,islt', [0, 1], [0, 10]);
          rhs('<?', 'imp,islt', [0, 1], [0, 0, 9, 9]);
          rhs('<?', 'imp,islt', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<?', 'imp,islt', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<=?', 'imp,islte', [0, 1], [0, 1], [0, 1], [0, 1]);
          lhs('<=?', 'imp,islte', [0, 1], [0, 1], [0, 1], [0, 2]);
          lhs('<=?', 'imp,islte', [0, 1], [0, 1], [0, 2], [0, 2]);
          lhs('<=?', 'imp,islte', [0, 1], [0, 2], [0, 2], [0, 2]);
          lhs('<=?', 'imp,islte', [0, 2], [0, 1], [0, 1], [0, 1]);
          lhs('<=?', 'imp,islte', [0, 2], [0, 1], [0, 1], [0, 2]);
          lhs('<=?', 'imp,islte', [0, 2], [0, 1], [0, 2], [0, 2]);
          lhs('<=?', 'imp,islte', [0, 2], [0, 2], [0, 2], [0, 2]);
          lhs('<=?', 'imp,islte', [0, 2], [1, 2], [0, 1], [0, 1]);
          lhs('<=?', [0, 2], [1, 2], [1, 2], [0, 1]);
          lhs('<=?', [0, 2], [1, 2], [1, 2], [1, 2]);
          lhs('<=?', 'imp,islte', [0, 1], [0, 10]);
          lhs('<=?', 'imp,islte', [0, 1], [0, 0, 9, 9]);
          lhs('<=?', 'imp,islte', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<=?', 'imp,islte', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<=?', 'imp,islte', [0, 1], [0, 1], [0, 1], [0, 1]);
          rhs('<=?', 'imp,islte', [0, 1], [0, 1], [0, 1], [0, 2]);
          rhs('<=?', 'imp,islte', [0, 1], [0, 1], [0, 2], [0, 2]);
          rhs('<=?', 'imp,islte', [0, 1], [0, 2], [0, 2], [0, 2]);
          rhs('<=?', 'imp,islte', [0, 2], [0, 1], [0, 1], [0, 1]);
          rhs('<=?', 'imp,islte', [0, 2], [0, 1], [0, 1], [0, 2]);
          rhs('<=?', 'imp,islte', [0, 2], [0, 1], [0, 2], [0, 2]);
          rhs('<=?', 'imp,islte', [0, 2], [0, 2], [0, 2], [0, 2]);
          rhs('<=?', [0, 2], [1, 2], [0, 1], [0, 1]);
          rhs('<=?', [0, 2], [1, 2], [1, 2], [0, 1]);
          rhs('<=?', [0, 2], [1, 2], [1, 2], [1, 2]);
          rhs('<=?', 'imp,islte', [0, 1], [0, 10]);
          rhs('<=?', 'imp,islte', [0, 1], [0, 0, 9, 9]);
          rhs('<=?', 'imp,islte', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<=?', 'imp,islte', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!&?', 'imp,isnall', [0, 1], [0, 1], [0, 1], [0, 1]);
          both('!&?', 'imp,isnall', [0, 1], [0, 1], [0, 1], [0, 2]);
          both('!&?', 'imp,isnall', [0, 1], [0, 1], [0, 2], [0, 2]);
          both('!&?', 'imp,isnall', [0, 1], [0, 2], [0, 2], [0, 2]);
          both('!&?', 'imp,isnall', [0, 2], [0, 1], [0, 1], [0, 1]);
          both('!&?', 'imp,isnall', [0, 2], [0, 1], [0, 1], [0, 2]);
          both('!&?', 'imp,isnall', [0, 2], [0, 1], [0, 2], [0, 2]);
          both('!&?', 'imp,isnall', [0, 2], [0, 2], [0, 2], [0, 2]);
          both('!&?', 'imp,isnall', [0, 2], [1, 2], [0, 1], [0, 1]);
          both('!&?', [0, 2], [1, 2], [1, 2], [0, 1]);
          both('!&?', [0, 2], [1, 2], [1, 2], [1, 2]);
          both('!&?', 'imp,isnall', [0, 1], [0, 10]);
          both('!&?', 'imp,isnall', [0, 1], [0, 0, 9, 9]);
          both('!&?', 'imp,isnall', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!&?', 'imp,isnall', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('|?', 'imp,issome', [0, 1], [0, 1], [0, 1], [0, 1]);
          both('|?', 'imp,issome', [0, 1], [0, 1], [0, 1], [0, 2]);
          both('|?', 'imp,issome', [0, 1], [0, 1], [0, 2], [0, 2]);
          both('|?', 'imp,issome', [0, 1], [0, 2], [0, 2], [0, 2]);
          both('|?', 'imp,issome', [0, 2], [0, 1], [0, 1], [0, 1]);
          both('|?', 'imp,issome', [0, 2], [0, 1], [0, 1], [0, 2]);
          both('|?', 'imp,issome', [0, 2], [0, 1], [0, 2], [0, 2]);
          both('|?', 'imp,issome', [0, 2], [0, 2], [0, 2], [0, 2]);
          both('|?', [0, 2], [1, 2], [0, 1], [0, 1]);
          both('|?', [0, 2], [1, 2], [1, 2], [0, 1]);
          both('|?', [0, 2], [1, 2], [1, 2], [1, 2]);
          both('|?', 'imp,issome', [0, 1], [0, 10]);
          both('|?', 'imp,issome', [0, 1], [0, 0, 9, 9]);
          both('|?', 'imp,issome', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('|?', 'imp,issome', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!|?', 'imp,isnone', [0, 1], [0, 1], [0, 1], [0, 1]);
          both('!|?', 'imp,isnone', [0, 1], [0, 1], [0, 1], [0, 2]);
          both('!|?', 'imp,isnone', [0, 1], [0, 1], [0, 2], [0, 2]);
          both('!|?', 'imp,isnone', [0, 1], [0, 2], [0, 2], [0, 2]);
          both('!|?', 'imp,isnone', [0, 2], [0, 1], [0, 1], [0, 1]);
          both('!|?', 'imp,isnone', [0, 2], [0, 1], [0, 1], [0, 2]);
          both('!|?', 'imp,isnone', [0, 2], [0, 1], [0, 2], [0, 2]);
          both('!|?', 'imp,isnone', [0, 2], [0, 2], [0, 2], [0, 2]);
          both('!|?', [0, 2], [1, 2], [0, 1], [0, 1]);
          both('!|?', [0, 2], [1, 2], [1, 2], [0, 1]);
          both('!|?', [0, 2], [1, 2], [1, 2], [1, 2]);
          both('!|?', 'imp,isnone', [0, 1], [0, 10]);
          both('!|?', 'imp,isnone', [0, 1], [0, 0, 9, 9]);
          both('!|?', 'imp,isnone', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!|?', 'imp,isnone', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('+', 'imp,sum', [0, 1], [0, 1], [0, 1], [0, 1]);
          both('+', 'imp,sum', [0, 1], [0, 1], [0, 1], [0, 2]);
          both('+', 'imp,sum', [0, 1], [0, 1], [0, 2], [0, 2]);
          both('+', 'imp,sum', [0, 1], [0, 2], [0, 2], [0, 2]);
          both('+', 'imp,issome', [0, 2], [0, 1], [0, 1], [0, 1]);
          both('+', 'imp,sum', [0, 2], [0, 1], [0, 1], [0, 2]);
          both('+', 'imp,sum', [0, 2], [0, 1], [0, 2], [0, 2]);
          both('+', 'imp,sum', [0, 2], [0, 2], [0, 2], [0, 2]);
          both('+', 'sum', [0, 2], [1, 2], [0, 1], [0, 1]);
          both('+', 'sum', [0, 2], [1, 2], [1, 2], [0, 1]);
          both('+', [0, 2], [1, 2], [1, 2], [1, 2]);
          both('+', 'imp,issome', [0, 20], [0, 1], [0, 1], [0, 1]);
          both('+', 'imp,issome', [0, 20], [0, 10]);
          both('+', 'imp,issome', [0, 20], [0, 0, 9, 9]);
          both('+', 'imp,issome', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('+', 'imp,issome', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('-', 'imp,minus', [0, 1], [0, 1], [0, 1], [0, 1]);
          lhs('-', 'imp,minus', [0, 1], [0, 1], [0, 1], [0, 2]);
          lhs('-', 'imp,minus', [0, 1], [0, 1], [0, 2], [0, 2]);
          lhs('-', 'imp,minus', [0, 1], [0, 2], [0, 2], [0, 2]);
          lhs('-', 'imp,minus', [0, 2], [0, 1], [0, 1], [0, 1]);
          lhs('-', 'imp,minus', [0, 2], [0, 1], [0, 1], [0, 2]);
          lhs('-', 'imp,minus', [0, 2], [0, 1], [0, 2], [0, 2]);
          lhs('-', 'imp,minus', [0, 2], [0, 2], [0, 2], [0, 2]);
          lhs('-', 'imp,minus', [0, 2], [1, 2], [0, 1], [0, 1]);
          lhs('-', 'minus', [0, 2], [1, 2], [1, 2], [0, 1]);
          lhs('-', 'minus', [0, 2], [1, 2], [1, 2], [1, 2]);
          lhs('-', 'imp,minus', [0, 20], [0, 1], [0, 1], [0, 1]);
          lhs('-', 'imp,minus', [0, 20], [0, 10]);
          lhs('-', 'imp,minus', [0, 20], [0, 0, 9, 9]);
          lhs('-', 'imp', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('-', 'imp,minus', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('-', 'imp,minus', [0, 1], [0, 1], [0, 1], [0, 1]);
          rhs('-', 'imp,minus', [0, 1], [0, 1], [0, 1], [0, 2]);
          rhs('-', 'imp,minus', [0, 1], [0, 1], [0, 2], [0, 2]);
          rhs('-', 'imp,minus', [0, 1], [0, 2], [0, 2], [0, 2]);
          rhs('-', 'imp,minus', [0, 2], [0, 1], [0, 1], [0, 1]);
          rhs('-', 'imp,minus', [0, 2], [0, 1], [0, 1], [0, 2]);
          rhs('-', 'imp,minus', [0, 2], [0, 1], [0, 2], [0, 2]);
          rhs('-', 'imp,minus', [0, 2], [0, 2], [0, 2], [0, 2]);
          rhs('-', [0, 2], [1, 2], [0, 1], [0, 1]);
          rhs('-', [0, 2], [1, 2], [1, 2], [0, 1]);
          rhs('-', 'minus', [0, 2], [1, 2], [1, 2], [1, 2]);
          rhs('-', 'imp,minus', [0, 20], [0, 1], [0, 1], [0, 1]);
          rhs('-', 'imp,minus', [0, 20], [0, 10]);
          rhs('-', 'imp,minus', [0, 20], [0, 0, 9, 9]);
          rhs('-', 'imp,minus', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('-', 'imp', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('*', 'imp,product', [0, 1], [0, 1], [0, 1], [0, 1]);
          both('*', 'imp,product', [0, 1], [0, 1], [0, 1], [0, 2]);
          both('*', 'imp,product', [0, 1], [0, 1], [0, 2], [0, 2]);
          both('*', 'imp,product', [0, 1], [0, 2], [0, 2], [0, 2]);
          both('*', 'imp,product', [0, 2], [0, 1], [0, 1], [0, 1]);
          both('*', 'imp,product', [0, 2], [0, 1], [0, 1], [0, 2]);
          both('*', 'imp,product', [0, 2], [0, 1], [0, 2], [0, 2]);
          both('*', 'imp,product', [0, 2], [0, 2], [0, 2], [0, 2]);
          both('*', 'imp,product', [0, 2], [1, 2], [0, 1], [0, 1]);
          both('*', 'product', [0, 2], [1, 2], [1, 2], [0, 1]);
          both('*', 'product', [0, 2], [1, 2], [1, 2], [1, 2]);
          both('*', 'imp,product', [0, 100], [0, 1], [0, 1], [0, 1]);
          both('*', 'imp,product', [0, 100], [0, 10]);
          both('*', 'imp,product', [0, 100], [0, 0, 9, 9]);
          both('*', 'imp,product', [0, 100], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('*', 'imp,product', [0, 100], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('/', 'div,imp', [0, 1], [0, 1], [0, 1], [0, 1]);
          lhs('/', 'div,imp', [0, 1], [0, 1], [0, 1], [0, 2]);
          lhs('/', 'div,imp', [0, 1], [0, 1], [0, 2], [0, 2]);
          lhs('/', 'div,imp', [0, 1], [0, 2], [0, 2], [0, 2]);
          lhs('/', 'div,imp', [0, 2], [0, 1], [0, 1], [0, 1]);
          lhs('/', 'div,imp', [0, 2], [0, 1], [0, 1], [0, 2]);
          lhs('/', 'div,imp', [0, 2], [0, 1], [0, 2], [0, 2]);
          lhs('/', 'div,imp', [0, 2], [0, 2], [0, 2], [0, 2]);
          lhs('/', 'div', [0, 2], [1, 2], [0, 1], [0, 1]);
          lhs('/', 'div', [0, 2], [1, 2], [1, 2], [0, 1]);
          lhs('/', 'div', [0, 2], [1, 2], [1, 2], [1, 2]);
          lhs('/', 'div,imp', [0, 20], [0, 1], [0, 1], [0, 1]);
          lhs('/', 'div,imp', [0, 20], [0, 10]);
          lhs('/', 'div,imp', [0, 20], [0, 0, 9, 9]);
          lhs('/', 'div', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('/', 'div,imp', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('/', 'div,imp', [0, 1], [0, 1], [0, 1], [0, 1]);
          rhs('/', 'div,imp', [0, 1], [0, 1], [0, 1], [0, 2]);
          rhs('/', 'div,imp', [0, 1], [0, 1], [0, 2], [0, 2]);
          rhs('/', 'div,imp', [0, 1], [0, 2], [0, 2], [0, 2]);
          rhs('/', 'div,imp', [0, 2], [0, 1], [0, 1], [0, 1]);
          rhs('/', 'div,imp', [0, 2], [0, 1], [0, 1], [0, 2]);
          rhs('/', 'div,imp', [0, 2], [0, 1], [0, 2], [0, 2]);
          rhs('/', 'div,imp', [0, 2], [0, 2], [0, 2], [0, 2]);
          rhs('/', 'div,imp', [0, 2], [1, 2], [0, 1], [0, 1]);
          rhs('/', 'div', [0, 2], [1, 2], [1, 2], [0, 1]);
          rhs('/', 'div', [0, 2], [1, 2], [1, 2], [1, 2]);
          rhs('/', 'div,imp', [0, 20], [0, 1], [0, 1], [0, 1]);
          rhs('/', 'div,imp', [0, 20], [0, 10]);
          rhs('/', 'div,imp', [0, 20], [0, 0, 9, 9]);
          rhs('/', 'div,imp', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('/', 'div', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
        });
      });

      describe('IMP_RHS', function() {

        describe('binary', function() {

          let both = testBinaryBinary.bind(undefined, '->', 'rhs', ''); // A & B, A @ C  and  A & B, C @ A
          let lhs = testBinaryBinary.bind(undefined, '->', 'rhs', 'lhs'); // A & B, A @ C
          let rhs = testBinaryBinary.bind(undefined, '->', 'rhs', 'rhs'); // A & B, C @ A

          both('&', [0, 1], [0, 1], [0, 1]);
          both('&', [0, 1], [0, 1], [0, 2]);
          both('&', [0, 1], [0, 2], [0, 1]);
          both('&', [0, 1], [0, 2], [0, 2]);
          both('&', [0, 2], [0, 1], [0, 1]);
          both('&', [0, 2], [0, 1], [0, 2]);
          both('&', [0, 2], [0, 2], [0, 1]);
          both('&', [0, 2], [0, 2], [0, 2]);
          both('&', [0, 2], [0, 1], [1, 2]);
          both('&', [0, 2], [1, 2], [0, 1]);
          both('&', [0, 2], [1, 2], [1, 2]);
          both('&', [0, 10]);
          both('&', [0, 0, 9, 9]);
          both('&', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('&', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!=', 'nall', [0, 1], [0, 1], [0, 1]);
          both('!=', 'diff,imp', [0, 1], [0, 1], [0, 2]);
          both('!=', 'nall', [0, 1], [0, 2], [0, 1]);
          both('!=', 'diff,imp', [0, 1], [0, 2], [0, 2]);
          both('!=', 'diff,imp', [0, 2], [0, 1], [0, 1]);
          both('!=', 'diff,imp', [0, 2], [0, 1], [0, 2]);
          both('!=', 'diff,imp', [0, 2], [0, 2], [0, 1]);
          both('!=', 'diff,imp', [0, 2], [0, 2], [0, 2]);
          both('!=', 'diff,imp', [0, 2], [0, 1], [1, 2]);
          both('!=', [0, 2], [1, 2], [0, 1]);
          both('!=', [0, 2], [1, 2], [1, 2]);
          both('!=', 'diff,imp', [0, 10]);
          both('!=', 'nall', [0, 0, 9, 9]);
          both('!=', 'nall', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!=', 'nall', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('->', 'imp,imp', [0, 1], [0, 1], [0, 1]);
          lhs('->', 'imp,imp', [0, 1], [0, 1], [0, 2]);
          lhs('->', 'imp,imp', [0, 1], [0, 2], [0, 1]);
          lhs('->', 'imp,imp', [0, 1], [0, 2], [0, 2]);
          lhs('->', 'imp,imp', [0, 2], [0, 1], [0, 1]);
          lhs('->', 'imp,imp', [0, 2], [0, 1], [0, 2]);
          lhs('->', 'imp,imp', [0, 2], [0, 2], [0, 1]);
          lhs('->', 'imp,imp', [0, 2], [0, 2], [0, 2]);
          lhs('->', [0, 2], [0, 1], [1, 2]);
          lhs('->', [0, 2], [1, 2], [0, 1]);
          lhs('->', [0, 2], [1, 2], [1, 2]);
          lhs('->', 'imp,imp', [0, 10]);
          lhs('->', 'imp,imp', [0, 0, 9, 9]);
          lhs('->', 'imp,imp', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('->', 'imp,imp', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('->', 'imp,imp', [0, 1], [0, 1], [0, 1]);
          rhs('->', 'imp,imp', [0, 1], [0, 1], [0, 2]);
          rhs('->', 'imp,imp', [0, 1], [0, 2], [0, 1]);
          rhs('->', 'imp,imp', [0, 1], [0, 2], [0, 2]);
          rhs('->', 'imp,imp', [0, 2], [0, 1], [0, 1]);
          rhs('->', 'imp,imp', [0, 2], [0, 1], [0, 2]);
          rhs('->', 'imp,imp', [0, 2], [0, 2], [0, 1]);
          rhs('->', 'imp,imp', [0, 2], [0, 2], [0, 2]);
          rhs('->', [0, 2], [0, 1], [1, 2]);
          rhs('->', [0, 2], [1, 2], [0, 1]);
          rhs('->', [0, 2], [1, 2], [1, 2]);
          rhs('->', 'imp,imp', [0, 10]);
          rhs('->', 'imp,imp', [0, 0, 9, 9]);
          rhs('->', 'imp,imp', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('->', 'imp,imp', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<', [0, 1], [0, 1], [0, 1]);
          lhs('<', 'imp,lt', [0, 1], [0, 1], [0, 2]);
          lhs('<', [0, 1], [0, 2], [0, 1]);
          lhs('<', 'imp,lt', [0, 1], [0, 2], [0, 2]);
          lhs('<', [0, 2], [0, 1], [0, 1]);
          lhs('<', 'imp,lt', [0, 2], [0, 1], [0, 2]);
          lhs('<', [0, 2], [0, 2], [0, 1]);
          lhs('<', 'imp,lt', [0, 2], [0, 2], [0, 2]);
          lhs('<', 'imp,lt', [0, 2], [0, 1], [1, 2]);
          lhs('<', 'reject', [0, 2], [1, 2], [0, 1]);
          lhs('<', [0, 2], [1, 2], [1, 2]);
          lhs('<', 'imp,lt', [0, 10]);
          lhs('<', [0, 0, 9, 9]);
          lhs('<', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<', [0, 1], [0, 1], [0, 1]);
          rhs('<', [0, 1], [0, 1], [0, 2]);
          rhs('<', [0, 1], [0, 2], [0, 1]);
          rhs('<', [0, 1], [0, 2], [0, 2]);
          rhs('<', [0, 2], [0, 1], [0, 1]);
          rhs('<', [0, 2], [0, 1], [0, 2]);
          rhs('<', [0, 2], [0, 2], [0, 1]);
          rhs('<', [0, 2], [0, 2], [0, 2]);
          rhs('<', [0, 2], [0, 1], [1, 2]);
          rhs('<', [0, 2], [1, 2], [0, 1]);
          rhs('<', [0, 2], [1, 2], [1, 2]);
          rhs('<', [0, 10]);
          rhs('<', [0, 0, 9, 9]);
          rhs('<', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<=', 'imp,imp', [0, 1], [0, 1], [0, 1]);
          lhs('<=', 'imp,lte', [0, 1], [0, 1], [0, 2]);
          lhs('<=', 'imp,imp', [0, 1], [0, 2], [0, 1]);
          lhs('<=', 'imp,lte', [0, 1], [0, 2], [0, 2]);
          lhs('<=', 'imp,imp', [0, 2], [0, 1], [0, 1]);
          lhs('<=', 'imp,lte', [0, 2], [0, 1], [0, 2]);
          lhs('<=', 'imp,imp', [0, 2], [0, 2], [0, 1]);
          lhs('<=', 'imp,lte', [0, 2], [0, 2], [0, 2]);
          lhs('<=', 'imp,lte', [0, 2], [0, 1], [1, 2]);
          lhs('<=', [0, 2], [1, 2], [0, 1]);
          lhs('<=', [0, 2], [1, 2], [1, 2]);
          lhs('<=', 'imp,lte', [0, 10]);
          lhs('<=', 'imp,imp', [0, 0, 9, 9]);
          lhs('<=', 'imp,imp', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<=', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<=', 'imp,imp', [0, 1], [0, 1], [0, 1]);
          rhs('<=', 'imp,imp', [0, 1], [0, 1], [0, 2]);
          rhs('<=', 'imp,imp', [0, 1], [0, 2], [0, 1]);
          rhs('<=', 'imp,imp', [0, 1], [0, 2], [0, 2]);
          rhs('<=', 'imp,lte', [0, 2], [0, 1], [0, 1]);
          rhs('<=', 'imp,lte', [0, 2], [0, 1], [0, 2]);
          rhs('<=', 'imp,lte', [0, 2], [0, 2], [0, 1]);
          rhs('<=', 'imp,lte', [0, 2], [0, 2], [0, 2]);
          rhs('<=', [0, 2], [0, 1], [1, 2]);
          rhs('<=', [0, 2], [1, 2], [0, 1]);
          rhs('<=', [0, 2], [1, 2], [1, 2]);
          rhs('<=', 'imp,lte', [0, 10]);
          rhs('<=', 'imp,imp', [0, 0, 9, 9]);
          rhs('<=', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<=', 'imp,imp', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!&', 'imp,nall', [0, 1], [0, 1], [0, 1]);
          both('!&', 'imp,nall', [0, 1], [0, 1], [0, 2]);
          both('!&', 'imp,nall', [0, 1], [0, 2], [0, 1]);
          both('!&', 'imp,nall', [0, 1], [0, 2], [0, 2]);
          both('!&', 'imp,nall', [0, 2], [0, 1], [0, 1]);
          both('!&', 'imp,nall', [0, 2], [0, 1], [0, 2]);
          both('!&', 'imp,nall', [0, 2], [0, 2], [0, 1]);
          both('!&', 'imp,nall', [0, 2], [0, 2], [0, 2]);
          both('!&', [0, 2], [0, 1], [1, 2]);
          both('!&', [0, 2], [1, 2], [0, 1]);
          both('!&', 'reject', [0, 2], [1, 2], [1, 2]);
          both('!&', 'imp,nall', [0, 10]);
          both('!&', 'imp,nall', [0, 0, 9, 9]);
          both('!&', 'imp,nall', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!&', 'imp,nall', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('!->', [0, 1], [0, 1], [0, 1]);
          lhs('!->', [0, 1], [0, 1], [0, 2]);
          lhs('!->', [0, 1], [0, 2], [0, 1]);
          lhs('!->', [0, 1], [0, 2], [0, 2]);
          lhs('!->', [0, 2], [0, 1], [0, 1]);
          lhs('!->', [0, 2], [0, 1], [0, 2]);
          lhs('!->', [0, 2], [0, 2], [0, 1]);
          lhs('!->', [0, 2], [0, 2], [0, 2]);
          lhs('!->', 'reject', [0, 2], [0, 1], [1, 2]);
          lhs('!->', [0, 2], [1, 2], [0, 1]);
          lhs('!->', 'reject', [0, 2], [1, 2], [1, 2]);
          lhs('!->', [0, 10]);
          lhs('!->', [0, 0, 9, 9]);
          lhs('!->', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('!->', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('!->', [0, 1], [0, 1], [0, 1]);
          rhs('!->', [0, 1], [0, 1], [0, 2]);
          rhs('!->', [0, 1], [0, 2], [0, 1]);
          rhs('!->', [0, 1], [0, 2], [0, 2]);
          rhs('!->', [0, 2], [0, 1], [0, 1]);
          rhs('!->', [0, 2], [0, 1], [0, 2]);
          rhs('!->', [0, 2], [0, 2], [0, 1]);
          rhs('!->', [0, 2], [0, 2], [0, 2]);
          rhs('!->', [0, 2], [0, 1], [1, 2]);
          rhs('!->', 'reject', [0, 2], [1, 2], [0, 1]);
          rhs('!->', 'reject', [0, 2], [1, 2], [1, 2]);
          rhs('!->', [0, 10]);
          rhs('!->', [0, 0, 9, 9]);
          rhs('!->', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('!->', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!|', [0, 1], [0, 1], [0, 1]);
          both('!|', [0, 1], [0, 1], [0, 2]);
          both('!|', [0, 1], [0, 2], [0, 1]);
          both('!|', [0, 1], [0, 2], [0, 2]);
          both('!|', [0, 2], [0, 1], [0, 1]);
          both('!|', [0, 2], [0, 1], [0, 2]);
          both('!|', [0, 2], [0, 2], [0, 1]);
          both('!|', [0, 2], [0, 2], [0, 2]);
          both('!|', 'reject', [0, 2], [0, 1], [1, 2]);
          both('!|', 'reject', [0, 2], [1, 2], [0, 1]);
          both('!|', 'reject', [0, 2], [1, 2], [1, 2]);
          both('!|', [0, 10]);
          both('!|', [0, 0, 9, 9]);
          both('!|', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!|', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('==', 'imp', [0, 1], [0, 1], [0, 1]);
          both('==', 'imp', [0, 1], [0, 1], [0, 2]);
          both('==', 'imp', [0, 1], [0, 2], [0, 1]);
          both('==', 'imp', [0, 1], [0, 2], [0, 2]);
          both('==', 'imp', [0, 2], [0, 1], [0, 1]);
          both('==', 'imp', [0, 2], [0, 1], [0, 2]);
          both('==', 'imp', [0, 2], [0, 2], [0, 1]);
          both('==', 'imp', [0, 2], [0, 2], [0, 2]);
          both('==', [0, 2], [0, 1], [1, 2]);
          both('==', [0, 2], [1, 2], [0, 1]);
          both('==', [0, 2], [1, 2], [1, 2]);
          both('==', 'imp', [0, 10]);
          both('==', 'imp', [0, 0, 9, 9]);
          both('==', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('==', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!^', 'imp', [0, 1], [0, 1], [0, 1]);
          both('!^', 'imp', [0, 1], [0, 1], [0, 2]);
          both('!^', 'imp', [0, 1], [0, 2], [0, 1]);
          both('!^', 'imp', [0, 1], [0, 2], [0, 2]);
          both('!^', 'imp', [0, 2], [0, 1], [0, 1]);
          both('!^', 'imp', [0, 2], [0, 1], [0, 2]);
          both('!^', 'imp', [0, 2], [0, 2], [0, 1]);
          both('!^', 'imp', [0, 2], [0, 2], [0, 2]);
          both('!^', [0, 2], [0, 1], [1, 2]);
          both('!^', [0, 2], [1, 2], [0, 1]);
          both('!^', [0, 2], [1, 2], [1, 2]);
          both('!^', 'imp', [0, 10]);
          both('!^', 'imp', [0, 0, 9, 9]);
          both('!^', 'imp', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!^', 'imp', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('^', 'nall', [0, 1], [0, 1], [0, 1]);
          both('^', 'nall', [0, 1], [0, 1], [0, 2]);
          both('^', 'nall', [0, 1], [0, 2], [0, 1]);
          both('^', 'nall', [0, 1], [0, 2], [0, 2]);
          both('^', 'nall', [0, 2], [0, 1], [0, 1]);
          both('^', 'nall', [0, 2], [0, 1], [0, 2]);
          both('^', 'nall', [0, 2], [0, 2], [0, 1]);
          both('^', 'nall', [0, 2], [0, 2], [0, 2]);
          both('^', [0, 2], [0, 1], [1, 2]);
          both('^', [0, 2], [1, 2], [0, 1]);
          both('^', 'reject', [0, 2], [1, 2], [1, 2]);
          both('^', 'nall', [0, 10]);
          both('^', 'nall', [0, 0, 9, 9]);
          both('^', 'nall', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('^', 'nall', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
        });

        describe('ternary with shared arg', function() {

          let both = testBinaryTernarySharedArgs.bind(undefined, '->', 'rhs', ''); // A & B, R = A @ C  and  A & B, R = C @ A
          let lhs = testBinaryTernarySharedArgs.bind(undefined, '->', 'rhs', 'lhs'); // A & B, R = A @ C
          let rhs = testBinaryTernarySharedArgs.bind(undefined, '->', 'rhs', 'rhs'); // A & B, R = C @ A

          // A & B, R = A &? C
          both('&?', 'imp,isall', [0, 1], [0, 1], [0, 1], [0, 1]);
          both('&?', 'imp,isall', [0, 1], [0, 1], [0, 1], [0, 2]);
          both('&?', 'imp,isall', [0, 1], [0, 1], [0, 2], [0, 2]);
          both('&?', 'imp,isall', [0, 1], [0, 2], [0, 2], [0, 2]);
          both('&?', 'imp,isall', [0, 2], [0, 1], [0, 1], [0, 1]);
          both('&?', 'imp,isall', [0, 2], [0, 1], [0, 1], [0, 2]);
          both('&?', 'imp,isall', [0, 2], [0, 1], [0, 2], [0, 2]);
          both('&?', 'imp,isall', [0, 2], [0, 2], [0, 2], [0, 2]);
          both('&?', [0, 2], [1, 2], [0, 1], [0, 1]);
          both('&?', [0, 2], [1, 2], [1, 2], [0, 1]);
          both('&?', [0, 2], [1, 2], [1, 2], [1, 2]);
          both('&?', 'imp,isall', [0, 1], [0, 10]);
          both('&?', 'imp,isall', [0, 1], [0, 0, 9, 9]);
          both('&?', 'imp,isall', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('&?', 'imp,isall', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('==?', 'imp,issame', [0, 1], [0, 1], [0, 1], [0, 1]);
          both('==?', 'imp,issame', [0, 1], [0, 1], [0, 1], [0, 2]);
          both('==?', 'imp,issame', [0, 1], [0, 1], [0, 2], [0, 2]);
          both('==?', 'imp,issame', [0, 1], [0, 2], [0, 2], [0, 2]);
          both('==?', 'imp,issame', [0, 2], [0, 1], [0, 1], [0, 1]);
          both('==?', 'imp,issame', [0, 2], [0, 1], [0, 1], [0, 2]);
          both('==?', 'imp,issame', [0, 2], [0, 1], [0, 2], [0, 2]);
          both('==?', 'imp,issame', [0, 2], [0, 2], [0, 2], [0, 2]);
          both('==?', 'issame', [0, 2], [1, 2], [0, 1], [0, 1]);
          both('==?', 'issame', [0, 2], [1, 2], [1, 2], [0, 1]);
          both('==?', 'issame', [0, 2], [1, 2], [1, 2], [1, 2]);
          both('==?', 'imp,issame', [0, 1], [0, 10]);
          both('==?', 'imp,issame', [0, 1], [0, 0, 9, 9]);
          both('==?', 'imp,issame', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('==?', 'imp,issame', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!=?', 'imp,isdiff', [0, 1], [0, 1], [0, 1], [0, 1]);
          both('!=?', 'imp,isdiff', [0, 1], [0, 1], [0, 1], [0, 2]);
          both('!=?', 'imp,isdiff', [0, 1], [0, 1], [0, 2], [0, 2]);
          both('!=?', 'imp,isdiff', [0, 1], [0, 2], [0, 2], [0, 2]);
          both('!=?', 'imp,isdiff', [0, 2], [0, 1], [0, 1], [0, 1]);
          both('!=?', 'imp,isdiff', [0, 2], [0, 1], [0, 1], [0, 2]);
          both('!=?', 'imp,isdiff', [0, 2], [0, 1], [0, 2], [0, 2]);
          both('!=?', 'imp,isdiff', [0, 2], [0, 2], [0, 2], [0, 2]);
          both('!=?', 'isdiff', [0, 2], [1, 2], [0, 1], [0, 1]);
          both('!=?', 'isdiff', [0, 2], [1, 2], [1, 2], [0, 1]);
          both('!=?', 'isdiff', [0, 2], [1, 2], [1, 2], [1, 2]);
          both('!=?', 'imp,isdiff', [0, 1], [0, 10]);
          both('!=?', 'imp,isdiff', [0, 1], [0, 0, 9, 9]);
          both('!=?', 'imp,isdiff', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!=?', 'imp,isdiff', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<?', 'imp,islt', [0, 1], [0, 1], [0, 1], [0, 1]);
          lhs('<?', 'imp,islt', [0, 1], [0, 1], [0, 1], [0, 2]);
          lhs('<?', 'imp,islt', [0, 1], [0, 1], [0, 2], [0, 2]);
          lhs('<?', 'imp,islt', [0, 1], [0, 2], [0, 2], [0, 2]);
          lhs('<?', 'imp,islt', [0, 2], [0, 1], [0, 1], [0, 1]);
          lhs('<?', 'imp,islt', [0, 2], [0, 1], [0, 1], [0, 2]);
          lhs('<?', 'imp,islt', [0, 2], [0, 1], [0, 2], [0, 2]);
          lhs('<?', 'imp,islt', [0, 2], [0, 2], [0, 2], [0, 2]);
          lhs('<?', [0, 2], [1, 2], [0, 1], [0, 1]);
          lhs('<?', [0, 2], [1, 2], [1, 2], [0, 1]);
          lhs('<?', 'islt', [0, 2], [1, 2], [1, 2], [1, 2]);
          lhs('<?', 'imp,islt', [0, 1], [0, 10]);
          lhs('<?', 'imp,islt', [0, 1], [0, 0, 9, 9]);
          lhs('<?', 'imp,islt', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<?', 'imp,islt', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<?', 'imp,islt', [0, 1], [0, 1], [0, 1], [0, 1]);
          rhs('<?', 'imp,islt', [0, 1], [0, 1], [0, 1], [0, 2]);
          rhs('<?', 'imp,islt', [0, 1], [0, 1], [0, 2], [0, 2]);
          rhs('<?', 'imp,islt', [0, 1], [0, 2], [0, 2], [0, 2]);
          rhs('<?', 'imp,islt', [0, 2], [0, 1], [0, 1], [0, 1]);
          rhs('<?', 'imp,islt', [0, 2], [0, 1], [0, 1], [0, 2]);
          rhs('<?', 'imp,islt', [0, 2], [0, 1], [0, 2], [0, 2]);
          rhs('<?', 'imp,islt', [0, 2], [0, 2], [0, 2], [0, 2]);
          rhs('<?', 'islt', [0, 2], [1, 2], [0, 1], [0, 1]);
          rhs('<?', 'islt', [0, 2], [1, 2], [1, 2], [0, 1]);
          rhs('<?', 'islt', [0, 2], [1, 2], [1, 2], [1, 2]);
          rhs('<?', 'imp,islt', [0, 1], [0, 10]);
          rhs('<?', 'imp,islt', [0, 1], [0, 0, 9, 9]);
          rhs('<?', 'imp,islt', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<?', 'imp,islt', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<=?', 'imp,islte', [0, 1], [0, 1], [0, 1], [0, 1]);
          lhs('<=?', 'imp,islte', [0, 1], [0, 1], [0, 1], [0, 2]);
          lhs('<=?', 'imp,islte', [0, 1], [0, 1], [0, 2], [0, 2]);
          lhs('<=?', 'imp,islte', [0, 1], [0, 2], [0, 2], [0, 2]);
          lhs('<=?', 'imp,islte', [0, 2], [0, 1], [0, 1], [0, 1]);
          lhs('<=?', 'imp,islte', [0, 2], [0, 1], [0, 1], [0, 2]);
          lhs('<=?', 'imp,islte', [0, 2], [0, 1], [0, 2], [0, 2]);
          lhs('<=?', 'imp,islte', [0, 2], [0, 2], [0, 2], [0, 2]);
          lhs('<=?', 'islte', [0, 2], [1, 2], [0, 1], [0, 1]);
          lhs('<=?', 'islte', [0, 2], [1, 2], [1, 2], [0, 1]);
          lhs('<=?', 'islte', [0, 2], [1, 2], [1, 2], [1, 2]);
          lhs('<=?', 'imp,islte', [0, 1], [0, 10]);
          lhs('<=?', 'imp,islte', [0, 1], [0, 0, 9, 9]);
          lhs('<=?', 'imp,islte', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<=?', 'imp,islte', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<=?', 'imp,islte', [0, 1], [0, 1], [0, 1], [0, 1]);
          rhs('<=?', 'imp,islte', [0, 1], [0, 1], [0, 1], [0, 2]);
          rhs('<=?', 'imp,islte', [0, 1], [0, 1], [0, 2], [0, 2]);
          rhs('<=?', 'imp,islte', [0, 1], [0, 2], [0, 2], [0, 2]);
          rhs('<=?', 'imp,islte', [0, 2], [0, 1], [0, 1], [0, 1]);
          rhs('<=?', 'imp,islte', [0, 2], [0, 1], [0, 1], [0, 2]);
          rhs('<=?', 'imp,islte', [0, 2], [0, 1], [0, 2], [0, 2]);
          rhs('<=?', 'imp,islte', [0, 2], [0, 2], [0, 2], [0, 2]);
          rhs('<=?', [0, 2], [1, 2], [0, 1], [0, 1]);
          rhs('<=?', [0, 2], [1, 2], [1, 2], [0, 1]);
          rhs('<=?', 'islte', [0, 2], [1, 2], [1, 2], [1, 2]);
          rhs('<=?', 'imp,islte', [0, 1], [0, 10]);
          rhs('<=?', 'imp,islte', [0, 1], [0, 0, 9, 9]);
          rhs('<=?', 'imp,islte', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<=?', 'imp,islte', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!&?', 'imp,isnall', [0, 1], [0, 1], [0, 1], [0, 1]);
          both('!&?', 'imp,isnall', [0, 1], [0, 1], [0, 1], [0, 2]);
          both('!&?', 'imp,isnall', [0, 1], [0, 1], [0, 2], [0, 2]);
          both('!&?', 'imp,isnall', [0, 1], [0, 2], [0, 2], [0, 2]);
          both('!&?', 'imp,isnall', [0, 2], [0, 1], [0, 1], [0, 1]);
          both('!&?', 'imp,isnall', [0, 2], [0, 1], [0, 1], [0, 2]);
          both('!&?', 'imp,isnall', [0, 2], [0, 1], [0, 2], [0, 2]);
          both('!&?', 'imp,isnall', [0, 2], [0, 2], [0, 2], [0, 2]);
          both('!&?', 'isnall', [0, 2], [1, 2], [0, 1], [0, 1]);
          both('!&?', 'isnall', [0, 2], [1, 2], [1, 2], [0, 1]);
          both('!&?', [0, 2], [1, 2], [1, 2], [1, 2]);
          both('!&?', 'imp,isnall', [0, 1], [0, 10]);
          both('!&?', 'imp,isnall', [0, 1], [0, 0, 9, 9]);
          both('!&?', 'imp,isnall', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!&?', 'imp,isnall', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('|?', 'imp,issome', [0, 1], [0, 1], [0, 1], [0, 1]);
          both('|?', 'imp,issome', [0, 1], [0, 1], [0, 1], [0, 2]);
          both('|?', 'imp,issome', [0, 1], [0, 1], [0, 2], [0, 2]);
          both('|?', 'imp,issome', [0, 1], [0, 2], [0, 2], [0, 2]);
          both('|?', 'imp,issome', [0, 2], [0, 1], [0, 1], [0, 1]);
          both('|?', 'imp,issome', [0, 2], [0, 1], [0, 1], [0, 2]);
          both('|?', 'imp,issome', [0, 2], [0, 1], [0, 2], [0, 2]);
          both('|?', 'imp,issome', [0, 2], [0, 2], [0, 2], [0, 2]);
          both('|?', [0, 2], [1, 2], [0, 1], [0, 1]);
          both('|?', [0, 2], [1, 2], [1, 2], [0, 1]);
          both('|?', [0, 2], [1, 2], [1, 2], [1, 2]);
          both('|?', 'imp,issome', [0, 1], [0, 10]);
          both('|?', 'imp,issome', [0, 1], [0, 0, 9, 9]);
          both('|?', 'imp,issome', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('|?', 'imp,issome', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!|?', 'imp,isnone', [0, 1], [0, 1], [0, 1], [0, 1]);
          both('!|?', 'imp,isnone', [0, 1], [0, 1], [0, 1], [0, 2]);
          both('!|?', 'imp,isnone', [0, 1], [0, 1], [0, 2], [0, 2]);
          both('!|?', 'imp,isnone', [0, 1], [0, 2], [0, 2], [0, 2]);
          both('!|?', 'imp,isnone', [0, 2], [0, 1], [0, 1], [0, 1]);
          both('!|?', 'imp,isnone', [0, 2], [0, 1], [0, 1], [0, 2]);
          both('!|?', 'imp,isnone', [0, 2], [0, 1], [0, 2], [0, 2]);
          both('!|?', 'imp,isnone', [0, 2], [0, 2], [0, 2], [0, 2]);
          both('!|?', [0, 2], [1, 2], [0, 1], [0, 1]);
          both('!|?', [0, 2], [1, 2], [1, 2], [0, 1]);
          both('!|?', [0, 2], [1, 2], [1, 2], [1, 2]);
          both('!|?', 'imp,isnone', [0, 1], [0, 10]);
          both('!|?', 'imp,isnone', [0, 1], [0, 0, 9, 9]);
          both('!|?', 'imp,isnone', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!|?', 'imp,isnone', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('+', 'imp,sum', [0, 1], [0, 1], [0, 1], [0, 1]);
          both('+', 'imp,sum', [0, 1], [0, 1], [0, 1], [0, 2]);
          both('+', 'imp,sum', [0, 1], [0, 1], [0, 2], [0, 2]);
          both('+', 'imp,sum', [0, 1], [0, 2], [0, 2], [0, 2]);
          both('+', 'imp,issome', [0, 2], [0, 1], [0, 1], [0, 1]);
          both('+', 'imp,sum', [0, 2], [0, 1], [0, 1], [0, 2]);
          both('+', 'imp,sum', [0, 2], [0, 1], [0, 2], [0, 2]);
          both('+', 'imp,sum', [0, 2], [0, 2], [0, 2], [0, 2]);
          both('+', 'sum', [0, 2], [1, 2], [0, 1], [0, 1]);
          both('+', 'sum', [0, 2], [1, 2], [1, 2], [0, 1]);
          both('+', [0, 2], [1, 2], [1, 2], [1, 2]);
          both('+', 'imp,issome', [0, 20], [0, 1], [0, 1], [0, 1]);
          both('+', 'imp,issome', [0, 20], [0, 10]);
          both('+', 'imp,issome', [0, 20], [0, 0, 9, 9]);
          both('+', 'imp,issome', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('+', 'imp,issome', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('-', 'imp,minus', [0, 1], [0, 1], [0, 1], [0, 1]);
          lhs('-', 'imp,minus', [0, 1], [0, 1], [0, 1], [0, 2]);
          lhs('-', 'imp,minus', [0, 1], [0, 1], [0, 2], [0, 2]);
          lhs('-', 'imp,minus', [0, 1], [0, 2], [0, 2], [0, 2]);
          lhs('-', 'imp,minus', [0, 2], [0, 1], [0, 1], [0, 1]);
          lhs('-', 'imp,minus', [0, 2], [0, 1], [0, 1], [0, 2]);
          lhs('-', 'imp,minus', [0, 2], [0, 1], [0, 2], [0, 2]);
          lhs('-', 'imp,minus', [0, 2], [0, 2], [0, 2], [0, 2]);
          lhs('-', 'minus', [0, 2], [1, 2], [0, 1], [0, 1]);
          lhs('-', 'minus', [0, 2], [1, 2], [1, 2], [0, 1]);
          lhs('-', 'minus', [0, 2], [1, 2], [1, 2], [1, 2]);
          lhs('-', 'imp,minus', [0, 20], [0, 1], [0, 1], [0, 1]);
          lhs('-', 'imp,minus', [0, 20], [0, 10]);
          lhs('-', 'imp,minus', [0, 20], [0, 0, 9, 9]);
          lhs('-', 'imp', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('-', 'imp,minus', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('-', 'imp,minus', [0, 1], [0, 1], [0, 1], [0, 1]);
          rhs('-', 'imp,minus', [0, 1], [0, 1], [0, 1], [0, 2]);
          rhs('-', 'imp,minus', [0, 1], [0, 1], [0, 2], [0, 2]);
          rhs('-', 'imp,minus', [0, 1], [0, 2], [0, 2], [0, 2]);
          rhs('-', 'imp,minus', [0, 2], [0, 1], [0, 1], [0, 1]);
          rhs('-', 'imp,minus', [0, 2], [0, 1], [0, 1], [0, 2]);
          rhs('-', 'imp,minus', [0, 2], [0, 1], [0, 2], [0, 2]);
          rhs('-', 'imp,minus', [0, 2], [0, 2], [0, 2], [0, 2]);
          rhs('-', [0, 2], [1, 2], [0, 1], [0, 1]);
          rhs('-', [0, 2], [1, 2], [1, 2], [0, 1]);
          rhs('-', 'minus', [0, 2], [1, 2], [1, 2], [1, 2]);
          rhs('-', 'imp,minus', [0, 20], [0, 1], [0, 1], [0, 1]);
          rhs('-', 'imp,minus', [0, 20], [0, 10]);
          rhs('-', 'imp,minus', [0, 20], [0, 0, 9, 9]);
          rhs('-', 'imp,minus', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('-', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('*', 'imp,product', [0, 1], [0, 1], [0, 1], [0, 1]);
          both('*', 'imp,product', [0, 1], [0, 1], [0, 1], [0, 2]);
          both('*', 'imp,product', [0, 1], [0, 1], [0, 2], [0, 2]);
          both('*', 'imp,product', [0, 1], [0, 2], [0, 2], [0, 2]);
          both('*', 'imp,product', [0, 2], [0, 1], [0, 1], [0, 1]);
          both('*', 'imp,product', [0, 2], [0, 1], [0, 1], [0, 2]);
          both('*', 'imp,product', [0, 2], [0, 1], [0, 2], [0, 2]);
          both('*', 'imp,product', [0, 2], [0, 2], [0, 2], [0, 2]);
          both('*', 'product', [0, 2], [1, 2], [0, 1], [0, 1]);
          both('*', 'product', [0, 2], [1, 2], [1, 2], [0, 1]);
          both('*', 'product', [0, 2], [1, 2], [1, 2], [1, 2]);
          both('*', 'imp,product', [0, 100], [0, 1], [0, 1], [0, 1]);
          both('*', 'imp,product', [0, 100], [0, 10]);
          both('*', 'imp,product', [0, 100], [0, 0, 9, 9]);
          both('*', 'imp,product', [0, 100], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('*', 'imp,product', [0, 100], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('/', 'div,imp', [0, 1], [0, 1], [0, 1], [0, 1]);
          lhs('/', 'div,imp', [0, 1], [0, 1], [0, 1], [0, 2]);
          lhs('/', 'div,imp', [0, 1], [0, 1], [0, 2], [0, 2]);
          lhs('/', 'div,imp', [0, 1], [0, 2], [0, 2], [0, 2]);
          lhs('/', 'div,imp', [0, 2], [0, 1], [0, 1], [0, 1]);
          lhs('/', 'div,imp', [0, 2], [0, 1], [0, 1], [0, 2]);
          lhs('/', 'div,imp', [0, 2], [0, 1], [0, 2], [0, 2]);
          lhs('/', 'div,imp', [0, 2], [0, 2], [0, 2], [0, 2]);
          lhs('/', 'div', [0, 2], [1, 2], [0, 1], [0, 1]);
          lhs('/', 'div', [0, 2], [1, 2], [1, 2], [0, 1]);
          lhs('/', 'div', [0, 2], [1, 2], [1, 2], [1, 2]);
          lhs('/', 'div,imp', [0, 20], [0, 1], [0, 1], [0, 1]);
          lhs('/', 'div,imp', [0, 20], [0, 10]);
          lhs('/', 'div,imp', [0, 20], [0, 0, 9, 9]);
          lhs('/', 'div,imp', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('/', 'div,imp', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('/', 'div,imp', [0, 1], [0, 1], [0, 1], [0, 1]);
          rhs('/', 'div,imp', [0, 1], [0, 1], [0, 1], [0, 2]);
          rhs('/', 'div,imp', [0, 1], [0, 1], [0, 2], [0, 2]);
          rhs('/', 'div,imp', [0, 1], [0, 2], [0, 2], [0, 2]);
          rhs('/', 'div,imp', [0, 2], [0, 1], [0, 1], [0, 1]);
          rhs('/', 'div,imp', [0, 2], [0, 1], [0, 1], [0, 2]);
          rhs('/', 'div,imp', [0, 2], [0, 1], [0, 2], [0, 2]);
          rhs('/', 'div,imp', [0, 2], [0, 2], [0, 2], [0, 2]);
          rhs('/', 'div', [0, 2], [1, 2], [0, 1], [0, 1]);
          rhs('/', 'div', [0, 2], [1, 2], [1, 2], [0, 1]);
          rhs('/', 'div', [0, 2], [1, 2], [1, 2], [1, 2]);
          rhs('/', 'div,imp', [0, 20], [0, 1], [0, 1], [0, 1]);
          rhs('/', 'div,imp', [0, 20], [0, 10]);
          rhs('/', 'div,imp', [0, 20], [0, 0, 9, 9]);
          rhs('/', 'div,imp', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('/', 'div,imp', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
        });

        describe('ternary with shared result', function() {

          let both = testBinaryTernarySharedResult.bind(undefined, '->', 'rhs', ''); // A & B, R = A @ C  and  A & B, R = C @ A
          let lhs = testBinaryTernarySharedResult.bind(undefined, '->', 'rhs', 'lhs'); // A & R, R = B @ C
          let rhs = testBinaryTernarySharedResult.bind(undefined, '->', 'rhs', 'rhs'); // A & R, R = C @ B

          // A -> B, R = A &? C
          both('&?', 'imp,imp', [0, 1], [0, 1], [0, 1], [0, 1]);
          both('&?', 'imp,imp', [0, 1], [0, 1], [0, 1], [0, 2]);
          both('&?', 'imp,isall', [0, 1], [0, 1], [0, 2], [0, 2]);
          both('&?', 'imp,isall', [0, 1], [0, 2], [0, 2], [0, 2]);
          both('&?', 'imp,isall', [0, 2], [0, 1], [0, 1], [0, 1]);
          both('&?', 'imp,isall', [0, 2], [0, 1], [0, 1], [0, 2]);
          both('&?', 'imp,isall', [0, 2], [0, 1], [0, 2], [0, 2]);
          both('&?', 'imp,isall', [0, 2], [0, 2], [0, 2], [0, 2]);
          both('&?', 'imp', [0, 2], [1, 2], [0, 1], [0, 1]);
          both('&?', [0, 2], [1, 2], [1, 2], [0, 1]);
          both('&?', [0, 2], [1, 2], [1, 2], [1, 2]);
          both('&?', 'imp,isall', [0, 1], [0, 10]);
          both('&?', 'imp,isall', [0, 1], [0, 0, 9, 9]);
          both('&?', 'imp,isall', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('&?', 'imp,isall', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('==?', 'imp,issame', [0, 1], [0, 1], [0, 1], [0, 1]);
          both('==?', 'imp,issame', [0, 1], [0, 1], [0, 1], [0, 2]);
          both('==?', 'imp,issame', [0, 1], [0, 1], [0, 2], [0, 2]);
          both('==?', 'imp,issame', [0, 1], [0, 2], [0, 2], [0, 2]);
          both('==?', 'imp,issame', [0, 2], [0, 1], [0, 1], [0, 1]);
          both('==?', 'imp,issame', [0, 2], [0, 1], [0, 1], [0, 2]);
          both('==?', 'imp,issame', [0, 2], [0, 1], [0, 2], [0, 2]);
          both('==?', 'imp,issame', [0, 2], [0, 2], [0, 2], [0, 2]);
          both('==?', 'imp,issame', [0, 2], [1, 2], [0, 1], [0, 1]);
          both('==?', [0, 2], [1, 2], [1, 2], [0, 1]);
          both('==?', [0, 2], [1, 2], [1, 2], [1, 2]);
          both('==?', 'imp,issame', [0, 1], [0, 10]);
          both('==?', 'imp,issame', [0, 1], [0, 0, 9, 9]);
          both('==?', 'imp,issame', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('==?', 'imp,issame', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!=?', 'imp,isdiff', [0, 1], [0, 1], [0, 1], [0, 1]);
          both('!=?', 'imp,isdiff', [0, 1], [0, 1], [0, 1], [0, 2]);
          both('!=?', 'imp,isdiff', [0, 1], [0, 1], [0, 2], [0, 2]);
          both('!=?', 'imp,isdiff', [0, 1], [0, 2], [0, 2], [0, 2]);
          both('!=?', 'imp,isdiff', [0, 2], [0, 1], [0, 1], [0, 1]);
          both('!=?', 'imp,isdiff', [0, 2], [0, 1], [0, 1], [0, 2]);
          both('!=?', 'imp,isdiff', [0, 2], [0, 1], [0, 2], [0, 2]);
          both('!=?', 'imp,isdiff', [0, 2], [0, 2], [0, 2], [0, 2]);
          both('!=?', 'imp,isdiff', [0, 2], [1, 2], [0, 1], [0, 1]);
          both('!=?', 'diff', [0, 2], [1, 2], [1, 2], [0, 1]);
          both('!=?', 'diff', [0, 2], [1, 2], [1, 2], [1, 2]);
          both('!=?', 'imp,isdiff', [0, 1], [0, 10]);
          both('!=?', 'imp,isdiff', [0, 1], [0, 0, 9, 9]);
          both('!=?', 'imp,isdiff', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!=?', 'imp,isdiff', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<?', 'imp,islt', [0, 1], [0, 1], [0, 1], [0, 1]);
          lhs('<?', 'imp,islt', [0, 1], [0, 1], [0, 1], [0, 2]);
          lhs('<?', 'imp,islt', [0, 1], [0, 1], [0, 2], [0, 2]);
          lhs('<?', 'imp,islt', [0, 1], [0, 2], [0, 2], [0, 2]);
          lhs('<?', 'imp,islt', [0, 2], [0, 1], [0, 1], [0, 1]);
          lhs('<?', 'imp,islt', [0, 2], [0, 1], [0, 1], [0, 2]);
          lhs('<?', 'imp,islt', [0, 2], [0, 1], [0, 2], [0, 2]);
          lhs('<?', 'imp,islt', [0, 2], [0, 2], [0, 2], [0, 2]);
          lhs('<?', [0, 2], [1, 2], [0, 1], [0, 1]);
          lhs('<?', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
          lhs('<?', [0, 2], [1, 2], [1, 2], [1, 2]);
          lhs('<?', 'imp,islt', [0, 1], [0, 10]);
          lhs('<?', 'imp,islt', [0, 1], [0, 0, 9, 9]);
          lhs('<?', 'imp,islt', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<?', 'imp,islt', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<?', 'imp,islt', [0, 1], [0, 1], [0, 1], [0, 1]);
          rhs('<?', 'imp,islt', [0, 1], [0, 1], [0, 1], [0, 2]);
          rhs('<?', 'imp,islt', [0, 1], [0, 1], [0, 2], [0, 2]);
          rhs('<?', 'imp,islt', [0, 1], [0, 2], [0, 2], [0, 2]);
          rhs('<?', 'imp,islt', [0, 2], [0, 1], [0, 1], [0, 1]);
          rhs('<?', 'imp,islt', [0, 2], [0, 1], [0, 1], [0, 2]);
          rhs('<?', 'imp,islt', [0, 2], [0, 1], [0, 2], [0, 2]);
          rhs('<?', 'imp,islt', [0, 2], [0, 2], [0, 2], [0, 2]);
          rhs('<?', 'imp,islt', [0, 2], [1, 2], [0, 1], [0, 1]);
          rhs('<?', 'lt', [0, 2], [1, 2], [1, 2], [0, 1]);
          rhs('<?', [0, 2], [1, 2], [1, 2], [1, 2]);
          rhs('<?', 'imp,islt', [0, 1], [0, 10]);
          rhs('<?', 'imp,islt', [0, 1], [0, 0, 9, 9]);
          rhs('<?', 'imp,islt', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<?', 'imp,islt', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<=?', 'imp,islte', [0, 1], [0, 1], [0, 1], [0, 1]);
          lhs('<=?', 'imp,islte', [0, 1], [0, 1], [0, 1], [0, 2]);
          lhs('<=?', 'imp,islte', [0, 1], [0, 1], [0, 2], [0, 2]);
          lhs('<=?', 'imp,islte', [0, 1], [0, 2], [0, 2], [0, 2]);
          lhs('<=?', 'imp,islte', [0, 2], [0, 1], [0, 1], [0, 1]);
          lhs('<=?', 'imp,islte', [0, 2], [0, 1], [0, 1], [0, 2]);
          lhs('<=?', 'imp,islte', [0, 2], [0, 1], [0, 2], [0, 2]);
          lhs('<=?', 'imp,islte', [0, 2], [0, 2], [0, 2], [0, 2]);
          lhs('<=?', 'imp,islte', [0, 2], [1, 2], [0, 1], [0, 1]);
          lhs('<=?', [0, 2], [1, 2], [1, 2], [0, 1]);
          lhs('<=?', 'lte', [0, 2], [1, 2], [1, 2], [1, 2]);
          lhs('<=?', 'imp,islte', [0, 1], [0, 10]);
          lhs('<=?', 'imp,islte', [0, 1], [0, 0, 9, 9]);
          lhs('<=?', 'imp,islte', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<=?', 'imp,islte', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<=?', 'imp,islte', [0, 1], [0, 1], [0, 1], [0, 1]);
          rhs('<=?', 'imp,islte', [0, 1], [0, 1], [0, 1], [0, 2]);
          rhs('<=?', 'imp,islte', [0, 1], [0, 1], [0, 2], [0, 2]);
          rhs('<=?', 'imp,islte', [0, 1], [0, 2], [0, 2], [0, 2]);
          rhs('<=?', 'imp,islte', [0, 2], [0, 1], [0, 1], [0, 1]);
          rhs('<=?', 'imp,islte', [0, 2], [0, 1], [0, 1], [0, 2]);
          rhs('<=?', 'imp,islte', [0, 2], [0, 1], [0, 2], [0, 2]);
          rhs('<=?', 'imp,islte', [0, 2], [0, 2], [0, 2], [0, 2]);
          rhs('<=?', [0, 2], [1, 2], [0, 1], [0, 1]);
          rhs('<=?', [0, 2], [1, 2], [1, 2], [0, 1]);
          rhs('<=?', 'lte', [0, 2], [1, 2], [1, 2], [1, 2]);
          rhs('<=?', 'imp,islte', [0, 1], [0, 10]);
          rhs('<=?', 'imp,islte', [0, 1], [0, 0, 9, 9]);
          rhs('<=?', 'imp,islte', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<=?', 'imp,islte', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!&?', 'imp,isnall', [0, 1], [0, 1], [0, 1], [0, 1]);
          both('!&?', 'imp,isnall', [0, 1], [0, 1], [0, 1], [0, 2]);
          both('!&?', 'imp,isnall', [0, 1], [0, 1], [0, 2], [0, 2]);
          both('!&?', 'imp,isnall', [0, 1], [0, 2], [0, 2], [0, 2]);
          both('!&?', 'imp,isnall', [0, 2], [0, 1], [0, 1], [0, 1]);
          both('!&?', 'imp,isnall', [0, 2], [0, 1], [0, 1], [0, 2]);
          both('!&?', 'imp,isnall', [0, 2], [0, 1], [0, 2], [0, 2]);
          both('!&?', 'imp,isnall', [0, 2], [0, 2], [0, 2], [0, 2]);
          both('!&?', 'imp,isnall', [0, 2], [1, 2], [0, 1], [0, 1]);
          both('!&?', [0, 2], [1, 2], [1, 2], [0, 1]);
          both('!&?', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
          both('!&?', 'imp,isnall', [0, 1], [0, 10]);
          both('!&?', 'imp,isnall', [0, 1], [0, 0, 9, 9]);
          both('!&?', 'imp,isnall', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!&?', 'imp,isnall', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('|?', 'imp,issome', [0, 1], [0, 1], [0, 1], [0, 1]);
          both('|?', 'imp,issome', [0, 1], [0, 1], [0, 1], [0, 2]);
          both('|?', 'imp,issome', [0, 1], [0, 1], [0, 2], [0, 2]);
          both('|?', 'imp,issome', [0, 1], [0, 2], [0, 2], [0, 2]);
          both('|?', 'imp,issome', [0, 2], [0, 1], [0, 1], [0, 1]);
          both('|?', 'imp,issome', [0, 2], [0, 1], [0, 1], [0, 2]);
          both('|?', 'imp,issome', [0, 2], [0, 1], [0, 2], [0, 2]);
          both('|?', 'imp,issome', [0, 2], [0, 2], [0, 2], [0, 2]);
          both('|?', [0, 2], [1, 2], [0, 1], [0, 1]);
          both('|?', [0, 2], [1, 2], [1, 2], [0, 1]);
          both('|?', [0, 2], [1, 2], [1, 2], [1, 2]);
          both('|?', 'imp,issome', [0, 1], [0, 10]);
          both('|?', 'imp,issome', [0, 1], [0, 0, 9, 9]);
          both('|?', 'imp,issome', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('|?', 'imp,issome', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!|?', 'imp,isnone', [0, 1], [0, 1], [0, 1], [0, 1]);
          both('!|?', 'imp,isnone', [0, 1], [0, 1], [0, 1], [0, 2]);
          both('!|?', 'imp,isnone', [0, 1], [0, 1], [0, 2], [0, 2]);
          both('!|?', 'imp,isnone', [0, 1], [0, 2], [0, 2], [0, 2]);
          both('!|?', 'imp,isnone', [0, 2], [0, 1], [0, 1], [0, 1]);
          both('!|?', 'imp,isnone', [0, 2], [0, 1], [0, 1], [0, 2]);
          both('!|?', 'imp,isnone', [0, 2], [0, 1], [0, 2], [0, 2]);
          both('!|?', 'imp,isnone', [0, 2], [0, 2], [0, 2], [0, 2]);
          both('!|?', [0, 2], [1, 2], [0, 1], [0, 1]);
          both('!|?', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
          both('!|?', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
          both('!|?', 'imp,isnone', [0, 1], [0, 10]);
          both('!|?', 'imp,isnone', [0, 1], [0, 0, 9, 9]);
          both('!|?', 'imp,isnone', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!|?', 'imp,isnone', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('+', 'imp,sum', [0, 1], [0, 1], [0, 1], [0, 1]);
          both('+', 'imp,sum', [0, 1], [0, 1], [0, 1], [0, 2]);
          both('+', 'imp,sum', [0, 1], [0, 1], [0, 2], [0, 2]);
          both('+', 'imp,sum', [0, 1], [0, 2], [0, 2], [0, 2]);
          both('+', 'imp,issome', [0, 2], [0, 1], [0, 1], [0, 1]);
          both('+', 'imp,sum', [0, 2], [0, 1], [0, 1], [0, 2]);
          both('+', 'imp,sum', [0, 2], [0, 1], [0, 2], [0, 2]);
          both('+', 'imp,sum', [0, 2], [0, 2], [0, 2], [0, 2]);
          both('+', 'sum', [0, 2], [1, 2], [0, 1], [0, 1]);
          both('+', 'sum', [0, 2], [1, 2], [1, 2], [0, 1]);
          both('+', [0, 2], [1, 2], [1, 2], [1, 2]);
          both('+', 'imp,issome', [0, 20], [0, 1], [0, 1], [0, 1]);
          both('+', 'imp,issome', [0, 20], [0, 10]);
          both('+', 'imp,issome', [0, 20], [0, 0, 9, 9]);
          both('+', 'imp,issome', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('+', 'imp,issome', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('-', 'imp,minus', [0, 1], [0, 1], [0, 1], [0, 1]);
          lhs('-', 'imp,minus', [0, 1], [0, 1], [0, 1], [0, 2]);
          lhs('-', 'imp,minus', [0, 1], [0, 1], [0, 2], [0, 2]);
          lhs('-', 'imp,minus', [0, 1], [0, 2], [0, 2], [0, 2]);
          lhs('-', 'imp,minus', [0, 2], [0, 1], [0, 1], [0, 1]);
          lhs('-', 'imp,minus', [0, 2], [0, 1], [0, 1], [0, 2]);
          lhs('-', 'imp,minus', [0, 2], [0, 1], [0, 2], [0, 2]);
          lhs('-', 'imp,minus', [0, 2], [0, 2], [0, 2], [0, 2]);
          lhs('-', 'imp,minus', [0, 2], [1, 2], [0, 1], [0, 1]);
          lhs('-', 'minus', [0, 2], [1, 2], [1, 2], [0, 1]);
          lhs('-', [0, 2], [1, 2], [1, 2], [1, 2]);
          lhs('-', 'imp,minus', [0, 20], [0, 1], [0, 1], [0, 1]);
          lhs('-', 'imp,minus', [0, 20], [0, 10]);
          lhs('-', 'imp,minus', [0, 20], [0, 0, 9, 9]);
          lhs('-', 'imp', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('-', 'imp,minus', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('-', 'imp,minus', [0, 1], [0, 1], [0, 1], [0, 1]);
          rhs('-', 'imp,minus', [0, 1], [0, 1], [0, 1], [0, 2]);
          rhs('-', 'imp,minus', [0, 1], [0, 1], [0, 2], [0, 2]);
          rhs('-', 'imp,minus', [0, 1], [0, 2], [0, 2], [0, 2]);
          rhs('-', 'imp,minus', [0, 2], [0, 1], [0, 1], [0, 1]);
          rhs('-', 'imp,minus', [0, 2], [0, 1], [0, 1], [0, 2]);
          rhs('-', 'imp,minus', [0, 2], [0, 1], [0, 2], [0, 2]);
          rhs('-', 'imp,minus', [0, 2], [0, 2], [0, 2], [0, 2]);
          rhs('-', [0, 2], [1, 2], [0, 1], [0, 1]);
          rhs('-', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
          rhs('-', [0, 2], [1, 2], [1, 2], [1, 2]);
          rhs('-', 'imp,minus', [0, 20], [0, 1], [0, 1], [0, 1]);
          rhs('-', 'imp,minus', [0, 20], [0, 10]);
          rhs('-', 'imp,minus', [0, 20], [0, 0, 9, 9]);
          rhs('-', 'imp,minus', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('-', 'imp', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('*', 'imp,product', [0, 1], [0, 1], [0, 1], [0, 1]);
          both('*', 'imp,product', [0, 1], [0, 1], [0, 1], [0, 2]);
          both('*', 'imp,product', [0, 1], [0, 1], [0, 2], [0, 2]);
          both('*', 'imp,product', [0, 1], [0, 2], [0, 2], [0, 2]);
          both('*', 'imp,product', [0, 2], [0, 1], [0, 1], [0, 1]);
          both('*', 'imp,product', [0, 2], [0, 1], [0, 1], [0, 2]);
          both('*', 'imp,product', [0, 2], [0, 1], [0, 2], [0, 2]);
          both('*', 'imp,product', [0, 2], [0, 2], [0, 2], [0, 2]);
          both('*', 'imp,product', [0, 2], [1, 2], [0, 1], [0, 1]);
          both('*', [0, 2], [1, 2], [1, 2], [0, 1]);
          both('*', 'product', [0, 2], [1, 2], [1, 2], [1, 2]);
          both('*', 'imp,product', [0, 100], [0, 1], [0, 1], [0, 1]);
          both('*', 'imp,product', [0, 100], [0, 10]);
          both('*', 'imp,product', [0, 100], [0, 0, 9, 9]);
          both('*', 'imp,product', [0, 100], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('*', 'imp,product', [0, 100], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('/', 'div,imp', [0, 1], [0, 1], [0, 1], [0, 1]);
          lhs('/', 'div,imp', [0, 1], [0, 1], [0, 1], [0, 2]);
          lhs('/', 'div,imp', [0, 1], [0, 1], [0, 2], [0, 2]);
          lhs('/', 'div,imp', [0, 1], [0, 2], [0, 2], [0, 2]);
          lhs('/', 'div,imp', [0, 2], [0, 1], [0, 1], [0, 1]);
          lhs('/', 'div,imp', [0, 2], [0, 1], [0, 1], [0, 2]);
          lhs('/', 'div,imp', [0, 2], [0, 1], [0, 2], [0, 2]);
          lhs('/', 'div,imp', [0, 2], [0, 2], [0, 2], [0, 2]);
          lhs('/', 'div', [0, 2], [1, 2], [0, 1], [0, 1]);
          lhs('/', 'div', [0, 2], [1, 2], [1, 2], [0, 1]);
          lhs('/', 'div', [0, 2], [1, 2], [1, 2], [1, 2]);
          lhs('/', 'div,imp', [0, 20], [0, 1], [0, 1], [0, 1]);
          lhs('/', 'div,imp', [0, 20], [0, 10]);
          lhs('/', 'div,imp', [0, 20], [0, 0, 9, 9]);
          lhs('/', 'div', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('/', 'div,imp', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('/', 'div,imp', [0, 1], [0, 1], [0, 1], [0, 1]);
          rhs('/', 'div,imp', [0, 1], [0, 1], [0, 1], [0, 2]);
          rhs('/', 'div,imp', [0, 1], [0, 1], [0, 2], [0, 2]);
          rhs('/', 'div,imp', [0, 1], [0, 2], [0, 2], [0, 2]);
          rhs('/', 'div,imp', [0, 2], [0, 1], [0, 1], [0, 1]);
          rhs('/', 'div,imp', [0, 2], [0, 1], [0, 1], [0, 2]);
          rhs('/', 'div,imp', [0, 2], [0, 1], [0, 2], [0, 2]);
          rhs('/', 'div,imp', [0, 2], [0, 2], [0, 2], [0, 2]);
          rhs('/', 'div,imp', [0, 2], [1, 2], [0, 1], [0, 1]);
          rhs('/', 'div', [0, 2], [1, 2], [1, 2], [0, 1]);
          rhs('/', 'div', [0, 2], [1, 2], [1, 2], [1, 2]);
          rhs('/', 'div,imp', [0, 20], [0, 1], [0, 1], [0, 1]);
          rhs('/', 'div,imp', [0, 20], [0, 10]);
          rhs('/', 'div,imp', [0, 20], [0, 0, 9, 9]);
          rhs('/', 'div,imp', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('/', 'div', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
        });
      });
    });

    describe('LT', function() {

      describe('LT_LHS', function() {

        describe('binary', function() {

          let both = testBinaryBinary.bind(undefined, '<', 'lhs', ''); // A & B, A @ C  and  A & B, C @ A
          let lhs = testBinaryBinary.bind(undefined, '<', 'lhs', 'lhs'); // A & B, A @ C
          let rhs = testBinaryBinary.bind(undefined, '<', 'lhs', 'rhs'); // A & B, C @ A

          both('&', 'reject', [0, 1], [0, 1], [0, 1]);
          both('&', 'reject', [0, 1], [0, 1], [0, 2]);
          both('&', [0, 1], [0, 2], [0, 1]);
          both('&', [0, 1], [0, 2], [0, 2]);
          both('&', 'reject', [0, 2], [0, 1], [0, 1]);
          both('&', 'reject', [0, 2], [0, 1], [0, 2]);
          both('&', [0, 2], [0, 2], [0, 1]);
          both('&', [0, 2], [0, 2], [0, 2]);
          both('&', 'reject', [0, 2], [0, 1], [1, 2]);
          both('&', [0, 2], [1, 2], [0, 1]);
          both('&', [0, 2], [1, 2], [1, 2]);
          both('&', [0, 10]);
          both('&', 'reject', [0, 0, 9, 9]);
          both('&', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('&', 'reject', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!=', [0, 1], [0, 1], [0, 1]);
          both('!=', [0, 1], [0, 1], [0, 2]);
          both('!=', 'lt,xor', [0, 1], [0, 2], [0, 1]);
          both('!=', 'diff,lt', [0, 1], [0, 2], [0, 2]);
          both('!=', [0, 2], [0, 1], [0, 1]);
          both('!=', [0, 2], [0, 1], [0, 2]);
          both('!=', 'lt,xor', [0, 2], [0, 2], [0, 1]);
          both('!=', 'diff,lt', [0, 2], [0, 2], [0, 2]);
          both('!=', [0, 2], [0, 1], [1, 2]);
          both('!=', 'lt,xor', [0, 2], [1, 2], [0, 1]);
          both('!=', 'diff,lt', [0, 2], [1, 2], [1, 2]);
          both('!=', 'diff,lt', [0, 10]);
          both('!=', [0, 0, 9, 9]);
          both('!=', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!=', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('->', [0, 1], [0, 1], [0, 1]);
          lhs('->', [0, 1], [0, 1], [0, 2]);
          lhs('->', 'imp,lt', [0, 1], [0, 2], [0, 1]);
          lhs('->', 'imp,lt', [0, 1], [0, 2], [0, 2]);
          lhs('->', [0, 2], [0, 1], [0, 1]);
          lhs('->', [0, 2], [0, 1], [0, 2]);
          lhs('->', 'imp,lt', [0, 2], [0, 2], [0, 1]);
          lhs('->', 'imp,lt', [0, 2], [0, 2], [0, 2]);
          lhs('->', [0, 2], [0, 1], [1, 2]);
          lhs('->', 'imp,lt', [0, 2], [1, 2], [0, 1]);
          lhs('->', [0, 2], [1, 2], [1, 2]);
          lhs('->', 'imp,lt', [0, 10]);
          lhs('->', [0, 0, 9, 9]);
          lhs('->', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('->', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('->', [0, 1], [0, 1], [0, 1]);
          rhs('->', [0, 1], [0, 1], [0, 2]);
          rhs('->', 'imp,lt', [0, 1], [0, 2], [0, 1]);
          rhs('->', 'imp,lt', [0, 1], [0, 2], [0, 2]);
          rhs('->', [0, 2], [0, 1], [0, 1]);
          rhs('->', [0, 2], [0, 1], [0, 2]);
          rhs('->', 'imp,lt', [0, 2], [0, 2], [0, 1]);
          rhs('->', 'imp,lt', [0, 2], [0, 2], [0, 2]);
          rhs('->', 'reject', [0, 2], [0, 1], [1, 2]);
          rhs('->', 'imp,lt', [0, 2], [1, 2], [0, 1]);
          rhs('->', [0, 2], [1, 2], [1, 2]);
          rhs('->', 'imp,lt', [0, 10]);
          rhs('->', [0, 0, 9, 9]);
          rhs('->', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('->', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<', [0, 1], [0, 1], [0, 1]);
          lhs('<', [0, 1], [0, 1], [0, 2]);
          lhs('<', [0, 1], [0, 2], [0, 1]);
          lhs('<', 'lt,lt', [0, 1], [0, 2], [0, 2]);
          lhs('<', [0, 2], [0, 1], [0, 1]);
          lhs('<', [0, 2], [0, 1], [0, 2]);
          lhs('<', [0, 2], [0, 2], [0, 1]);
          lhs('<', 'lt,lt', [0, 2], [0, 2], [0, 2]);
          lhs('<', [0, 2], [0, 1], [1, 2]);
          lhs('<', [0, 2], [1, 2], [0, 1]);
          lhs('<', 'lt,lt', [0, 2], [1, 2], [1, 2]);
          lhs('<', 'lt,lt', [0, 10]);
          lhs('<', [0, 0, 9, 9]);
          lhs('<', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<', 'reject', [0, 1], [0, 1], [0, 1]);
          rhs('<', 'reject', [0, 1], [0, 1], [0, 2]);
          rhs('<', [0, 1], [0, 2], [0, 1]);
          rhs('<', [0, 1], [0, 2], [0, 2]);
          rhs('<', 'reject', [0, 2], [0, 1], [0, 1]);
          rhs('<', 'reject', [0, 2], [0, 1], [0, 2]);
          rhs('<', [0, 2], [0, 2], [0, 1]);
          rhs('<', [0, 2], [0, 2], [0, 2]);
          rhs('<', 'reject', [0, 2], [0, 1], [1, 2]);
          rhs('<', [0, 2], [1, 2], [0, 1]);
          rhs('<', 'reject', [0, 2], [1, 2], [1, 2]);
          rhs('<', 'lt,lt', [0, 10]);
          rhs('<', 'reject', [0, 0, 9, 9]);
          rhs('<', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<', 'reject', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<=', [0, 1], [0, 1], [0, 1]);
          lhs('<=', [0, 1], [0, 1], [0, 2]);
          lhs('<=', 'imp,lt', [0, 1], [0, 2], [0, 1]);
          lhs('<=', 'lt,lte', [0, 1], [0, 2], [0, 2]);
          lhs('<=', [0, 2], [0, 1], [0, 1]);
          lhs('<=', [0, 2], [0, 1], [0, 2]);
          lhs('<=', 'imp,lt', [0, 2], [0, 2], [0, 1]);
          lhs('<=', 'lt,lte', [0, 2], [0, 2], [0, 2]);
          lhs('<=', [0, 2], [0, 1], [1, 2]);
          lhs('<=', 'imp,lt', [0, 2], [1, 2], [0, 1]);
          lhs('<=', [0, 2], [1, 2], [1, 2]);
          lhs('<=', 'lt,lte', [0, 10]);
          lhs('<=', [0, 0, 9, 9]);
          lhs('<=', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<=', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<=', [0, 1], [0, 1], [0, 1]);
          rhs('<=', [0, 1], [0, 1], [0, 2]);
          rhs('<=', 'imp,lt', [0, 1], [0, 2], [0, 1]);
          rhs('<=', 'imp,lt', [0, 1], [0, 2], [0, 2]);
          rhs('<=', [0, 2], [0, 1], [0, 1]);
          rhs('<=', [0, 2], [0, 1], [0, 2]);
          rhs('<=', 'imp,lt', [0, 2], [0, 2], [0, 1]);
          rhs('<=', 'imp,lt', [0, 2], [0, 2], [0, 2]);
          rhs('<=', 'reject', [0, 2], [0, 1], [1, 2]);
          rhs('<=', 'imp,lt', [0, 2], [1, 2], [0, 1]);
          rhs('<=', [0, 2], [1, 2], [1, 2]);
          rhs('<=', 'lt,lte', [0, 10]);
          rhs('<=', [0, 0, 9, 9]);
          rhs('<=', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<=', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!&', [0, 1], [0, 1], [0, 1]);
          both('!&', [0, 1], [0, 1], [0, 2]);
          both('!&', 'lt,nall', [0, 1], [0, 2], [0, 1]);
          both('!&', 'lt,nall', [0, 1], [0, 2], [0, 2]);
          both('!&', [0, 2], [0, 1], [0, 1]);
          both('!&', [0, 2], [0, 1], [0, 2]);
          both('!&', 'lt,nall', [0, 2], [0, 2], [0, 1]);
          both('!&', 'lt,nall', [0, 2], [0, 2], [0, 2]);
          both('!&', [0, 2], [0, 1], [1, 2]);
          both('!&', 'lt,nall', [0, 2], [1, 2], [0, 1]);
          both('!&', [0, 2], [1, 2], [1, 2]);
          both('!&', 'lt,nall', [0, 10]);
          both('!&', [0, 0, 9, 9]);
          both('!&', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!&', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('!->', 'reject', [0, 1], [0, 1], [0, 1]);
          lhs('!->', 'reject', [0, 1], [0, 1], [0, 2]);
          lhs('!->', [0, 1], [0, 2], [0, 1]);
          lhs('!->', [0, 1], [0, 2], [0, 2]);
          lhs('!->', 'reject', [0, 2], [0, 1], [0, 1]);
          lhs('!->', 'reject', [0, 2], [0, 1], [0, 2]);
          lhs('!->', [0, 2], [0, 2], [0, 1]);
          lhs('!->', [0, 2], [0, 2], [0, 2]);
          lhs('!->', 'reject', [0, 2], [0, 1], [1, 2]);
          lhs('!->', [0, 2], [1, 2], [0, 1]);
          lhs('!->', 'reject', [0, 2], [1, 2], [1, 2]);
          lhs('!->', [0, 10]);
          lhs('!->', 'reject', [0, 0, 9, 9]);
          lhs('!->', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('!->', 'reject', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('!->', [0, 1], [0, 1], [0, 1]);
          rhs('!->', [0, 1], [0, 1], [0, 2]);
          rhs('!->', [0, 1], [0, 2], [0, 1]);
          rhs('!->', [0, 1], [0, 2], [0, 2]);
          rhs('!->', [0, 2], [0, 1], [0, 1]);
          rhs('!->', [0, 2], [0, 1], [0, 2]);
          rhs('!->', [0, 2], [0, 2], [0, 1]);
          rhs('!->', [0, 2], [0, 2], [0, 2]);
          rhs('!->', [0, 2], [0, 1], [1, 2]);
          rhs('!->', [0, 2], [1, 2], [0, 1]);
          rhs('!->', [0, 2], [1, 2], [1, 2]);
          rhs('!->', [0, 10]);
          rhs('!->', [0, 0, 9, 9]);
          rhs('!->', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('!->', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!|', [0, 1], [0, 1], [0, 1]);
          both('!|', [0, 1], [0, 1], [0, 2]);
          both('!|', [0, 1], [0, 2], [0, 1]);
          both('!|', [0, 1], [0, 2], [0, 2]);
          both('!|', [0, 2], [0, 1], [0, 1]);
          both('!|', [0, 2], [0, 1], [0, 2]);
          both('!|', [0, 2], [0, 2], [0, 1]);
          both('!|', [0, 2], [0, 2], [0, 2]);
          both('!|', 'reject', [0, 2], [0, 1], [1, 2]);
          both('!|', [0, 2], [1, 2], [0, 1]);
          both('!|', 'reject', [0, 2], [1, 2], [1, 2]);
          both('!|', [0, 10]);
          both('!|', [0, 0, 9, 9]);
          both('!|', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!|', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('==', [0, 1], [0, 1], [0, 1]);
          both('==', [0, 1], [0, 1], [0, 2]);
          both('==', 'lt', [0, 1], [0, 2], [0, 1]);
          both('==', 'lt', [0, 1], [0, 2], [0, 2]);
          both('==', [0, 2], [0, 1], [0, 1]);
          both('==', [0, 2], [0, 1], [0, 2]);
          both('==', 'lt', [0, 2], [0, 2], [0, 1]);
          both('==', 'lt', [0, 2], [0, 2], [0, 2]);
          both('==', 'reject', [0, 2], [0, 1], [1, 2]);
          both('==', 'lt', [0, 2], [1, 2], [0, 1]);
          both('==', [0, 2], [1, 2], [1, 2]);
          both('==', 'lt', [0, 10]);
          both('==', [0, 0, 9, 9]);
          both('==', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('==', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!^', [0, 1], [0, 1], [0, 1]);
          both('!^', [0, 1], [0, 1], [0, 2]);
          both('!^', 'lt', [0, 1], [0, 2], [0, 1]);
          both('!^', 'lt', [0, 1], [0, 2], [0, 2]);
          both('!^', [0, 2], [0, 1], [0, 1]);
          both('!^', [0, 2], [0, 1], [0, 2]);
          both('!^', 'lt', [0, 2], [0, 2], [0, 1]);
          both('!^', 'lt', [0, 2], [0, 2], [0, 2]);
          both('!^', 'reject', [0, 2], [0, 1], [1, 2]);
          both('!^', 'lt', [0, 2], [1, 2], [0, 1]);
          both('!^', [0, 2], [1, 2], [1, 2]);
          both('!^', 'lt', [0, 10]);                                      // lt+xnor = xor?
          both('!^', [0, 0, 9, 9]);
          both('!^', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);    // xor??
          both('!^', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('^', [0, 1], [0, 1], [0, 1]);
          both('^', [0, 1], [0, 1], [0, 2]);
          both('^', 'lt,xor', [0, 1], [0, 2], [0, 1]);
          both('^', 'lt,xor', [0, 1], [0, 2], [0, 2]);
          both('^', [0, 2], [0, 1], [0, 1]);
          both('^', [0, 2], [0, 1], [0, 2]);
          both('^', 'lt,xor', [0, 2], [0, 2], [0, 1]);
          both('^', 'lt,xor', [0, 2], [0, 2], [0, 2]);
          both('^', [0, 2], [0, 1], [1, 2]);
          both('^', 'lt,xor', [0, 2], [1, 2], [0, 1]);
          both('^', [0, 2], [1, 2], [1, 2]);
          both('^', 'lt,xor', [0, 10]);
          both('^', [0, 0, 9, 9]);
          both('^', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('^', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
        });

        describe('ternary with shared arg', function() {

          let both = testBinaryTernarySharedArgs.bind(undefined, '<', 'lhs', ''); // A & B, R = A @ C  and  A & B, R = C @ A
          let lhs = testBinaryTernarySharedArgs.bind(undefined, '<', 'lhs', 'lhs'); // A & B, R = A @ C
          let rhs = testBinaryTernarySharedArgs.bind(undefined, '<', 'lhs', 'rhs'); // A & B, R = C @ A

          // A & B, R = A &? C
          both('&?', [0, 1], [0, 1], [0, 1], [0, 1]);
          both('&?', [0, 1], [0, 1], [0, 1], [0, 2]);
          both('&?', 'isall,lt', [0, 1], [0, 1], [0, 2], [0, 2]);
          both('&?', 'isall,lt', [0, 1], [0, 2], [0, 2], [0, 2]);
          both('&?', [0, 2], [0, 1], [0, 1], [0, 1]);
          both('&?', [0, 2], [0, 1], [0, 1], [0, 2]);
          both('&?', 'isall,lt', [0, 2], [0, 1], [0, 2], [0, 2]);
          both('&?', 'isall,lt', [0, 2], [0, 2], [0, 2], [0, 2]);
          both('&?', 'reject', [0, 2], [1, 2], [0, 1], [0, 1]);
          both('&?', [0, 2], [1, 2], [1, 2], [0, 1]);
          both('&?', [0, 2], [1, 2], [1, 2], [1, 2]);
          both('&?', 'isall,lt', [0, 1], [0, 10]);
          both('&?', [0, 1], [0, 0, 9, 9]);
          both('&?', 'isall', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('&?', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('==?', 'xor', [0, 1], [0, 1], [0, 1], [0, 1]);
          both('==?', 'xor', [0, 1], [0, 1], [0, 1], [0, 2]);
          both('==?', 'issame,lt', [0, 1], [0, 1], [0, 2], [0, 2]);
          both('==?', 'issame,lt', [0, 1], [0, 2], [0, 2], [0, 2]);
          both('==?', 'xor', [0, 2], [0, 1], [0, 1], [0, 1]);
          both('==?', 'xor', [0, 2], [0, 1], [0, 1], [0, 2]);
          both('==?', 'issame,lt', [0, 2], [0, 1], [0, 2], [0, 2]);
          both('==?', 'issame,lt', [0, 2], [0, 2], [0, 2], [0, 2]);
          both('==?', 'reject', [0, 2], [1, 2], [0, 1], [0, 1]);
          both('==?', 'issame', [0, 2], [1, 2], [1, 2], [0, 1]);
          both('==?', 'issame', [0, 2], [1, 2], [1, 2], [1, 2]);
          both('==?', 'issame,lt', [0, 1], [0, 10]);
          both('==?', 'xor', [0, 1], [0, 0, 9, 9]);
          both('==?', 'issame', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('==?', 'xor', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!=?', [0, 1], [0, 1], [0, 1], [0, 1]);
          both('!=?', 'isdiff', [0, 1], [0, 1], [0, 1], [0, 2]);
          both('!=?', 'isdiff,lt', [0, 1], [0, 1], [0, 2], [0, 2]);
          both('!=?', 'isdiff,lt', [0, 1], [0, 2], [0, 2], [0, 2]);
          both('!=?', 'isdiff', [0, 2], [0, 1], [0, 1], [0, 1]);
          both('!=?', 'isdiff', [0, 2], [0, 1], [0, 1], [0, 2]);
          both('!=?', 'isdiff,lt', [0, 2], [0, 1], [0, 2], [0, 2]);
          both('!=?', 'isdiff,lt', [0, 2], [0, 2], [0, 2], [0, 2]);
          both('!=?', 'reject', [0, 2], [1, 2], [0, 1], [0, 1]);
          both('!=?', 'isdiff', [0, 2], [1, 2], [1, 2], [0, 1]);
          both('!=?', 'isdiff', [0, 2], [1, 2], [1, 2], [1, 2]);
          both('!=?', 'isdiff,lt', [0, 1], [0, 10]);
          both('!=?', [0, 1], [0, 0, 9, 9]);
          both('!=?', 'isdiff', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!=?', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<?', [0, 1], [0, 1], [0, 1], [0, 1]);
          lhs('<?', [0, 1], [0, 1], [0, 1], [0, 2]);
          lhs('<?', 'islt,lt', [0, 1], [0, 1], [0, 2], [0, 2]);
          lhs('<?', 'islt,lt', [0, 1], [0, 2], [0, 2], [0, 2]);
          lhs('<?', [0, 2], [0, 1], [0, 1], [0, 1]);
          lhs('<?', [0, 2], [0, 1], [0, 1], [0, 2]);
          lhs('<?', 'islt,lt', [0, 2], [0, 1], [0, 2], [0, 2]);
          lhs('<?', 'islt,lt', [0, 2], [0, 2], [0, 2], [0, 2]);
          lhs('<?', 'reject', [0, 2], [1, 2], [0, 1], [0, 1]);
          lhs('<?', [0, 2], [1, 2], [1, 2], [0, 1]);
          lhs('<?', 'islt', [0, 2], [1, 2], [1, 2], [1, 2]);
          lhs('<?', 'islt,lt', [0, 1], [0, 10]);
          lhs('<?', [0, 1], [0, 0, 9, 9]);
          lhs('<?', 'islt', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<?', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<?', [0, 1], [0, 1], [0, 1], [0, 1]);
          rhs('<?', [0, 1], [0, 1], [0, 1], [0, 2]);
          rhs('<?', 'islt,lt', [0, 1], [0, 1], [0, 2], [0, 2]);
          rhs('<?', 'islt,lt', [0, 1], [0, 2], [0, 2], [0, 2]);
          rhs('<?', [0, 2], [0, 1], [0, 1], [0, 1]);
          rhs('<?', [0, 2], [0, 1], [0, 1], [0, 2]);
          rhs('<?', 'islt,lt', [0, 2], [0, 1], [0, 2], [0, 2]);
          rhs('<?', 'islt,lt', [0, 2], [0, 2], [0, 2], [0, 2]);
          rhs('<?', 'reject', [0, 2], [1, 2], [0, 1], [0, 1]);
          rhs('<?', 'islt', [0, 2], [1, 2], [1, 2], [0, 1]);
          rhs('<?', [0, 2], [1, 2], [1, 2], [1, 2]);
          rhs('<?', 'islt,lt', [0, 1], [0, 10]);
          rhs('<?', [0, 1], [0, 0, 9, 9]);
          rhs('<?', 'islt', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<?', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<=?', [0, 1], [0, 1], [0, 1], [0, 1]);
          lhs('<=?', [0, 1], [0, 1], [0, 1], [0, 2]);
          lhs('<=?', 'islte,lt', [0, 1], [0, 1], [0, 2], [0, 2]);
          lhs('<=?', 'islte,lt', [0, 1], [0, 2], [0, 2], [0, 2]);
          lhs('<=?', [0, 2], [0, 1], [0, 1], [0, 1]);
          lhs('<=?', [0, 2], [0, 1], [0, 1], [0, 2]);
          lhs('<=?', 'islte,lt', [0, 2], [0, 1], [0, 2], [0, 2]);
          lhs('<=?', 'islte,lt', [0, 2], [0, 2], [0, 2], [0, 2]);
          lhs('<=?', 'reject', [0, 2], [1, 2], [0, 1], [0, 1]);
          lhs('<=?', 'islte', [0, 2], [1, 2], [1, 2], [0, 1]);
          lhs('<=?', [0, 2], [1, 2], [1, 2], [1, 2]);
          lhs('<=?', 'islte,lt', [0, 1], [0, 10]);
          lhs('<=?', [0, 1], [0, 0, 9, 9]);
          lhs('<=?', 'islte', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<=?', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<=?', 'xor', [0, 1], [0, 1], [0, 1], [0, 1]);
          rhs('<=?', 'islte', [0, 1], [0, 1], [0, 1], [0, 2]);
          rhs('<=?', 'islte,lt', [0, 1], [0, 1], [0, 2], [0, 2]);
          rhs('<=?', 'islte,lt', [0, 1], [0, 2], [0, 2], [0, 2]);
          rhs('<=?', 'islte', [0, 2], [0, 1], [0, 1], [0, 1]);
          rhs('<=?', 'islte', [0, 2], [0, 1], [0, 1], [0, 2]);
          rhs('<=?', 'islte,lt', [0, 2], [0, 1], [0, 2], [0, 2]);
          rhs('<=?', 'islte,lt', [0, 2], [0, 2], [0, 2], [0, 2]);
          rhs('<=?', 'reject', [0, 2], [1, 2], [0, 1], [0, 1]);
          rhs('<=?', [0, 2], [1, 2], [1, 2], [0, 1]);
          rhs('<=?', 'islte', [0, 2], [1, 2], [1, 2], [1, 2]);
          rhs('<=?', 'islte,lt', [0, 1], [0, 10]);
          rhs('<=?', 'islte', [0, 1], [0, 0, 9, 9]);
          rhs('<=?', 'islte', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<=?', 'islte', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!&?', [0, 1], [0, 1], [0, 1], [0, 1]);
          both('!&?', [0, 1], [0, 1], [0, 1], [0, 2]);
          both('!&?', 'isnall,lt', [0, 1], [0, 1], [0, 2], [0, 2]);
          both('!&?', 'isnall,lt', [0, 1], [0, 2], [0, 2], [0, 2]);
          both('!&?', [0, 2], [0, 1], [0, 1], [0, 1]);
          both('!&?', [0, 2], [0, 1], [0, 1], [0, 2]);
          both('!&?', 'isnall,lt', [0, 2], [0, 1], [0, 2], [0, 2]);
          both('!&?', 'isnall,lt', [0, 2], [0, 2], [0, 2], [0, 2]);
          both('!&?', 'reject', [0, 2], [1, 2], [0, 1], [0, 1]);
          both('!&?', 'isnall', [0, 2], [1, 2], [1, 2], [0, 1]);
          both('!&?', [0, 2], [1, 2], [1, 2], [1, 2]);
          both('!&?', 'isnall,lt', [0, 1], [0, 10]);
          both('!&?', [0, 1], [0, 0, 9, 9]);
          both('!&?', 'isnall', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!&?', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('|?', [0, 1], [0, 1], [0, 1], [0, 1]);
          both('|?', [0, 1], [0, 1], [0, 1], [0, 2]);
          both('|?', 'issome,lt', [0, 1], [0, 1], [0, 2], [0, 2]);
          both('|?', 'issome,lt', [0, 1], [0, 2], [0, 2], [0, 2]);
          both('|?', [0, 2], [0, 1], [0, 1], [0, 1]);
          both('|?', [0, 2], [0, 1], [0, 1], [0, 2]);
          both('|?', 'issome,lt', [0, 2], [0, 1], [0, 2], [0, 2]);
          both('|?', 'issome,lt', [0, 2], [0, 2], [0, 2], [0, 2]);
          both('|?', 'reject', [0, 2], [1, 2], [0, 1], [0, 1]);
          both('|?', [0, 2], [1, 2], [1, 2], [0, 1]);
          both('|?', [0, 2], [1, 2], [1, 2], [1, 2]);
          both('|?', 'issome,lt', [0, 1], [0, 10]);
          both('|?', [0, 1], [0, 0, 9, 9]);
          both('|?', 'issome', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('|?', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!|?', 'isnone', [0, 1], [0, 1], [0, 1], [0, 1]);
          both('!|?', 'isnone', [0, 1], [0, 1], [0, 1], [0, 2]);
          both('!|?', 'isnone,lt', [0, 1], [0, 1], [0, 2], [0, 2]);
          both('!|?', 'isnone,lt', [0, 1], [0, 2], [0, 2], [0, 2]);
          both('!|?', 'isnone', [0, 2], [0, 1], [0, 1], [0, 1]);
          both('!|?', 'isnone', [0, 2], [0, 1], [0, 1], [0, 2]);
          both('!|?', 'isnone,lt', [0, 2], [0, 1], [0, 2], [0, 2]);
          both('!|?', 'isnone,lt', [0, 2], [0, 2], [0, 2], [0, 2]);
          both('!|?', 'reject', [0, 2], [1, 2], [0, 1], [0, 1]);
          both('!|?', [0, 2], [1, 2], [1, 2], [0, 1]);
          both('!|?', [0, 2], [1, 2], [1, 2], [1, 2]);
          both('!|?', 'isnone,lt', [0, 1], [0, 10]);
          both('!|?', 'isnone', [0, 1], [0, 0, 9, 9]);
          both('!|?', 'isnone', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!|?', 'isnone', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('+', [0, 1], [0, 1], [0, 1], [0, 1]);
          both('+', [0, 1], [0, 1], [0, 1], [0, 2]);
          both('+', 'lt,sum', [0, 1], [0, 1], [0, 2], [0, 2]);
          both('+', 'lt,sum', [0, 1], [0, 2], [0, 2], [0, 2]);
          both('+', [0, 2], [0, 1], [0, 1], [0, 1]);
          both('+', [0, 2], [0, 1], [0, 1], [0, 2]);
          both('+', 'lt,sum', [0, 2], [0, 1], [0, 2], [0, 2]);
          both('+', 'lt,sum', [0, 2], [0, 2], [0, 2], [0, 2]);
          both('+', 'reject', [0, 2], [1, 2], [0, 1], [0, 1]);
          both('+', 'isdiff', [0, 2], [1, 2], [1, 2], [0, 1]);
          both('+', [0, 2], [1, 2], [1, 2], [1, 2]);
          both('+', [0, 20], [0, 1], [0, 1], [0, 1]);
          both('+', 'issome,lt', [0, 20], [0, 10]);
          both('+', [0, 20], [0, 0, 9, 9]);
          both('+', 'issome', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('+', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('-', [0, 1], [0, 1], [0, 1], [0, 1]);
          lhs('-', [0, 1], [0, 1], [0, 1], [0, 2]);
          lhs('-', 'lt,minus', [0, 1], [0, 1], [0, 2], [0, 2]);
          lhs('-', 'lt,minus', [0, 1], [0, 2], [0, 2], [0, 2]);
          lhs('-', [0, 2], [0, 1], [0, 1], [0, 1]);
          lhs('-', [0, 2], [0, 1], [0, 1], [0, 2]);
          lhs('-', 'lt,minus', [0, 2], [0, 1], [0, 2], [0, 2]);
          lhs('-', 'lt,minus', [0, 2], [0, 2], [0, 2], [0, 2]);
          lhs('-', 'reject', [0, 2], [1, 2], [0, 1], [0, 1]);
          lhs('-', 'minus', [0, 2], [1, 2], [1, 2], [0, 1]);
          lhs('-', [0, 2], [1, 2], [1, 2], [1, 2]);
          lhs('-', [0, 20], [0, 1], [0, 1], [0, 1]);
          lhs('-', 'lt,minus', [0, 20], [0, 10]);
          lhs('-', [0, 20], [0, 0, 9, 9]);
          lhs('-', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('-', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('-', [0, 1], [0, 1], [0, 1], [0, 1]);
          rhs('-', [0, 1], [0, 1], [0, 1], [0, 2]);
          rhs('-', 'lt,minus', [0, 1], [0, 1], [0, 2], [0, 2]);
          rhs('-', 'lt,minus', [0, 1], [0, 2], [0, 2], [0, 2]);
          rhs('-', [0, 2], [0, 1], [0, 1], [0, 1]);
          rhs('-', [0, 2], [0, 1], [0, 1], [0, 2]);
          rhs('-', 'lt,minus', [0, 2], [0, 1], [0, 2], [0, 2]);
          rhs('-', 'lt,minus', [0, 2], [0, 2], [0, 2], [0, 2]);
          rhs('-', 'reject', [0, 2], [1, 2], [0, 1], [0, 1]);
          rhs('-', [0, 2], [1, 2], [1, 2], [0, 1]);
          rhs('-', 'minus', [0, 2], [1, 2], [1, 2], [1, 2]);
          rhs('-', [0, 20], [0, 1], [0, 1], [0, 1]);
          rhs('-', 'lt,minus', [0, 20], [0, 10]);
          rhs('-', [0, 20], [0, 0, 9, 9]);
          rhs('-', 'minus', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('-', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('*', [0, 1], [0, 1], [0, 1], [0, 1]);
          both('*', [0, 1], [0, 1], [0, 1], [0, 2]);
          both('*', 'lt,product', [0, 1], [0, 1], [0, 2], [0, 2]);
          both('*', 'lt,product', [0, 1], [0, 2], [0, 2], [0, 2]);
          both('*', [0, 2], [0, 1], [0, 1], [0, 1]);
          both('*', [0, 2], [0, 1], [0, 1], [0, 2]);
          both('*', 'lt,product', [0, 2], [0, 1], [0, 2], [0, 2]);
          both('*', 'lt,product', [0, 2], [0, 2], [0, 2], [0, 2]);
          both('*', 'reject', [0, 2], [1, 2], [0, 1], [0, 1]);
          both('*', [0, 2], [1, 2], [1, 2], [0, 1]);
          both('*', [0, 2], [1, 2], [1, 2], [1, 2]);
          both('*', [0, 100], [0, 1], [0, 1], [0, 1]);
          both('*', 'lt,product', [0, 100], [0, 10]);
          both('*', [0, 100], [0, 0, 9, 9]);
          both('*', 'product', [0, 100], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('*', [0, 100], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('/', 'div', [0, 1], [0, 1], [0, 1], [0, 1]);
          lhs('/', 'div', [0, 1], [0, 1], [0, 1], [0, 2]);
          lhs('/', 'div,lt', [0, 1], [0, 1], [0, 2], [0, 2]);
          lhs('/', 'div,lt', [0, 1], [0, 2], [0, 2], [0, 2]);
          lhs('/', 'div', [0, 2], [0, 1], [0, 1], [0, 1]);
          lhs('/', 'div', [0, 2], [0, 1], [0, 1], [0, 2]);
          lhs('/', 'div,lt', [0, 2], [0, 1], [0, 2], [0, 2]);
          lhs('/', 'div,lt', [0, 2], [0, 2], [0, 2], [0, 2]);
          lhs('/', 'reject', [0, 2], [1, 2], [0, 1], [0, 1]);
          lhs('/', 'div', [0, 2], [1, 2], [1, 2], [0, 1]);
          lhs('/', 'div', [0, 2], [1, 2], [1, 2], [1, 2]);
          lhs('/', 'div', [0, 20], [0, 1], [0, 1], [0, 1]);
          lhs('/', 'div,lt', [0, 20], [0, 10]);
          lhs('/', 'div', [0, 20], [0, 0, 9, 9]);
          lhs('/', 'div', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('/', 'div', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('/', 'reject', [0, 1], [0, 1], [0, 1], [0, 1]);
          rhs('/', 'reject', [0, 1], [0, 1], [0, 1], [0, 2]);
          rhs('/', 'div,lt', [0, 1], [0, 1], [0, 2], [0, 2]);
          rhs('/', 'div,lt', [0, 1], [0, 2], [0, 2], [0, 2]);
          rhs('/', 'reject', [0, 2], [0, 1], [0, 1], [0, 1]);
          rhs('/', 'reject', [0, 2], [0, 1], [0, 1], [0, 2]);
          rhs('/', 'div,lt', [0, 2], [0, 1], [0, 2], [0, 2]);
          rhs('/', 'div,lt', [0, 2], [0, 2], [0, 2], [0, 2]);
          rhs('/', 'reject', [0, 2], [1, 2], [0, 1], [0, 1]);
          rhs('/', 'div', [0, 2], [1, 2], [1, 2], [0, 1]);
          rhs('/', 'div', [0, 2], [1, 2], [1, 2], [1, 2]);
          rhs('/', 'reject', [0, 20], [0, 1], [0, 1], [0, 1]);
          rhs('/', 'div,lt', [0, 20], [0, 10]);
          rhs('/', 'reject', [0, 20], [0, 0, 9, 9]);
          rhs('/', 'div', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('/', 'reject', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
        });

        describe('ternary with shared result', function() {

          let both = testBinaryTernarySharedResult.bind(undefined, '<', 'lhs', ''); // A & B, R = A @ C  and  A & B, R = C @ A
          let lhs = testBinaryTernarySharedResult.bind(undefined, '<', 'lhs', 'lhs'); // A & B, R = A @ C
          let rhs = testBinaryTernarySharedResult.bind(undefined, '<', 'lhs', 'rhs'); // A & B, R = C @ A
          //
          //// A & B, R = A &? C
          both('&?', 'nall', [0, 1], [0, 1], [0, 1], [0, 1]);
          both('&?', 'nall', [0, 1], [0, 1], [0, 1], [0, 2]);
          both('&?', 'isall,lt', [0, 1], [0, 1], [0, 2], [0, 2]);
          both('&?', 'isall,lt', [0, 1], [0, 2], [0, 2], [0, 2]);
          both('&?', 'nall', [0, 2], [0, 1], [0, 1], [0, 1]);
          both('&?', 'nall', [0, 2], [0, 1], [0, 1], [0, 2]);
          both('&?', 'isall,lt', [0, 2], [0, 1], [0, 2], [0, 2]);
          both('&?', 'isall,lt', [0, 2], [0, 2], [0, 2], [0, 2]);
          both('&?', [0, 2], [1, 2], [0, 1], [0, 1]);
          both('&?', 'lt', [0, 2], [1, 2], [1, 2], [0, 1]);
          both('&?', [0, 2], [1, 2], [1, 2], [1, 2]);
          both('&?', 'isall,lt', [0, 1], [0, 10]);
          both('&?', [0, 1], [0, 0, 9, 9]);
          both('&?', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('&?', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('==?', 'xor', [0, 1], [0, 1], [0, 1], [0, 1]);
          both('==?', 'diff', [0, 1], [0, 1], [0, 1], [0, 2]);
          both('==?', 'issame,lt', [0, 1], [0, 1], [0, 2], [0, 2]);
          both('==?', 'issame,lt', [0, 1], [0, 2], [0, 2], [0, 2]);
          both('==?', 'xor', [0, 2], [0, 1], [0, 1], [0, 1]);
          both('==?', 'diff', [0, 2], [0, 1], [0, 1], [0, 2]);
          both('==?', 'issame,lt', [0, 2], [0, 1], [0, 2], [0, 2]);
          both('==?', 'issame,lt', [0, 2], [0, 2], [0, 2], [0, 2]);
          both('==?', 'diff', [0, 2], [1, 2], [0, 1], [0, 1]);
          both('==?', 'issame,lt', [0, 2], [1, 2], [1, 2], [0, 1]);
          both('==?', 'issame,lt', [0, 2], [1, 2], [1, 2], [1, 2]);
          both('==?', 'issame,lt', [0, 1], [0, 10]);
          both('==?', [0, 1], [0, 0, 9, 9]);
          both('==?', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('==?', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!=?', [0, 1], [0, 1], [0, 1], [0, 1]);
          both('!=?', [0, 1], [0, 1], [0, 1], [0, 2]);
          both('!=?', 'isdiff,lt', [0, 1], [0, 1], [0, 2], [0, 2]);
          both('!=?', 'isdiff,lt', [0, 1], [0, 2], [0, 2], [0, 2]);
          both('!=?', [0, 2], [0, 1], [0, 1], [0, 1]);
          both('!=?', [0, 2], [0, 1], [0, 1], [0, 2]);
          both('!=?', 'isdiff,lt', [0, 2], [0, 1], [0, 2], [0, 2]);
          both('!=?', 'isdiff,lt', [0, 2], [0, 2], [0, 2], [0, 2]);
          both('!=?', [0, 2], [1, 2], [0, 1], [0, 1]);
          both('!=?', 'isdiff,lt', [0, 2], [1, 2], [1, 2], [0, 1]);
          both('!=?', 'isdiff,lt', [0, 2], [1, 2], [1, 2], [1, 2]);
          both('!=?', 'isdiff,lt', [0, 1], [0, 10]);
          both('!=?', [0, 1], [0, 0, 9, 9]);
          both('!=?', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!=?', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<?', 'imp', [0, 1], [0, 1], [0, 1], [0, 1]);
          lhs('<?', 'imp', [0, 1], [0, 1], [0, 1], [0, 2]);
          lhs('<?', 'islt,lt', [0, 1], [0, 1], [0, 2], [0, 2]);
          lhs('<?', 'islt,lt', [0, 1], [0, 2], [0, 2], [0, 2]);
          lhs('<?', 'imp', [0, 2], [0, 1], [0, 1], [0, 1]);
          lhs('<?', 'imp', [0, 2], [0, 1], [0, 1], [0, 2]);
          lhs('<?', 'islt,lt', [0, 2], [0, 1], [0, 2], [0, 2]);
          lhs('<?', 'islt,lt', [0, 2], [0, 2], [0, 2], [0, 2]);
          lhs('<?', [0, 2], [1, 2], [0, 1], [0, 1]);
          lhs('<?', [0, 2], [1, 2], [1, 2], [0, 1]);
          lhs('<?', 'islt,lt', [0, 2], [1, 2], [1, 2], [1, 2]);
          lhs('<?', 'islt,lt', [0, 1], [0, 10]);
          lhs('<?', [0, 1], [0, 0, 9, 9]);
          lhs('<?', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<?', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<?', 'imp', [0, 1], [0, 1], [0, 1], [0, 1]);
          rhs('<?', 'lte', [0, 1], [0, 1], [0, 1], [0, 2]);
          rhs('<?', 'islt,lt', [0, 1], [0, 1], [0, 2], [0, 2]);
          rhs('<?', 'islt,lt', [0, 1], [0, 2], [0, 2], [0, 2]);
          rhs('<?', 'imp', [0, 2], [0, 1], [0, 1], [0, 1]);
          rhs('<?', 'lte', [0, 2], [0, 1], [0, 1], [0, 2]);
          rhs('<?', 'islt,lt', [0, 2], [0, 1], [0, 2], [0, 2]);
          rhs('<?', 'islt,lt', [0, 2], [0, 2], [0, 2], [0, 2]);
          rhs('<?', [0, 2], [1, 2], [0, 1], [0, 1]);
          rhs('<?', 'islt,lt', [0, 2], [1, 2], [1, 2], [0, 1]);
          rhs('<?', 'islt,lt', [0, 2], [1, 2], [1, 2], [1, 2]);
          rhs('<?', 'islt,lt', [0, 1], [0, 10]);
          rhs('<?', [0, 1], [0, 0, 9, 9]);
          rhs('<?', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<?', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<=?', [0, 1], [0, 1], [0, 1], [0, 1]);
          lhs('<=?', [0, 1], [0, 1], [0, 1], [0, 2]);
          lhs('<=?', 'islte,lt', [0, 1], [0, 1], [0, 2], [0, 2]);
          lhs('<=?', 'islte,lt', [0, 1], [0, 2], [0, 2], [0, 2]);
          lhs('<=?', [0, 2], [0, 1], [0, 1], [0, 1]);
          lhs('<=?', [0, 2], [0, 1], [0, 1], [0, 2]);
          lhs('<=?', 'islte,lt', [0, 2], [0, 1], [0, 2], [0, 2]);
          lhs('<=?', 'islte,lt', [0, 2], [0, 2], [0, 2], [0, 2]);
          lhs('<=?', 'lt', [0, 2], [1, 2], [0, 1], [0, 1]);
          lhs('<=?', 'islte,lt', [0, 2], [1, 2], [1, 2], [0, 1]);
          lhs('<=?', 'islte,lt', [0, 2], [1, 2], [1, 2], [1, 2]);
          lhs('<=?', 'islte,lt', [0, 1], [0, 10]);
          lhs('<=?', [0, 1], [0, 0, 9, 9]);
          lhs('<=?', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<=?', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<=?', [0, 1], [0, 1], [0, 1], [0, 1]);
          rhs('<=?', 'lt', [0, 1], [0, 1], [0, 1], [0, 2]);
          rhs('<=?', 'islte,lt', [0, 1], [0, 1], [0, 2], [0, 2]);
          rhs('<=?', 'islte,lt', [0, 1], [0, 2], [0, 2], [0, 2]);
          rhs('<=?', [0, 2], [0, 1], [0, 1], [0, 1]);
          rhs('<=?', 'lt', [0, 2], [0, 1], [0, 1], [0, 2]);
          rhs('<=?', 'islte,lt', [0, 2], [0, 1], [0, 2], [0, 2]);
          rhs('<=?', 'islte,lt', [0, 2], [0, 2], [0, 2], [0, 2]);
          rhs('<=?', 'reject', [0, 2], [1, 2], [0, 1], [0, 1]);
          rhs('<=?', [0, 2], [1, 2], [1, 2], [0, 1]);
          rhs('<=?', 'islte,lt', [0, 2], [1, 2], [1, 2], [1, 2]);
          rhs('<=?', 'islte,lt', [0, 1], [0, 10]);
          rhs('<=?', [0, 1], [0, 0, 9, 9]);
          rhs('<=?', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<=?', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!&?', [0, 1], [0, 1], [0, 1], [0, 1]);
          both('!&?', [0, 1], [0, 1], [0, 1], [0, 2]);
          both('!&?', 'isnall,lt', [0, 1], [0, 1], [0, 2], [0, 2]);
          both('!&?', 'isnall,lt', [0, 1], [0, 2], [0, 2], [0, 2]);
          both('!&?', [0, 2], [0, 1], [0, 1], [0, 1]);
          both('!&?', [0, 2], [0, 1], [0, 1], [0, 2]);
          both('!&?', 'isnall,lt', [0, 2], [0, 1], [0, 2], [0, 2]);
          both('!&?', 'isnall,lt', [0, 2], [0, 2], [0, 2], [0, 2]);
          both('!&?', [0, 2], [1, 2], [0, 1], [0, 1]);
          both('!&?', 'isnall,lt', [0, 2], [1, 2], [1, 2], [0, 1]);
          both('!&?', [0, 2], [1, 2], [1, 2], [1, 2]);
          both('!&?', 'isnall,lt', [0, 1], [0, 10]);
          both('!&?', [0, 1], [0, 0, 9, 9]);
          both('!&?', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!&?', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('|?', [0, 1], [0, 1], [0, 1], [0, 1]);
          both('|?', [0, 1], [0, 1], [0, 1], [0, 2]);
          both('|?', 'issome,lt', [0, 1], [0, 1], [0, 2], [0, 2]);
          both('|?', 'issome,lt', [0, 1], [0, 2], [0, 2], [0, 2]);
          both('|?', [0, 2], [0, 1], [0, 1], [0, 1]);
          both('|?', [0, 2], [0, 1], [0, 1], [0, 2]);
          both('|?', 'issome,lt', [0, 2], [0, 1], [0, 2], [0, 2]);
          both('|?', 'issome,lt', [0, 2], [0, 2], [0, 2], [0, 2]);
          both('|?', 'reject', [0, 2], [1, 2], [0, 1], [0, 1]);
          both('|?', [0, 2], [1, 2], [1, 2], [0, 1]);
          both('|?', [0, 2], [1, 2], [1, 2], [1, 2]);
          both('|?', 'issome,lt', [0, 1], [0, 10]);
          both('|?', [0, 1], [0, 0, 9, 9]);
          both('|?', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('|?', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!|?', 'some', [0, 1], [0, 1], [0, 1], [0, 1]);
          both('!|?', 'some', [0, 1], [0, 1], [0, 1], [0, 2]);
          both('!|?', 'isnone,lt', [0, 1], [0, 1], [0, 2], [0, 2]);
          both('!|?', 'isnone,lt', [0, 1], [0, 2], [0, 2], [0, 2]);
          both('!|?', 'some', [0, 2], [0, 1], [0, 1], [0, 1]);
          both('!|?', 'some', [0, 2], [0, 1], [0, 1], [0, 2]);
          both('!|?', 'isnone,lt', [0, 2], [0, 1], [0, 2], [0, 2]);
          both('!|?', 'isnone,lt', [0, 2], [0, 2], [0, 2], [0, 2]);
          both('!|?', [0, 2], [1, 2], [0, 1], [0, 1]);
          both('!|?', [0, 2], [1, 2], [1, 2], [0, 1]);
          both('!|?', [0, 2], [1, 2], [1, 2], [1, 2]);
          both('!|?', 'isnone,lt', [0, 1], [0, 10]);
          both('!|?', 'isnone', [0, 1], [0, 0, 9, 9]);
          both('!|?', 'isnone', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!|?', 'isnone', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('+', [0, 1], [0, 1], [0, 1], [0, 1]);
          both('+', [0, 1], [0, 1], [0, 1], [0, 2]);
          both('+', 'lt,sum', [0, 1], [0, 1], [0, 2], [0, 2]);
          both('+', 'lt,sum', [0, 1], [0, 2], [0, 2], [0, 2]);
          both('+', [0, 2], [0, 1], [0, 1], [0, 1]);
          both('+', [0, 2], [0, 1], [0, 1], [0, 2]);
          both('+', 'lt,sum', [0, 2], [0, 1], [0, 2], [0, 2]);
          both('+', 'lt,sum', [0, 2], [0, 2], [0, 2], [0, 2]);
          both('+', 'reject', [0, 2], [1, 2], [0, 1], [0, 1]);
          both('+', [0, 2], [1, 2], [1, 2], [0, 1]);
          both('+', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
          both('+', [0, 20], [0, 1], [0, 1], [0, 1]);
          both('+', 'lt,sum', [0, 20], [0, 10]);
          both('+', [0, 20], [0, 0, 9, 9]);
          both('+', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('+', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('-', 'minus', [0, 1], [0, 1], [0, 1], [0, 1]);
          lhs('-', 'minus', [0, 1], [0, 1], [0, 1], [0, 2]);
          lhs('-', 'lt,minus', [0, 1], [0, 1], [0, 2], [0, 2]);
          lhs('-', 'lt,minus', [0, 1], [0, 2], [0, 2], [0, 2]);
          lhs('-', 'minus', [0, 2], [0, 1], [0, 1], [0, 1]);
          lhs('-', 'minus', [0, 2], [0, 1], [0, 1], [0, 2]);
          lhs('-', 'lt,minus', [0, 2], [0, 1], [0, 2], [0, 2]);
          lhs('-', 'lt,minus', [0, 2], [0, 2], [0, 2], [0, 2]);
          lhs('-', [0, 2], [1, 2], [0, 1], [0, 1]);
          lhs('-', 'lt,minus', [0, 2], [1, 2], [1, 2], [0, 1]);
          lhs('-', 'lt,minus', [0, 2], [1, 2], [1, 2], [1, 2]);
          lhs('-', 'minus', [0, 20], [0, 1], [0, 1], [0, 1]);
          lhs('-', 'lt,minus', [0, 20], [0, 10]);
          lhs('-', 'minus', [0, 20], [0, 0, 9, 9]);
          lhs('-', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('-', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('-', 'minus', [0, 1], [0, 1], [0, 1], [0, 1]);
          rhs('-', 'minus', [0, 1], [0, 1], [0, 1], [0, 2]);
          rhs('-', 'lt,minus', [0, 1], [0, 1], [0, 2], [0, 2]);
          rhs('-', 'lt,minus', [0, 1], [0, 2], [0, 2], [0, 2]);
          rhs('-', 'minus', [0, 2], [0, 1], [0, 1], [0, 1]);
          rhs('-', 'minus', [0, 2], [0, 1], [0, 1], [0, 2]);
          rhs('-', 'lt,minus', [0, 2], [0, 1], [0, 2], [0, 2]);
          rhs('-', 'lt,minus', [0, 2], [0, 2], [0, 2], [0, 2]);
          rhs('-', [0, 2], [1, 2], [0, 1], [0, 1]);
          rhs('-', [0, 2], [1, 2], [1, 2], [0, 1]);
          rhs('-', 'lt,minus', [0, 2], [1, 2], [1, 2], [1, 2]);
          rhs('-', 'minus', [0, 20], [0, 1], [0, 1], [0, 1]);
          rhs('-', 'lt,minus', [0, 20], [0, 10]);
          rhs('-', 'minus', [0, 20], [0, 0, 9, 9]);
          rhs('-', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('-', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('*', 'nall', [0, 1], [0, 1], [0, 1], [0, 1]);
          both('*', 'nall', [0, 1], [0, 1], [0, 1], [0, 2]);
          both('*', 'lt,product', [0, 1], [0, 1], [0, 2], [0, 2]);
          both('*', 'lt,product', [0, 1], [0, 2], [0, 2], [0, 2]);
          both('*', 'nall', [0, 2], [0, 1], [0, 1], [0, 1]);
          both('*', 'nall', [0, 2], [0, 1], [0, 1], [0, 2]);
          both('*', 'lt,product', [0, 2], [0, 1], [0, 2], [0, 2]);
          both('*', 'lt,product', [0, 2], [0, 2], [0, 2], [0, 2]);
          both('*', [0, 2], [1, 2], [0, 1], [0, 1]);
          both('*', 'lt', [0, 2], [1, 2], [1, 2], [0, 1]);
          both('*', [0, 2], [1, 2], [1, 2], [1, 2]);
          both('*', 'nall', [0, 100], [0, 1], [0, 1], [0, 1]);
          both('*', 'lt,product', [0, 100], [0, 10]);
          both('*', 'nall', [0, 100], [0, 0, 9, 9]);
          both('*', 'nall', [0, 100], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('*', 'nall', [0, 100], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('/', 'div', [0, 1], [0, 1], [0, 1], [0, 1]);
          lhs('/', 'div', [0, 1], [0, 1], [0, 1], [0, 2]);
          lhs('/', 'div,lt', [0, 1], [0, 1], [0, 2], [0, 2]);
          lhs('/', 'div,lt', [0, 1], [0, 2], [0, 2], [0, 2]);
          lhs('/', 'div', [0, 2], [0, 1], [0, 1], [0, 1]);
          lhs('/', 'div', [0, 2], [0, 1], [0, 1], [0, 2]);
          lhs('/', 'div,lt', [0, 2], [0, 1], [0, 2], [0, 2]);
          lhs('/', 'div,lt', [0, 2], [0, 2], [0, 2], [0, 2]);
          lhs('/', 'reject', [0, 2], [1, 2], [0, 1], [0, 1]);
          lhs('/', 'div', [0, 2], [1, 2], [1, 2], [0, 1]);
          lhs('/', 'div', [0, 2], [1, 2], [1, 2], [1, 2]);
          lhs('/', 'div', [0, 20], [0, 1], [0, 1], [0, 1]);
          lhs('/', 'div,lt', [0, 20], [0, 10]);
          lhs('/', 'div', [0, 20], [0, 0, 9, 9]);
          lhs('/', 'div', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('/', 'div', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('/', 'div', [0, 1], [0, 1], [0, 1], [0, 1]);
          rhs('/', 'div', [0, 1], [0, 1], [0, 1], [0, 2]);
          rhs('/', 'div,lt', [0, 1], [0, 1], [0, 2], [0, 2]);
          rhs('/', 'div,lt', [0, 1], [0, 2], [0, 2], [0, 2]);
          rhs('/', 'div', [0, 2], [0, 1], [0, 1], [0, 1]);
          rhs('/', 'div', [0, 2], [0, 1], [0, 1], [0, 2]);
          rhs('/', 'div,lt', [0, 2], [0, 1], [0, 2], [0, 2]);
          rhs('/', 'div,lt', [0, 2], [0, 2], [0, 2], [0, 2]);
          rhs('/', 'div', [0, 2], [1, 2], [0, 1], [0, 1]);
          rhs('/', 'div,lt', [0, 2], [1, 2], [1, 2], [0, 1]);
          rhs('/', 'div', [0, 2], [1, 2], [1, 2], [1, 2]);
          rhs('/', 'div', [0, 20], [0, 1], [0, 1], [0, 1]);
          rhs('/', 'div,lt', [0, 20], [0, 10]);
          rhs('/', 'div', [0, 20], [0, 0, 9, 9]);
          rhs('/', 'div', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('/', 'div', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
        });
      });

      describe('LT_RHS', function() {

        describe('binary', function() {

          let both = testBinaryBinary.bind(undefined, '<', 'rhs', ''); // A & B, A @ C  and  A & B, C @ A
          let lhs = testBinaryBinary.bind(undefined, '<', 'rhs', 'lhs'); // A & B, A @ C
          let rhs = testBinaryBinary.bind(undefined, '<', 'rhs', 'rhs'); // A & B, C @ A

          both('&', [0, 1], [0, 1], [0, 1]);
          //both('&', [0, 1], [0, 1], [0, 2]);
          //both('&', [0, 1], [0, 2], [0, 1]);
          //both('&', [0, 1], [0, 2], [0, 2]);
          //both('&', [0, 2], [0, 1], [0, 1]);
          //both('&', [0, 2], [0, 1], [0, 2]);
          //both('&', [0, 2], [0, 2], [0, 1]);
          //both('&', [0, 2], [0, 2], [0, 2]);
          //both('&', [0, 2], [0, 1], [1, 2]);
          //both('&', [0, 2], [1, 2], [0, 1]);
          //both('&', [0, 2], [1, 2], [1, 2]);
          both('&', [0, 10]);
          both('&', [0, 0, 9, 9]);
          both('&', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('&', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!=', [0, 1], [0, 1], [0, 1]);
          //both('!=', [0, 1], [0, 1], [0, 2]);
          //both('!=', [0, 1], [0, 2], [0, 1]);
          //both('!=', [0, 1], [0, 2], [0, 2]);
          //both('!=', [0, 2], [0, 1], [0, 1]);
          //both('!=', [0, 2], [0, 1], [0, 2]);
          //both('!=', [0, 2], [0, 2], [0, 1]);
          //both('!=', [0, 2], [0, 2], [0, 2]);
          //both('!=', [0, 2], [0, 1], [1, 2]);
          //both('!=', [0, 2], [1, 2], [0, 1]);
          //both('!=', [0, 2], [1, 2], [1, 2]);
          both('!=', 'diff,lt', [0, 10]);
          both('!=', [0, 0, 9, 9]);
          both('!=', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!=', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('->', [0, 1], [0, 1], [0, 1]);
          //lhs('->', [0, 1], [0, 1], [0, 2]);
          //lhs('->', [0, 1], [0, 2], [0, 1]);
          //lhs('->', [0, 1], [0, 2], [0, 2]);
          //lhs('->', [0, 2], [0, 1], [0, 1]);
          //lhs('->', [0, 2], [0, 1], [0, 2]);
          //lhs('->', [0, 2], [0, 2], [0, 1]);
          //lhs('->', [0, 2], [0, 2], [0, 2]);
          //lhs('->', [0, 2], [0, 1], [1, 2]);
          //lhs('->', [0, 2], [1, 2], [0, 1]);
          //lhs('->', [0, 2], [1, 2], [1, 2]);
          lhs('->', [0, 10]);
          lhs('->', [0, 0, 9, 9]);
          lhs('->', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('->', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('->', [0, 1], [0, 1], [0, 1]);
          //rhs('->', [0, 1], [0, 1], [0, 2]);
          //rhs('->', [0, 1], [0, 2], [0, 1]);
          //rhs('->', [0, 1], [0, 2], [0, 2]);
          //rhs('->', [0, 2], [0, 1], [0, 1]);
          //rhs('->', [0, 2], [0, 1], [0, 2]);
          //rhs('->', [0, 2], [0, 2], [0, 1]);
          //rhs('->', [0, 2], [0, 2], [0, 2]);
          //rhs('->', [0, 2], [0, 1], [1, 2]);
          //rhs('->', [0, 2], [1, 2], [0, 1]);
          //rhs('->', [0, 2], [1, 2], [1, 2]);
          rhs('->', [0, 10]);
          rhs('->', [0, 0, 9, 9]);
          rhs('->', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('->', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<', 'reject', [0, 1], [0, 1], [0, 1]);
          //lhs('<', [0, 1], [0, 1], [0, 2]);
          //lhs('<', [0, 1], [0, 2], [0, 1]);
          //lhs('<', [0, 1], [0, 2], [0, 2]);
          //lhs('<', [0, 2], [0, 1], [0, 1]);
          //lhs('<', [0, 2], [0, 1], [0, 2]);
          //lhs('<', [0, 2], [0, 2], [0, 1]);
          //lhs('<', [0, 2], [0, 2], [0, 2]);
          //lhs('<', [0, 2], [0, 1], [1, 2]);
          //lhs('<', [0, 2], [1, 2], [0, 1]);
          //lhs('<', [0, 2], [1, 2], [1, 2]);
          lhs('<', 'lt,lt', [0, 10]);
          lhs('<', 'reject', [0, 0, 9, 9]);
          lhs('<', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<', 'reject', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<', [0, 1], [0, 1], [0, 1]);
          //rhs('<', [0, 1], [0, 1], [0, 2]);
          //rhs('<', [0, 1], [0, 2], [0, 1]);
          //rhs('<', [0, 1], [0, 2], [0, 2]);
          //rhs('<', [0, 2], [0, 1], [0, 1]);
          //rhs('<', [0, 2], [0, 1], [0, 2]);
          //rhs('<', [0, 2], [0, 2], [0, 1]);
          //rhs('<', [0, 2], [0, 2], [0, 2]);
          //rhs('<', [0, 2], [0, 1], [1, 2]);
          //rhs('<', [0, 2], [1, 2], [0, 1]);
          //rhs('<', [0, 2], [1, 2], [1, 2]);
          rhs('<', 'lt,lt', [0, 10]);
          rhs('<', [0, 0, 9, 9]);
          rhs('<', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<=', [0, 1], [0, 1], [0, 1]);
          //lhs('<=', [0, 1], [0, 1], [0, 2]);
          //lhs('<=', [0, 1], [0, 2], [0, 1]);
          //lhs('<=', [0, 1], [0, 2], [0, 2]);
          //lhs('<=', [0, 2], [0, 1], [0, 1]);
          //lhs('<=', [0, 2], [0, 1], [0, 2]);
          //lhs('<=', [0, 2], [0, 2], [0, 1]);
          //lhs('<=', [0, 2], [0, 2], [0, 2]);
          //lhs('<=', [0, 2], [0, 1], [1, 2]);
          //lhs('<=', [0, 2], [1, 2], [0, 1]);
          //lhs('<=', [0, 2], [1, 2], [1, 2]);
          lhs('<=', 'lt,lte', [0, 10]);
          lhs('<=', [0, 0, 9, 9]);
          lhs('<=', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<=', 'reject', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<=', [0, 1], [0, 1], [0, 1]);
          //rhs('<=', [0, 1], [0, 1], [0, 2]);
          //rhs('<=', [0, 1], [0, 2], [0, 1]);
          //rhs('<=', [0, 1], [0, 2], [0, 2]);
          //rhs('<=', [0, 2], [0, 1], [0, 1]);
          //rhs('<=', [0, 2], [0, 1], [0, 2]);
          //rhs('<=', [0, 2], [0, 2], [0, 1]);
          //rhs('<=', [0, 2], [0, 2], [0, 2]);
          //rhs('<=', [0, 2], [0, 1], [1, 2]);
          //rhs('<=', [0, 2], [1, 2], [0, 1]);
          //rhs('<=', [0, 2], [1, 2], [1, 2]);
          rhs('<=', 'lt,lte', [0, 10]);
          rhs('<=', [0, 0, 9, 9]);
          rhs('<=', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<=', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!&', [0, 1], [0, 1], [0, 1]);
          //both('!&', [0, 1], [0, 1], [0, 2]);
          //both('!&', [0, 1], [0, 2], [0, 1]);
          //both('!&', [0, 1], [0, 2], [0, 2]);
          //both('!&', [0, 2], [0, 1], [0, 1]);
          //both('!&', [0, 2], [0, 1], [0, 2]);
          //both('!&', [0, 2], [0, 2], [0, 1]);
          //both('!&', [0, 2], [0, 2], [0, 2]);
          //both('!&', [0, 2], [0, 1], [1, 2]);
          //both('!&', [0, 2], [1, 2], [0, 1]);
          //both('!&', [0, 2], [1, 2], [1, 2]);
          both('!&', [0, 10]);
          both('!&', [0, 0, 9, 9]);
          both('!&', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!&', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('!->', [0, 1], [0, 1], [0, 1]);
          //lhs('!->', [0, 1], [0, 1], [0, 2]);
          //lhs('!->', [0, 1], [0, 2], [0, 1]);
          //lhs('!->', [0, 1], [0, 2], [0, 2]);
          //lhs('!->', [0, 2], [0, 1], [0, 1]);
          //lhs('!->', [0, 2], [0, 1], [0, 2]);
          //lhs('!->', [0, 2], [0, 2], [0, 1]);
          //lhs('!->', [0, 2], [0, 2], [0, 2]);
          //lhs('!->', [0, 2], [0, 1], [1, 2]);
          //lhs('!->', [0, 2], [1, 2], [0, 1]);
          //lhs('!->', [0, 2], [1, 2], [1, 2]);
          lhs('!->', [0, 10]);
          lhs('!->', [0, 0, 9, 9]);
          lhs('!->', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('!->', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('!->', 'reject', [0, 1], [0, 1], [0, 1]);
          //rhs('!->', [0, 1], [0, 1], [0, 2]);
          //rhs('!->', [0, 1], [0, 2], [0, 1]);
          //rhs('!->', [0, 1], [0, 2], [0, 2]);
          //rhs('!->', [0, 2], [0, 1], [0, 1]);
          //rhs('!->', [0, 2], [0, 1], [0, 2]);
          //rhs('!->', [0, 2], [0, 2], [0, 1]);
          //rhs('!->', [0, 2], [0, 2], [0, 2]);
          //rhs('!->', [0, 2], [0, 1], [1, 2]);
          //rhs('!->', [0, 2], [1, 2], [0, 1]);
          //rhs('!->', [0, 2], [1, 2], [1, 2]);
          rhs('!->', 'reject', [0, 10]);
          rhs('!->', 'reject', [0, 0, 9, 9]);
          rhs('!->', 'reject', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('!->', 'reject', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!|', 'reject', [0, 1], [0, 1], [0, 1]);
          //both('!|', [0, 1], [0, 1], [0, 2]);
          //both('!|', [0, 1], [0, 2], [0, 1]);
          //both('!|', [0, 1], [0, 2], [0, 2]);
          //both('!|', [0, 2], [0, 1], [0, 1]);
          //both('!|', [0, 2], [0, 1], [0, 2]);
          //both('!|', [0, 2], [0, 2], [0, 1]);
          //both('!|', [0, 2], [0, 2], [0, 2]);
          //both('!|', [0, 2], [0, 1], [1, 2]);
          //both('!|', [0, 2], [1, 2], [0, 1]);
          //both('!|', [0, 2], [1, 2], [1, 2]);
          both('!|', 'reject', [0, 10]);
          both('!|', 'reject', [0, 0, 9, 9]);
          both('!|', 'reject', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!|', 'reject', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('==', [0, 1], [0, 1], [0, 1]);
          //both('==', [0, 1], [0, 1], [0, 2]);
          //both('==', [0, 1], [0, 2], [0, 1]);
          //both('==', [0, 1], [0, 2], [0, 2]);
          //both('==', [0, 2], [0, 1], [0, 1]);
          //both('==', [0, 2], [0, 1], [0, 2]);
          //both('==', [0, 2], [0, 2], [0, 1]);
          //both('==', [0, 2], [0, 2], [0, 2]);
          //both('==', [0, 2], [0, 1], [1, 2]);
          //both('==', [0, 2], [1, 2], [0, 1]);
          //both('==', [0, 2], [1, 2], [1, 2]);
          both('==', 'lt', [0, 10]);
          both('==', [0, 0, 9, 9]);
          both('==', 'reject', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('==', 'reject', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!^', [0, 1], [0, 1], [0, 1]);
          //both('!^', [0, 1], [0, 1], [0, 2]);
          //both('!^', [0, 1], [0, 2], [0, 1]);
          //both('!^', [0, 1], [0, 2], [0, 2]);
          //both('!^', [0, 2], [0, 1], [0, 1]);
          //both('!^', [0, 2], [0, 1], [0, 2]);
          //both('!^', [0, 2], [0, 2], [0, 1]);
          //both('!^', [0, 2], [0, 2], [0, 2]);
          //both('!^', [0, 2], [0, 1], [1, 2]);
          //both('!^', [0, 2], [1, 2], [0, 1]);
          //both('!^', [0, 2], [1, 2], [1, 2]);
          both('!^', [0, 10]);                                      // lt+xnor = xor?
          both('!^', [0, 0, 9, 9]);
          both('!^', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);    // xor??
          both('!^', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('^', [0, 1], [0, 1], [0, 1]);
          //both('^', [0, 1], [0, 1], [0, 2]);
          //both('^', [0, 1], [0, 2], [0, 1]);
          //both('^', [0, 1], [0, 2], [0, 2]);
          //both('^', [0, 2], [0, 1], [0, 1]);
          //both('^', [0, 2], [0, 1], [0, 2]);
          //both('^', [0, 2], [0, 2], [0, 1]);
          //both('^', [0, 2], [0, 2], [0, 2]);
          //both('^', [0, 2], [0, 1], [1, 2]);
          //both('^', [0, 2], [1, 2], [0, 1]);
          //both('^', [0, 2], [1, 2], [1, 2]);
          both('^', [0, 10]);
          both('^', [0, 0, 9, 9]);
          both('^', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('^', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
        });

        describe('ternary with shared arg', function() {

          let both = testBinaryTernarySharedArgs.bind(undefined, '<', 'rhs', ''); // A & B, R = A @ C  and  A & B, R = C @ A
          let lhs = testBinaryTernarySharedArgs.bind(undefined, '<', 'rhs', 'lhs'); // A & B, R = A @ C
          let rhs = testBinaryTernarySharedArgs.bind(undefined, '<', 'rhs', 'rhs'); // A & B, R = C @ A

          // A & B, R = A &? C
          both('&?', [0, 1], [0, 1], [0, 1], [0, 1]);
          //both('&?', [0, 1], [0, 1], [0, 1], [0, 2]);
          //both('&?', [0, 1], [0, 1], [0, 2], [0, 2]);
          //both('&?', [0, 1], [0, 2], [0, 2], [0, 2]);
          //both('&?', [0, 2], [0, 1], [0, 1], [0, 1]);
          //both('&?', [0, 2], [0, 1], [0, 1], [0, 2]);
          //both('&?', [0, 2], [0, 1], [0, 2], [0, 2]);
          //both('&?', [0, 2], [0, 2], [0, 2], [0, 2]);
          //both('&?', [0, 2], [1, 2], [0, 1], [0, 1]);
          //both('&?', [0, 2], [1, 2], [1, 2], [0, 1]);
          //both('&?', [0, 2], [1, 2], [1, 2], [1, 2]);
          both('&?', [0, 1], [0, 10]);
          both('&?', [0, 1], [0, 0, 9, 9]);
          both('&?', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('&?', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('==?', [0, 1], [0, 1], [0, 1], [0, 1]);
          //both('==?', [0, 1], [0, 1], [0, 1], [0, 2]);
          //both('==?', [0, 1], [0, 1], [0, 2], [0, 2]);
          //both('==?', [0, 1], [0, 2], [0, 2], [0, 2]);
          //both('==?', [0, 2], [0, 1], [0, 1], [0, 1]);
          //both('==?', [0, 2], [0, 1], [0, 1], [0, 2]);
          //both('==?', [0, 2], [0, 1], [0, 2], [0, 2]);
          //both('==?', [0, 2], [0, 2], [0, 2], [0, 2]);
          //both('==?', [0, 2], [1, 2], [0, 1], [0, 1]);
          //both('==?', [0, 2], [1, 2], [1, 2], [0, 1]);
          //both('==?', [0, 2], [1, 2], [1, 2], [1, 2]);
          both('==?', 'issame,lt', [0, 1], [0, 10]);
          both('==?', 'issame', [0, 1], [0, 0, 9, 9]);
          both('==?', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('==?', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!=?', 'xor', [0, 1], [0, 1], [0, 1], [0, 1]);
          //both('!=?', 'isdiff', [0, 1], [0, 1], [0, 1], [0, 2]);
          //both('!=?', 'isdiff', [0, 1], [0, 1], [0, 2], [0, 2]);
          //both('!=?', 'isdiff', [0, 1], [0, 2], [0, 2], [0, 2]);
          //both('!=?', 'isdiff', [0, 2], [0, 1], [0, 1], [0, 1]);
          //both('!=?', 'isdiff', [0, 2], [0, 1], [0, 1], [0, 2]);
          //both('!=?', 'isdiff', [0, 2], [0, 1], [0, 2], [0, 2]);
          //both('!=?', 'isdiff', [0, 2], [0, 2], [0, 2], [0, 2]);
          //both('!=?', 'isdiff', [0, 2], [1, 2], [0, 1], [0, 1]);
          //both('!=?', 'isdiff', [0, 2], [1, 2], [1, 2], [0, 1]);
          //both('!=?', 'isdiff', [0, 2], [1, 2], [1, 2], [1, 2]);
          both('!=?', 'isdiff,lt', [0, 1], [0, 10]);
          both('!=?', 'xor', [0, 1], [0, 0, 9, 9]);
          both('!=?', 'isdiff', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!=?', 'isdiff', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<?', [0, 1], [0, 1], [0, 1], [0, 1]);
          //lhs('<?', [0, 1], [0, 1], [0, 1], [0, 2]);
          //lhs('<?', [0, 1], [0, 1], [0, 2], [0, 2]);
          //lhs('<?', [0, 1], [0, 2], [0, 2], [0, 2]);
          //lhs('<?', [0, 2], [0, 1], [0, 1], [0, 1]);
          //lhs('<?', [0, 2], [0, 1], [0, 1], [0, 2]);
          //lhs('<?', [0, 2], [0, 1], [0, 2], [0, 2]);
          //lhs('<?', [0, 2], [0, 2], [0, 2], [0, 2]);
          //lhs('<?', [0, 2], [1, 2], [0, 1], [0, 1]);
          //lhs('<?', [0, 2], [1, 2], [1, 2], [0, 1]);
          //lhs('<?', [0, 2], [1, 2], [1, 2], [1, 2]);
          lhs('<?', 'islt,lt', [0, 1], [0, 10]);
          lhs('<?', [0, 1], [0, 0, 9, 9]);
          lhs('<?', 'islt', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<?', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<?', 'islt', [0, 1], [0, 1], [0, 1], [0, 1]);
          //rhs('<?', 'islt', [0, 1], [0, 1], [0, 1], [0, 2]);
          //rhs('<?', 'islt', [0, 1], [0, 1], [0, 2], [0, 2]);
          //rhs('<?', 'islt', [0, 1], [0, 2], [0, 2], [0, 2]);
          //rhs('<?', 'islt', [0, 2], [0, 1], [0, 1], [0, 1]);
          //rhs('<?', 'islt', [0, 2], [0, 1], [0, 1], [0, 2]);
          //rhs('<?', 'islt', [0, 2], [0, 1], [0, 2], [0, 2]);
          //rhs('<?', 'islt', [0, 2], [0, 2], [0, 2], [0, 2]);
          //rhs('<?', 'islt', [0, 2], [1, 2], [0, 1], [0, 1]);
          //rhs('<?', 'islt', [0, 2], [1, 2], [1, 2], [0, 1]);
          //rhs('<?', 'islt', [0, 2], [1, 2], [1, 2], [1, 2]);
          rhs('<?', 'islt,lt', [0, 1], [0, 10]);
          rhs('<?', 'islt', [0, 1], [0, 0, 9, 9]);
          rhs('<?', 'islt', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<?', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<=?', [0, 1], [0, 1], [0, 1], [0, 1]);
          //lhs('<=?', [0, 1], [0, 1], [0, 1], [0, 2]);
          //lhs('<=?', [0, 1], [0, 1], [0, 2], [0, 2]);
          //lhs('<=?', [0, 1], [0, 2], [0, 2], [0, 2]);
          //lhs('<=?', [0, 2], [0, 1], [0, 1], [0, 1]);
          //lhs('<=?', [0, 2], [0, 1], [0, 1], [0, 2]);
          //lhs('<=?', [0, 2], [0, 1], [0, 2], [0, 2]);
          //lhs('<=?', [0, 2], [0, 2], [0, 2], [0, 2]);
          //lhs('<=?', [0, 2], [1, 2], [0, 1], [0, 1]);
          //lhs('<=?', [0, 2], [1, 2], [1, 2], [0, 1]);
          //lhs('<=?', [0, 2], [1, 2], [1, 2], [1, 2]);
          lhs('<=?', 'islte,lt', [0, 1], [0, 10]);
          lhs('<=?', 'islte', [0, 1], [0, 0, 9, 9]);
          lhs('<=?', 'islte', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<=?', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<=?', [0, 1], [0, 1], [0, 1], [0, 1]);
          //rhs('<=?', [0, 1], [0, 1], [0, 1], [0, 2]);
          //rhs('<=?', [0, 1], [0, 1], [0, 2], [0, 2]);
          //rhs('<=?', [0, 1], [0, 2], [0, 2], [0, 2]);
          //rhs('<=?', [0, 2], [0, 1], [0, 1], [0, 1]);
          //rhs('<=?', [0, 2], [0, 1], [0, 1], [0, 2]);
          //rhs('<=?', [0, 2], [0, 1], [0, 2], [0, 2]);
          //rhs('<=?', [0, 2], [0, 2], [0, 2], [0, 2]);
          //rhs('<=?', [0, 2], [1, 2], [0, 1], [0, 1]);
          //rhs('<=?', [0, 2], [1, 2], [1, 2], [0, 1]);
          //rhs('<=?', [0, 2], [1, 2], [1, 2], [1, 2]);
          rhs('<=?', 'islte,lt', [0, 1], [0, 10]);
          rhs('<=?', [0, 1], [0, 0, 9, 9]);
          rhs('<=?', 'islte', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<=?', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!&?', 'isnall', [0, 1], [0, 1], [0, 1], [0, 1]);
          //both('!&?', 'isnall', [0, 1], [0, 1], [0, 1], [0, 2]);
          //both('!&?', 'isnall', [0, 1], [0, 1], [0, 2], [0, 2]);
          //both('!&?', 'isnall', [0, 1], [0, 2], [0, 2], [0, 2]);
          //both('!&?', 'isnall', [0, 2], [0, 1], [0, 1], [0, 1]);
          //both('!&?', 'isnall', [0, 2], [0, 1], [0, 1], [0, 2]);
          //both('!&?', 'isnall', [0, 2], [0, 1], [0, 2], [0, 2]);
          //both('!&?', 'isnall', [0, 2], [0, 2], [0, 2], [0, 2]);
          //both('!&?', 'isnall', [0, 2], [1, 2], [0, 1], [0, 1]);
          //both('!&?', 'isnall', [0, 2], [1, 2], [1, 2], [0, 1]);
          //both('!&?', 'isnall', [0, 2], [1, 2], [1, 2], [1, 2]);
          both('!&?', 'isnall,lt', [0, 1], [0, 10]);
          both('!&?', 'isnall', [0, 1], [0, 0, 9, 9]);
          both('!&?', 'isnall', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!&?', 'isnall', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('|?', [0, 1], [0, 1], [0, 1], [0, 1]);
          //both('|?', [0, 1], [0, 1], [0, 1], [0, 2]);
          //both('|?', [0, 1], [0, 1], [0, 2], [0, 2]);
          //both('|?', [0, 1], [0, 2], [0, 2], [0, 2]);
          //both('|?', [0, 2], [0, 1], [0, 1], [0, 1]);
          //both('|?', [0, 2], [0, 1], [0, 1], [0, 2]);
          //both('|?', [0, 2], [0, 1], [0, 2], [0, 2]);
          //both('|?', [0, 2], [0, 2], [0, 2], [0, 2]);
          //both('|?', [0, 2], [1, 2], [0, 1], [0, 1]);
          //both('|?', [0, 2], [1, 2], [1, 2], [0, 1]);
          //both('|?', [0, 2], [1, 2], [1, 2], [1, 2]);
          both('|?', [0, 1], [0, 10]);
          both('|?', [0, 1], [0, 0, 9, 9]);
          both('|?', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('|?', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!|?', [0, 1], [0, 1], [0, 1], [0, 1]);
          //both('!|?', [0, 1], [0, 1], [0, 1], [0, 2]);
          //both('!|?', [0, 1], [0, 1], [0, 2], [0, 2]);
          //both('!|?', [0, 1], [0, 2], [0, 2], [0, 2]);
          //both('!|?', [0, 2], [0, 1], [0, 1], [0, 1]);
          //both('!|?', [0, 2], [0, 1], [0, 1], [0, 2]);
          //both('!|?', [0, 2], [0, 1], [0, 2], [0, 2]);
          //both('!|?', [0, 2], [0, 2], [0, 2], [0, 2]);
          //both('!|?', [0, 2], [1, 2], [0, 1], [0, 1]);
          //both('!|?', [0, 2], [1, 2], [1, 2], [0, 1]);
          //both('!|?', [0, 2], [1, 2], [1, 2], [1, 2]);
          both('!|?', [0, 1], [0, 10]);
          both('!|?', [0, 1], [0, 0, 9, 9]);
          both('!|?', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!|?', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('+', [0, 1], [0, 1], [0, 1], [0, 1]);
          //both('+', 'isdiff', [0, 1], [0, 1], [0, 1], [0, 2]);
          //both('+', 'isdiff', [0, 1], [0, 1], [0, 2], [0, 2]);
          //both('+', 'isdiff', [0, 1], [0, 2], [0, 2], [0, 2]);
          //both('+', 'isdiff', [0, 2], [0, 1], [0, 1], [0, 1]);
          //both('+', 'isdiff', [0, 2], [0, 1], [0, 1], [0, 2]);
          //both('+', 'isdiff', [0, 2], [0, 1], [0, 2], [0, 2]);
          //both('+', 'isdiff', [0, 2], [0, 2], [0, 2], [0, 2]);
          //both('+', 'isdiff', [0, 2], [1, 2], [0, 1], [0, 1]);
          //both('+', 'isdiff', [0, 2], [1, 2], [1, 2], [0, 1]);
          //both('+', 'isdiff', [0, 2], [1, 2], [1, 2], [1, 2]);
          both('+', 'isdiff', [0, 20], [0, 1], [0, 1], [0, 1]);
          both('+', [0, 20], [0, 10]);
          both('+', [0, 20], [0, 0, 9, 9]);
          both('+', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('+', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('-', 'minus', [0, 1], [0, 1], [0, 1], [0, 1]);
          //lhs('-', 'minus', [0, 1], [0, 1], [0, 1], [0, 2]);
          //lhs('-', 'minus', [0, 1], [0, 1], [0, 2], [0, 2]);
          //lhs('-', 'minus', [0, 1], [0, 2], [0, 2], [0, 2]);
          //lhs('-', 'minus', [0, 2], [0, 1], [0, 1], [0, 1]);
          //lhs('-', 'minus', [0, 2], [0, 1], [0, 1], [0, 2]);
          //lhs('-', 'minus', [0, 2], [0, 1], [0, 2], [0, 2]);
          //lhs('-', 'minus', [0, 2], [0, 2], [0, 2], [0, 2]);
          //lhs('-', 'minus', [0, 2], [1, 2], [0, 1], [0, 1]);
          //lhs('-', 'minus', [0, 2], [1, 2], [1, 2], [0, 1]);
          //lhs('-', 'minus', [0, 2], [1, 2], [1, 2], [1, 2]);
          lhs('-', 'minus', [0, 20], [0, 1], [0, 1], [0, 1]);
          lhs('-', 'lt,minus', [0, 20], [0, 10]);
          lhs('-', 'minus', [0, 20], [0, 0, 9, 9]);
          lhs('-', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('-', 'minus', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('-', [0, 1], [0, 1], [0, 1], [0, 1]);
          //rhs('-', [0, 1], [0, 1], [0, 1], [0, 2]);
          //rhs('-', [0, 1], [0, 1], [0, 2], [0, 2]);
          //rhs('-', [0, 1], [0, 2], [0, 2], [0, 2]);
          //rhs('-', [0, 2], [0, 1], [0, 1], [0, 1]);
          //rhs('-', [0, 2], [0, 1], [0, 1], [0, 2]);
          //rhs('-', [0, 2], [0, 1], [0, 2], [0, 2]);
          //rhs('-', [0, 2], [0, 2], [0, 2], [0, 2]);
          //rhs('-', [0, 2], [1, 2], [0, 1], [0, 1]);
          //rhs('-', [0, 2], [1, 2], [1, 2], [0, 1]);
          //rhs('-', [0, 2], [1, 2], [1, 2], [1, 2]);
          rhs('-', [0, 20], [0, 1], [0, 1], [0, 1]);
          rhs('-', 'lt,minus', [0, 20], [0, 10]);
          rhs('-', [0, 20], [0, 0, 9, 9]);
          rhs('-', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('-', 'reject', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('*', [0, 1], [0, 1], [0, 1], [0, 1]);
          //both('*', [0, 1], [0, 1], [0, 1], [0, 2]);
          //both('*', [0, 1], [0, 1], [0, 2], [0, 2]);
          //both('*', [0, 1], [0, 2], [0, 2], [0, 2]);
          //both('*', [0, 2], [0, 1], [0, 1], [0, 1]);
          //both('*', [0, 2], [0, 1], [0, 1], [0, 2]);
          //both('*', [0, 2], [0, 1], [0, 2], [0, 2]);
          //both('*', [0, 2], [0, 2], [0, 2], [0, 2]);
          //both('*', [0, 2], [1, 2], [0, 1], [0, 1]);
          //both('*', [0, 2], [1, 2], [1, 2], [0, 1]);
          //both('*', [0, 2], [1, 2], [1, 2], [1, 2]);
          both('*', [0, 100], [0, 1], [0, 1], [0, 1]);
          both('*', 'lt,product', [0, 100], [0, 10]);
          both('*', 'product', [0, 100], [0, 0, 9, 9]);
          both('*', 'product', [0, 100], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('*', 'product', [0, 100], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('/', 'div', [0, 1], [0, 1], [0, 1], [0, 1]);
          //lhs('/', [0, 1], [0, 1], [0, 1], [0, 2]);
          //lhs('/', [0, 1], [0, 1], [0, 2], [0, 2]);
          //lhs('/', [0, 1], [0, 2], [0, 2], [0, 2]);
          //lhs('/', [0, 2], [0, 1], [0, 1], [0, 1]);
          //lhs('/', [0, 2], [0, 1], [0, 1], [0, 2]);
          //lhs('/', [0, 2], [0, 1], [0, 2], [0, 2]);
          //lhs('/', [0, 2], [0, 2], [0, 2], [0, 2]);
          //lhs('/', [0, 2], [1, 2], [0, 1], [0, 1]);
          //lhs('/', [0, 2], [1, 2], [1, 2], [0, 1]);
          //lhs('/', [0, 2], [1, 2], [1, 2], [1, 2]);
          lhs('/', 'div', [0, 20], [0, 1], [0, 1], [0, 1]);
          lhs('/', 'div,lt', [0, 20], [0, 10]);
          lhs('/', 'div', [0, 20], [0, 0, 9, 9]);
          lhs('/', 'div', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('/', 'div', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('/', 'div', [0, 1], [0, 1], [0, 1], [0, 1]);
          //rhs('/', 'div', [0, 1], [0, 1], [0, 1], [0, 2]);
          //rhs('/', 'div', [0, 1], [0, 1], [0, 2], [0, 2]);
          //rhs('/', 'div', [0, 1], [0, 2], [0, 2], [0, 2]);
          //rhs('/', 'div', [0, 2], [0, 1], [0, 1], [0, 1]);
          //rhs('/', 'div', [0, 2], [0, 1], [0, 1], [0, 2]);
          //rhs('/', 'div', [0, 2], [0, 1], [0, 2], [0, 2]);
          //rhs('/', 'div', [0, 2], [0, 2], [0, 2], [0, 2]);
          //rhs('/', 'div', [0, 2], [1, 2], [0, 1], [0, 1]);
          //rhs('/', 'div', [0, 2], [1, 2], [1, 2], [0, 1]);
          //rhs('/', 'div', [0, 2], [1, 2], [1, 2], [1, 2]);
          rhs('/', 'div', [0, 20], [0, 1], [0, 1], [0, 1]);
          rhs('/', 'div,lt', [0, 20], [0, 10]);
          rhs('/', 'div', [0, 20], [0, 0, 9, 9]);
          rhs('/', 'div', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('/', 'div', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
        });

        describe('ternary with shared result', function() {

          let both = testBinaryTernarySharedResult.bind(undefined, '<', 'rhs', ''); // A & B, R = A @ C  and  A & B, R = C @ A
          let lhs = testBinaryTernarySharedResult.bind(undefined, '<', 'rhs', 'lhs'); // A & B, R = A @ C
          let rhs = testBinaryTernarySharedResult.bind(undefined, '<', 'rhs', 'rhs'); // A & B, R = C @ A

          // A & B, R = A &? C
          both('&?', [0, 1], [0, 1], [0, 1], [0, 1]);
          //both('&?', [0, 1], [0, 1], [0, 1], [0, 2]);
          //both('&?', [0, 1], [0, 1], [0, 2], [0, 2]);
          //both('&?', [0, 1], [0, 2], [0, 2], [0, 2]);
          //both('&?', [0, 2], [0, 1], [0, 1], [0, 1]);
          //both('&?', [0, 2], [0, 1], [0, 1], [0, 2]);
          //both('&?', [0, 2], [0, 1], [0, 2], [0, 2]);
          //both('&?', [0, 2], [0, 2], [0, 2], [0, 2]);
          //both('&?', [0, 2], [1, 2], [0, 1], [0, 1]);
          //both('&?', [0, 2], [1, 2], [1, 2], [0, 1]);
          //both('&?', [0, 2], [1, 2], [1, 2], [1, 2]);
          both('&?', [0, 1], [0, 10]);
          both('&?', [0, 1], [0, 0, 9, 9]);
          both('&?', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('&?', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('==?', [0, 1], [0, 1], [0, 1], [0, 1]);
          //both('==?', [0, 1], [0, 1], [0, 1], [0, 2]);
          //both('==?', [0, 1], [0, 1], [0, 2], [0, 2]);
          //both('==?', [0, 1], [0, 2], [0, 2], [0, 2]);
          //both('==?', [0, 2], [0, 1], [0, 1], [0, 1]);
          //both('==?', [0, 2], [0, 1], [0, 1], [0, 2]);
          //both('==?', [0, 2], [0, 1], [0, 2], [0, 2]);
          //both('==?', [0, 2], [0, 2], [0, 2], [0, 2]);
          //both('==?', [0, 2], [1, 2], [0, 1], [0, 1]);
          //both('==?', [0, 2], [1, 2], [1, 2], [0, 1]);
          //both('==?', [0, 2], [1, 2], [1, 2], [1, 2]);
          both('==?', [0, 1], [0, 10]);
          both('==?', [0, 1], [0, 0, 9, 9]);
          both('==?', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('==?', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!=?', 'xor', [0, 1], [0, 1], [0, 1], [0, 1]);
          //both('!=?', 'xor', [0, 1], [0, 1], [0, 1], [0, 2]);
          //both('!=?', 'xor', [0, 1], [0, 1], [0, 2], [0, 2]);
          //both('!=?', 'xor', [0, 1], [0, 2], [0, 2], [0, 2]);
          //both('!=?', 'xor', [0, 2], [0, 1], [0, 1], [0, 1]);
          //both('!=?', 'xor', [0, 2], [0, 1], [0, 1], [0, 2]);
          //both('!=?', 'xor', [0, 2], [0, 1], [0, 2], [0, 2]);
          //both('!=?', 'xor', [0, 2], [0, 2], [0, 2], [0, 2]);
          //both('!=?', 'xor', [0, 2], [1, 2], [0, 1], [0, 1]);
          //both('!=?', 'xor', [0, 2], [1, 2], [1, 2], [0, 1]);
          //both('!=?', 'xor', [0, 2], [1, 2], [1, 2], [1, 2]);
          both('!=?', 'diff', [0, 1], [0, 10]);
          both('!=?', 'xor', [0, 1], [0, 0, 9, 9]);
          both('!=?', 'diff', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!=?', 'diff', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<?', [0, 1], [0, 1], [0, 1], [0, 1]);
          //lhs('<?', [0, 1], [0, 1], [0, 1], [0, 2]);
          //lhs('<?', [0, 1], [0, 1], [0, 2], [0, 2]);
          //lhs('<?', [0, 1], [0, 2], [0, 2], [0, 2]);
          //lhs('<?', [0, 2], [0, 1], [0, 1], [0, 1]);
          //lhs('<?', [0, 2], [0, 1], [0, 1], [0, 2]);
          //lhs('<?', [0, 2], [0, 1], [0, 2], [0, 2]);
          //lhs('<?', [0, 2], [0, 2], [0, 2], [0, 2]);
          //lhs('<?', [0, 2], [1, 2], [0, 1], [0, 1]);
          //lhs('<?', [0, 2], [1, 2], [1, 2], [0, 1]);
          //lhs('<?', [0, 2], [1, 2], [1, 2], [1, 2]);
          lhs('<?', 'lt', [0, 1], [0, 10]);
          lhs('<?', [0, 1], [0, 0, 9, 9]);
          lhs('<?', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<?', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<?', [0, 1], [0, 1], [0, 1], [0, 1]);
          //rhs('<?', [0, 1], [0, 1], [0, 1], [0, 2]);
          //rhs('<?', [0, 1], [0, 1], [0, 2], [0, 2]);
          //rhs('<?', [0, 1], [0, 2], [0, 2], [0, 2]);
          //rhs('<?', [0, 2], [0, 1], [0, 1], [0, 1]);
          //rhs('<?', [0, 2], [0, 1], [0, 1], [0, 2]);
          //rhs('<?', [0, 2], [0, 1], [0, 2], [0, 2]);
          //rhs('<?', [0, 2], [0, 2], [0, 2], [0, 2]);
          //rhs('<?', [0, 2], [1, 2], [0, 1], [0, 1]);
          //rhs('<?', [0, 2], [1, 2], [1, 2], [0, 1]);
          //rhs('<?', [0, 2], [1, 2], [1, 2], [1, 2]);
          rhs('<?', 'lt', [0, 1], [0, 10]);
          rhs('<?', [0, 1], [0, 0, 9, 9]);
          rhs('<?', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<?', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<=?', 'imp', [0, 1], [0, 1], [0, 1], [0, 1]);
          //lhs('<=?', 'imp', [0, 1], [0, 1], [0, 1], [0, 2]);
          //lhs('<=?', 'imp', [0, 1], [0, 1], [0, 2], [0, 2]);
          //lhs('<=?', 'imp', [0, 1], [0, 2], [0, 2], [0, 2]);
          //lhs('<=?', 'imp', [0, 2], [0, 1], [0, 1], [0, 1]);
          //lhs('<=?', 'imp', [0, 2], [0, 1], [0, 1], [0, 2]);
          //lhs('<=?', 'imp', [0, 2], [0, 1], [0, 2], [0, 2]);
          //lhs('<=?', 'imp', [0, 2], [0, 2], [0, 2], [0, 2]);
          //lhs('<=?', 'imp', [0, 2], [1, 2], [0, 1], [0, 1]);
          //lhs('<=?', 'imp', [0, 2], [1, 2], [1, 2], [0, 1]);
          //lhs('<=?', 'imp', [0, 2], [1, 2], [1, 2], [1, 2]);
          lhs('<=?', 'lte', [0, 1], [0, 10]);
          lhs('<=?', 'imp', [0, 1], [0, 0, 9, 9]);
          lhs('<=?', 'imp', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<=?', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<=?', 'imp', [0, 1], [0, 1], [0, 1], [0, 1]);
          //rhs('<=?', 'imp', [0, 1], [0, 1], [0, 1], [0, 2]);
          //rhs('<=?', 'imp', [0, 1], [0, 1], [0, 2], [0, 2]);
          //rhs('<=?', 'imp', [0, 1], [0, 2], [0, 2], [0, 2]);
          //rhs('<=?', 'imp', [0, 2], [0, 1], [0, 1], [0, 1]);
          //rhs('<=?', 'imp', [0, 2], [0, 1], [0, 1], [0, 2]);
          //rhs('<=?', 'imp', [0, 2], [0, 1], [0, 2], [0, 2]);
          //rhs('<=?', 'imp', [0, 2], [0, 2], [0, 2], [0, 2]);
          //rhs('<=?', 'imp', [0, 2], [1, 2], [0, 1], [0, 1]);
          //rhs('<=?', 'imp', [0, 2], [1, 2], [1, 2], [0, 1]);
          //rhs('<=?', 'imp', [0, 2], [1, 2], [1, 2], [1, 2]);
          rhs('<=?', 'lte', [0, 1], [0, 10]);
          rhs('<=?', 'imp', [0, 1], [0, 0, 9, 9]);
          rhs('<=?', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<=?', 'imp', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!&?', 'nall', [0, 1], [0, 1], [0, 1], [0, 1]);
          //both('!&?', 'nall', [0, 1], [0, 1], [0, 1], [0, 2]);
          //both('!&?', 'nall', [0, 1], [0, 1], [0, 2], [0, 2]);
          //both('!&?', 'nall', [0, 1], [0, 2], [0, 2], [0, 2]);
          //both('!&?', 'nall', [0, 2], [0, 1], [0, 1], [0, 1]);
          //both('!&?', 'nall', [0, 2], [0, 1], [0, 1], [0, 2]);
          //both('!&?', 'nall', [0, 2], [0, 1], [0, 2], [0, 2]);
          //both('!&?', 'nall', [0, 2], [0, 2], [0, 2], [0, 2]);
          //both('!&?', 'nall', [0, 2], [1, 2], [0, 1], [0, 1]);
          //both('!&?', 'nall', [0, 2], [1, 2], [1, 2], [0, 1]);
          //both('!&?', 'nall', [0, 2], [1, 2], [1, 2], [1, 2]);
          both('!&?', 'nall', [0, 1], [0, 10]);
          both('!&?', 'nall', [0, 1], [0, 0, 9, 9]);
          both('!&?', 'nall', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!&?', 'nall', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('|?', 'some', [0, 1], [0, 1], [0, 1], [0, 1]);
          //both('|?', 'some', [0, 1], [0, 1], [0, 1], [0, 2]);
          //both('|?', 'some', [0, 1], [0, 1], [0, 2], [0, 2]);
          //both('|?', 'some', [0, 1], [0, 2], [0, 2], [0, 2]);
          //both('|?', 'some', [0, 2], [0, 1], [0, 1], [0, 1]);
          //both('|?', 'some', [0, 2], [0, 1], [0, 1], [0, 2]);
          //both('|?', 'some', [0, 2], [0, 1], [0, 2], [0, 2]);
          //both('|?', 'some', [0, 2], [0, 2], [0, 2], [0, 2]);
          //both('|?', 'some', [0, 2], [1, 2], [0, 1], [0, 1]);
          //both('|?', 'some', [0, 2], [1, 2], [1, 2], [0, 1]);
          //both('|?', 'some', [0, 2], [1, 2], [1, 2], [1, 2]);
          both('|?', 'some', [0, 1], [0, 10]);
          both('|?', 'some', [0, 1], [0, 0, 9, 9]);
          both('|?', 'some', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('|?', 'some', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!|?', [0, 1], [0, 1], [0, 1], [0, 1]);
          //both('!|?', [0, 1], [0, 1], [0, 1], [0, 2]);
          //both('!|?', [0, 1], [0, 1], [0, 2], [0, 2]);
          //both('!|?', [0, 1], [0, 2], [0, 2], [0, 2]);
          //both('!|?', [0, 2], [0, 1], [0, 1], [0, 1]);
          //both('!|?', [0, 2], [0, 1], [0, 1], [0, 2]);
          //both('!|?', [0, 2], [0, 1], [0, 2], [0, 2]);
          //both('!|?', [0, 2], [0, 2], [0, 2], [0, 2]);
          //both('!|?', [0, 2], [1, 2], [0, 1], [0, 1]);
          //both('!|?', [0, 2], [1, 2], [1, 2], [0, 1]);
          //both('!|?', [0, 2], [1, 2], [1, 2], [1, 2]);
          both('!|?', [0, 1], [0, 10]);
          both('!|?', [0, 1], [0, 0, 9, 9]);
          both('!|?', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!|?', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('+', 'sum', [0, 1], [0, 1], [0, 1], [0, 1]);
          //both('+', 'lt,sum', [0, 1], [0, 1], [0, 1], [0, 2]);
          //both('+', 'lt,sum', [0, 1], [0, 1], [0, 2], [0, 2]);
          //both('+', 'lt,sum', [0, 1], [0, 2], [0, 2], [0, 2]);
          //both('+', 'lt,sum', [0, 2], [0, 1], [0, 1], [0, 1]);
          //both('+', 'lt,sum', [0, 2], [0, 1], [0, 1], [0, 2]);
          //both('+', 'lt,sum', [0, 2], [0, 1], [0, 2], [0, 2]);
          //both('+', 'lt,sum', [0, 2], [0, 2], [0, 2], [0, 2]);
          //both('+', 'lt,sum', [0, 2], [1, 2], [0, 1], [0, 1]);
          //both('+', 'lt,sum', [0, 2], [1, 2], [1, 2], [0, 1]);
          //both('+', 'lt,sum', [0, 2], [1, 2], [1, 2], [1, 2]);
          both('+', 'lt,sum', [0, 20], [0, 1], [0, 1], [0, 1]);
          both('+', 'lt,sum', [0, 20], [0, 10]);
          both('+', 'lt,sum', [0, 20], [0, 0, 9, 9]);
          both('+', 'lt,sum', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('+', 'lt,sum', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('-', [0, 1], [0, 1], [0, 1], [0, 1]);
          //lhs('-', [0, 1], [0, 1], [0, 1], [0, 2]);
          //lhs('-', [0, 1], [0, 1], [0, 2], [0, 2]);
          //lhs('-', [0, 1], [0, 2], [0, 2], [0, 2]);
          //lhs('-', [0, 2], [0, 1], [0, 1], [0, 1]);
          //lhs('-', [0, 2], [0, 1], [0, 1], [0, 2]);
          //lhs('-', [0, 2], [0, 1], [0, 2], [0, 2]);
          //lhs('-', [0, 2], [0, 2], [0, 2], [0, 2]);
          //lhs('-', [0, 2], [1, 2], [0, 1], [0, 1]);
          //lhs('-', [0, 2], [1, 2], [1, 2], [0, 1]);
          //lhs('-', [0, 2], [1, 2], [1, 2], [1, 2]);
          lhs('-', [0, 20], [0, 1], [0, 1], [0, 1]);
          lhs('-', 'lt,minus', [0, 20], [0, 10]);
          lhs('-', [0, 20], [0, 0, 9, 9]);
          lhs('-', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('-', 'lt,minus', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('-', [0, 1], [0, 1], [0, 1], [0, 1]);
          //rhs('-', [0, 1], [0, 1], [0, 1], [0, 2]);
          //rhs('-', [0, 1], [0, 1], [0, 2], [0, 2]);
          //rhs('-', [0, 1], [0, 2], [0, 2], [0, 2]);
          //rhs('-', [0, 2], [0, 1], [0, 1], [0, 1]);
          //rhs('-', [0, 2], [0, 1], [0, 1], [0, 2]);
          //rhs('-', [0, 2], [0, 1], [0, 2], [0, 2]);
          //rhs('-', [0, 2], [0, 2], [0, 2], [0, 2]);
          //rhs('-', [0, 2], [1, 2], [0, 1], [0, 1]);
          //rhs('-', [0, 2], [1, 2], [1, 2], [0, 1]);
          //rhs('-', [0, 2], [1, 2], [1, 2], [1, 2]);
          rhs('-', [0, 20], [0, 1], [0, 1], [0, 1]);
          rhs('-', 'lt,minus', [0, 20], [0, 10]);
          rhs('-', [0, 20], [0, 0, 9, 9]);
          rhs('-', 'lt,minus', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('-', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('*', [0, 1], [0, 1], [0, 1], [0, 1]);
          //both('*', [0, 1], [0, 1], [0, 1], [0, 2]);
          //both('*', [0, 1], [0, 1], [0, 2], [0, 2]);
          //both('*', [0, 1], [0, 2], [0, 2], [0, 2]);
          //both('*', [0, 2], [0, 1], [0, 1], [0, 1]);
          //both('*', [0, 2], [0, 1], [0, 1], [0, 2]);
          //both('*', [0, 2], [0, 1], [0, 2], [0, 2]);
          //both('*', [0, 2], [0, 2], [0, 2], [0, 2]);
          //both('*', [0, 2], [1, 2], [0, 1], [0, 1]);
          //both('*', [0, 2], [1, 2], [1, 2], [0, 1]);
          //both('*', [0, 2], [1, 2], [1, 2], [1, 2]);
          both('*', [0, 100], [0, 1], [0, 1], [0, 1]);
          both('*', 'lt,product', [0, 100], [0, 10]);
          both('*', 'product', [0, 100], [0, 0, 9, 9]);
          both('*', 'product', [0, 100], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('*', 'product', [0, 100], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('/', 'div', [0, 1], [0, 1], [0, 1], [0, 1]);
          //lhs('/', 'div,lt', [0, 1], [0, 1], [0, 1], [0, 2]);
          //lhs('/', 'div,lt', [0, 1], [0, 1], [0, 2], [0, 2]);
          //lhs('/', 'div,lt', [0, 1], [0, 2], [0, 2], [0, 2]);
          //lhs('/', 'div,lt', [0, 2], [0, 1], [0, 1], [0, 1]);
          //lhs('/', 'div,lt', [0, 2], [0, 1], [0, 1], [0, 2]);
          //lhs('/', 'div,lt', [0, 2], [0, 1], [0, 2], [0, 2]);
          //lhs('/', 'div,lt', [0, 2], [0, 2], [0, 2], [0, 2]);
          //lhs('/', 'div,lt', [0, 2], [1, 2], [0, 1], [0, 1]);
          //lhs('/', 'div,lt', [0, 2], [1, 2], [1, 2], [0, 1]);
          //lhs('/', 'div,lt', [0, 2], [1, 2], [1, 2], [1, 2]);
          lhs('/', 'div,lt', [0, 20], [0, 1], [0, 1], [0, 1]);
          lhs('/', 'div,lt', [0, 20], [0, 10]);
          lhs('/', 'div', [0, 20], [0, 0, 9, 9]);
          lhs('/', 'reject', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('/', 'div', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('/', 'div', [0, 1], [0, 1], [0, 1], [0, 1]);
          //rhs('/', 'div,lt', [0, 1], [0, 1], [0, 1], [0, 2]);
          //rhs('/', 'div,lt', [0, 1], [0, 1], [0, 2], [0, 2]);
          //rhs('/', 'div,lt', [0, 1], [0, 2], [0, 2], [0, 2]);
          //rhs('/', 'div,lt', [0, 2], [0, 1], [0, 1], [0, 1]);
          //rhs('/', 'div,lt', [0, 2], [0, 1], [0, 1], [0, 2]);
          //rhs('/', 'div,lt', [0, 2], [0, 1], [0, 2], [0, 2]);
          //rhs('/', 'div,lt', [0, 2], [0, 2], [0, 2], [0, 2]);
          //rhs('/', 'div,lt', [0, 2], [1, 2], [0, 1], [0, 1]);
          //rhs('/', 'div,lt', [0, 2], [1, 2], [1, 2], [0, 1]);
          //rhs('/', 'div,lt', [0, 2], [1, 2], [1, 2], [1, 2]);
          rhs('/', 'div,lt', [0, 20], [0, 1], [0, 1], [0, 1]);
          rhs('/', 'div,lt', [0, 20], [0, 10]);
          rhs('/', 'div', [0, 20], [0, 0, 9, 9]);
          rhs('/', 'div', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('/', 'reject', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
        });
      });
    });

    describe('LTE', function() {

      describe('LTE_LHS', function() {

        describe('binary', function() {

          let both = testBinaryBinary.bind(undefined, '<=', 'lhs', ''); // A & B, A @ C  and  A & B, C @ A
          let lhs = testBinaryBinary.bind(undefined, '<=', 'lhs', 'lhs'); // A & B, A @ C
          let rhs = testBinaryBinary.bind(undefined, '<=', 'lhs', 'rhs'); // A & B, C @ A

          both('&', [0, 1], [0, 1], [0, 1]);
          //both('&', [0, 1], [0, 1], [0, 2]);
          //both('&', [0, 1], [0, 2], [0, 1]);
          //both('&', [0, 1], [0, 2], [0, 2]);
          //both('&', [0, 2], [0, 1], [0, 1]);
          //both('&', [0, 2], [0, 1], [0, 2]);
          //both('&', [0, 2], [0, 2], [0, 1]);
          //both('&', [0, 2], [0, 2], [0, 2]);
          //both('&', [0, 2], [0, 1], [1, 2]);
          //both('&', [0, 2], [1, 2], [0, 1]);
          //both('&', [0, 2], [1, 2], [1, 2]);
          both('&', [0, 10]);
          both('&', [0, 0, 9, 9]);
          both('&', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('&', 'reject', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!=', 'some', [0, 1], [0, 1], [0, 1]);
          //both('!=', [0, 1], [0, 1], [0, 2]);
          //both('!=', [0, 1], [0, 2], [0, 1]);
          //both('!=', [0, 1], [0, 2], [0, 2]);
          //both('!=', [0, 2], [0, 1], [0, 1]);
          //both('!=', [0, 2], [0, 1], [0, 2]);
          //both('!=', [0, 2], [0, 2], [0, 1]);
          //both('!=', [0, 2], [0, 2], [0, 2]);
          //both('!=', [0, 2], [0, 1], [1, 2]);
          //both('!=', [0, 2], [1, 2], [0, 1]);
          //both('!=', [0, 2], [1, 2], [1, 2]);
          both('!=', 'diff,lte', [0, 10]);
          both('!=', 'some', [0, 0, 9, 9]);
          both('!=', 'some', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!=', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('->', [0, 1], [0, 1], [0, 1]);
          //lhs('->', [0, 1], [0, 1], [0, 2]);
          //lhs('->', [0, 1], [0, 2], [0, 1]);
          //lhs('->', [0, 1], [0, 2], [0, 2]);
          //lhs('->', [0, 2], [0, 1], [0, 1]);
          //lhs('->', [0, 2], [0, 1], [0, 2]);
          //lhs('->', [0, 2], [0, 2], [0, 1]);
          //lhs('->', [0, 2], [0, 2], [0, 2]);
          //lhs('->', [0, 2], [0, 1], [1, 2]);
          //lhs('->', [0, 2], [1, 2], [0, 1]);
          //lhs('->', [0, 2], [1, 2], [1, 2]);
          lhs('->', 'imp,lte', [0, 10]);
          lhs('->', [0, 0, 9, 9]);
          lhs('->', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('->', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('->', 'imp,imp', [0, 1], [0, 1], [0, 1]);
          //rhs('->', [0, 1], [0, 1], [0, 2]);
          //rhs('->', [0, 1], [0, 2], [0, 1]);
          //rhs('->', [0, 1], [0, 2], [0, 2]);
          //rhs('->', [0, 2], [0, 1], [0, 1]);
          //rhs('->', [0, 2], [0, 1], [0, 2]);
          //rhs('->', [0, 2], [0, 2], [0, 1]);
          //rhs('->', [0, 2], [0, 2], [0, 2]);
          //rhs('->', [0, 2], [0, 1], [1, 2]);
          //rhs('->', [0, 2], [1, 2], [0, 1]);
          //rhs('->', [0, 2], [1, 2], [1, 2]);
          rhs('->', 'imp,lte', [0, 10]);
          rhs('->', 'imp,imp', [0, 0, 9, 9]);
          rhs('->', 'imp,imp', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('->', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<', [0, 1], [0, 1], [0, 1]);
          //lhs('<', [0, 1], [0, 1], [0, 2]);
          //lhs('<', [0, 1], [0, 2], [0, 1]);
          //lhs('<', [0, 1], [0, 2], [0, 2]);
          //lhs('<', [0, 2], [0, 1], [0, 1]);
          //lhs('<', [0, 2], [0, 1], [0, 2]);
          //lhs('<', [0, 2], [0, 2], [0, 1]);
          //lhs('<', [0, 2], [0, 2], [0, 2]);
          //lhs('<', [0, 2], [0, 1], [1, 2]);
          //lhs('<', [0, 2], [1, 2], [0, 1]);
          //lhs('<', [0, 2], [1, 2], [1, 2]);
          lhs('<', 'lt,lte', [0, 10]);
          lhs('<', [0, 0, 9, 9]);
          lhs('<', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<', [0, 1], [0, 1], [0, 1]);
          //rhs('<', [0, 1], [0, 1], [0, 2]);
          //rhs('<', [0, 1], [0, 2], [0, 1]);
          //rhs('<', [0, 1], [0, 2], [0, 2]);
          //rhs('<', [0, 2], [0, 1], [0, 1]);
          //rhs('<', [0, 2], [0, 1], [0, 2]);
          //rhs('<', [0, 2], [0, 2], [0, 1]);
          //rhs('<', [0, 2], [0, 2], [0, 2]);
          //rhs('<', [0, 2], [0, 1], [1, 2]);
          //rhs('<', [0, 2], [1, 2], [0, 1]);
          //rhs('<', [0, 2], [1, 2], [1, 2]);
          rhs('<', 'lt,lte', [0, 10]);
          rhs('<', [0, 0, 9, 9]);
          rhs('<', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<', 'reject', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<=', [0, 1], [0, 1], [0, 1]);
          //lhs('<=', [0, 1], [0, 1], [0, 2]);
          //lhs('<=', [0, 1], [0, 2], [0, 1]);
          //lhs('<=', [0, 1], [0, 2], [0, 2]);
          //lhs('<=', [0, 2], [0, 1], [0, 1]);
          //lhs('<=', [0, 2], [0, 1], [0, 2]);
          //lhs('<=', [0, 2], [0, 2], [0, 1]);
          //lhs('<=', [0, 2], [0, 2], [0, 2]);
          //lhs('<=', [0, 2], [0, 1], [1, 2]);
          //lhs('<=', [0, 2], [1, 2], [0, 1]);
          //lhs('<=', [0, 2], [1, 2], [1, 2]);
          lhs('<=', [0, 10]);
          lhs('<=', [0, 0, 9, 9]);
          lhs('<=', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<=', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<=', 'imp,imp', [0, 1], [0, 1], [0, 1]);
          //rhs('<=', [0, 1], [0, 1], [0, 2]);
          //rhs('<=', [0, 1], [0, 2], [0, 1]);
          //rhs('<=', [0, 1], [0, 2], [0, 2]);
          //rhs('<=', [0, 2], [0, 1], [0, 1]);
          //rhs('<=', [0, 2], [0, 1], [0, 2]);
          //rhs('<=', [0, 2], [0, 2], [0, 1]);
          //rhs('<=', [0, 2], [0, 2], [0, 2]);
          //rhs('<=', [0, 2], [0, 1], [1, 2]);
          //rhs('<=', [0, 2], [1, 2], [0, 1]);
          //rhs('<=', [0, 2], [1, 2], [1, 2]);
          rhs('<=', 'lte,lte', [0, 10]);
          rhs('<=', 'imp,imp', [0, 0, 9, 9]);
          rhs('<=', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<=', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!&', [0, 1], [0, 1], [0, 1]);
          //both('!&', [0, 1], [0, 1], [0, 2]);
          //both('!&', [0, 1], [0, 2], [0, 1]);
          //both('!&', [0, 1], [0, 2], [0, 2]);
          //both('!&', [0, 2], [0, 1], [0, 1]);
          //both('!&', [0, 2], [0, 1], [0, 2]);
          //both('!&', [0, 2], [0, 2], [0, 1]);
          //both('!&', [0, 2], [0, 2], [0, 2]);
          //both('!&', [0, 2], [0, 1], [1, 2]);
          //both('!&', [0, 2], [1, 2], [0, 1]);
          //both('!&', [0, 2], [1, 2], [1, 2]);
          both('!&', [0, 10]);
          both('!&', [0, 0, 9, 9]);
          both('!&', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!&', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('!->', [0, 1], [0, 1], [0, 1]);
          //lhs('!->', [0, 1], [0, 1], [0, 2]);
          //lhs('!->', [0, 1], [0, 2], [0, 1]);
          //lhs('!->', [0, 1], [0, 2], [0, 2]);
          //lhs('!->', [0, 2], [0, 1], [0, 1]);
          //lhs('!->', [0, 2], [0, 1], [0, 2]);
          //lhs('!->', [0, 2], [0, 2], [0, 1]);
          //lhs('!->', [0, 2], [0, 2], [0, 2]);
          //lhs('!->', [0, 2], [0, 1], [1, 2]);
          //lhs('!->', [0, 2], [1, 2], [0, 1]);
          //lhs('!->', [0, 2], [1, 2], [1, 2]);
          lhs('!->', [0, 10]);
          lhs('!->', [0, 0, 9, 9]);
          lhs('!->', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('!->', 'reject', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('!->', [0, 1], [0, 1], [0, 1]);
          //rhs('!->', [0, 1], [0, 1], [0, 2]);
          //rhs('!->', [0, 1], [0, 2], [0, 1]);
          //rhs('!->', [0, 1], [0, 2], [0, 2]);
          //rhs('!->', [0, 2], [0, 1], [0, 1]);
          //rhs('!->', [0, 2], [0, 1], [0, 2]);
          //rhs('!->', [0, 2], [0, 2], [0, 1]);
          //rhs('!->', [0, 2], [0, 2], [0, 2]);
          //rhs('!->', [0, 2], [0, 1], [1, 2]);
          //rhs('!->', [0, 2], [1, 2], [0, 1]);
          //rhs('!->', [0, 2], [1, 2], [1, 2]);
          rhs('!->', [0, 10]);
          rhs('!->', [0, 0, 9, 9]);
          rhs('!->', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('!->', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!|', [0, 1], [0, 1], [0, 1]);
          //both('!|', [0, 1], [0, 1], [0, 2]);
          //both('!|', [0, 1], [0, 2], [0, 1]);
          //both('!|', [0, 1], [0, 2], [0, 2]);
          //both('!|', [0, 2], [0, 1], [0, 1]);
          //both('!|', [0, 2], [0, 1], [0, 2]);
          //both('!|', [0, 2], [0, 2], [0, 1]);
          //both('!|', [0, 2], [0, 2], [0, 2]);
          //both('!|', [0, 2], [0, 1], [1, 2]);
          //both('!|', [0, 2], [1, 2], [0, 1]);
          //both('!|', [0, 2], [1, 2], [1, 2]);
          both('!|', [0, 10]);
          both('!|', [0, 0, 9, 9]);
          both('!|', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!|', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('==', 'imp', [0, 1], [0, 1], [0, 1]);
          //both('==', [0, 1], [0, 1], [0, 2]);
          //both('==', [0, 1], [0, 2], [0, 1]);
          //both('==', [0, 1], [0, 2], [0, 2]);
          //both('==', [0, 2], [0, 1], [0, 1]);
          //both('==', [0, 2], [0, 1], [0, 2]);
          //both('==', [0, 2], [0, 2], [0, 1]);
          //both('==', [0, 2], [0, 2], [0, 2]);
          //both('==', [0, 2], [0, 1], [1, 2]);
          //both('==', [0, 2], [1, 2], [0, 1]);
          //both('==', [0, 2], [1, 2], [1, 2]);
          both('==', 'lte', [0, 10]);
          both('==', 'imp', [0, 0, 9, 9]);
          both('==', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('==', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!^', 'imp', [0, 1], [0, 1], [0, 1]);
          //both('!^', [0, 1], [0, 1], [0, 2]);
          //both('!^', [0, 1], [0, 2], [0, 1]);
          //both('!^', [0, 1], [0, 2], [0, 2]);
          //both('!^', [0, 2], [0, 1], [0, 1]);
          //both('!^', [0, 2], [0, 1], [0, 2]);
          //both('!^', [0, 2], [0, 2], [0, 1]);
          //both('!^', [0, 2], [0, 2], [0, 2]);
          //both('!^', [0, 2], [0, 1], [1, 2]);
          //both('!^', [0, 2], [1, 2], [0, 1]);
          //both('!^', [0, 2], [1, 2], [1, 2]);
          both('!^', 'lte', [0, 10]);
          both('!^', 'imp', [0, 0, 9, 9]);
          both('!^', 'imp', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!^', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('^', 'some', [0, 1], [0, 1], [0, 1]);
          //both('^', [0, 1], [0, 1], [0, 2]);
          //both('^', [0, 1], [0, 2], [0, 1]);
          //both('^', [0, 1], [0, 2], [0, 2]);
          //both('^', [0, 2], [0, 1], [0, 1]);
          //both('^', [0, 2], [0, 1], [0, 2]);
          //both('^', [0, 2], [0, 2], [0, 1]);
          //both('^', [0, 2], [0, 2], [0, 2]);
          //both('^', [0, 2], [0, 1], [1, 2]);
          //both('^', [0, 2], [1, 2], [0, 1]);
          //both('^', [0, 2], [1, 2], [1, 2]);
          both('^', 'lte,xor', [0, 10]);
          both('^', 'some', [0, 0, 9, 9]);
          both('^', 'some', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('^', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
        });

        describe('ternary with shared arg', function() {

          let both = testBinaryTernarySharedArgs.bind(undefined, '<=', 'lhs', ''); // A & B, R = A @ C  and  A & B, R = C @ A
          let lhs = testBinaryTernarySharedArgs.bind(undefined, '<=', 'lhs', 'lhs'); // A & B, R = A @ C
          let rhs = testBinaryTernarySharedArgs.bind(undefined, '<=', 'lhs', 'rhs'); // A & B, R = C @ A

          // A & B, R = A &? C
          both('&?', 'imp,isall', [0, 1], [0, 1], [0, 1], [0, 1]);
          both('&?', 'imp,isall', [0, 1], [0, 1], [0, 1], [0, 2]);
          both('&?', 'isall,lte', [0, 1], [0, 1], [0, 2], [0, 2]);
          both('&?', 'isall,lte', [0, 1], [0, 2], [0, 2], [0, 2]);
          both('&?', 'imp,isall', [0, 2], [0, 1], [0, 1], [0, 1]);
          both('&?', 'imp,isall', [0, 2], [0, 1], [0, 1], [0, 2]);
          both('&?', 'isall,lte', [0, 2], [0, 1], [0, 2], [0, 2]);
          both('&?', 'isall,lte', [0, 2], [0, 2], [0, 2], [0, 2]);
          both('&?', [0, 2], [1, 2], [0, 1], [0, 1]);
          both('&?', [0, 2], [1, 2], [1, 2], [0, 1]);
          both('&?', [0, 2], [1, 2], [1, 2], [1, 2]);
          both('&?', 'isall,lte', [0, 1], [0, 10]);
          both('&?', 'imp,isall', [0, 1], [0, 0, 9, 9]);
          both('&?', 'imp,isall', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('&?', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('==?', 'imp,issame', [0, 1], [0, 1], [0, 1], [0, 1]);
          both('==?', 'imp,issame', [0, 1], [0, 1], [0, 1], [0, 2]);
          both('==?', 'issame,lte', [0, 1], [0, 1], [0, 2], [0, 2]);
          both('==?', 'issame,lte', [0, 1], [0, 2], [0, 2], [0, 2]);
          both('==?', 'imp,issame', [0, 2], [0, 1], [0, 1], [0, 1]);
          both('==?', 'imp,issame', [0, 2], [0, 1], [0, 1], [0, 2]);
          both('==?', 'issame,lte', [0, 2], [0, 1], [0, 2], [0, 2]);
          both('==?', 'issame,lte', [0, 2], [0, 2], [0, 2], [0, 2]);
          both('==?', 'issame', [0, 2], [1, 2], [0, 1], [0, 1]);
          both('==?', 'issame,lte', [0, 2], [1, 2], [1, 2], [0, 1]);
          both('==?', 'issame,lte', [0, 2], [1, 2], [1, 2], [1, 2]);
          both('==?', 'issame,lte', [0, 1], [0, 10]);
          both('==?', 'imp,issame', [0, 1], [0, 0, 9, 9]);
          both('==?', 'imp,issame', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('==?', 'xor', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!=?', 'imp,isdiff', [0, 1], [0, 1], [0, 1], [0, 1]);
          both('!=?', 'imp,isdiff', [0, 1], [0, 1], [0, 1], [0, 2]);
          both('!=?', 'isdiff,lte', [0, 1], [0, 1], [0, 2], [0, 2]);
          both('!=?', 'isdiff,lte', [0, 1], [0, 2], [0, 2], [0, 2]);
          both('!=?', 'imp,isdiff', [0, 2], [0, 1], [0, 1], [0, 1]);
          both('!=?', 'imp,isdiff', [0, 2], [0, 1], [0, 1], [0, 2]);
          both('!=?', 'isdiff,lte', [0, 2], [0, 1], [0, 2], [0, 2]);
          both('!=?', 'isdiff,lte', [0, 2], [0, 2], [0, 2], [0, 2]);
          both('!=?', 'isdiff', [0, 2], [1, 2], [0, 1], [0, 1]);
          both('!=?', 'isdiff,lte', [0, 2], [1, 2], [1, 2], [0, 1]);
          both('!=?', 'isdiff,lte', [0, 2], [1, 2], [1, 2], [1, 2]);
          both('!=?', 'isdiff,lte', [0, 1], [0, 10]);
          both('!=?', 'imp,isdiff', [0, 1], [0, 0, 9, 9]);
          both('!=?', 'imp,isdiff', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!=?', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<?', 'imp,islt', [0, 1], [0, 1], [0, 1], [0, 1]);
          lhs('<?', 'imp,islt', [0, 1], [0, 1], [0, 1], [0, 2]);
          lhs('<?', 'islt,lte', [0, 1], [0, 1], [0, 2], [0, 2]);
          lhs('<?', 'islt,lte', [0, 1], [0, 2], [0, 2], [0, 2]);
          lhs('<?', 'imp,islt', [0, 2], [0, 1], [0, 1], [0, 1]);
          lhs('<?', 'imp,islt', [0, 2], [0, 1], [0, 1], [0, 2]);
          lhs('<?', 'islt,lte', [0, 2], [0, 1], [0, 2], [0, 2]);
          lhs('<?', 'islt,lte', [0, 2], [0, 2], [0, 2], [0, 2]);
          lhs('<?', [0, 2], [1, 2], [0, 1], [0, 1]);
          lhs('<?', [0, 2], [1, 2], [1, 2], [0, 1]);
          lhs('<?', 'islt,lte', [0, 2], [1, 2], [1, 2], [1, 2]);
          lhs('<?', 'islt,lte', [0, 1], [0, 10]);
          lhs('<?', 'imp,islt', [0, 1], [0, 0, 9, 9]);
          lhs('<?', 'imp,islt', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<?', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<?', 'imp,islt', [0, 1], [0, 1], [0, 1], [0, 1]);
          rhs('<?', 'imp,islt', [0, 1], [0, 1], [0, 1], [0, 2]);
          rhs('<?', 'islt,lte', [0, 1], [0, 1], [0, 2], [0, 2]);
          rhs('<?', 'islt,lte', [0, 1], [0, 2], [0, 2], [0, 2]);
          rhs('<?', 'imp,islt', [0, 2], [0, 1], [0, 1], [0, 1]);
          rhs('<?', 'imp,islt', [0, 2], [0, 1], [0, 1], [0, 2]);
          rhs('<?', 'islt,lte', [0, 2], [0, 1], [0, 2], [0, 2]);
          rhs('<?', 'islt,lte', [0, 2], [0, 2], [0, 2], [0, 2]);
          rhs('<?', 'islt', [0, 2], [1, 2], [0, 1], [0, 1]);
          rhs('<?', 'islt,lte', [0, 2], [1, 2], [1, 2], [0, 1]);
          rhs('<?', 'islt,lte', [0, 2], [1, 2], [1, 2], [1, 2]);
          rhs('<?', 'islt,lte', [0, 1], [0, 10]);
          rhs('<?', 'imp,islt', [0, 1], [0, 0, 9, 9]);
          rhs('<?', 'imp,islt', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<?', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<=?', 'imp,islte', [0, 1], [0, 1], [0, 1], [0, 1]);
          lhs('<=?', 'imp,islte', [0, 1], [0, 1], [0, 1], [0, 2]);
          lhs('<=?', 'islte,lte', [0, 1], [0, 1], [0, 2], [0, 2]);
          lhs('<=?', 'islte,lte', [0, 1], [0, 2], [0, 2], [0, 2]);
          lhs('<=?', 'imp,islte', [0, 2], [0, 1], [0, 1], [0, 1]);
          lhs('<=?', 'imp,islte', [0, 2], [0, 1], [0, 1], [0, 2]);
          lhs('<=?', 'islte,lte', [0, 2], [0, 1], [0, 2], [0, 2]);
          lhs('<=?', 'islte,lte', [0, 2], [0, 2], [0, 2], [0, 2]);
          lhs('<=?', 'islte', [0, 2], [1, 2], [0, 1], [0, 1]);
          lhs('<=?', 'islte,lte', [0, 2], [1, 2], [1, 2], [0, 1]);
          lhs('<=?', 'islte,lte', [0, 2], [1, 2], [1, 2], [1, 2]);
          lhs('<=?', 'islte,lte', [0, 1], [0, 10]);
          lhs('<=?', 'imp,islte', [0, 1], [0, 0, 9, 9]);
          lhs('<=?', 'imp,islte', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<=?', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<=?', 'imp,islte', [0, 1], [0, 1], [0, 1], [0, 1]);
          rhs('<=?', 'imp,islte', [0, 1], [0, 1], [0, 1], [0, 2]);
          rhs('<=?', 'islte,lte', [0, 1], [0, 1], [0, 2], [0, 2]);
          rhs('<=?', 'islte,lte', [0, 1], [0, 2], [0, 2], [0, 2]);
          rhs('<=?', 'imp,islte', [0, 2], [0, 1], [0, 1], [0, 1]);
          rhs('<=?', 'imp,islte', [0, 2], [0, 1], [0, 1], [0, 2]);
          rhs('<=?', 'islte,lte', [0, 2], [0, 1], [0, 2], [0, 2]);
          rhs('<=?', 'islte,lte', [0, 2], [0, 2], [0, 2], [0, 2]);
          rhs('<=?', [0, 2], [1, 2], [0, 1], [0, 1]);
          rhs('<=?', [0, 2], [1, 2], [1, 2], [0, 1]);
          rhs('<=?', 'islte,lte', [0, 2], [1, 2], [1, 2], [1, 2]);
          rhs('<=?', 'islte,lte', [0, 1], [0, 10]);
          rhs('<=?', 'imp,islte', [0, 1], [0, 0, 9, 9]);
          rhs('<=?', 'imp,islte', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<=?', 'islte', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!&?', 'imp,isnall', [0, 1], [0, 1], [0, 1], [0, 1]);
          both('!&?', 'imp,isnall', [0, 1], [0, 1], [0, 1], [0, 2]);
          both('!&?', 'isnall,lte', [0, 1], [0, 1], [0, 2], [0, 2]);
          both('!&?', 'isnall,lte', [0, 1], [0, 2], [0, 2], [0, 2]);
          both('!&?', 'imp,isnall', [0, 2], [0, 1], [0, 1], [0, 1]);
          both('!&?', 'imp,isnall', [0, 2], [0, 1], [0, 1], [0, 2]);
          both('!&?', 'isnall,lte', [0, 2], [0, 1], [0, 2], [0, 2]);
          both('!&?', 'isnall,lte', [0, 2], [0, 2], [0, 2], [0, 2]);
          both('!&?', 'isnall', [0, 2], [1, 2], [0, 1], [0, 1]);
          both('!&?', 'isnall,lte', [0, 2], [1, 2], [1, 2], [0, 1]);
          both('!&?', [0, 2], [1, 2], [1, 2], [1, 2]);
          both('!&?', 'isnall,lte', [0, 1], [0, 10]);
          both('!&?', 'imp,isnall', [0, 1], [0, 0, 9, 9]);
          both('!&?', 'imp,isnall', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!&?', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('|?', 'imp,issome', [0, 1], [0, 1], [0, 1], [0, 1]);
          both('|?', 'imp,issome', [0, 1], [0, 1], [0, 1], [0, 2]);
          both('|?', 'issome,lte', [0, 1], [0, 1], [0, 2], [0, 2]);
          both('|?', 'issome,lte', [0, 1], [0, 2], [0, 2], [0, 2]);
          both('|?', 'imp,issome', [0, 2], [0, 1], [0, 1], [0, 1]);
          both('|?', 'imp,issome', [0, 2], [0, 1], [0, 1], [0, 2]);
          both('|?', 'issome,lte', [0, 2], [0, 1], [0, 2], [0, 2]);
          both('|?', 'issome,lte', [0, 2], [0, 2], [0, 2], [0, 2]);
          both('|?', [0, 2], [1, 2], [0, 1], [0, 1]);
          both('|?', [0, 2], [1, 2], [1, 2], [0, 1]);
          both('|?', [0, 2], [1, 2], [1, 2], [1, 2]);
          both('|?', 'issome,lte', [0, 1], [0, 10]);
          both('|?', 'imp,issome', [0, 1], [0, 0, 9, 9]);
          both('|?', 'imp,issome', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('|?', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!|?', 'imp,isnone', [0, 1], [0, 1], [0, 1], [0, 1]);
          both('!|?', 'imp,isnone', [0, 1], [0, 1], [0, 1], [0, 2]);
          both('!|?', 'isnone,lte', [0, 1], [0, 1], [0, 2], [0, 2]);
          both('!|?', 'isnone,lte', [0, 1], [0, 2], [0, 2], [0, 2]);
          both('!|?', 'imp,isnone', [0, 2], [0, 1], [0, 1], [0, 1]);
          both('!|?', 'imp,isnone', [0, 2], [0, 1], [0, 1], [0, 2]);
          both('!|?', 'isnone,lte', [0, 2], [0, 1], [0, 2], [0, 2]);
          both('!|?', 'isnone,lte', [0, 2], [0, 2], [0, 2], [0, 2]);
          both('!|?', [0, 2], [1, 2], [0, 1], [0, 1]);
          both('!|?', [0, 2], [1, 2], [1, 2], [0, 1]);
          both('!|?', [0, 2], [1, 2], [1, 2], [1, 2]);
          both('!|?', 'isnone,lte', [0, 1], [0, 10]);
          both('!|?', 'imp,isnone', [0, 1], [0, 0, 9, 9]);
          both('!|?', 'imp,isnone', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!|?', 'isnone', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('+', 'imp,sum', [0, 1], [0, 1], [0, 1], [0, 1]);
          both('+', 'imp,sum', [0, 1], [0, 1], [0, 1], [0, 2]);
          both('+', 'lte,sum', [0, 1], [0, 1], [0, 2], [0, 2]);
          both('+', 'lte,sum', [0, 1], [0, 2], [0, 2], [0, 2]);
          both('+', 'imp,issome', [0, 2], [0, 1], [0, 1], [0, 1]);
          both('+', 'imp,sum', [0, 2], [0, 1], [0, 1], [0, 2]);
          both('+', 'lte,sum', [0, 2], [0, 1], [0, 2], [0, 2]);
          both('+', 'lte,sum', [0, 2], [0, 2], [0, 2], [0, 2]);
          both('+', 'isdiff', [0, 2], [1, 2], [0, 1], [0, 1]);
          both('+', 'lte,sum', [0, 2], [1, 2], [1, 2], [0, 1]);
          both('+', [0, 2], [1, 2], [1, 2], [1, 2]);
          both('+', 'imp,issome', [0, 20], [0, 1], [0, 1], [0, 1]);
          both('+', 'issome,lte', [0, 20], [0, 10]);
          both('+', 'imp,issome', [0, 20], [0, 0, 9, 9]);
          both('+', 'imp,issome', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('+', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('-', 'imp,minus', [0, 1], [0, 1], [0, 1], [0, 1]);
          lhs('-', 'imp,minus', [0, 1], [0, 1], [0, 1], [0, 2]);
          lhs('-', 'lte,minus', [0, 1], [0, 1], [0, 2], [0, 2]);
          lhs('-', 'lte,minus', [0, 1], [0, 2], [0, 2], [0, 2]);
          lhs('-', 'imp,minus', [0, 2], [0, 1], [0, 1], [0, 1]);
          lhs('-', 'imp,minus', [0, 2], [0, 1], [0, 1], [0, 2]);
          lhs('-', 'lte,minus', [0, 2], [0, 1], [0, 2], [0, 2]);
          lhs('-', 'lte,minus', [0, 2], [0, 2], [0, 2], [0, 2]);
          lhs('-', 'minus', [0, 2], [1, 2], [0, 1], [0, 1]);
          lhs('-', 'lte,minus', [0, 2], [1, 2], [1, 2], [0, 1]);
          lhs('-', 'lte,minus', [0, 2], [1, 2], [1, 2], [1, 2]);
          lhs('-', 'imp,minus', [0, 20], [0, 1], [0, 1], [0, 1]);
          lhs('-', 'lte,minus', [0, 20], [0, 10]);
          lhs('-', 'imp,minus', [0, 20], [0, 0, 9, 9]);
          lhs('-', 'imp', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('-', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('-', 'imp,minus', [0, 1], [0, 1], [0, 1], [0, 1]);
          rhs('-', 'imp,minus', [0, 1], [0, 1], [0, 1], [0, 2]);
          rhs('-', 'lte,minus', [0, 1], [0, 1], [0, 2], [0, 2]);
          rhs('-', 'lte,minus', [0, 1], [0, 2], [0, 2], [0, 2]);
          rhs('-', 'imp,minus', [0, 2], [0, 1], [0, 1], [0, 1]);
          rhs('-', 'imp,minus', [0, 2], [0, 1], [0, 1], [0, 2]);
          rhs('-', 'lte,minus', [0, 2], [0, 1], [0, 2], [0, 2]);
          rhs('-', 'lte,minus', [0, 2], [0, 2], [0, 2], [0, 2]);
          rhs('-', [0, 2], [1, 2], [0, 1], [0, 1]);
          rhs('-', [0, 2], [1, 2], [1, 2], [0, 1]);
          rhs('-', 'lte,minus', [0, 2], [1, 2], [1, 2], [1, 2]);
          rhs('-', 'imp,minus', [0, 20], [0, 1], [0, 1], [0, 1]);
          rhs('-', 'lte,minus', [0, 20], [0, 10]);
          rhs('-', 'imp,minus', [0, 20], [0, 0, 9, 9]);
          rhs('-', 'imp,minus', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('-', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('*', 'imp,product', [0, 1], [0, 1], [0, 1], [0, 1]);
          both('*', 'imp,product', [0, 1], [0, 1], [0, 1], [0, 2]);
          both('*', 'lte,product', [0, 1], [0, 1], [0, 2], [0, 2]);
          both('*', 'lte,product', [0, 1], [0, 2], [0, 2], [0, 2]);
          both('*', 'imp,product', [0, 2], [0, 1], [0, 1], [0, 1]);
          both('*', 'imp,product', [0, 2], [0, 1], [0, 1], [0, 2]);
          both('*', 'lte,product', [0, 2], [0, 1], [0, 2], [0, 2]);
          both('*', 'lte,product', [0, 2], [0, 2], [0, 2], [0, 2]);
          both('*', [0, 2], [1, 2], [0, 1], [0, 1]);
          both('*', 'lte,product', [0, 2], [1, 2], [1, 2], [0, 1]);
          both('*', 'lte,product', [0, 2], [1, 2], [1, 2], [1, 2]);
          both('*', 'imp,product', [0, 100], [0, 1], [0, 1], [0, 1]);
          both('*', 'lte,product', [0, 100], [0, 10]);
          both('*', 'imp,product', [0, 100], [0, 0, 9, 9]);
          both('*', 'imp,product', [0, 100], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('*', [0, 100], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('/', 'div,imp', [0, 1], [0, 1], [0, 1], [0, 1]);
          lhs('/', 'div,imp', [0, 1], [0, 1], [0, 1], [0, 2]);
          lhs('/', 'div,lte', [0, 1], [0, 1], [0, 2], [0, 2]);
          lhs('/', 'div,lte', [0, 1], [0, 2], [0, 2], [0, 2]);
          lhs('/', 'div,imp', [0, 2], [0, 1], [0, 1], [0, 1]);
          lhs('/', 'div,imp', [0, 2], [0, 1], [0, 1], [0, 2]);
          lhs('/', 'div,lte', [0, 2], [0, 1], [0, 2], [0, 2]);
          lhs('/', 'div,lte', [0, 2], [0, 2], [0, 2], [0, 2]);
          lhs('/', 'div', [0, 2], [1, 2], [0, 1], [0, 1]);
          lhs('/', 'div,lte', [0, 2], [1, 2], [1, 2], [0, 1]);
          lhs('/', 'div,lte', [0, 2], [1, 2], [1, 2], [1, 2]);
          lhs('/', 'div,imp', [0, 20], [0, 1], [0, 1], [0, 1]);
          lhs('/', 'div,lte', [0, 20], [0, 10]);
          lhs('/', 'div,imp', [0, 20], [0, 0, 9, 9]);
          lhs('/', 'div,imp', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('/', 'div', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('/', 'div,imp', [0, 1], [0, 1], [0, 1], [0, 1]);
          rhs('/', 'div,imp', [0, 1], [0, 1], [0, 1], [0, 2]);
          rhs('/', 'div,lte', [0, 1], [0, 1], [0, 2], [0, 2]);
          rhs('/', 'div,lte', [0, 1], [0, 2], [0, 2], [0, 2]);
          rhs('/', 'div,imp', [0, 2], [0, 1], [0, 1], [0, 1]);
          rhs('/', 'div,imp', [0, 2], [0, 1], [0, 1], [0, 2]);
          rhs('/', 'div,lte', [0, 2], [0, 1], [0, 2], [0, 2]);
          rhs('/', 'div,lte', [0, 2], [0, 2], [0, 2], [0, 2]);
          rhs('/', 'div', [0, 2], [1, 2], [0, 1], [0, 1]);
          rhs('/', 'div,lte', [0, 2], [1, 2], [1, 2], [0, 1]);
          rhs('/', 'div,lte', [0, 2], [1, 2], [1, 2], [1, 2]);
          rhs('/', 'div,imp', [0, 20], [0, 1], [0, 1], [0, 1]);
          rhs('/', 'div,lte', [0, 20], [0, 10]);
          rhs('/', 'div,imp', [0, 20], [0, 0, 9, 9]);
          rhs('/', 'div,imp', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('/', 'reject', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
        });

        describe('ternary with shared result', function() {

          let both = testBinaryTernarySharedResult.bind(undefined, '<=', 'lhs', ''); // A & B, R = A @ C  and  A & B, R = C @ A
          let lhs = testBinaryTernarySharedResult.bind(undefined, '<=', 'lhs', 'lhs'); // A & B, R = A @ C
          let rhs = testBinaryTernarySharedResult.bind(undefined, '<=', 'lhs', 'rhs'); // A & B, R = C @ A

          // A & B, R = A &? C
          both('&?', 'imp,isall', [0, 1], [0, 1], [0, 1], [0, 1]);
          both('&?', 'imp,isall', [0, 1], [0, 1], [0, 1], [0, 2]);
          both('&?', 'isall,lte', [0, 1], [0, 1], [0, 2], [0, 2]);
          both('&?', 'isall,lte', [0, 1], [0, 2], [0, 2], [0, 2]);
          both('&?', 'imp,isall', [0, 2], [0, 1], [0, 1], [0, 1]);
          both('&?', 'imp,isall', [0, 2], [0, 1], [0, 1], [0, 2]);
          both('&?', 'isall,lte', [0, 2], [0, 1], [0, 2], [0, 2]);
          both('&?', 'isall,lte', [0, 2], [0, 2], [0, 2], [0, 2]);
          both('&?', 'imp', [0, 2], [1, 2], [0, 1], [0, 1]);
          both('&?', 'lte', [0, 2], [1, 2], [1, 2], [0, 1]);
          both('&?', [0, 2], [1, 2], [1, 2], [1, 2]);
          both('&?', 'isall,lte', [0, 1], [0, 10]);
          both('&?', 'imp,isall', [0, 1], [0, 0, 9, 9]);
          both('&?', 'imp,isall', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('&?', 'imp,isall', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('==?', 'imp,issame', [0, 1], [0, 1], [0, 1], [0, 1]);
          both('==?', 'imp,issame', [0, 1], [0, 1], [0, 1], [0, 2]);
          both('==?', 'issame,lte', [0, 1], [0, 1], [0, 2], [0, 2]);
          both('==?', 'issame,lte', [0, 1], [0, 2], [0, 2], [0, 2]);
          both('==?', 'imp,issame', [0, 2], [0, 1], [0, 1], [0, 1]);
          both('==?', 'imp,issame', [0, 2], [0, 1], [0, 1], [0, 2]);
          both('==?', 'issame,lte', [0, 2], [0, 1], [0, 2], [0, 2]);
          both('==?', 'issame,lte', [0, 2], [0, 2], [0, 2], [0, 2]);
          both('==?', 'imp,issame', [0, 2], [1, 2], [0, 1], [0, 1]);
          both('==?', 'issame,lte', [0, 2], [1, 2], [1, 2], [0, 1]);
          both('==?', 'issame,lte', [0, 2], [1, 2], [1, 2], [1, 2]);
          both('==?', 'issame,lte', [0, 1], [0, 10]);
          both('==?', 'imp,issame', [0, 1], [0, 0, 9, 9]);
          both('==?', 'imp,issame', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('==?', 'imp,issame', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!=?', 'imp,isdiff', [0, 1], [0, 1], [0, 1], [0, 1]);
          both('!=?', 'imp,isdiff', [0, 1], [0, 1], [0, 1], [0, 2]);
          both('!=?', 'isdiff,lte', [0, 1], [0, 1], [0, 2], [0, 2]);
          both('!=?', 'isdiff,lte', [0, 1], [0, 2], [0, 2], [0, 2]);
          both('!=?', 'imp,isdiff', [0, 2], [0, 1], [0, 1], [0, 1]);
          both('!=?', 'imp,isdiff', [0, 2], [0, 1], [0, 1], [0, 2]);
          both('!=?', 'isdiff,lte', [0, 2], [0, 1], [0, 2], [0, 2]);
          both('!=?', 'isdiff,lte', [0, 2], [0, 2], [0, 2], [0, 2]);
          both('!=?', 'imp,isdiff', [0, 2], [1, 2], [0, 1], [0, 1]);
          both('!=?', 'isdiff,lte', [0, 2], [1, 2], [1, 2], [0, 1]);
          both('!=?', 'isdiff,lte', [0, 2], [1, 2], [1, 2], [1, 2]);
          both('!=?', 'isdiff,lte', [0, 1], [0, 10]);
          both('!=?', 'imp,isdiff', [0, 1], [0, 0, 9, 9]);
          both('!=?', 'imp,isdiff', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!=?', 'imp,isdiff', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<?', 'imp,islt', [0, 1], [0, 1], [0, 1], [0, 1]);
          lhs('<?', 'imp,islt', [0, 1], [0, 1], [0, 1], [0, 2]);
          lhs('<?', 'islt,lte', [0, 1], [0, 1], [0, 2], [0, 2]);
          lhs('<?', 'islt,lte', [0, 1], [0, 2], [0, 2], [0, 2]);
          lhs('<?', 'imp,islt', [0, 2], [0, 1], [0, 1], [0, 1]);
          lhs('<?', 'imp,islt', [0, 2], [0, 1], [0, 1], [0, 2]);
          lhs('<?', 'islt,lte', [0, 2], [0, 1], [0, 2], [0, 2]);
          lhs('<?', 'islt,lte', [0, 2], [0, 2], [0, 2], [0, 2]);
          lhs('<?', [0, 2], [1, 2], [0, 1], [0, 1]);
          lhs('<?', [0, 2], [1, 2], [1, 2], [0, 1]);
          lhs('<?', 'islt,lte', [0, 2], [1, 2], [1, 2], [1, 2]);
          lhs('<?', 'islt,lte', [0, 1], [0, 10]);
          lhs('<?', 'imp,islt', [0, 1], [0, 0, 9, 9]);
          lhs('<?', 'imp,islt', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<?', 'imp,islt', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<?', 'imp,islt', [0, 1], [0, 1], [0, 1], [0, 1]);
          rhs('<?', 'imp,islt', [0, 1], [0, 1], [0, 1], [0, 2]);
          rhs('<?', 'islt,lte', [0, 1], [0, 1], [0, 2], [0, 2]);
          rhs('<?', 'islt,lte', [0, 1], [0, 2], [0, 2], [0, 2]);
          rhs('<?', 'imp,islt', [0, 2], [0, 1], [0, 1], [0, 1]);
          rhs('<?', 'imp,islt', [0, 2], [0, 1], [0, 1], [0, 2]);
          rhs('<?', 'islt,lte', [0, 2], [0, 1], [0, 2], [0, 2]);
          rhs('<?', 'islt,lte', [0, 2], [0, 2], [0, 2], [0, 2]);
          rhs('<?', 'imp,islt', [0, 2], [1, 2], [0, 1], [0, 1]);
          rhs('<?', 'islt,lte', [0, 2], [1, 2], [1, 2], [0, 1]);
          rhs('<?', 'islt,lte', [0, 2], [1, 2], [1, 2], [1, 2]);
          rhs('<?', 'islt,lte', [0, 1], [0, 10]);
          rhs('<?', 'imp,islt', [0, 1], [0, 0, 9, 9]);
          rhs('<?', 'imp,islt', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<?', 'imp,islt', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<=?', 'imp,islte', [0, 1], [0, 1], [0, 1], [0, 1]);
          lhs('<=?', 'imp,islte', [0, 1], [0, 1], [0, 1], [0, 2]);
          lhs('<=?', 'islte,lte', [0, 1], [0, 1], [0, 2], [0, 2]);
          lhs('<=?', 'islte,lte', [0, 1], [0, 2], [0, 2], [0, 2]);
          lhs('<=?', 'imp,islte', [0, 2], [0, 1], [0, 1], [0, 1]);
          lhs('<=?', 'imp,islte', [0, 2], [0, 1], [0, 1], [0, 2]);
          lhs('<=?', 'islte,lte', [0, 2], [0, 1], [0, 2], [0, 2]);
          lhs('<=?', 'islte,lte', [0, 2], [0, 2], [0, 2], [0, 2]);
          lhs('<=?', 'imp,islte', [0, 2], [1, 2], [0, 1], [0, 1]);
          lhs('<=?', 'islte,lte', [0, 2], [1, 2], [1, 2], [0, 1]);
          lhs('<=?', 'islte,lte', [0, 2], [1, 2], [1, 2], [1, 2]);
          lhs('<=?', 'islte,lte', [0, 1], [0, 10]);
          lhs('<=?', 'imp,islte', [0, 1], [0, 0, 9, 9]);
          lhs('<=?', 'imp,islte', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<=?', 'imp,islte', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<=?', 'imp,islte', [0, 1], [0, 1], [0, 1], [0, 1]);
          rhs('<=?', 'imp,islte', [0, 1], [0, 1], [0, 1], [0, 2]);
          rhs('<=?', 'islte,lte', [0, 1], [0, 1], [0, 2], [0, 2]);
          rhs('<=?', 'islte,lte', [0, 1], [0, 2], [0, 2], [0, 2]);
          rhs('<=?', 'imp,islte', [0, 2], [0, 1], [0, 1], [0, 1]);
          rhs('<=?', 'imp,islte', [0, 2], [0, 1], [0, 1], [0, 2]);
          rhs('<=?', 'islte,lte', [0, 2], [0, 1], [0, 2], [0, 2]);
          rhs('<=?', 'islte,lte', [0, 2], [0, 2], [0, 2], [0, 2]);
          rhs('<=?', [0, 2], [1, 2], [0, 1], [0, 1]);
          rhs('<=?', [0, 2], [1, 2], [1, 2], [0, 1]);
          rhs('<=?', 'islte,lte', [0, 2], [1, 2], [1, 2], [1, 2]);
          rhs('<=?', 'islte,lte', [0, 1], [0, 10]);
          rhs('<=?', 'imp,islte', [0, 1], [0, 0, 9, 9]);
          rhs('<=?', 'imp,islte', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<=?', 'imp,islte', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!&?', 'imp,isnall', [0, 1], [0, 1], [0, 1], [0, 1]);
          both('!&?', 'imp,isnall', [0, 1], [0, 1], [0, 1], [0, 2]);
          both('!&?', 'isnall,lte', [0, 1], [0, 1], [0, 2], [0, 2]);
          both('!&?', 'isnall,lte', [0, 1], [0, 2], [0, 2], [0, 2]);
          both('!&?', 'imp,isnall', [0, 2], [0, 1], [0, 1], [0, 1]);
          both('!&?', 'imp,isnall', [0, 2], [0, 1], [0, 1], [0, 2]);
          both('!&?', 'isnall,lte', [0, 2], [0, 1], [0, 2], [0, 2]);
          both('!&?', 'isnall,lte', [0, 2], [0, 2], [0, 2], [0, 2]);
          both('!&?', 'imp,isnall', [0, 2], [1, 2], [0, 1], [0, 1]);
          both('!&?', 'isnall,lte', [0, 2], [1, 2], [1, 2], [0, 1]);
          both('!&?', [0, 2], [1, 2], [1, 2], [1, 2]);
          both('!&?', 'isnall,lte', [0, 1], [0, 10]);
          both('!&?', 'imp,isnall', [0, 1], [0, 0, 9, 9]);
          both('!&?', 'imp,isnall', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!&?', 'imp,isnall', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('|?', 'imp,issome', [0, 1], [0, 1], [0, 1], [0, 1]);
          both('|?', 'imp,issome', [0, 1], [0, 1], [0, 1], [0, 2]);
          both('|?', 'issome,lte', [0, 1], [0, 1], [0, 2], [0, 2]);
          both('|?', 'issome,lte', [0, 1], [0, 2], [0, 2], [0, 2]);
          both('|?', 'imp,issome', [0, 2], [0, 1], [0, 1], [0, 1]);
          both('|?', 'imp,issome', [0, 2], [0, 1], [0, 1], [0, 2]);
          both('|?', 'issome,lte', [0, 2], [0, 1], [0, 2], [0, 2]);
          both('|?', 'issome,lte', [0, 2], [0, 2], [0, 2], [0, 2]);
          both('|?', [0, 2], [1, 2], [0, 1], [0, 1]);
          both('|?', [0, 2], [1, 2], [1, 2], [0, 1]);
          both('|?', [0, 2], [1, 2], [1, 2], [1, 2]);
          both('|?', 'issome,lte', [0, 1], [0, 10]);
          both('|?', 'imp,issome', [0, 1], [0, 0, 9, 9]);
          both('|?', 'imp,issome', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('|?', 'imp,issome', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!|?', 'imp,isnone', [0, 1], [0, 1], [0, 1], [0, 1]);
          both('!|?', 'imp,isnone', [0, 1], [0, 1], [0, 1], [0, 2]);
          both('!|?', 'isnone,lte', [0, 1], [0, 1], [0, 2], [0, 2]);
          both('!|?', 'isnone,lte', [0, 1], [0, 2], [0, 2], [0, 2]);
          both('!|?', 'imp,isnone', [0, 2], [0, 1], [0, 1], [0, 1]);
          both('!|?', 'imp,isnone', [0, 2], [0, 1], [0, 1], [0, 2]);
          both('!|?', 'isnone,lte', [0, 2], [0, 1], [0, 2], [0, 2]);
          both('!|?', 'isnone,lte', [0, 2], [0, 2], [0, 2], [0, 2]);
          both('!|?', [0, 2], [1, 2], [0, 1], [0, 1]);
          both('!|?', [0, 2], [1, 2], [1, 2], [0, 1]);
          both('!|?', [0, 2], [1, 2], [1, 2], [1, 2]);
          both('!|?', 'isnone,lte', [0, 1], [0, 10]);
          both('!|?', 'imp,isnone', [0, 1], [0, 0, 9, 9]);
          both('!|?', 'imp,isnone', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!|?', 'imp,isnone', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('+', 'imp,sum', [0, 1], [0, 1], [0, 1], [0, 1]);
          both('+', 'imp,sum', [0, 1], [0, 1], [0, 1], [0, 2]);
          both('+', 'lte,sum', [0, 1], [0, 1], [0, 2], [0, 2]);
          both('+', 'lte,sum', [0, 1], [0, 2], [0, 2], [0, 2]);
          both('+', 'imp,sum', [0, 2], [0, 1], [0, 1], [0, 1]);
          both('+', 'imp,sum', [0, 2], [0, 1], [0, 1], [0, 2]);
          both('+', 'lte,sum', [0, 2], [0, 1], [0, 2], [0, 2]);
          both('+', 'lte,sum', [0, 2], [0, 2], [0, 2], [0, 2]);
          both('+', [0, 2], [1, 2], [0, 1], [0, 1]);
          both('+', 'lte,sum', [0, 2], [1, 2], [1, 2], [0, 1]);
          both('+', [0, 2], [1, 2], [1, 2], [1, 2]);
          both('+', 'imp,sum', [0, 20], [0, 1], [0, 1], [0, 1]);
          both('+', 'lte,sum', [0, 20], [0, 10]);
          both('+', 'imp,sum', [0, 20], [0, 0, 9, 9]);
          both('+', 'imp', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('+', 'imp', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('-', 'imp,minus', [0, 1], [0, 1], [0, 1], [0, 1]);
          lhs('-', 'imp,minus', [0, 1], [0, 1], [0, 1], [0, 2]);
          lhs('-', 'lte,minus', [0, 1], [0, 1], [0, 2], [0, 2]);
          lhs('-', 'lte,minus', [0, 1], [0, 2], [0, 2], [0, 2]);
          lhs('-', 'imp,minus', [0, 2], [0, 1], [0, 1], [0, 1]);
          lhs('-', 'imp,minus', [0, 2], [0, 1], [0, 1], [0, 2]);
          lhs('-', 'lte,minus', [0, 2], [0, 1], [0, 2], [0, 2]);
          lhs('-', 'lte,minus', [0, 2], [0, 2], [0, 2], [0, 2]);
          lhs('-', 'imp,minus', [0, 2], [1, 2], [0, 1], [0, 1]);
          lhs('-', 'lte,minus', [0, 2], [1, 2], [1, 2], [0, 1]);
          lhs('-', 'minus', [0, 2], [1, 2], [1, 2], [1, 2]);
          lhs('-', 'imp,minus', [0, 20], [0, 1], [0, 1], [0, 1]);
          lhs('-', 'lte,minus', [0, 20], [0, 10]);
          lhs('-', 'lte,minus', [0, 20], [0, 0, 9, 9]);
          lhs('-', 'imp', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('-', 'lte,minus', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('-', 'imp,minus', [0, 1], [0, 1], [0, 1], [0, 1]);
          rhs('-', 'imp,minus', [0, 1], [0, 1], [0, 1], [0, 2]);
          rhs('-', 'lte,minus', [0, 1], [0, 1], [0, 2], [0, 2]);
          rhs('-', 'lte,minus', [0, 1], [0, 2], [0, 2], [0, 2]);
          rhs('-', 'imp,minus', [0, 2], [0, 1], [0, 1], [0, 1]);
          rhs('-', 'imp,minus', [0, 2], [0, 1], [0, 1], [0, 2]);
          rhs('-', 'lte,minus', [0, 2], [0, 1], [0, 2], [0, 2]);
          rhs('-', 'lte,minus', [0, 2], [0, 2], [0, 2], [0, 2]);
          rhs('-', [0, 2], [1, 2], [0, 1], [0, 1]);
          rhs('-', [0, 2], [1, 2], [1, 2], [0, 1]);
          rhs('-', 'minus', [0, 2], [1, 2], [1, 2], [1, 2]);
          rhs('-', 'imp,minus', [0, 20], [0, 1], [0, 1], [0, 1]);
          rhs('-', 'lte,minus', [0, 20], [0, 10]);
          rhs('-', 'lte,minus', [0, 20], [0, 0, 9, 9]);
          rhs('-', 'lte,minus', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('-', 'imp', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('*', 'imp,product', [0, 1], [0, 1], [0, 1], [0, 1]);
          both('*', 'imp,product', [0, 1], [0, 1], [0, 1], [0, 2]);
          both('*', 'lte,product', [0, 1], [0, 1], [0, 2], [0, 2]);
          both('*', 'lte,product', [0, 1], [0, 2], [0, 2], [0, 2]);
          both('*', 'imp,product', [0, 2], [0, 1], [0, 1], [0, 1]);
          both('*', 'imp,product', [0, 2], [0, 1], [0, 1], [0, 2]);
          both('*', 'lte,product', [0, 2], [0, 1], [0, 2], [0, 2]);
          both('*', 'lte,product', [0, 2], [0, 2], [0, 2], [0, 2]);
          both('*', 'imp', [0, 2], [1, 2], [0, 1], [0, 1]);
          both('*', 'lte,product', [0, 2], [1, 2], [1, 2], [0, 1]);
          both('*', 'lte,product', [0, 2], [1, 2], [1, 2], [1, 2]);
          both('*', 'imp,product', [0, 100], [0, 1], [0, 1], [0, 1]);
          both('*', 'lte,product', [0, 100], [0, 10]);
          both('*', 'nall', [0, 100], [0, 0, 9, 9]);
          both('*', 'nall', [0, 100], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('*', 'nall', [0, 100], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('/', 'div,imp', [0, 1], [0, 1], [0, 1], [0, 1]);
          lhs('/', 'div,imp', [0, 1], [0, 1], [0, 1], [0, 2]);
          lhs('/', 'div,lte', [0, 1], [0, 1], [0, 2], [0, 2]);
          lhs('/', 'div,lte', [0, 1], [0, 2], [0, 2], [0, 2]);
          lhs('/', 'div,imp', [0, 2], [0, 1], [0, 1], [0, 1]);
          lhs('/', 'div,imp', [0, 2], [0, 1], [0, 1], [0, 2]);
          lhs('/', 'div,lte', [0, 2], [0, 1], [0, 2], [0, 2]);
          lhs('/', 'div,lte', [0, 2], [0, 2], [0, 2], [0, 2]);
          lhs('/', 'div', [0, 2], [1, 2], [0, 1], [0, 1]);
          lhs('/', 'div,lte', [0, 2], [1, 2], [1, 2], [0, 1]);
          lhs('/', 'div,lte', [0, 2], [1, 2], [1, 2], [1, 2]);
          lhs('/', 'div,imp', [0, 20], [0, 1], [0, 1], [0, 1]);
          lhs('/', 'div,lte', [0, 20], [0, 10]);
          lhs('/', 'div,imp', [0, 20], [0, 0, 9, 9]);
          lhs('/', 'div', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('/', 'div,imp', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('/', 'div,imp', [0, 1], [0, 1], [0, 1], [0, 1]);
          rhs('/', 'div,imp', [0, 1], [0, 1], [0, 1], [0, 2]);
          rhs('/', 'div,lte', [0, 1], [0, 1], [0, 2], [0, 2]);
          rhs('/', 'div,lte', [0, 1], [0, 2], [0, 2], [0, 2]);
          rhs('/', 'div,imp', [0, 2], [0, 1], [0, 1], [0, 1]);
          rhs('/', 'div,imp', [0, 2], [0, 1], [0, 1], [0, 2]);
          rhs('/', 'div,lte', [0, 2], [0, 1], [0, 2], [0, 2]);
          rhs('/', 'div,lte', [0, 2], [0, 2], [0, 2], [0, 2]);
          rhs('/', 'div,imp', [0, 2], [1, 2], [0, 1], [0, 1]);
          rhs('/', 'div', [0, 2], [1, 2], [1, 2], [0, 1]);
          rhs('/', 'div,lte', [0, 2], [1, 2], [1, 2], [1, 2]);
          rhs('/', 'div,imp', [0, 20], [0, 1], [0, 1], [0, 1]);
          rhs('/', 'div,lte', [0, 20], [0, 10]);
          rhs('/', 'div,imp', [0, 20], [0, 0, 9, 9]);
          rhs('/', 'div,imp', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('/', 'div', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
        });
      });

      describe('LTE_RHS', function() {

        describe('binary', function() {

          let both = testBinaryBinary.bind(undefined, '<=', 'rhs', ''); // A & B, A @ C  and  A & B, C @ A
          let lhs = testBinaryBinary.bind(undefined, '<=', 'rhs', 'lhs'); // A & B, A @ C
          let rhs = testBinaryBinary.bind(undefined, '<=', 'rhs', 'rhs'); // A & B, C @ A

          both('&', [0, 1], [0, 1], [0, 1]);
          //both('&', [0, 1], [0, 1], [0, 2]);
          //both('&', [0, 1], [0, 2], [0, 1]);
          //both('&', [0, 1], [0, 2], [0, 2]);
          //both('&', [0, 2], [0, 1], [0, 1]);
          //both('&', [0, 2], [0, 1], [0, 2]);
          //both('&', [0, 2], [0, 2], [0, 1]);
          //both('&', [0, 2], [0, 2], [0, 2]);
          //both('&', [0, 2], [0, 1], [1, 2]);
          //both('&', [0, 2], [1, 2], [0, 1]);
          //both('&', [0, 2], [1, 2], [1, 2]);
          both('&', [0, 10]);
          both('&', [0, 0, 9, 9]);
          both('&', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('&', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!=', 'nall', [0, 1], [0, 1], [0, 1]);
          //both('!=', [0, 1], [0, 1], [0, 2]);
          //both('!=', [0, 1], [0, 2], [0, 1]);
          //both('!=', [0, 1], [0, 2], [0, 2]);
          //both('!=', [0, 2], [0, 1], [0, 1]);
          //both('!=', [0, 2], [0, 1], [0, 2]);
          //both('!=', [0, 2], [0, 2], [0, 1]);
          //both('!=', [0, 2], [0, 2], [0, 2]);
          //both('!=', [0, 2], [0, 1], [1, 2]);
          //both('!=', [0, 2], [1, 2], [0, 1]);
          //both('!=', [0, 2], [1, 2], [1, 2]);
          both('!=', 'diff,lte', [0, 10]);
          both('!=', 'nall', [0, 0, 9, 9]);
          both('!=', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!=', 'nall', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('->', 'imp,imp', [0, 1], [0, 1], [0, 1]);
          //lhs('->', [0, 1], [0, 1], [0, 2]);
          //lhs('->', [0, 1], [0, 2], [0, 1]);
          //lhs('->', [0, 1], [0, 2], [0, 2]);
          //lhs('->', [0, 2], [0, 1], [0, 1]);
          //lhs('->', [0, 2], [0, 1], [0, 2]);
          //lhs('->', [0, 2], [0, 2], [0, 1]);
          //lhs('->', [0, 2], [0, 2], [0, 2]);
          //lhs('->', [0, 2], [0, 1], [1, 2]);
          //lhs('->', [0, 2], [1, 2], [0, 1]);
          //lhs('->', [0, 2], [1, 2], [1, 2]);
          lhs('->', 'imp,lte', [0, 10]);
          lhs('->', 'imp,imp', [0, 0, 9, 9]);
          lhs('->', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('->', 'imp,imp', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('->', 'imp,imp', [0, 1], [0, 1], [0, 1]);
          //rhs('->', [0, 1], [0, 1], [0, 2]);
          //rhs('->', [0, 1], [0, 2], [0, 1]);
          //rhs('->', [0, 1], [0, 2], [0, 2]);
          //rhs('->', [0, 2], [0, 1], [0, 1]);
          //rhs('->', [0, 2], [0, 1], [0, 2]);
          //rhs('->', [0, 2], [0, 2], [0, 1]);
          //rhs('->', [0, 2], [0, 2], [0, 2]);
          //rhs('->', [0, 2], [0, 1], [1, 2]);
          //rhs('->', [0, 2], [1, 2], [0, 1]);
          //rhs('->', [0, 2], [1, 2], [1, 2]);
          rhs('->', 'imp,lte', [0, 10]);
          rhs('->', 'imp,imp', [0, 0, 9, 9]);
          rhs('->', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('->', 'imp,imp', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<', [0, 1], [0, 1], [0, 1]);
          //lhs('<', [0, 1], [0, 1], [0, 2]);
          //lhs('<', [0, 1], [0, 2], [0, 1]);
          //lhs('<', [0, 1], [0, 2], [0, 2]);
          //lhs('<', [0, 2], [0, 1], [0, 1]);
          //lhs('<', [0, 2], [0, 1], [0, 2]);
          //lhs('<', [0, 2], [0, 2], [0, 1]);
          //lhs('<', [0, 2], [0, 2], [0, 2]);
          //lhs('<', [0, 2], [0, 1], [1, 2]);
          //lhs('<', [0, 2], [1, 2], [0, 1]);
          //lhs('<', [0, 2], [1, 2], [1, 2]);
          lhs('<', 'lt,lte', [0, 10]);
          lhs('<', [0, 0, 9, 9]);
          lhs('<', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<', [0, 1], [0, 1], [0, 1]);
          //rhs('<', [0, 1], [0, 1], [0, 2]);
          //rhs('<', [0, 1], [0, 2], [0, 1]);
          //rhs('<', [0, 1], [0, 2], [0, 2]);
          //rhs('<', [0, 2], [0, 1], [0, 1]);
          //rhs('<', [0, 2], [0, 1], [0, 2]);
          //rhs('<', [0, 2], [0, 2], [0, 1]);
          //rhs('<', [0, 2], [0, 2], [0, 2]);
          //rhs('<', [0, 2], [0, 1], [1, 2]);
          //rhs('<', [0, 2], [1, 2], [0, 1]);
          //rhs('<', [0, 2], [1, 2], [1, 2]);
          rhs('<', 'lt,lte', [0, 10]);
          rhs('<', [0, 0, 9, 9]);
          rhs('<', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<=', 'imp,imp', [0, 1], [0, 1], [0, 1]);
          //lhs('<=', [0, 1], [0, 1], [0, 2]);
          //lhs('<=', [0, 1], [0, 2], [0, 1]);
          //lhs('<=', [0, 1], [0, 2], [0, 2]);
          //lhs('<=', [0, 2], [0, 1], [0, 1]);
          //lhs('<=', [0, 2], [0, 1], [0, 2]);
          //lhs('<=', [0, 2], [0, 2], [0, 1]);
          //lhs('<=', [0, 2], [0, 2], [0, 2]);
          //lhs('<=', [0, 2], [0, 1], [1, 2]);
          //lhs('<=', [0, 2], [1, 2], [0, 1]);
          //lhs('<=', [0, 2], [1, 2], [1, 2]);
          lhs('<=', 'lte,lte', [0, 10]);
          lhs('<=', 'imp,imp', [0, 0, 9, 9]);
          lhs('<=', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<=', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<=', 'imp,imp', [0, 1], [0, 1], [0, 1]);
          //rhs('<=', [0, 1], [0, 1], [0, 2]);
          //rhs('<=', [0, 1], [0, 2], [0, 1]);
          //rhs('<=', [0, 1], [0, 2], [0, 2]);
          //rhs('<=', [0, 2], [0, 1], [0, 1]);
          //rhs('<=', [0, 2], [0, 1], [0, 2]);
          //rhs('<=', [0, 2], [0, 2], [0, 1]);
          //rhs('<=', [0, 2], [0, 2], [0, 2]);
          //rhs('<=', [0, 2], [0, 1], [1, 2]);
          //rhs('<=', [0, 2], [1, 2], [0, 1]);
          //rhs('<=', [0, 2], [1, 2], [1, 2]);
          rhs('<=', 'lte,lte', [0, 10]);
          rhs('<=', 'imp,imp', [0, 0, 9, 9]);
          rhs('<=', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<=', 'imp,imp', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!&', 'imp,nall', [0, 1], [0, 1], [0, 1]);
          //both('!&', [0, 1], [0, 1], [0, 2]);
          //both('!&', [0, 1], [0, 2], [0, 1]);
          //both('!&', [0, 1], [0, 2], [0, 2]);
          //both('!&', [0, 2], [0, 1], [0, 1]);
          //both('!&', [0, 2], [0, 1], [0, 2]);
          //both('!&', [0, 2], [0, 2], [0, 1]);
          //both('!&', [0, 2], [0, 2], [0, 2]);
          //both('!&', [0, 2], [0, 1], [1, 2]);
          //both('!&', [0, 2], [1, 2], [0, 1]);
          //both('!&', [0, 2], [1, 2], [1, 2]);
          both('!&', 'lte,nall', [0, 10]);
          both('!&', 'imp,nall', [0, 0, 9, 9]);
          both('!&', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!&', 'imp,nall', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('!->', [0, 1], [0, 1], [0, 1]);
          //lhs('!->', [0, 1], [0, 1], [0, 2]);
          //lhs('!->', [0, 1], [0, 2], [0, 1]);
          //lhs('!->', [0, 1], [0, 2], [0, 2]);
          //lhs('!->', [0, 2], [0, 1], [0, 1]);
          //lhs('!->', [0, 2], [0, 1], [0, 2]);
          //lhs('!->', [0, 2], [0, 2], [0, 1]);
          //lhs('!->', [0, 2], [0, 2], [0, 2]);
          //lhs('!->', [0, 2], [0, 1], [1, 2]);
          //lhs('!->', [0, 2], [1, 2], [0, 1]);
          //lhs('!->', [0, 2], [1, 2], [1, 2]);
          lhs('!->', [0, 10]);
          lhs('!->', [0, 0, 9, 9]);
          lhs('!->', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('!->', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('!->', [0, 1], [0, 1], [0, 1]);
          //rhs('!->', [0, 1], [0, 1], [0, 2]);
          //rhs('!->', [0, 1], [0, 2], [0, 1]);
          //rhs('!->', [0, 1], [0, 2], [0, 2]);
          //rhs('!->', [0, 2], [0, 1], [0, 1]);
          //rhs('!->', [0, 2], [0, 1], [0, 2]);
          //rhs('!->', [0, 2], [0, 2], [0, 1]);
          //rhs('!->', [0, 2], [0, 2], [0, 2]);
          //rhs('!->', [0, 2], [0, 1], [1, 2]);
          //rhs('!->', [0, 2], [1, 2], [0, 1]);
          //rhs('!->', [0, 2], [1, 2], [1, 2]);
          rhs('!->', [0, 10]);
          rhs('!->', [0, 0, 9, 9]);
          rhs('!->', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('!->', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!|', [0, 1], [0, 1], [0, 1]);
          //both('!|', [0, 1], [0, 1], [0, 2]);
          //both('!|', [0, 1], [0, 2], [0, 1]);
          //both('!|', [0, 1], [0, 2], [0, 2]);
          //both('!|', [0, 2], [0, 1], [0, 1]);
          //both('!|', [0, 2], [0, 1], [0, 2]);
          //both('!|', [0, 2], [0, 2], [0, 1]);
          //both('!|', [0, 2], [0, 2], [0, 2]);
          //both('!|', [0, 2], [0, 1], [1, 2]);
          //both('!|', [0, 2], [1, 2], [0, 1]);
          //both('!|', [0, 2], [1, 2], [1, 2]);
          both('!|', [0, 10]);
          both('!|', [0, 0, 9, 9]);
          both('!|', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!|', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('==', 'imp', [0, 1], [0, 1], [0, 1]);
          //both('==', [0, 1], [0, 1], [0, 2]);
          //both('==', [0, 1], [0, 2], [0, 1]);
          //both('==', [0, 1], [0, 2], [0, 2]);
          //both('==', [0, 2], [0, 1], [0, 1]);
          //both('==', [0, 2], [0, 1], [0, 2]);
          //both('==', [0, 2], [0, 2], [0, 1]);
          //both('==', [0, 2], [0, 2], [0, 2]);
          //both('==', [0, 2], [0, 1], [1, 2]);
          //both('==', [0, 2], [1, 2], [0, 1]);
          //both('==', [0, 2], [1, 2], [1, 2]);
          both('==', 'lte', [0, 10]);
          both('==', 'imp', [0, 0, 9, 9]);
          both('==', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('==', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!^', 'imp', [0, 1], [0, 1], [0, 1]);
          //both('!^', [0, 1], [0, 1], [0, 2]);
          //both('!^', [0, 1], [0, 2], [0, 1]);
          //both('!^', [0, 1], [0, 2], [0, 2]);
          //both('!^', [0, 2], [0, 1], [0, 1]);
          //both('!^', [0, 2], [0, 1], [0, 2]);
          //both('!^', [0, 2], [0, 2], [0, 1]);
          //both('!^', [0, 2], [0, 2], [0, 2]);
          //both('!^', [0, 2], [0, 1], [1, 2]);
          //both('!^', [0, 2], [1, 2], [0, 1]);
          //both('!^', [0, 2], [1, 2], [1, 2]);
          both('!^', 'lte', [0, 10]);                                      // lt+xnor = xor?
          both('!^', 'imp', [0, 0, 9, 9]);
          both('!^', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);    // xor??
          both('!^', 'imp', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('^', 'nall', [0, 1], [0, 1], [0, 1]);
          //both('^', [0, 1], [0, 1], [0, 2]);
          //both('^', [0, 1], [0, 2], [0, 1]);
          //both('^', [0, 1], [0, 2], [0, 2]);
          //both('^', [0, 2], [0, 1], [0, 1]);
          //both('^', [0, 2], [0, 1], [0, 2]);
          //both('^', [0, 2], [0, 2], [0, 1]);
          //both('^', [0, 2], [0, 2], [0, 2]);
          //both('^', [0, 2], [0, 1], [1, 2]);
          //both('^', [0, 2], [1, 2], [0, 1]);
          //both('^', [0, 2], [1, 2], [1, 2]);
          both('^', 'lte,xor', [0, 10]);
          both('^', 'nall', [0, 0, 9, 9]);
          both('^', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('^', 'nall', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
        });

        describe('ternary with shared arg', function() {

          let both = testBinaryTernarySharedArgs.bind(undefined, '<=', 'rhs', ''); // A & B, R = A @ C  and  A & B, R = C @ A
          let lhs = testBinaryTernarySharedArgs.bind(undefined, '<=', 'rhs', 'lhs'); // A & B, R = A @ C
          let rhs = testBinaryTernarySharedArgs.bind(undefined, '<=', 'rhs', 'rhs'); // A & B, R = C @ A

          // A & B, R = A &? C
          both('&?', 'imp,isall', [0, 1], [0, 1], [0, 1], [0, 1]);
          both('&?', 'imp,isall', [0, 1], [0, 1], [0, 1], [0, 2]);
          both('&?', 'imp,isall', [0, 1], [0, 1], [0, 2], [0, 2]);
          both('&?', 'isall,lte', [0, 1], [0, 2], [0, 2], [0, 2]);
          both('&?', 'imp,isall', [0, 2], [0, 1], [0, 1], [0, 1]);
          both('&?', 'imp,isall', [0, 2], [0, 1], [0, 1], [0, 2]);
          both('&?', 'imp,isall', [0, 2], [0, 1], [0, 2], [0, 2]);
          both('&?', 'isall,lte', [0, 2], [0, 2], [0, 2], [0, 2]);
          both('&?', [0, 2], [1, 2], [0, 1], [0, 1]);
          both('&?', [0, 2], [1, 2], [1, 2], [0, 1]);
          both('&?', [0, 2], [1, 2], [1, 2], [1, 2]);
          both('&?', 'isall,lte', [0, 1], [0, 10]);
          both('&?', 'imp,isall', [0, 1], [0, 0, 9, 9]);
          both('&?', 'isall', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('&?', 'imp,isall', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('==?', 'imp,issame', [0, 1], [0, 1], [0, 1], [0, 1]);
          both('==?', 'imp,issame', [0, 1], [0, 1], [0, 1], [0, 2]);
          both('==?', 'imp,issame', [0, 1], [0, 1], [0, 2], [0, 2]);
          both('==?', 'issame,lte', [0, 1], [0, 2], [0, 2], [0, 2]);
          both('==?', 'imp,issame', [0, 2], [0, 1], [0, 1], [0, 1]);
          both('==?', 'imp,issame', [0, 2], [0, 1], [0, 1], [0, 2]);
          both('==?', 'imp,issame', [0, 2], [0, 1], [0, 2], [0, 2]);
          both('==?', 'issame,lte', [0, 2], [0, 2], [0, 2], [0, 2]);
          both('==?', 'issame', [0, 2], [1, 2], [0, 1], [0, 1]);
          both('==?', 'issame,lte', [0, 2], [1, 2], [1, 2], [0, 1]);
          both('==?', 'issame,lte', [0, 2], [1, 2], [1, 2], [1, 2]);
          both('==?', 'issame,lte', [0, 1], [0, 10]);
          both('==?', 'imp,issame', [0, 1], [0, 0, 9, 9]);
          both('==?', 'issame', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('==?', 'imp,issame', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!=?', 'imp,isdiff', [0, 1], [0, 1], [0, 1], [0, 1]);
          both('!=?', 'imp,isdiff', [0, 1], [0, 1], [0, 1], [0, 2]);
          both('!=?', 'imp,isdiff', [0, 1], [0, 1], [0, 2], [0, 2]);
          both('!=?', 'isdiff,lte', [0, 1], [0, 2], [0, 2], [0, 2]);
          both('!=?', 'imp,isdiff', [0, 2], [0, 1], [0, 1], [0, 1]);
          both('!=?', 'imp,isdiff', [0, 2], [0, 1], [0, 1], [0, 2]);
          both('!=?', 'imp,isdiff', [0, 2], [0, 1], [0, 2], [0, 2]);
          both('!=?', 'isdiff,lte', [0, 2], [0, 2], [0, 2], [0, 2]);
          both('!=?', 'isdiff', [0, 2], [1, 2], [0, 1], [0, 1]);
          both('!=?', 'isdiff,lte', [0, 2], [1, 2], [1, 2], [0, 1]);
          both('!=?', 'isdiff,lte', [0, 2], [1, 2], [1, 2], [1, 2]);
          both('!=?', 'isdiff,lte', [0, 1], [0, 10]);
          both('!=?', 'imp,isdiff', [0, 1], [0, 0, 9, 9]);
          both('!=?', 'isdiff', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!=?', 'imp,isdiff', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<?', 'imp,islt', [0, 1], [0, 1], [0, 1], [0, 1]);
          lhs('<?', 'imp,islt', [0, 1], [0, 1], [0, 1], [0, 2]);
          lhs('<?', 'imp,islt', [0, 1], [0, 1], [0, 2], [0, 2]);
          lhs('<?', 'islt,lte', [0, 1], [0, 2], [0, 2], [0, 2]);
          lhs('<?', 'imp,islt', [0, 2], [0, 1], [0, 1], [0, 1]);
          lhs('<?', 'imp,islt', [0, 2], [0, 1], [0, 1], [0, 2]);
          lhs('<?', 'imp,islt', [0, 2], [0, 1], [0, 2], [0, 2]);
          lhs('<?', 'islt,lte', [0, 2], [0, 2], [0, 2], [0, 2]);
          lhs('<?', [0, 2], [1, 2], [0, 1], [0, 1]);
          lhs('<?', [0, 2], [1, 2], [1, 2], [0, 1]);
          lhs('<?', 'islt,lte', [0, 2], [1, 2], [1, 2], [1, 2]);
          lhs('<?', 'islt,lte', [0, 1], [0, 10]);
          lhs('<?', 'imp,islt', [0, 1], [0, 0, 9, 9]);
          lhs('<?', 'islt', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<?', 'imp,islt', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<?', 'imp,islt', [0, 1], [0, 1], [0, 1], [0, 1]);
          rhs('<?', 'imp,islt', [0, 1], [0, 1], [0, 1], [0, 2]);
          rhs('<?', 'imp,islt', [0, 1], [0, 1], [0, 2], [0, 2]);
          rhs('<?', 'islt,lte', [0, 1], [0, 2], [0, 2], [0, 2]);
          rhs('<?', 'imp,islt', [0, 2], [0, 1], [0, 1], [0, 1]);
          rhs('<?', 'imp,islt', [0, 2], [0, 1], [0, 1], [0, 2]);
          rhs('<?', 'imp,islt', [0, 2], [0, 1], [0, 2], [0, 2]);
          rhs('<?', 'islt,lte', [0, 2], [0, 2], [0, 2], [0, 2]);
          rhs('<?', 'islt', [0, 2], [1, 2], [0, 1], [0, 1]);
          rhs('<?', 'islt,lte', [0, 2], [1, 2], [1, 2], [0, 1]);
          rhs('<?', 'islt,lte', [0, 2], [1, 2], [1, 2], [1, 2]);
          rhs('<?', 'islt,lte', [0, 1], [0, 10]);
          rhs('<?', 'imp,islt', [0, 1], [0, 0, 9, 9]);
          rhs('<?', 'islt', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<?', 'imp,islt', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<=?', 'imp,islte', [0, 1], [0, 1], [0, 1], [0, 1]);
          lhs('<=?', 'imp,islte', [0, 1], [0, 1], [0, 1], [0, 2]);
          lhs('<=?', 'imp,islte', [0, 1], [0, 1], [0, 2], [0, 2]);
          lhs('<=?', 'islte,lte', [0, 1], [0, 2], [0, 2], [0, 2]);
          lhs('<=?', 'imp,islte', [0, 2], [0, 1], [0, 1], [0, 1]);
          lhs('<=?', 'imp,islte', [0, 2], [0, 1], [0, 1], [0, 2]);
          lhs('<=?', 'imp,islte', [0, 2], [0, 1], [0, 2], [0, 2]);
          lhs('<=?', 'islte,lte', [0, 2], [0, 2], [0, 2], [0, 2]);
          lhs('<=?', 'islte', [0, 2], [1, 2], [0, 1], [0, 1]);
          lhs('<=?', 'islte,lte', [0, 2], [1, 2], [1, 2], [0, 1]);
          lhs('<=?', 'islte,lte', [0, 2], [1, 2], [1, 2], [1, 2]);
          lhs('<=?', 'islte,lte', [0, 1], [0, 10]);
          lhs('<=?', 'imp,islte', [0, 1], [0, 0, 9, 9]);
          lhs('<=?', 'islte', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<=?', 'imp,islte', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<=?', 'imp,islte', [0, 1], [0, 1], [0, 1], [0, 1]);
          rhs('<=?', 'imp,islte', [0, 1], [0, 1], [0, 1], [0, 2]);
          rhs('<=?', 'imp,islte', [0, 1], [0, 1], [0, 2], [0, 2]);
          rhs('<=?', 'islte,lte', [0, 1], [0, 2], [0, 2], [0, 2]);
          rhs('<=?', 'imp,islte', [0, 2], [0, 1], [0, 1], [0, 1]);
          rhs('<=?', 'imp,islte', [0, 2], [0, 1], [0, 1], [0, 2]);
          rhs('<=?', 'imp,islte', [0, 2], [0, 1], [0, 2], [0, 2]);
          rhs('<=?', 'islte,lte', [0, 2], [0, 2], [0, 2], [0, 2]);
          rhs('<=?', [0, 2], [1, 2], [0, 1], [0, 1]);
          rhs('<=?', [0, 2], [1, 2], [1, 2], [0, 1]);
          rhs('<=?', 'islte,lte', [0, 2], [1, 2], [1, 2], [1, 2]);
          rhs('<=?', 'islte,lte', [0, 1], [0, 10]);
          rhs('<=?', 'imp,islte', [0, 1], [0, 0, 9, 9]);
          rhs('<=?', 'islte', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<=?', 'imp,islte', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!&?', 'imp,isnall', [0, 1], [0, 1], [0, 1], [0, 1]);
          both('!&?', 'imp,isnall', [0, 1], [0, 1], [0, 1], [0, 2]);
          both('!&?', 'imp,isnall', [0, 1], [0, 1], [0, 2], [0, 2]);
          both('!&?', 'isnall,lte', [0, 1], [0, 2], [0, 2], [0, 2]);
          both('!&?', 'imp,isnall', [0, 2], [0, 1], [0, 1], [0, 1]);
          both('!&?', 'imp,isnall', [0, 2], [0, 1], [0, 1], [0, 2]);
          both('!&?', 'imp,isnall', [0, 2], [0, 1], [0, 2], [0, 2]);
          both('!&?', 'isnall,lte', [0, 2], [0, 2], [0, 2], [0, 2]);
          both('!&?', 'isnall', [0, 2], [1, 2], [0, 1], [0, 1]);
          both('!&?', 'isnall,lte', [0, 2], [1, 2], [1, 2], [0, 1]);
          both('!&?', [0, 2], [1, 2], [1, 2], [1, 2]);
          both('!&?', 'isnall,lte', [0, 1], [0, 10]);
          both('!&?', 'imp,isnall', [0, 1], [0, 0, 9, 9]);
          both('!&?', 'isnall', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!&?', 'imp,isnall', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('|?', 'imp,issome', [0, 1], [0, 1], [0, 1], [0, 1]);
          both('|?', 'imp,issome', [0, 1], [0, 1], [0, 1], [0, 2]);
          both('|?', 'imp,issome', [0, 1], [0, 1], [0, 2], [0, 2]);
          both('|?', 'issome,lte', [0, 1], [0, 2], [0, 2], [0, 2]);
          both('|?', 'imp,issome', [0, 2], [0, 1], [0, 1], [0, 1]);
          both('|?', 'imp,issome', [0, 2], [0, 1], [0, 1], [0, 2]);
          both('|?', 'imp,issome', [0, 2], [0, 1], [0, 2], [0, 2]);
          both('|?', 'issome,lte', [0, 2], [0, 2], [0, 2], [0, 2]);
          both('|?', [0, 2], [1, 2], [0, 1], [0, 1]);
          both('|?', [0, 2], [1, 2], [1, 2], [0, 1]);
          both('|?', [0, 2], [1, 2], [1, 2], [1, 2]);
          both('|?', 'issome,lte', [0, 1], [0, 10]);
          both('|?', 'imp,issome', [0, 1], [0, 0, 9, 9]);
          both('|?', 'issome', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('|?', 'imp,issome', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!|?', 'imp,isnone', [0, 1], [0, 1], [0, 1], [0, 1]);
          both('!|?', 'imp,isnone', [0, 1], [0, 1], [0, 1], [0, 2]);
          both('!|?', 'imp,isnone', [0, 1], [0, 1], [0, 2], [0, 2]);
          both('!|?', 'isnone,lte', [0, 1], [0, 2], [0, 2], [0, 2]);
          both('!|?', 'imp,isnone', [0, 2], [0, 1], [0, 1], [0, 1]);
          both('!|?', 'imp,isnone', [0, 2], [0, 1], [0, 1], [0, 2]);
          both('!|?', 'imp,isnone', [0, 2], [0, 1], [0, 2], [0, 2]);
          both('!|?', 'isnone,lte', [0, 2], [0, 2], [0, 2], [0, 2]);
          both('!|?', [0, 2], [1, 2], [0, 1], [0, 1]);
          both('!|?', [0, 2], [1, 2], [1, 2], [0, 1]);
          both('!|?', [0, 2], [1, 2], [1, 2], [1, 2]);
          both('!|?', 'isnone,lte', [0, 1], [0, 10]);
          both('!|?', 'imp,isnone', [0, 1], [0, 0, 9, 9]);
          both('!|?', 'isnone', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!|?', 'imp,isnone', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('+', 'imp,sum', [0, 1], [0, 1], [0, 1], [0, 1]);
          both('+', 'imp,sum', [0, 1], [0, 1], [0, 1], [0, 2]);
          both('+', 'imp,sum', [0, 1], [0, 1], [0, 2], [0, 2]);
          both('+', 'imp,sum', [0, 1], [0, 2], [0, 2], [0, 2]);
          both('+', 'imp,issome', [0, 2], [0, 1], [0, 1], [0, 1]);
          both('+', 'imp,sum', [0, 2], [0, 1], [0, 1], [0, 2]);
          both('+', 'imp,sum', [0, 2], [0, 1], [0, 2], [0, 2]);
          both('+', 'lte,sum', [0, 2], [0, 2], [0, 2], [0, 2]);
          both('+', 'sum', [0, 2], [1, 2], [0, 1], [0, 1]);
          both('+', 'lte,sum', [0, 2], [1, 2], [1, 2], [0, 1]);
          both('+', [0, 2], [1, 2], [1, 2], [1, 2]);
          both('+', 'imp,issome', [0, 20], [0, 1], [0, 1], [0, 1]);
          both('+', 'issome,lte', [0, 20], [0, 10]);
          both('+', 'imp,issome', [0, 20], [0, 0, 9, 9]);
          both('+', 'issome', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('+', 'imp,issome', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('-', 'imp,minus', [0, 1], [0, 1], [0, 1], [0, 1]);
          lhs('-', 'imp,minus', [0, 1], [0, 1], [0, 1], [0, 2]);
          lhs('-', 'imp,minus', [0, 1], [0, 1], [0, 2], [0, 2]);
          lhs('-', 'lte,minus', [0, 1], [0, 2], [0, 2], [0, 2]);
          lhs('-', 'imp,minus', [0, 2], [0, 1], [0, 1], [0, 1]);
          lhs('-', 'imp,minus', [0, 2], [0, 1], [0, 1], [0, 2]);
          lhs('-', 'imp,minus', [0, 2], [0, 1], [0, 2], [0, 2]);
          lhs('-', 'lte,minus', [0, 2], [0, 2], [0, 2], [0, 2]);
          lhs('-', 'minus', [0, 2], [1, 2], [0, 1], [0, 1]);
          lhs('-', 'lte,minus', [0, 2], [1, 2], [1, 2], [0, 1]);
          lhs('-', 'lte,minus', [0, 2], [1, 2], [1, 2], [1, 2]);
          lhs('-', 'imp,minus', [0, 20], [0, 1], [0, 1], [0, 1]);
          lhs('-', 'lte,minus', [0, 20], [0, 10]);
          lhs('-', 'imp,minus', [0, 20], [0, 0, 9, 9]);
          lhs('-', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('-', 'imp,minus', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('-', 'imp,minus', [0, 1], [0, 1], [0, 1], [0, 1]);
          rhs('-', 'imp,minus', [0, 1], [0, 1], [0, 1], [0, 2]);
          rhs('-', 'imp,minus', [0, 1], [0, 1], [0, 2], [0, 2]);
          rhs('-', 'lte,minus', [0, 1], [0, 2], [0, 2], [0, 2]);
          rhs('-', 'imp,minus', [0, 2], [0, 1], [0, 1], [0, 1]);
          rhs('-', 'imp,minus', [0, 2], [0, 1], [0, 1], [0, 2]);
          rhs('-', 'imp,minus', [0, 2], [0, 1], [0, 2], [0, 2]);
          rhs('-', 'lte,minus', [0, 2], [0, 2], [0, 2], [0, 2]);
          rhs('-', [0, 2], [1, 2], [0, 1], [0, 1]);
          rhs('-', [0, 2], [1, 2], [1, 2], [0, 1]);
          rhs('-', 'lte,minus', [0, 2], [1, 2], [1, 2], [1, 2]);
          rhs('-', 'imp,minus', [0, 20], [0, 1], [0, 1], [0, 1]);
          rhs('-', 'lte,minus', [0, 20], [0, 10]);
          rhs('-', 'imp,minus', [0, 20], [0, 0, 9, 9]);
          rhs('-', 'minus', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('-', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('*', 'imp,product', [0, 1], [0, 1], [0, 1], [0, 1]);
          both('*', 'imp,product', [0, 1], [0, 1], [0, 1], [0, 2]);
          both('*', 'imp,product', [0, 1], [0, 1], [0, 2], [0, 2]);
          both('*', 'imp,product', [0, 1], [0, 2], [0, 2], [0, 2]);
          both('*', 'imp,product', [0, 2], [0, 1], [0, 1], [0, 1]);
          both('*', 'imp,product', [0, 2], [0, 1], [0, 1], [0, 2]);
          both('*', 'imp,product', [0, 2], [0, 1], [0, 2], [0, 2]);
          both('*', 'lte,product', [0, 2], [0, 2], [0, 2], [0, 2]);
          both('*', 'product', [0, 2], [1, 2], [0, 1], [0, 1]);
          both('*', 'lte,product', [0, 2], [1, 2], [1, 2], [0, 1]);
          both('*', 'lte,product', [0, 2], [1, 2], [1, 2], [1, 2]);
          both('*', 'imp,product', [0, 100], [0, 1], [0, 1], [0, 1]);
          both('*', 'lte,product', [0, 100], [0, 10]);
          both('*', 'imp,product', [0, 100], [0, 0, 9, 9]);
          both('*', 'product', [0, 100], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('*', 'imp,product', [0, 100], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('/', 'div,imp', [0, 1], [0, 1], [0, 1], [0, 1]);
          lhs('/', 'div,imp', [0, 1], [0, 1], [0, 1], [0, 2]);
          lhs('/', 'div,imp', [0, 1], [0, 1], [0, 2], [0, 2]);
          lhs('/', 'div,lte', [0, 1], [0, 2], [0, 2], [0, 2]);
          lhs('/', 'div,imp', [0, 2], [0, 1], [0, 1], [0, 1]);
          lhs('/', 'div,imp', [0, 2], [0, 1], [0, 1], [0, 2]);
          lhs('/', 'div,imp', [0, 2], [0, 1], [0, 2], [0, 2]);
          lhs('/', 'div,lte', [0, 2], [0, 2], [0, 2], [0, 2]);
          lhs('/', 'div', [0, 2], [1, 2], [0, 1], [0, 1]);
          lhs('/', 'div,lte', [0, 2], [1, 2], [1, 2], [0, 1]);
          lhs('/', 'div,lte', [0, 2], [1, 2], [1, 2], [1, 2]);
          lhs('/', 'div,imp', [0, 20], [0, 1], [0, 1], [0, 1]);
          lhs('/', 'div,lte', [0, 20], [0, 10]);
          lhs('/', 'div,imp', [0, 20], [0, 0, 9, 9]);
          lhs('/', 'div', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('/', 'div,imp', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('/', 'div,imp', [0, 1], [0, 1], [0, 1], [0, 1]);
          rhs('/', 'div,imp', [0, 1], [0, 1], [0, 1], [0, 2]);
          rhs('/', 'div,imp', [0, 1], [0, 1], [0, 2], [0, 2]);
          rhs('/', 'div,lte', [0, 1], [0, 2], [0, 2], [0, 2]);
          rhs('/', 'div,imp', [0, 2], [0, 1], [0, 1], [0, 1]);
          rhs('/', 'div,imp', [0, 2], [0, 1], [0, 1], [0, 2]);
          rhs('/', 'div,imp', [0, 2], [0, 1], [0, 2], [0, 2]);
          rhs('/', 'div,lte', [0, 2], [0, 2], [0, 2], [0, 2]);
          rhs('/', 'div', [0, 2], [1, 2], [0, 1], [0, 1]);
          rhs('/', 'div,lte', [0, 2], [1, 2], [1, 2], [0, 1]);
          rhs('/', 'div,lte', [0, 2], [1, 2], [1, 2], [1, 2]);
          rhs('/', 'div,imp', [0, 20], [0, 1], [0, 1], [0, 1]);
          rhs('/', 'div,lte', [0, 20], [0, 10]);
          rhs('/', 'div,imp', [0, 20], [0, 0, 9, 9]);
          rhs('/', 'div', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('/', 'div,imp', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
        });

        describe('ternary with shared result', function() {

          let both = testBinaryTernarySharedResult.bind(undefined, '<=', 'rhs', ''); // A & B, R = A @ C  and  A & B, R = C @ A
          let lhs = testBinaryTernarySharedResult.bind(undefined, '<=', 'rhs', 'lhs'); // A & B, R = A @ C
          let rhs = testBinaryTernarySharedResult.bind(undefined, '<=', 'rhs', 'rhs'); // A & B, R = C @ A

          // A & B, R = A &? C
          both('&?', 'imp,imp', [0, 1], [0, 1], [0, 1], [0, 1]);
          both('&?', 'imp,imp', [0, 1], [0, 1], [0, 1], [0, 2]);
          both('&?', 'imp,imp', [0, 1], [0, 1], [0, 2], [0, 2]);
          both('&?', 'imp,imp', [0, 1], [0, 2], [0, 2], [0, 2]);
          both('&?', 'imp,imp', [0, 2], [0, 1], [0, 1], [0, 1]);
          both('&?', 'imp,lte', [0, 2], [0, 1], [0, 1], [0, 2]);
          both('&?', 'isall,lte', [0, 2], [0, 1], [0, 2], [0, 2]);
          both('&?', 'isall,lte', [0, 2], [0, 2], [0, 2], [0, 2]);
          both('&?', 'lte', [0, 2], [1, 2], [0, 1], [0, 1]);
          both('&?', [0, 2], [1, 2], [1, 2], [0, 1]);
          both('&?', [0, 2], [1, 2], [1, 2], [1, 2]);
          both('&?', 'imp,imp', [0, 1], [0, 10]);
          both('&?', [0, 1], [0, 0, 9, 9]);
          both('&?', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('&?', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('==?', 'imp,issame', [0, 1], [0, 1], [0, 1], [0, 1]);
          both('==?', 'imp,issame', [0, 1], [0, 1], [0, 1], [0, 2]);
          both('==?', 'imp,issame', [0, 1], [0, 1], [0, 2], [0, 2]);
          both('==?', 'imp,issame', [0, 1], [0, 2], [0, 2], [0, 2]);
          both('==?', 'issame,lte', [0, 2], [0, 1], [0, 1], [0, 1]);
          both('==?', 'issame,lte', [0, 2], [0, 1], [0, 1], [0, 2]);
          both('==?', 'issame,lte', [0, 2], [0, 1], [0, 2], [0, 2]);
          both('==?', 'issame,lte', [0, 2], [0, 2], [0, 2], [0, 2]);
          both('==?', 'issame,lte', [0, 2], [1, 2], [0, 1], [0, 1]);
          both('==?', [0, 2], [1, 2], [1, 2], [0, 1]);
          both('==?', [0, 2], [1, 2], [1, 2], [1, 2]);
          both('==?', 'imp,issame', [0, 1], [0, 10]);
          both('==?', [0, 1], [0, 0, 9, 9]);
          both('==?', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('==?', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!=?', 'imp,isdiff', [0, 1], [0, 1], [0, 1], [0, 1]);
          both('!=?', 'imp,isdiff', [0, 1], [0, 1], [0, 1], [0, 2]);
          both('!=?', 'imp,isdiff', [0, 1], [0, 1], [0, 2], [0, 2]);
          both('!=?', 'imp,isdiff', [0, 1], [0, 2], [0, 2], [0, 2]);
          both('!=?', 'isdiff,lte', [0, 2], [0, 1], [0, 1], [0, 1]);
          both('!=?', 'isdiff,lte', [0, 2], [0, 1], [0, 1], [0, 2]);
          both('!=?', 'isdiff,lte', [0, 2], [0, 1], [0, 2], [0, 2]);
          both('!=?', 'isdiff,lte', [0, 2], [0, 2], [0, 2], [0, 2]);
          both('!=?', 'isdiff,lte', [0, 2], [1, 2], [0, 1], [0, 1]);
          both('!=?', 'diff', [0, 2], [1, 2], [1, 2], [0, 1]);
          both('!=?', 'diff', [0, 2], [1, 2], [1, 2], [1, 2]);
          both('!=?', 'imp,isdiff', [0, 1], [0, 10]);
          both('!=?', [0, 1], [0, 0, 9, 9]);
          both('!=?', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!=?', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<?', 'imp,islt', [0, 1], [0, 1], [0, 1], [0, 1]);
          lhs('<?', 'imp,islt', [0, 1], [0, 1], [0, 1], [0, 2]);
          lhs('<?', 'imp,islt', [0, 1], [0, 1], [0, 2], [0, 2]);
          lhs('<?', 'imp,islt', [0, 1], [0, 2], [0, 2], [0, 2]);
          lhs('<?', 'islt,lte', [0, 2], [0, 1], [0, 1], [0, 1]);
          lhs('<?', 'islt,lte', [0, 2], [0, 1], [0, 1], [0, 2]);
          lhs('<?', 'islt,lte', [0, 2], [0, 1], [0, 2], [0, 2]);
          lhs('<?', 'islt,lte', [0, 2], [0, 2], [0, 2], [0, 2]);
          lhs('<?', [0, 2], [1, 2], [0, 1], [0, 1]);
          lhs('<?', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
          lhs('<?', [0, 2], [1, 2], [1, 2], [1, 2]);
          lhs('<?', 'imp,islt', [0, 1], [0, 10]);
          lhs('<?', [0, 1], [0, 0, 9, 9]);
          lhs('<?', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<?', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<?', 'imp,islt', [0, 1], [0, 1], [0, 1], [0, 1]);
          rhs('<?', 'imp,islt', [0, 1], [0, 1], [0, 1], [0, 2]);
          rhs('<?', 'imp,islt', [0, 1], [0, 1], [0, 2], [0, 2]);
          rhs('<?', 'imp,islt', [0, 1], [0, 2], [0, 2], [0, 2]);
          rhs('<?', 'islt,lte', [0, 2], [0, 1], [0, 1], [0, 1]);
          rhs('<?', 'islt,lte', [0, 2], [0, 1], [0, 1], [0, 2]);
          rhs('<?', 'islt,lte', [0, 2], [0, 1], [0, 2], [0, 2]);
          rhs('<?', 'islt,lte', [0, 2], [0, 2], [0, 2], [0, 2]);
          rhs('<?', 'islt,lte', [0, 2], [1, 2], [0, 1], [0, 1]);
          rhs('<?', 'lt', [0, 2], [1, 2], [1, 2], [0, 1]);
          rhs('<?', [0, 2], [1, 2], [1, 2], [1, 2]);
          rhs('<?', 'imp,islt', [0, 1], [0, 10]);
          rhs('<?', [0, 1], [0, 0, 9, 9]);
          rhs('<?', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<?', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<=?', 'imp,islte', [0, 1], [0, 1], [0, 1], [0, 1]);
          lhs('<=?', 'imp,islte', [0, 1], [0, 1], [0, 1], [0, 2]);
          lhs('<=?', 'imp,islte', [0, 1], [0, 1], [0, 2], [0, 2]);
          lhs('<=?', 'imp,islte', [0, 1], [0, 2], [0, 2], [0, 2]);
          lhs('<=?', 'islte,lte', [0, 2], [0, 1], [0, 1], [0, 1]);
          lhs('<=?', 'islte,lte', [0, 2], [0, 1], [0, 1], [0, 2]);
          lhs('<=?', 'islte,lte', [0, 2], [0, 1], [0, 2], [0, 2]);
          lhs('<=?', 'islte,lte', [0, 2], [0, 2], [0, 2], [0, 2]);
          lhs('<=?', 'islte,lte', [0, 2], [1, 2], [0, 1], [0, 1]);
          lhs('<=?', [0, 2], [1, 2], [1, 2], [0, 1]);
          lhs('<=?', 'lte', [0, 2], [1, 2], [1, 2], [1, 2]);
          lhs('<=?', 'imp,islte', [0, 1], [0, 10]);
          lhs('<=?', [0, 1], [0, 0, 9, 9]);
          lhs('<=?', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<=?', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<=?', 'imp,islte', [0, 1], [0, 1], [0, 1], [0, 1]);
          rhs('<=?', 'imp,islte', [0, 1], [0, 1], [0, 1], [0, 2]);
          rhs('<=?', 'imp,islte', [0, 1], [0, 1], [0, 2], [0, 2]);
          rhs('<=?', 'imp,islte', [0, 1], [0, 2], [0, 2], [0, 2]);
          rhs('<=?', 'islte,lte', [0, 2], [0, 1], [0, 1], [0, 1]);
          rhs('<=?', 'islte,lte', [0, 2], [0, 1], [0, 1], [0, 2]);
          rhs('<=?', 'islte,lte', [0, 2], [0, 1], [0, 2], [0, 2]);
          rhs('<=?', 'islte,lte', [0, 2], [0, 2], [0, 2], [0, 2]);
          rhs('<=?', [0, 2], [1, 2], [0, 1], [0, 1]);
          rhs('<=?', [0, 2], [1, 2], [1, 2], [0, 1]);
          rhs('<=?', 'lte', [0, 2], [1, 2], [1, 2], [1, 2]);
          rhs('<=?', 'imp,islte', [0, 1], [0, 10]);
          rhs('<=?', [0, 1], [0, 0, 9, 9]);
          rhs('<=?', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<=?', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!&?', 'imp,isnall', [0, 1], [0, 1], [0, 1], [0, 1]);
          both('!&?', 'imp,isnall', [0, 1], [0, 1], [0, 1], [0, 2]);
          both('!&?', 'imp,isnall', [0, 1], [0, 1], [0, 2], [0, 2]);
          both('!&?', 'imp,isnall', [0, 1], [0, 2], [0, 2], [0, 2]);
          both('!&?', 'isnall,lte', [0, 2], [0, 1], [0, 1], [0, 1]);
          both('!&?', 'isnall,lte', [0, 2], [0, 1], [0, 1], [0, 2]);
          both('!&?', 'isnall,lte', [0, 2], [0, 1], [0, 2], [0, 2]);
          both('!&?', 'isnall,lte', [0, 2], [0, 2], [0, 2], [0, 2]);
          both('!&?', 'isnall,lte', [0, 2], [1, 2], [0, 1], [0, 1]);
          both('!&?', [0, 2], [1, 2], [1, 2], [0, 1]);
          both('!&?', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
          both('!&?', 'imp,isnall', [0, 1], [0, 10]);
          both('!&?', [0, 1], [0, 0, 9, 9]);
          both('!&?', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!&?', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('|?', 'imp,issome', [0, 1], [0, 1], [0, 1], [0, 1]);
          both('|?', 'imp,issome', [0, 1], [0, 1], [0, 1], [0, 2]);
          both('|?', 'imp,issome', [0, 1], [0, 1], [0, 2], [0, 2]);
          both('|?', 'imp,issome', [0, 1], [0, 2], [0, 2], [0, 2]);
          both('|?', 'issome,lte', [0, 2], [0, 1], [0, 1], [0, 1]);
          both('|?', 'issome,lte', [0, 2], [0, 1], [0, 1], [0, 2]);
          both('|?', 'issome,lte', [0, 2], [0, 1], [0, 2], [0, 2]);
          both('|?', 'issome,lte', [0, 2], [0, 2], [0, 2], [0, 2]);
          both('|?', [0, 2], [1, 2], [0, 1], [0, 1]);
          both('|?', [0, 2], [1, 2], [1, 2], [0, 1]);
          both('|?', [0, 2], [1, 2], [1, 2], [1, 2]);
          both('|?', 'imp,issome', [0, 1], [0, 10]);
          both('|?', [0, 1], [0, 0, 9, 9]);
          both('|?', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('|?', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!|?', 'imp,isnone', [0, 1], [0, 1], [0, 1], [0, 1]);
          both('!|?', 'imp,isnone', [0, 1], [0, 1], [0, 1], [0, 2]);
          both('!|?', 'imp,isnone', [0, 1], [0, 1], [0, 2], [0, 2]);
          both('!|?', 'imp,isnone', [0, 1], [0, 2], [0, 2], [0, 2]);
          both('!|?', 'isnone,lte', [0, 2], [0, 1], [0, 1], [0, 1]);
          both('!|?', 'isnone,lte', [0, 2], [0, 1], [0, 1], [0, 2]);
          both('!|?', 'isnone,lte', [0, 2], [0, 1], [0, 2], [0, 2]);
          both('!|?', 'isnone,lte', [0, 2], [0, 2], [0, 2], [0, 2]);
          both('!|?', [0, 2], [1, 2], [0, 1], [0, 1]);
          both('!|?', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
          both('!|?', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
          both('!|?', 'imp,isnone', [0, 1], [0, 10]);
          both('!|?', 'isnone', [0, 1], [0, 0, 9, 9]);
          both('!|?', 'isnone', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!|?', 'isnone', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('+', 'imp,sum', [0, 1], [0, 1], [0, 1], [0, 1]);
          both('+', 'imp,sum', [0, 1], [0, 1], [0, 1], [0, 2]);
          both('+', 'imp,sum', [0, 1], [0, 1], [0, 2], [0, 2]);
          both('+', 'imp,sum', [0, 1], [0, 2], [0, 2], [0, 2]);
          both('+', 'lte,sum', [0, 2], [0, 1], [0, 1], [0, 1]);
          both('+', 'lte,sum', [0, 2], [0, 1], [0, 1], [0, 2]);
          both('+', 'lte,sum', [0, 2], [0, 1], [0, 2], [0, 2]);
          both('+', 'lte,sum', [0, 2], [0, 2], [0, 2], [0, 2]);
          both('+', 'sum', [0, 2], [1, 2], [0, 1], [0, 1]);
          both('+', 'lte,sum', [0, 2], [1, 2], [1, 2], [0, 1]);
          both('+', [0, 2], [1, 2], [1, 2], [1, 2]);
          both('+', 'lte,sum', [0, 20], [0, 1], [0, 1], [0, 1]);
          both('+', 'lte,sum', [0, 20], [0, 10]);
          both('+', 'lte,sum', [0, 20], [0, 0, 9, 9]);
          both('+', 'lte,sum', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('+', 'lte,sum', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('-', 'imp,minus', [0, 1], [0, 1], [0, 1], [0, 1]);
          lhs('-', 'imp,minus', [0, 1], [0, 1], [0, 1], [0, 2]);
          lhs('-', 'imp,minus', [0, 1], [0, 1], [0, 2], [0, 2]);
          lhs('-', 'imp,minus', [0, 1], [0, 2], [0, 2], [0, 2]);
          lhs('-', 'imp,minus', [0, 2], [0, 1], [0, 1], [0, 1]);
          lhs('-', 'imp,minus', [0, 2], [0, 1], [0, 1], [0, 2]);
          lhs('-', 'imp,minus', [0, 2], [0, 1], [0, 2], [0, 2]);
          lhs('-', 'lte,minus', [0, 2], [0, 2], [0, 2], [0, 2]);
          lhs('-', 'lte,minus', [0, 2], [1, 2], [0, 1], [0, 1]);
          lhs('-', 'lte,minus', [0, 2], [1, 2], [1, 2], [0, 1]);
          lhs('-', [0, 2], [1, 2], [1, 2], [1, 2]);
          lhs('-', 'imp,minus', [0, 20], [0, 1], [0, 1], [0, 1]);
          lhs('-', 'lte,minus', [0, 20], [0, 10]);
          lhs('-', 'lte,minus', [0, 20], [0, 0, 9, 9]);
          lhs('-', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('-', 'lte,minus', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('-', 'imp,minus', [0, 1], [0, 1], [0, 1], [0, 1]);
          rhs('-', 'imp,minus', [0, 1], [0, 1], [0, 1], [0, 2]);
          rhs('-', 'imp,minus', [0, 1], [0, 1], [0, 2], [0, 2]);
          rhs('-', 'imp,minus', [0, 1], [0, 2], [0, 2], [0, 2]);
          rhs('-', 'imp,minus', [0, 2], [0, 1], [0, 1], [0, 1]);
          rhs('-', 'lte,minus', [0, 2], [0, 1], [0, 1], [0, 2]);
          rhs('-', 'lte,minus', [0, 2], [0, 1], [0, 2], [0, 2]);
          rhs('-', 'lte,minus', [0, 2], [0, 2], [0, 2], [0, 2]);
          rhs('-', [0, 2], [1, 2], [0, 1], [0, 1]);
          rhs('-', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
          rhs('-', [0, 2], [1, 2], [1, 2], [1, 2]);
          rhs('-', 'imp,minus', [0, 20], [0, 1], [0, 1], [0, 1]);
          rhs('-', 'lte,minus', [0, 20], [0, 10]);
          rhs('-', 'lte,minus', [0, 20], [0, 0, 9, 9]);
          rhs('-', 'lte,minus', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('-', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('*', 'imp,product', [0, 1], [0, 1], [0, 1], [0, 1]);
          both('*', 'imp,product', [0, 1], [0, 1], [0, 1], [0, 2]);
          both('*', 'imp,product', [0, 1], [0, 1], [0, 2], [0, 2]);
          both('*', 'imp,product', [0, 1], [0, 2], [0, 2], [0, 2]);
          both('*', 'imp,product', [0, 2], [0, 1], [0, 1], [0, 1]);
          both('*', 'lte,product', [0, 2], [0, 1], [0, 1], [0, 2]);
          both('*', 'lte,product', [0, 2], [0, 1], [0, 2], [0, 2]);
          both('*', 'lte,product', [0, 2], [0, 2], [0, 2], [0, 2]);
          both('*', 'lte,product', [0, 2], [1, 2], [0, 1], [0, 1]);
          both('*', 'lte', [0, 2], [1, 2], [1, 2], [0, 1]);
          both('*', 'lte,product', [0, 2], [1, 2], [1, 2], [1, 2]);
          both('*', 'imp,product', [0, 100], [0, 1], [0, 1], [0, 1]);
          both('*', 'lte,product', [0, 100], [0, 10]);
          both('*', 'imp,product', [0, 100], [0, 0, 9, 9]);
          both('*', 'imp,product', [0, 100], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('*', 'imp,product', [0, 100], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('/', 'div,imp', [0, 1], [0, 1], [0, 1], [0, 1]);
          lhs('/', 'div,imp', [0, 1], [0, 1], [0, 1], [0, 2]);
          lhs('/', 'div,imp', [0, 1], [0, 1], [0, 2], [0, 2]);
          lhs('/', 'div,imp', [0, 1], [0, 2], [0, 2], [0, 2]);
          lhs('/', 'div,lte', [0, 2], [0, 1], [0, 1], [0, 1]);
          lhs('/', 'div,lte', [0, 2], [0, 1], [0, 1], [0, 2]);
          lhs('/', 'div,lte', [0, 2], [0, 1], [0, 2], [0, 2]);
          lhs('/', 'div,lte', [0, 2], [0, 2], [0, 2], [0, 2]);
          lhs('/', 'div', [0, 2], [1, 2], [0, 1], [0, 1]);
          lhs('/', 'div,lte', [0, 2], [1, 2], [1, 2], [0, 1]);
          lhs('/', 'div,lte', [0, 2], [1, 2], [1, 2], [1, 2]);
          lhs('/', 'div,lte', [0, 20], [0, 1], [0, 1], [0, 1]);
          lhs('/', 'div,lte', [0, 20], [0, 10]);
          lhs('/', 'div', [0, 20], [0, 0, 9, 9]);
          lhs('/', 'div', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('/', 'div', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('/', 'div,imp', [0, 1], [0, 1], [0, 1], [0, 1]);
          rhs('/', 'div,imp', [0, 1], [0, 1], [0, 1], [0, 2]);
          rhs('/', 'div,imp', [0, 1], [0, 1], [0, 2], [0, 2]);
          rhs('/', 'div,imp', [0, 1], [0, 2], [0, 2], [0, 2]);
          rhs('/', 'div,lte', [0, 2], [0, 1], [0, 1], [0, 1]);
          rhs('/', 'div,lte', [0, 2], [0, 1], [0, 1], [0, 2]);
          rhs('/', 'div,lte', [0, 2], [0, 1], [0, 2], [0, 2]);
          rhs('/', 'div,lte', [0, 2], [0, 2], [0, 2], [0, 2]);
          rhs('/', 'div,imp', [0, 2], [1, 2], [0, 1], [0, 1]);
          rhs('/', 'div', [0, 2], [1, 2], [1, 2], [0, 1]);
          rhs('/', 'div,lte', [0, 2], [1, 2], [1, 2], [1, 2]);
          rhs('/', 'div,lte', [0, 20], [0, 1], [0, 1], [0, 1]);
          rhs('/', 'div,lte', [0, 20], [0, 10]);
          rhs('/', 'div', [0, 20], [0, 0, 9, 9]);
          rhs('/', 'div', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('/', 'div', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
        });
      });
    });

    describe('NALL', function() {

      describe('binary', function() {

        let both = testBinaryBinary.bind(undefined, '!&', '', ''); // A & B, A @ C  and  A & B, C @ A
        let lhs = testBinaryBinary.bind(undefined, '!&', '', 'lhs'); // A & B, A @ C
        let rhs = testBinaryBinary.bind(undefined, '!&', '', 'rhs'); // A & B, C @ A

        both('&', [0, 1], [0, 1], [0, 1]);
        //both('&', [0, 1], [0, 1], [0, 2]);
        //both('&', [0, 1], [0, 2], [0, 1]);
        //both('&', [0, 1], [0, 2], [0, 2]);
        //both('&', [0, 2], [0, 1], [0, 1]);
        //both('&', [0, 2], [0, 1], [0, 2]);
        //both('&', [0, 2], [0, 2], [0, 1]);
        //both('&', [0, 2], [0, 2], [0, 2]);
        //both('&', [0, 2], [0, 1], [1, 2]);
        //both('&', [0, 2], [1, 2], [0, 1]);
        //both('&', [0, 2], [1, 2], [1, 2]);
        both('&', [0, 10]);
        both('&', [0, 0, 9, 9]);
        both('&', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('&', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!=', 'imp', [0, 1], [0, 1], [0, 1]);
        //both('!=', [0, 1], [0, 1], [0, 2]);
        //both('!=', [0, 1], [0, 2], [0, 1]);
        //both('!=', [0, 1], [0, 2], [0, 2]);
        //both('!=', [0, 2], [0, 1], [0, 1]);
        //both('!=', [0, 2], [0, 1], [0, 2]);
        //both('!=', [0, 2], [0, 2], [0, 1]);
        //both('!=', [0, 2], [0, 2], [0, 2]);
        //both('!=', [0, 2], [0, 1], [1, 2]);
        //both('!=', [0, 2], [1, 2], [0, 1]);
        //both('!=', [0, 2], [1, 2], [1, 2]);
        both('!=', 'diff,nall', [0, 10]);
        both('!=', 'imp', [0, 0, 9, 9]);                                   // TOFIX: lte??
        both('!=', 'imp', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!=', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('->', [0, 1], [0, 1], [0, 1]);
        //lhs('->', [0, 1], [0, 1], [0, 2]);
        //lhs('->', [0, 1], [0, 2], [0, 1]);
        //lhs('->', [0, 1], [0, 2], [0, 2]);
        //lhs('->', [0, 2], [0, 1], [0, 1]);
        //lhs('->', [0, 2], [0, 1], [0, 2]);
        //lhs('->', [0, 2], [0, 2], [0, 1]);
        //lhs('->', [0, 2], [0, 2], [0, 2]);
        //lhs('->', [0, 2], [0, 1], [1, 2]);
        //lhs('->', [0, 2], [1, 2], [0, 1]);
        //lhs('->', [0, 2], [1, 2], [1, 2]);
        lhs('->', [0, 10]);
        lhs('->', [0, 0, 9, 9]);
        lhs('->', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('->', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('->', 'imp,nall', [0, 1], [0, 1], [0, 1]);
        //rhs('->', [0, 1], [0, 1], [0, 2]);
        //rhs('->', [0, 1], [0, 2], [0, 1]);
        //rhs('->', [0, 1], [0, 2], [0, 2]);
        //rhs('->', [0, 2], [0, 1], [0, 1]);
        //rhs('->', [0, 2], [0, 1], [0, 2]);
        //rhs('->', [0, 2], [0, 2], [0, 1]);
        //rhs('->', [0, 2], [0, 2], [0, 2]);
        //rhs('->', [0, 2], [0, 1], [1, 2]);
        //rhs('->', [0, 2], [1, 2], [0, 1]);
        //rhs('->', [0, 2], [1, 2], [1, 2]);
        rhs('->', 'imp,nall', [0, 10]);
        rhs('->', 'imp,nall', [0, 0, 9, 9]);
        rhs('->', 'imp,nall', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('->', 'imp,nall', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<', [0, 1], [0, 1], [0, 1]);
        //lhs('<', [0, 1], [0, 1], [0, 2]);
        //lhs('<', [0, 1], [0, 2], [0, 1]);
        //lhs('<', [0, 1], [0, 2], [0, 2]);
        //lhs('<', [0, 2], [0, 1], [0, 1]);
        //lhs('<', [0, 2], [0, 1], [0, 2]);
        //lhs('<', [0, 2], [0, 2], [0, 1]);
        //lhs('<', [0, 2], [0, 2], [0, 2]);
        //lhs('<', [0, 2], [0, 1], [1, 2]);
        //lhs('<', [0, 2], [1, 2], [0, 1]);
        //lhs('<', [0, 2], [1, 2], [1, 2]);
        lhs('<', 'lt,nall', [0, 10]);
        lhs('<', [0, 0, 9, 9]);
        lhs('<', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<', [0, 1], [0, 1], [0, 1]);
        //rhs('<', [0, 1], [0, 1], [0, 2]);
        //rhs('<', [0, 1], [0, 2], [0, 1]);
        //rhs('<', [0, 1], [0, 2], [0, 2]);
        //rhs('<', [0, 2], [0, 1], [0, 1]);
        //rhs('<', [0, 2], [0, 1], [0, 2]);
        //rhs('<', [0, 2], [0, 2], [0, 1]);
        //rhs('<', [0, 2], [0, 2], [0, 2]);
        //rhs('<', [0, 2], [0, 1], [1, 2]);
        //rhs('<', [0, 2], [1, 2], [0, 1]);
        //rhs('<', [0, 2], [1, 2], [1, 2]);
        rhs('<', [0, 10]);
        rhs('<', [0, 0, 9, 9]);
        rhs('<', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<=', [0, 1], [0, 1], [0, 1]);
        //lhs('<=', [0, 1], [0, 1], [0, 2]);
        //lhs('<=', [0, 1], [0, 2], [0, 1]);
        //lhs('<=', [0, 1], [0, 2], [0, 2]);
        //lhs('<=', [0, 2], [0, 1], [0, 1]);
        //lhs('<=', [0, 2], [0, 1], [0, 2]);
        //lhs('<=', [0, 2], [0, 2], [0, 1]);
        //lhs('<=', [0, 2], [0, 2], [0, 2]);
        //lhs('<=', [0, 2], [0, 1], [1, 2]);
        //lhs('<=', [0, 2], [1, 2], [0, 1]);
        //lhs('<=', [0, 2], [1, 2], [1, 2]);
        lhs('<=', [0, 10]);
        lhs('<=', [0, 0, 9, 9]);
        lhs('<=', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<=', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<=', 'imp,nall', [0, 1], [0, 1], [0, 1]);
        //rhs('<=', [0, 1], [0, 1], [0, 2]);
        //rhs('<=', [0, 1], [0, 2], [0, 1]);
        //rhs('<=', [0, 1], [0, 2], [0, 2]);
        //rhs('<=', [0, 2], [0, 1], [0, 1]);
        //rhs('<=', [0, 2], [0, 1], [0, 2]);
        //rhs('<=', [0, 2], [0, 2], [0, 1]);
        //rhs('<=', [0, 2], [0, 2], [0, 2]);
        //rhs('<=', [0, 2], [0, 1], [1, 2]);
        //rhs('<=', [0, 2], [1, 2], [0, 1]);
        //rhs('<=', [0, 2], [1, 2], [1, 2]);
        rhs('<=', 'lte,nall', [0, 10]);
        rhs('<=', 'imp,nall', [0, 0, 9, 9]);
        rhs('<=', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<=', 'imp,nall', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!&', [0, 1], [0, 1], [0, 1]);
        //both('!&', [0, 1], [0, 1], [0, 2]);
        //both('!&', [0, 1], [0, 2], [0, 1]);
        //both('!&', [0, 1], [0, 2], [0, 2]);
        //both('!&', [0, 2], [0, 1], [0, 1]);
        //both('!&', [0, 2], [0, 1], [0, 2]);
        //both('!&', [0, 2], [0, 2], [0, 1]);
        //both('!&', [0, 2], [0, 2], [0, 2]);
        //both('!&', [0, 2], [0, 1], [1, 2]);
        //both('!&', [0, 2], [1, 2], [0, 1]);
        //both('!&', [0, 2], [1, 2], [1, 2]);
        both('!&', [0, 10]);
        both('!&', [0, 0, 9, 9]);
        both('!&', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!&', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('!->', [0, 1], [0, 1], [0, 1]);
        //lhs('!->', [0, 1], [0, 1], [0, 2]);
        //lhs('!->', [0, 1], [0, 2], [0, 1]);
        //lhs('!->', [0, 1], [0, 2], [0, 2]);
        //lhs('!->', [0, 2], [0, 1], [0, 1]);
        //lhs('!->', [0, 2], [0, 1], [0, 2]);
        //lhs('!->', [0, 2], [0, 2], [0, 1]);
        //lhs('!->', [0, 2], [0, 2], [0, 2]);
        //lhs('!->', [0, 2], [0, 1], [1, 2]);
        //lhs('!->', [0, 2], [1, 2], [0, 1]);
        //lhs('!->', [0, 2], [1, 2], [1, 2]);
        lhs('!->', [0, 10]);
        lhs('!->', [0, 0, 9, 9]);
        lhs('!->', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('!->', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('!->', [0, 1], [0, 1], [0, 1]);
        //rhs('!->', [0, 1], [0, 1], [0, 2]);
        //rhs('!->', [0, 1], [0, 2], [0, 1]);
        //rhs('!->', [0, 1], [0, 2], [0, 2]);
        //rhs('!->', [0, 2], [0, 1], [0, 1]);
        //rhs('!->', [0, 2], [0, 1], [0, 2]);
        //rhs('!->', [0, 2], [0, 2], [0, 1]);
        //rhs('!->', [0, 2], [0, 2], [0, 2]);
        //rhs('!->', [0, 2], [0, 1], [1, 2]);
        //rhs('!->', [0, 2], [1, 2], [0, 1]);
        //rhs('!->', [0, 2], [1, 2], [1, 2]);
        rhs('!->', [0, 10]);
        rhs('!->', [0, 0, 9, 9]);
        rhs('!->', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('!->', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!|', [0, 1], [0, 1], [0, 1]);
        //both('!|', [0, 1], [0, 1], [0, 2]);
        //both('!|', [0, 1], [0, 2], [0, 1]);
        //both('!|', [0, 1], [0, 2], [0, 2]);
        //both('!|', [0, 2], [0, 1], [0, 1]);
        //both('!|', [0, 2], [0, 1], [0, 2]);
        //both('!|', [0, 2], [0, 2], [0, 1]);
        //both('!|', [0, 2], [0, 2], [0, 2]);
        //both('!|', [0, 2], [0, 1], [1, 2]);
        //both('!|', [0, 2], [1, 2], [0, 1]);
        //both('!|', [0, 2], [1, 2], [1, 2]);
        both('!|', [0, 10]);
        both('!|', [0, 0, 9, 9]);
        both('!|', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!|', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('==', 'nall', [0, 1], [0, 1], [0, 1]);
        //both('==', [0, 1], [0, 1], [0, 2]);
        //both('==', [0, 1], [0, 2], [0, 1]);
        //both('==', [0, 1], [0, 2], [0, 2]);
        //both('==', [0, 2], [0, 1], [0, 1]);
        //both('==', [0, 2], [0, 1], [0, 2]);
        //both('==', [0, 2], [0, 2], [0, 1]);
        //both('==', [0, 2], [0, 2], [0, 2]);
        //both('==', [0, 2], [0, 1], [1, 2]);
        //both('==', [0, 2], [1, 2], [0, 1]);
        //both('==', [0, 2], [1, 2], [1, 2]);
        both('==', 'nall', [0, 10]);
        both('==', 'nall', [0, 0, 9, 9]);
        both('==', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('==', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!^', 'nall', [0, 1], [0, 1], [0, 1]);
        //both('!^', [0, 1], [0, 1], [0, 2]);
        //both('!^', [0, 1], [0, 2], [0, 1]);
        //both('!^', [0, 1], [0, 2], [0, 2]);
        //both('!^', [0, 2], [0, 1], [0, 1]);
        //both('!^', [0, 2], [0, 1], [0, 2]);
        //both('!^', [0, 2], [0, 2], [0, 1]);
        //both('!^', [0, 2], [0, 2], [0, 2]);
        //both('!^', [0, 2], [0, 1], [1, 2]);
        //both('!^', [0, 2], [1, 2], [0, 1]);
        //both('!^', [0, 2], [1, 2], [1, 2]);
        both('!^', 'nall', [0, 10]);                                      // lt+xnor = xor?
        both('!^', 'nall', [0, 0, 9, 9]);
        both('!^', 'nall', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);    // xor??
        both('!^', 'nall', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('^', 'imp', [0, 1], [0, 1], [0, 1]);
        //both('^', [0, 1], [0, 1], [0, 2]);
        //both('^', [0, 1], [0, 2], [0, 1]);
        //both('^', [0, 1], [0, 2], [0, 2]);
        //both('^', [0, 2], [0, 1], [0, 1]);
        //both('^', [0, 2], [0, 1], [0, 2]);
        //both('^', [0, 2], [0, 2], [0, 1]);
        //both('^', [0, 2], [0, 2], [0, 2]);
        //both('^', [0, 2], [0, 1], [1, 2]);
        //both('^', [0, 2], [1, 2], [0, 1]);
        //both('^', [0, 2], [1, 2], [1, 2]);
        both('^', 'imp', [0, 10]);
        both('^', 'imp', [0, 0, 9, 9]);
        both('^', 'imp', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('^', 'imp', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

      });

      describe('ternary with shared arg', function() {

        let both = testBinaryTernarySharedArgs.bind(undefined, '!&', '', ''); // A & B, R = A @ C  and  A & B, R = C @ A
        let lhs = testBinaryTernarySharedArgs.bind(undefined, '!&', '', 'lhs'); // A & B, R = A @ C
        let rhs = testBinaryTernarySharedArgs.bind(undefined, '!&', '', 'rhs'); // A & B, R = C @ A

        // A & B, R = A &? C
        both('&?', 'isall,nall', [0, 1], [0, 1], [0, 1], [0, 1]);
        both('&?', 'isall,nall', [0, 1], [0, 1], [0, 1], [0, 2]);
        both('&?', 'isall,nall', [0, 1], [0, 1], [0, 2], [0, 2]);
        both('&?', 'isall,nall', [0, 1], [0, 2], [0, 2], [0, 2]);
        both('&?', 'isall,nall', [0, 2], [0, 1], [0, 1], [0, 1]);
        both('&?', 'isall,nall', [0, 2], [0, 1], [0, 1], [0, 2]);
        both('&?', 'isall,nall', [0, 2], [0, 1], [0, 2], [0, 2]);
        both('&?', 'isall,nall', [0, 2], [0, 2], [0, 2], [0, 2]);
        both('&?', [0, 2], [1, 2], [0, 1], [0, 1]);
        both('&?', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
        both('&?', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
        both('&?', 'isall,nall', [0, 1], [0, 10]);
        both('&?', 'isall,nall', [0, 1], [0, 0, 9, 9]);
        both('&?', 'isall,nall', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('&?', 'isall,nall', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('==?', 'issame,nall', [0, 1], [0, 1], [0, 1], [0, 1]);
        both('==?', 'issame,nall', [0, 1], [0, 1], [0, 1], [0, 2]);
        both('==?', 'issame,nall', [0, 1], [0, 1], [0, 2], [0, 2]);
        both('==?', 'issame,nall', [0, 1], [0, 2], [0, 2], [0, 2]);
        both('==?', 'issame,nall', [0, 2], [0, 1], [0, 1], [0, 1]);
        both('==?', 'issame,nall', [0, 2], [0, 1], [0, 1], [0, 2]);
        both('==?', 'issame,nall', [0, 2], [0, 1], [0, 2], [0, 2]);
        both('==?', 'issame,nall', [0, 2], [0, 2], [0, 2], [0, 2]);
        both('==?', 'issame', [0, 2], [1, 2], [0, 1], [0, 1]);
        both('==?', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
        both('==?', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
        both('==?', 'issame,nall', [0, 1], [0, 10]);
        both('==?', 'issame,nall', [0, 1], [0, 0, 9, 9]);
        both('==?', 'issame,nall', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('==?', 'issame,nall', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!=?', 'isdiff,nall', [0, 1], [0, 1], [0, 1], [0, 1]);
        both('!=?', 'isdiff,nall', [0, 1], [0, 1], [0, 1], [0, 2]);
        both('!=?', 'isdiff,nall', [0, 1], [0, 1], [0, 2], [0, 2]);
        both('!=?', 'isdiff,nall', [0, 1], [0, 2], [0, 2], [0, 2]);
        both('!=?', 'isdiff,nall', [0, 2], [0, 1], [0, 1], [0, 1]);
        both('!=?', 'isdiff,nall', [0, 2], [0, 1], [0, 1], [0, 2]);
        both('!=?', 'isdiff,nall', [0, 2], [0, 1], [0, 2], [0, 2]);
        both('!=?', 'isdiff,nall', [0, 2], [0, 2], [0, 2], [0, 2]);
        both('!=?', 'isdiff', [0, 2], [1, 2], [0, 1], [0, 1]);
        both('!=?', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
        both('!=?', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
        both('!=?', 'isdiff,nall', [0, 1], [0, 10]);
        both('!=?', 'isdiff,nall', [0, 1], [0, 0, 9, 9]);
        both('!=?', 'isdiff,nall', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!=?', 'isdiff,nall', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<?', 'islt,nall', [0, 1], [0, 1], [0, 1], [0, 1]);
        lhs('<?', 'islt,nall', [0, 1], [0, 1], [0, 1], [0, 2]);
        lhs('<?', 'islt,nall', [0, 1], [0, 1], [0, 2], [0, 2]);
        lhs('<?', 'islt,nall', [0, 1], [0, 2], [0, 2], [0, 2]);
        lhs('<?', 'islt,nall', [0, 2], [0, 1], [0, 1], [0, 1]);
        lhs('<?', 'islt,nall', [0, 2], [0, 1], [0, 1], [0, 2]);
        lhs('<?', 'islt,nall', [0, 2], [0, 1], [0, 2], [0, 2]);
        lhs('<?', 'islt,nall', [0, 2], [0, 2], [0, 2], [0, 2]);
        lhs('<?', [0, 2], [1, 2], [0, 1], [0, 1]);
        lhs('<?', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
        lhs('<?', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
        lhs('<?', 'islt,nall', [0, 1], [0, 10]);
        lhs('<?', 'islt,nall', [0, 1], [0, 0, 9, 9]);
        lhs('<?', 'islt,nall', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<?', 'islt,nall', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<?', 'islt,nall', [0, 1], [0, 1], [0, 1], [0, 1]);
        rhs('<?', 'islt,nall', [0, 1], [0, 1], [0, 1], [0, 2]);
        rhs('<?', 'islt,nall', [0, 1], [0, 1], [0, 2], [0, 2]);
        rhs('<?', 'islt,nall', [0, 1], [0, 2], [0, 2], [0, 2]);
        rhs('<?', 'islt,nall', [0, 2], [0, 1], [0, 1], [0, 1]);
        rhs('<?', 'islt,nall', [0, 2], [0, 1], [0, 1], [0, 2]);
        rhs('<?', 'islt,nall', [0, 2], [0, 1], [0, 2], [0, 2]);
        rhs('<?', 'islt,nall', [0, 2], [0, 2], [0, 2], [0, 2]);
        rhs('<?', 'islt', [0, 2], [1, 2], [0, 1], [0, 1]);
        rhs('<?', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
        rhs('<?', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
        rhs('<?', 'islt,nall', [0, 1], [0, 10]);
        rhs('<?', 'islt,nall', [0, 1], [0, 0, 9, 9]);
        rhs('<?', 'islt,nall', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<?', 'islt,nall', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<=?', 'islte,nall', [0, 1], [0, 1], [0, 1], [0, 1]);
        lhs('<=?', 'islte,nall', [0, 1], [0, 1], [0, 1], [0, 2]);
        lhs('<=?', 'islte,nall', [0, 1], [0, 1], [0, 2], [0, 2]);
        lhs('<=?', 'islte,nall', [0, 1], [0, 2], [0, 2], [0, 2]);
        lhs('<=?', 'islte,nall', [0, 2], [0, 1], [0, 1], [0, 1]);
        lhs('<=?', 'islte,nall', [0, 2], [0, 1], [0, 1], [0, 2]);
        lhs('<=?', 'islte,nall', [0, 2], [0, 1], [0, 2], [0, 2]);
        lhs('<=?', 'islte,nall', [0, 2], [0, 2], [0, 2], [0, 2]);
        lhs('<=?', 'islte', [0, 2], [1, 2], [0, 1], [0, 1]);
        lhs('<=?', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
        lhs('<=?', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
        lhs('<=?', 'islte,nall', [0, 1], [0, 10]);
        lhs('<=?', 'islte,nall', [0, 1], [0, 0, 9, 9]);
        lhs('<=?', 'islte,nall', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<=?', 'islte,nall', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<=?', 'islte,nall', [0, 1], [0, 1], [0, 1], [0, 1]);
        rhs('<=?', 'islte,nall', [0, 1], [0, 1], [0, 1], [0, 2]);
        rhs('<=?', 'islte,nall', [0, 1], [0, 1], [0, 2], [0, 2]);
        rhs('<=?', 'islte,nall', [0, 1], [0, 2], [0, 2], [0, 2]);
        rhs('<=?', 'islte,nall', [0, 2], [0, 1], [0, 1], [0, 1]);
        rhs('<=?', 'islte,nall', [0, 2], [0, 1], [0, 1], [0, 2]);
        rhs('<=?', 'islte,nall', [0, 2], [0, 1], [0, 2], [0, 2]);
        rhs('<=?', 'islte,nall', [0, 2], [0, 2], [0, 2], [0, 2]);
        rhs('<=?', [0, 2], [1, 2], [0, 1], [0, 1]);
        rhs('<=?', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
        rhs('<=?', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
        rhs('<=?', 'islte,nall', [0, 1], [0, 10]);
        rhs('<=?', 'islte,nall', [0, 1], [0, 0, 9, 9]);
        rhs('<=?', 'islte,nall', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<=?', 'islte,nall', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!&?', 'isnall,nall', [0, 1], [0, 1], [0, 1], [0, 1]);
        both('!&?', 'isnall,nall', [0, 1], [0, 1], [0, 1], [0, 2]);
        both('!&?', 'isnall,nall', [0, 1], [0, 1], [0, 2], [0, 2]);
        both('!&?', 'isnall,nall', [0, 1], [0, 2], [0, 2], [0, 2]);
        both('!&?', 'isnall,nall', [0, 2], [0, 1], [0, 1], [0, 1]);
        both('!&?', 'isnall,nall', [0, 2], [0, 1], [0, 1], [0, 2]);
        both('!&?', 'isnall,nall', [0, 2], [0, 1], [0, 2], [0, 2]);
        both('!&?', 'isnall,nall', [0, 2], [0, 2], [0, 2], [0, 2]);
        both('!&?', 'isnall', [0, 2], [1, 2], [0, 1], [0, 1]);
        both('!&?', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
        both('!&?', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
        both('!&?', 'isnall,nall', [0, 1], [0, 10]);
        both('!&?', 'isnall,nall', [0, 1], [0, 0, 9, 9]);
        both('!&?', 'isnall,nall', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!&?', 'isnall,nall', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('|?', 'issome,nall', [0, 1], [0, 1], [0, 1], [0, 1]);
        both('|?', 'issome,nall', [0, 1], [0, 1], [0, 1], [0, 2]);
        both('|?', 'issome,nall', [0, 1], [0, 1], [0, 2], [0, 2]);
        both('|?', 'issome,nall', [0, 1], [0, 2], [0, 2], [0, 2]);
        both('|?', 'issome,nall', [0, 2], [0, 1], [0, 1], [0, 1]);
        both('|?', 'issome,nall', [0, 2], [0, 1], [0, 1], [0, 2]);
        both('|?', 'issome,nall', [0, 2], [0, 1], [0, 2], [0, 2]);
        both('|?', 'issome,nall', [0, 2], [0, 2], [0, 2], [0, 2]);
        both('|?', [0, 2], [1, 2], [0, 1], [0, 1]);
        both('|?', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
        both('|?', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
        both('|?', 'issome,nall', [0, 1], [0, 10]);
        both('|?', 'issome,nall', [0, 1], [0, 0, 9, 9]);
        both('|?', 'issome,nall', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('|?', 'issome,nall', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!|?', 'isnone,nall', [0, 1], [0, 1], [0, 1], [0, 1]);
        both('!|?', 'isnone,nall', [0, 1], [0, 1], [0, 1], [0, 2]);
        both('!|?', 'isnone,nall', [0, 1], [0, 1], [0, 2], [0, 2]);
        both('!|?', 'isnone,nall', [0, 1], [0, 2], [0, 2], [0, 2]);
        both('!|?', 'isnone,nall', [0, 2], [0, 1], [0, 1], [0, 1]);
        both('!|?', 'isnone,nall', [0, 2], [0, 1], [0, 1], [0, 2]);
        both('!|?', 'isnone,nall', [0, 2], [0, 1], [0, 2], [0, 2]);
        both('!|?', 'isnone,nall', [0, 2], [0, 2], [0, 2], [0, 2]);
        both('!|?', [0, 2], [1, 2], [0, 1], [0, 1]);
        both('!|?', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
        both('!|?', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
        both('!|?', 'isnone,nall', [0, 1], [0, 10]);
        both('!|?', 'isnone,nall', [0, 1], [0, 0, 9, 9]);
        both('!|?', 'isnone,nall', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!|?', 'isnone,nall', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('+', 'nall,sum', [0, 1], [0, 1], [0, 1], [0, 1]);
        both('+', 'nall,sum', [0, 1], [0, 1], [0, 1], [0, 2]);
        both('+', 'nall,sum', [0, 1], [0, 1], [0, 2], [0, 2]);
        both('+', 'nall,sum', [0, 1], [0, 2], [0, 2], [0, 2]);
        both('+', 'issome,nall', [0, 2], [0, 1], [0, 1], [0, 1]);
        both('+', 'nall,sum', [0, 2], [0, 1], [0, 1], [0, 2]);
        both('+', 'nall,sum', [0, 2], [0, 1], [0, 2], [0, 2]);
        both('+', 'nall,sum', [0, 2], [0, 2], [0, 2], [0, 2]);
        both('+', 'sum', [0, 2], [1, 2], [0, 1], [0, 1]);
        both('+', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
        both('+', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
        both('+', 'issome,nall', [0, 20], [0, 1], [0, 1], [0, 1]);
        both('+', 'issome,nall', [0, 20], [0, 10]);
        both('+', 'issome,nall', [0, 20], [0, 0, 9, 9]);
        both('+', 'issome,nall', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('+', 'issome,nall', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('-', 'minus,nall', [0, 1], [0, 1], [0, 1], [0, 1]);
        lhs('-', 'minus,nall', [0, 1], [0, 1], [0, 1], [0, 2]);
        lhs('-', 'minus,nall', [0, 1], [0, 1], [0, 2], [0, 2]);
        lhs('-', 'minus,nall', [0, 1], [0, 2], [0, 2], [0, 2]);
        lhs('-', 'minus,nall', [0, 2], [0, 1], [0, 1], [0, 1]);
        lhs('-', 'minus,nall', [0, 2], [0, 1], [0, 1], [0, 2]);
        lhs('-', 'minus,nall', [0, 2], [0, 1], [0, 2], [0, 2]);
        lhs('-', 'minus,nall', [0, 2], [0, 2], [0, 2], [0, 2]);
        lhs('-', 'minus', [0, 2], [1, 2], [0, 1], [0, 1]);
        lhs('-', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
        lhs('-', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
        lhs('-', 'minus,nall', [0, 20], [0, 1], [0, 1], [0, 1]);
        lhs('-', 'minus,nall', [0, 20], [0, 10]);
        lhs('-', 'minus,nall', [0, 20], [0, 0, 9, 9]);
        lhs('-', 'nall', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('-', 'minus,nall', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('-', 'minus,nall', [0, 1], [0, 1], [0, 1], [0, 1]);
        rhs('-', 'minus,nall', [0, 1], [0, 1], [0, 1], [0, 2]);
        rhs('-', 'minus,nall', [0, 1], [0, 1], [0, 2], [0, 2]);
        rhs('-', 'minus,nall', [0, 1], [0, 2], [0, 2], [0, 2]);
        rhs('-', 'minus,nall', [0, 2], [0, 1], [0, 1], [0, 1]);
        rhs('-', 'minus,nall', [0, 2], [0, 1], [0, 1], [0, 2]);
        rhs('-', 'minus,nall', [0, 2], [0, 1], [0, 2], [0, 2]);
        rhs('-', 'minus,nall', [0, 2], [0, 2], [0, 2], [0, 2]);
        rhs('-', [0, 2], [1, 2], [0, 1], [0, 1]);
        rhs('-', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
        rhs('-', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
        rhs('-', 'minus,nall', [0, 20], [0, 1], [0, 1], [0, 1]);
        rhs('-', 'minus,nall', [0, 20], [0, 10]);
        rhs('-', 'minus,nall', [0, 20], [0, 0, 9, 9]);
        rhs('-', 'minus,nall', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('-', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('*', 'nall,product', [0, 1], [0, 1], [0, 1], [0, 1]);
        both('*', 'nall,product', [0, 1], [0, 1], [0, 1], [0, 2]);
        both('*', 'nall,product', [0, 1], [0, 1], [0, 2], [0, 2]);
        both('*', 'nall,product', [0, 1], [0, 2], [0, 2], [0, 2]);
        both('*', 'nall,product', [0, 2], [0, 1], [0, 1], [0, 1]);
        both('*', 'nall,product', [0, 2], [0, 1], [0, 1], [0, 2]);
        both('*', 'nall,product', [0, 2], [0, 1], [0, 2], [0, 2]);
        both('*', 'nall,product', [0, 2], [0, 2], [0, 2], [0, 2]);
        both('*', 'product', [0, 2], [1, 2], [0, 1], [0, 1]);
        both('*', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
        both('*', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
        both('*', 'nall,product', [0, 100], [0, 1], [0, 1], [0, 1]);
        both('*', 'nall,product', [0, 100], [0, 10]);
        both('*', 'nall,product', [0, 100], [0, 0, 9, 9]);
        both('*', 'nall,product', [0, 100], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('*', 'nall,product', [0, 100], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('/', 'div,nall', [0, 1], [0, 1], [0, 1], [0, 1]);
        lhs('/', 'div,nall', [0, 1], [0, 1], [0, 1], [0, 2]);
        lhs('/', 'div,nall', [0, 1], [0, 1], [0, 2], [0, 2]);
        lhs('/', 'div,nall', [0, 1], [0, 2], [0, 2], [0, 2]);
        lhs('/', 'div,nall', [0, 2], [0, 1], [0, 1], [0, 1]);
        lhs('/', 'div,nall', [0, 2], [0, 1], [0, 1], [0, 2]);
        lhs('/', 'div,nall', [0, 2], [0, 1], [0, 2], [0, 2]);
        lhs('/', 'div,nall', [0, 2], [0, 2], [0, 2], [0, 2]);
        lhs('/', 'div', [0, 2], [1, 2], [0, 1], [0, 1]);
        lhs('/', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
        lhs('/', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
        lhs('/', 'div,nall', [0, 20], [0, 1], [0, 1], [0, 1]);
        lhs('/', 'div,nall', [0, 20], [0, 10]);
        lhs('/', 'div,nall', [0, 20], [0, 0, 9, 9]);
        lhs('/', 'div,nall', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('/', 'div,nall', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('/', 'div,nall', [0, 1], [0, 1], [0, 1], [0, 1]);
        rhs('/', 'div,nall', [0, 1], [0, 1], [0, 1], [0, 2]);
        rhs('/', 'div,nall', [0, 1], [0, 1], [0, 2], [0, 2]);
        rhs('/', 'div,nall', [0, 1], [0, 2], [0, 2], [0, 2]);
        rhs('/', 'div,nall', [0, 2], [0, 1], [0, 1], [0, 1]);
        rhs('/', 'div,nall', [0, 2], [0, 1], [0, 1], [0, 2]);
        rhs('/', 'div,nall', [0, 2], [0, 1], [0, 2], [0, 2]);
        rhs('/', 'div,nall', [0, 2], [0, 2], [0, 2], [0, 2]);
        rhs('/', 'div', [0, 2], [1, 2], [0, 1], [0, 1]);
        rhs('/', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
        rhs('/', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
        rhs('/', 'div,nall', [0, 20], [0, 1], [0, 1], [0, 1]);
        rhs('/', 'div,nall', [0, 20], [0, 10]);
        rhs('/', 'div,nall', [0, 20], [0, 0, 9, 9]);
        rhs('/', 'div,nall', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('/', 'div,nall', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
      });

      describe('ternary with shared result', function() {

        let both = testBinaryTernarySharedResult.bind(undefined, '!&', '', ''); // A & B, R = A @ C  and  A & B, R = C @ A
        let lhs = testBinaryTernarySharedResult.bind(undefined, '!&', '', 'lhs'); // A & B, R = A @ C
        let rhs = testBinaryTernarySharedResult.bind(undefined, '!&', '', 'rhs'); // A & B, R = C @ A

        // A & B, R = A &? C
        both('&?', 'nall', [0, 1], [0, 1], [0, 1], [0, 1]);
        both('&?', 'nall', [0, 1], [0, 1], [0, 1], [0, 2]);
        both('&?', 'nall', [0, 1], [0, 1], [0, 2], [0, 2]);
        both('&?', 'nall', [0, 1], [0, 2], [0, 2], [0, 2]);
        both('&?', 'nall', [0, 2], [0, 1], [0, 1], [0, 1]);
        both('&?', 'nall', [0, 2], [0, 1], [0, 1], [0, 2]);
        both('&?', 'nall', [0, 2], [0, 1], [0, 2], [0, 2]);
        both('&?', 'nall', [0, 2], [0, 2], [0, 2], [0, 2]);
        both('&?', 'nall', [0, 2], [1, 2], [0, 1], [0, 1]);
        both('&?', [0, 2], [1, 2], [1, 2], [0, 1]);
        both('&?', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
        both('&?', 'nall', [0, 1], [0, 10]);
        both('&?', 'nall', [0, 1], [0, 0, 9, 9]);
        both('&?', 'nall', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('&?', 'nall', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('==?', 'issame,nall', [0, 1], [0, 1], [0, 1], [0, 1]);
        both('==?', 'issame,nall', [0, 1], [0, 1], [0, 1], [0, 2]);
        both('==?', 'issame,nall', [0, 1], [0, 1], [0, 2], [0, 2]);
        both('==?', 'issame,nall', [0, 1], [0, 2], [0, 2], [0, 2]);
        both('==?', 'issame,nall', [0, 2], [0, 1], [0, 1], [0, 1]);
        both('==?', 'issame,nall', [0, 2], [0, 1], [0, 1], [0, 2]);
        both('==?', 'issame,nall', [0, 2], [0, 1], [0, 2], [0, 2]);
        both('==?', 'issame,nall', [0, 2], [0, 2], [0, 2], [0, 2]);
        both('==?', 'issame,nall', [0, 2], [1, 2], [0, 1], [0, 1]);
        both('==?', 'diff', [0, 2], [1, 2], [1, 2], [0, 1]);
        both('==?', 'diff', [0, 2], [1, 2], [1, 2], [1, 2]);
        both('==?', 'issame,nall', [0, 1], [0, 10]);
        both('==?', 'issame,nall', [0, 1], [0, 0, 9, 9]);
        both('==?', 'issame,nall', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('==?', 'issame,nall', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!=?', 'isdiff,nall', [0, 1], [0, 1], [0, 1], [0, 1]);
        both('!=?', 'isdiff,nall', [0, 1], [0, 1], [0, 1], [0, 2]);
        both('!=?', 'isdiff,nall', [0, 1], [0, 1], [0, 2], [0, 2]);
        both('!=?', 'isdiff,nall', [0, 1], [0, 2], [0, 2], [0, 2]);
        both('!=?', 'isdiff,nall', [0, 2], [0, 1], [0, 1], [0, 1]);
        both('!=?', 'isdiff,nall', [0, 2], [0, 1], [0, 1], [0, 2]);
        both('!=?', 'isdiff,nall', [0, 2], [0, 1], [0, 2], [0, 2]);
        both('!=?', 'isdiff,nall', [0, 2], [0, 2], [0, 2], [0, 2]);
        both('!=?', 'isdiff,nall', [0, 2], [1, 2], [0, 1], [0, 1]);
        both('!=?', [0, 2], [1, 2], [1, 2], [0, 1]);
        both('!=?', [0, 2], [1, 2], [1, 2], [1, 2]);
        both('!=?', 'isdiff,nall', [0, 1], [0, 10]);
        both('!=?', 'isdiff,nall', [0, 1], [0, 0, 9, 9]);
        both('!=?', 'isdiff,nall', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!=?', 'isdiff,nall', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<?', 'islt,nall', [0, 1], [0, 1], [0, 1], [0, 1]);
        lhs('<?', 'islt,nall', [0, 1], [0, 1], [0, 1], [0, 2]);
        lhs('<?', 'islt,nall', [0, 1], [0, 1], [0, 2], [0, 2]);
        lhs('<?', 'islt,nall', [0, 1], [0, 2], [0, 2], [0, 2]);
        lhs('<?', 'islt,nall', [0, 2], [0, 1], [0, 1], [0, 1]);
        lhs('<?', 'islt,nall', [0, 2], [0, 1], [0, 1], [0, 2]);
        lhs('<?', 'islt,nall', [0, 2], [0, 1], [0, 2], [0, 2]);
        lhs('<?', 'islt,nall', [0, 2], [0, 2], [0, 2], [0, 2]);
        lhs('<?', [0, 2], [1, 2], [0, 1], [0, 1]);
        lhs('<?', [0, 2], [1, 2], [1, 2], [0, 1]);
        lhs('<?', 'lte', [0, 2], [1, 2], [1, 2], [1, 2]);
        lhs('<?', 'islt,nall', [0, 1], [0, 10]);
        lhs('<?', 'islt,nall', [0, 1], [0, 0, 9, 9]);
        lhs('<?', 'islt,nall', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<?', 'islt,nall', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<?', 'islt,nall', [0, 1], [0, 1], [0, 1], [0, 1]);
        rhs('<?', 'islt,nall', [0, 1], [0, 1], [0, 1], [0, 2]);
        rhs('<?', 'islt,nall', [0, 1], [0, 1], [0, 2], [0, 2]);
        rhs('<?', 'islt,nall', [0, 1], [0, 2], [0, 2], [0, 2]);
        rhs('<?', 'islt,nall', [0, 2], [0, 1], [0, 1], [0, 1]);
        rhs('<?', 'islt,nall', [0, 2], [0, 1], [0, 1], [0, 2]);
        rhs('<?', 'islt,nall', [0, 2], [0, 1], [0, 2], [0, 2]);
        rhs('<?', 'islt,nall', [0, 2], [0, 2], [0, 2], [0, 2]);
        rhs('<?', 'islt,nall', [0, 2], [1, 2], [0, 1], [0, 1]);
        rhs('<?', [0, 2], [1, 2], [1, 2], [0, 1]);
        rhs('<?', 'lte', [0, 2], [1, 2], [1, 2], [1, 2]);
        rhs('<?', 'islt,nall', [0, 1], [0, 10]);
        rhs('<?', 'islt,nall', [0, 1], [0, 0, 9, 9]);
        rhs('<?', 'islt,nall', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<?', 'islt,nall', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<=?', 'islte,nall', [0, 1], [0, 1], [0, 1], [0, 1]);
        lhs('<=?', 'islte,nall', [0, 1], [0, 1], [0, 1], [0, 2]);
        lhs('<=?', 'islte,nall', [0, 1], [0, 1], [0, 2], [0, 2]);
        lhs('<=?', 'islte,nall', [0, 1], [0, 2], [0, 2], [0, 2]);
        lhs('<=?', 'islte,nall', [0, 2], [0, 1], [0, 1], [0, 1]);
        lhs('<=?', 'islte,nall', [0, 2], [0, 1], [0, 1], [0, 2]);
        lhs('<=?', 'islte,nall', [0, 2], [0, 1], [0, 2], [0, 2]);
        lhs('<=?', 'islte,nall', [0, 2], [0, 2], [0, 2], [0, 2]);
        lhs('<=?', 'islte,nall', [0, 2], [1, 2], [0, 1], [0, 1]);
        lhs('<=?', 'lt', [0, 2], [1, 2], [1, 2], [0, 1]);
        lhs('<=?', [0, 2], [1, 2], [1, 2], [1, 2]);
        lhs('<=?', 'islte,nall', [0, 1], [0, 10]);
        lhs('<=?', 'islte,nall', [0, 1], [0, 0, 9, 9]);
        lhs('<=?', 'islte,nall', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<=?', 'islte,nall', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<=?', 'islte,nall', [0, 1], [0, 1], [0, 1], [0, 1]);
        rhs('<=?', 'islte,nall', [0, 1], [0, 1], [0, 1], [0, 2]);
        rhs('<=?', 'islte,nall', [0, 1], [0, 1], [0, 2], [0, 2]);
        rhs('<=?', 'islte,nall', [0, 1], [0, 2], [0, 2], [0, 2]);
        rhs('<=?', 'islte,nall', [0, 2], [0, 1], [0, 1], [0, 1]);
        rhs('<=?', 'islte,nall', [0, 2], [0, 1], [0, 1], [0, 2]);
        rhs('<=?', 'islte,nall', [0, 2], [0, 1], [0, 2], [0, 2]);
        rhs('<=?', 'islte,nall', [0, 2], [0, 2], [0, 2], [0, 2]);
        rhs('<=?', [0, 2], [1, 2], [0, 1], [0, 1]);
        rhs('<=?', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
        rhs('<=?', [0, 2], [1, 2], [1, 2], [1, 2]);
        rhs('<=?', 'islte,nall', [0, 1], [0, 10]);
        rhs('<=?', 'islte,nall', [0, 1], [0, 0, 9, 9]);
        rhs('<=?', 'islte,nall', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<=?', 'islte,nall', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!&?', 'isnall,nall', [0, 1], [0, 1], [0, 1], [0, 1]);
        both('!&?', 'isnall,nall', [0, 1], [0, 1], [0, 1], [0, 2]);
        both('!&?', 'isnall,nall', [0, 1], [0, 1], [0, 2], [0, 2]);
        both('!&?', 'isnall,nall', [0, 1], [0, 2], [0, 2], [0, 2]);
        both('!&?', 'isnall,nall', [0, 2], [0, 1], [0, 1], [0, 1]);
        both('!&?', 'isnall,nall', [0, 2], [0, 1], [0, 1], [0, 2]);
        both('!&?', 'isnall,nall', [0, 2], [0, 1], [0, 2], [0, 2]);
        both('!&?', 'isnall,nall', [0, 2], [0, 2], [0, 2], [0, 2]);
        both('!&?', 'isnall,nall', [0, 2], [1, 2], [0, 1], [0, 1]);
        both('!&?', [0, 2], [1, 2], [1, 2], [0, 1]);
        both('!&?', [0, 2], [1, 2], [1, 2], [1, 2]);
        both('!&?', 'isnall,nall', [0, 1], [0, 10]);
        both('!&?', 'isnall,nall', [0, 1], [0, 0, 9, 9]);
        both('!&?', 'isnall,nall', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!&?', 'isnall,nall', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('|?', 'issome,nall', [0, 1], [0, 1], [0, 1], [0, 1]);
        both('|?', 'issome,nall', [0, 1], [0, 1], [0, 1], [0, 2]);
        both('|?', 'issome,nall', [0, 1], [0, 1], [0, 2], [0, 2]);
        both('|?', 'issome,nall', [0, 1], [0, 2], [0, 2], [0, 2]);
        both('|?', 'issome,nall', [0, 2], [0, 1], [0, 1], [0, 1]);
        both('|?', 'issome,nall', [0, 2], [0, 1], [0, 1], [0, 2]);
        both('|?', 'issome,nall', [0, 2], [0, 1], [0, 2], [0, 2]);
        both('|?', 'issome,nall', [0, 2], [0, 2], [0, 2], [0, 2]);
        both('|?', [0, 2], [1, 2], [0, 1], [0, 1]);
        both('|?', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
        both('|?', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
        both('|?', 'issome,nall', [0, 1], [0, 10]);
        both('|?', 'issome,nall', [0, 1], [0, 0, 9, 9]);
        both('|?', 'issome,nall', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('|?', 'issome,nall', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!|?', 'isnone,nall', [0, 1], [0, 1], [0, 1], [0, 1]);
        both('!|?', 'isnone,nall', [0, 1], [0, 1], [0, 1], [0, 2]);
        both('!|?', 'isnone,nall', [0, 1], [0, 1], [0, 2], [0, 2]);
        both('!|?', 'isnone,nall', [0, 1], [0, 2], [0, 2], [0, 2]);
        both('!|?', 'isnone,nall', [0, 2], [0, 1], [0, 1], [0, 1]);
        both('!|?', 'isnone,nall', [0, 2], [0, 1], [0, 1], [0, 2]);
        both('!|?', 'isnone,nall', [0, 2], [0, 1], [0, 2], [0, 2]);
        both('!|?', 'isnone,nall', [0, 2], [0, 2], [0, 2], [0, 2]);
        both('!|?', [0, 2], [1, 2], [0, 1], [0, 1]);
        both('!|?', [0, 2], [1, 2], [1, 2], [0, 1]);
        both('!|?', [0, 2], [1, 2], [1, 2], [1, 2]);
        both('!|?', 'isnone,nall', [0, 1], [0, 10]);
        both('!|?', 'isnone,nall', [0, 1], [0, 0, 9, 9]);
        both('!|?', 'isnone,nall', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!|?', 'isnone,nall', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('+', 'nall,sum', [0, 1], [0, 1], [0, 1], [0, 1]);
        both('+', 'nall,sum', [0, 1], [0, 1], [0, 1], [0, 2]);
        both('+', 'nall,sum', [0, 1], [0, 1], [0, 2], [0, 2]);
        both('+', 'nall,sum', [0, 1], [0, 2], [0, 2], [0, 2]);
        both('+', 'issome,nall', [0, 2], [0, 1], [0, 1], [0, 1]);
        both('+', 'nall,sum', [0, 2], [0, 1], [0, 1], [0, 2]);
        both('+', 'nall,sum', [0, 2], [0, 1], [0, 2], [0, 2]);
        both('+', 'nall,sum', [0, 2], [0, 2], [0, 2], [0, 2]);
        both('+', 'sum', [0, 2], [1, 2], [0, 1], [0, 1]);
        both('+', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
        both('+', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
        both('+', 'issome,nall', [0, 20], [0, 1], [0, 1], [0, 1]);
        both('+', 'issome,nall', [0, 20], [0, 10]);
        both('+', 'issome,nall', [0, 20], [0, 0, 9, 9]);
        both('+', 'issome,nall', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('+', 'issome,nall', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('-', 'minus,nall', [0, 1], [0, 1], [0, 1], [0, 1]);
        lhs('-', 'minus,nall', [0, 1], [0, 1], [0, 1], [0, 2]);
        lhs('-', 'minus,nall', [0, 1], [0, 1], [0, 2], [0, 2]);
        lhs('-', 'minus,nall', [0, 1], [0, 2], [0, 2], [0, 2]);
        lhs('-', 'minus,nall', [0, 2], [0, 1], [0, 1], [0, 1]);
        lhs('-', 'minus,nall', [0, 2], [0, 1], [0, 1], [0, 2]);
        lhs('-', 'minus,nall', [0, 2], [0, 1], [0, 2], [0, 2]);
        lhs('-', 'minus,nall', [0, 2], [0, 2], [0, 2], [0, 2]);
        lhs('-', 'minus,nall', [0, 2], [1, 2], [0, 1], [0, 1]);
        lhs('-', [0, 2], [1, 2], [1, 2], [0, 1]);
        lhs('-', 'minus', [0, 2], [1, 2], [1, 2], [1, 2]);
        lhs('-', 'minus,nall', [0, 20], [0, 1], [0, 1], [0, 1]);
        lhs('-', 'minus,nall', [0, 20], [0, 10]);
        lhs('-', 'minus,nall', [0, 20], [0, 0, 9, 9]);
        lhs('-', 'nall', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('-', 'minus,nall', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('-', 'minus,nall', [0, 1], [0, 1], [0, 1], [0, 1]);
        rhs('-', 'minus,nall', [0, 1], [0, 1], [0, 1], [0, 2]);
        rhs('-', 'minus,nall', [0, 1], [0, 1], [0, 2], [0, 2]);
        rhs('-', 'minus,nall', [0, 1], [0, 2], [0, 2], [0, 2]);
        rhs('-', 'minus,nall', [0, 2], [0, 1], [0, 1], [0, 1]);
        rhs('-', 'minus,nall', [0, 2], [0, 1], [0, 1], [0, 2]);
        rhs('-', 'minus,nall', [0, 2], [0, 1], [0, 2], [0, 2]);
        rhs('-', 'minus,nall', [0, 2], [0, 2], [0, 2], [0, 2]);
        rhs('-', [0, 2], [1, 2], [0, 1], [0, 1]);
        rhs('-', [0, 2], [1, 2], [1, 2], [0, 1]);
        rhs('-', 'minus', [0, 2], [1, 2], [1, 2], [1, 2]);
        rhs('-', 'minus,nall', [0, 20], [0, 1], [0, 1], [0, 1]);
        rhs('-', 'minus,nall', [0, 20], [0, 10]);
        rhs('-', 'minus,nall', [0, 20], [0, 0, 9, 9]);
        rhs('-', 'minus,nall', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('-', 'nall', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('*', 'nall,product', [0, 1], [0, 1], [0, 1], [0, 1]);
        both('*', 'nall,product', [0, 1], [0, 1], [0, 1], [0, 2]);
        both('*', 'nall,product', [0, 1], [0, 1], [0, 2], [0, 2]);
        both('*', 'nall,product', [0, 1], [0, 2], [0, 2], [0, 2]);
        both('*', 'nall,product', [0, 2], [0, 1], [0, 1], [0, 1]);
        both('*', 'nall,product', [0, 2], [0, 1], [0, 1], [0, 2]);
        both('*', 'nall,product', [0, 2], [0, 1], [0, 2], [0, 2]);
        both('*', 'nall,product', [0, 2], [0, 2], [0, 2], [0, 2]);
        both('*', 'nall,product', [0, 2], [1, 2], [0, 1], [0, 1]);
        both('*', [0, 2], [1, 2], [1, 2], [0, 1]);
        both('*', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
        both('*', 'nall,product', [0, 100], [0, 1], [0, 1], [0, 1]);
        both('*', 'nall,product', [0, 100], [0, 10]);
        both('*', 'nall,product', [0, 100], [0, 0, 9, 9]);
        both('*', 'nall,product', [0, 100], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('*', 'nall,product', [0, 100], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('/', 'div,nall', [0, 1], [0, 1], [0, 1], [0, 1]);
        lhs('/', 'div,nall', [0, 1], [0, 1], [0, 1], [0, 2]);
        lhs('/', 'div,nall', [0, 1], [0, 1], [0, 2], [0, 2]);
        lhs('/', 'div,nall', [0, 1], [0, 2], [0, 2], [0, 2]);
        lhs('/', 'div,nall', [0, 2], [0, 1], [0, 1], [0, 1]);
        lhs('/', 'div,nall', [0, 2], [0, 1], [0, 1], [0, 2]);
        lhs('/', 'div,nall', [0, 2], [0, 1], [0, 2], [0, 2]);
        lhs('/', 'div,nall', [0, 2], [0, 2], [0, 2], [0, 2]);
        lhs('/', 'div', [0, 2], [1, 2], [0, 1], [0, 1]);
        lhs('/', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
        lhs('/', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
        lhs('/', 'div,nall', [0, 20], [0, 1], [0, 1], [0, 1]);
        lhs('/', 'div,nall', [0, 20], [0, 10]);
        lhs('/', 'div,nall', [0, 20], [0, 0, 9, 9]);
        lhs('/', 'div', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('/', 'div,nall', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('/', 'div,nall', [0, 1], [0, 1], [0, 1], [0, 1]);
        rhs('/', 'div,nall', [0, 1], [0, 1], [0, 1], [0, 2]);
        rhs('/', 'div,nall', [0, 1], [0, 1], [0, 2], [0, 2]);
        rhs('/', 'div,nall', [0, 1], [0, 2], [0, 2], [0, 2]);
        rhs('/', 'div,nall', [0, 2], [0, 1], [0, 1], [0, 1]);
        rhs('/', 'div,nall', [0, 2], [0, 1], [0, 1], [0, 2]);
        rhs('/', 'div,nall', [0, 2], [0, 1], [0, 2], [0, 2]);
        rhs('/', 'div,nall', [0, 2], [0, 2], [0, 2], [0, 2]);
        rhs('/', 'div,nall', [0, 2], [1, 2], [0, 1], [0, 1]);
        rhs('/', 'div', [0, 2], [1, 2], [1, 2], [0, 1]);
        rhs('/', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
        rhs('/', 'div,nall', [0, 20], [0, 1], [0, 1], [0, 1]);
        rhs('/', 'div,nall', [0, 20], [0, 10]);
        rhs('/', 'div,nall', [0, 20], [0, 0, 9, 9]);
        rhs('/', 'div,nall', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('/', 'div', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
      });
    });

    describe('NIMP', function() {

      describe('NIMP LHS', function() {

        describe('binary', function() {

          let both = testBinaryBinary.bind(undefined, '!->', 'lhs', ''); // A & B, A @ C  and  A & B, C @ A
          let lhs = testBinaryBinary.bind(undefined, '!->', 'lhs', 'lhs'); // A & B, A @ C
          let rhs = testBinaryBinary.bind(undefined, '!->', 'lhs', 'rhs'); // A & B, C @ A

          both('&', [0, 1], [0, 1], [0, 1]);
          //both('&', [0, 1], [0, 1], [0, 2]);
          //both('&', [0, 1], [0, 2], [0, 1]);
          //both('&', [0, 1], [0, 2], [0, 2]);
          //both('&', [0, 2], [0, 1], [0, 1]);
          //both('&', [0, 2], [0, 1], [0, 2]);
          //both('&', [0, 2], [0, 2], [0, 1]);
          //both('&', [0, 2], [0, 2], [0, 2]);
          //both('&', [0, 2], [0, 1], [1, 2]);
          //both('&', [0, 2], [1, 2], [0, 1]);
          //both('&', [0, 2], [1, 2], [1, 2]);
          both('&', [0, 10]);
          both('&', [0, 0, 9, 9]);
          both('&', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('&', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!=', [0, 1], [0, 1], [0, 1]);
          //both('!=', [0, 1], [0, 1], [0, 2]);
          //both('!=', [0, 1], [0, 2], [0, 1]);
          //both('!=', [0, 1], [0, 2], [0, 2]);
          //both('!=', [0, 2], [0, 1], [0, 1]);
          //both('!=', [0, 2], [0, 1], [0, 2]);
          //both('!=', [0, 2], [0, 2], [0, 1]);
          //both('!=', [0, 2], [0, 2], [0, 2]);
          //both('!=', [0, 2], [0, 1], [1, 2]);
          //both('!=', [0, 2], [1, 2], [0, 1]);
          //both('!=', [0, 2], [1, 2], [1, 2]);
          both('!=', [0, 10]);
          both('!=', [0, 0, 9, 9]);
          both('!=', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!=', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('->', [0, 1], [0, 1], [0, 1]);
          //lhs('->', [0, 1], [0, 1], [0, 2]);
          //lhs('->', [0, 1], [0, 2], [0, 1]);
          //lhs('->', [0, 1], [0, 2], [0, 2]);
          //lhs('->', [0, 2], [0, 1], [0, 1]);
          //lhs('->', [0, 2], [0, 1], [0, 2]);
          //lhs('->', [0, 2], [0, 2], [0, 1]);
          //lhs('->', [0, 2], [0, 2], [0, 2]);
          //lhs('->', [0, 2], [0, 1], [1, 2]);
          //lhs('->', [0, 2], [1, 2], [0, 1]);
          //lhs('->', [0, 2], [1, 2], [1, 2]);
          lhs('->', [0, 10]);
          lhs('->', [0, 0, 9, 9]);
          lhs('->', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('->', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('->', [0, 1], [0, 1], [0, 1]);
          //rhs('->', [0, 1], [0, 1], [0, 2]);
          //rhs('->', [0, 1], [0, 2], [0, 1]);
          //rhs('->', [0, 1], [0, 2], [0, 2]);
          //rhs('->', [0, 2], [0, 1], [0, 1]);
          //rhs('->', [0, 2], [0, 1], [0, 2]);
          //rhs('->', [0, 2], [0, 2], [0, 1]);
          //rhs('->', [0, 2], [0, 2], [0, 2]);
          //rhs('->', [0, 2], [0, 1], [1, 2]);
          //rhs('->', [0, 2], [1, 2], [0, 1]);
          //rhs('->', [0, 2], [1, 2], [1, 2]);
          rhs('->', [0, 10]);
          rhs('->', [0, 0, 9, 9]);
          rhs('->', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('->', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<', 'reject', [0, 1], [0, 1], [0, 1]);
          //lhs('<', [0, 1], [0, 1], [0, 2]);
          //lhs('<', [0, 1], [0, 2], [0, 1]);
          //lhs('<', [0, 1], [0, 2], [0, 2]);
          //lhs('<', [0, 2], [0, 1], [0, 1]);
          //lhs('<', [0, 2], [0, 1], [0, 2]);
          //lhs('<', [0, 2], [0, 2], [0, 1]);
          //lhs('<', [0, 2], [0, 2], [0, 2]);
          //lhs('<', [0, 2], [0, 1], [1, 2]);
          //lhs('<', [0, 2], [1, 2], [0, 1]);
          //lhs('<', [0, 2], [1, 2], [1, 2]);
          lhs('<', [0, 10]);
          lhs('<', 'reject', [0, 0, 9, 9]);
          lhs('<', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<', 'reject', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<', [0, 1], [0, 1], [0, 1]);
          //rhs('<', [0, 1], [0, 1], [0, 2]);
          //rhs('<', [0, 1], [0, 2], [0, 1]);
          //rhs('<', [0, 1], [0, 2], [0, 2]);
          //rhs('<', [0, 2], [0, 1], [0, 1]);
          //rhs('<', [0, 2], [0, 1], [0, 2]);
          //rhs('<', [0, 2], [0, 2], [0, 1]);
          //rhs('<', [0, 2], [0, 2], [0, 2]);
          //rhs('<', [0, 2], [0, 1], [1, 2]);
          //rhs('<', [0, 2], [1, 2], [0, 1]);
          //rhs('<', [0, 2], [1, 2], [1, 2]);
          rhs('<', [0, 10]);
          rhs('<', [0, 0, 9, 9]);
          rhs('<', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<=', [0, 1], [0, 1], [0, 1]);
          //lhs('<=', [0, 1], [0, 1], [0, 2]);
          //lhs('<=', [0, 1], [0, 2], [0, 1]);
          //lhs('<=', [0, 1], [0, 2], [0, 2]);
          //lhs('<=', [0, 2], [0, 1], [0, 1]);
          //lhs('<=', [0, 2], [0, 1], [0, 2]);
          //lhs('<=', [0, 2], [0, 2], [0, 1]);
          //lhs('<=', [0, 2], [0, 2], [0, 2]);
          //lhs('<=', [0, 2], [0, 1], [1, 2]);
          //lhs('<=', [0, 2], [1, 2], [0, 1]);
          //lhs('<=', [0, 2], [1, 2], [1, 2]);
          lhs('<=', [0, 10]);
          lhs('<=', [0, 0, 9, 9]);
          lhs('<=', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<=', 'reject', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<=', [0, 1], [0, 1], [0, 1]);
          //rhs('<=', [0, 1], [0, 1], [0, 2]);
          //rhs('<=', [0, 1], [0, 2], [0, 1]);
          //rhs('<=', [0, 1], [0, 2], [0, 2]);
          //rhs('<=', [0, 2], [0, 1], [0, 1]);
          //rhs('<=', [0, 2], [0, 1], [0, 2]);
          //rhs('<=', [0, 2], [0, 2], [0, 1]);
          //rhs('<=', [0, 2], [0, 2], [0, 2]);
          //rhs('<=', [0, 2], [0, 1], [1, 2]);
          //rhs('<=', [0, 2], [1, 2], [0, 1]);
          //rhs('<=', [0, 2], [1, 2], [1, 2]);
          rhs('<=', [0, 10]);
          rhs('<=', [0, 0, 9, 9]);
          rhs('<=', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<=', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!&', [0, 1], [0, 1], [0, 1]);
          //both('!&', [0, 1], [0, 1], [0, 2]);
          //both('!&', [0, 1], [0, 2], [0, 1]);
          //both('!&', [0, 1], [0, 2], [0, 2]);
          //both('!&', [0, 2], [0, 1], [0, 1]);
          //both('!&', [0, 2], [0, 1], [0, 2]);
          //both('!&', [0, 2], [0, 2], [0, 1]);
          //both('!&', [0, 2], [0, 2], [0, 2]);
          //both('!&', [0, 2], [0, 1], [1, 2]);
          //both('!&', [0, 2], [1, 2], [0, 1]);
          //both('!&', [0, 2], [1, 2], [1, 2]);
          both('!&', [0, 10]);
          both('!&', [0, 0, 9, 9]);
          both('!&', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!&', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('!->', [0, 1], [0, 1], [0, 1]);
          //lhs('!->', [0, 1], [0, 1], [0, 2]);
          //lhs('!->', [0, 1], [0, 2], [0, 1]);
          //lhs('!->', [0, 1], [0, 2], [0, 2]);
          //lhs('!->', [0, 2], [0, 1], [0, 1]);
          //lhs('!->', [0, 2], [0, 1], [0, 2]);
          //lhs('!->', [0, 2], [0, 2], [0, 1]);
          //lhs('!->', [0, 2], [0, 2], [0, 2]);
          //lhs('!->', [0, 2], [0, 1], [1, 2]);
          //lhs('!->', [0, 2], [1, 2], [0, 1]);
          //lhs('!->', [0, 2], [1, 2], [1, 2]);
          lhs('!->', [0, 10]);
          lhs('!->', [0, 0, 9, 9]);
          lhs('!->', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('!->', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('!->', 'reject', [0, 1], [0, 1], [0, 1]);
          //rhs('!->', [0, 1], [0, 1], [0, 2]);
          //rhs('!->', [0, 1], [0, 2], [0, 1]);
          //rhs('!->', [0, 1], [0, 2], [0, 2]);
          //rhs('!->', [0, 2], [0, 1], [0, 1]);
          //rhs('!->', [0, 2], [0, 1], [0, 2]);
          //rhs('!->', [0, 2], [0, 2], [0, 1]);
          //rhs('!->', [0, 2], [0, 2], [0, 2]);
          //rhs('!->', [0, 2], [0, 1], [1, 2]);
          //rhs('!->', [0, 2], [1, 2], [0, 1]);
          //rhs('!->', [0, 2], [1, 2], [1, 2]);
          rhs('!->', 'reject', [0, 10]);
          rhs('!->', 'reject', [0, 0, 9, 9]);
          rhs('!->', 'reject', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('!->', 'reject', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!|', 'reject', [0, 1], [0, 1], [0, 1]);
          //both('!|', [0, 1], [0, 1], [0, 2]);
          //both('!|', [0, 1], [0, 2], [0, 1]);
          //both('!|', [0, 1], [0, 2], [0, 2]);
          //both('!|', [0, 2], [0, 1], [0, 1]);
          //both('!|', [0, 2], [0, 1], [0, 2]);
          //both('!|', [0, 2], [0, 2], [0, 1]);
          //both('!|', [0, 2], [0, 2], [0, 2]);
          //both('!|', [0, 2], [0, 1], [1, 2]);
          //both('!|', [0, 2], [1, 2], [0, 1]);
          //both('!|', [0, 2], [1, 2], [1, 2]);
          both('!|', 'reject', [0, 10]);
          both('!|', 'reject', [0, 0, 9, 9]);
          both('!|', 'reject', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!|', 'reject', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('==', [0, 1], [0, 1], [0, 1]);
          //both('==', [0, 1], [0, 1], [0, 2]);
          //both('==', [0, 1], [0, 2], [0, 1]);
          //both('==', [0, 1], [0, 2], [0, 2]);
          //both('==', [0, 2], [0, 1], [0, 1]);
          //both('==', [0, 2], [0, 1], [0, 2]);
          //both('==', [0, 2], [0, 2], [0, 1]);
          //both('==', [0, 2], [0, 2], [0, 2]);
          //both('==', [0, 2], [0, 1], [1, 2]);
          //both('==', [0, 2], [1, 2], [0, 1]);
          //both('==', [0, 2], [1, 2], [1, 2]);
          both('==', [0, 10]);
          both('==', [0, 0, 9, 9]);
          both('==', 'reject', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('==', 'reject', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!^', [0, 1], [0, 1], [0, 1]);
          //both('!^', [0, 1], [0, 1], [0, 2]);
          //both('!^', [0, 1], [0, 2], [0, 1]);
          //both('!^', [0, 1], [0, 2], [0, 2]);
          //both('!^', [0, 2], [0, 1], [0, 1]);
          //both('!^', [0, 2], [0, 1], [0, 2]);
          //both('!^', [0, 2], [0, 2], [0, 1]);
          //both('!^', [0, 2], [0, 2], [0, 2]);
          //both('!^', [0, 2], [0, 1], [1, 2]);
          //both('!^', [0, 2], [1, 2], [0, 1]);
          //both('!^', [0, 2], [1, 2], [1, 2]);
          both('!^', [0, 10]);
          both('!^', [0, 0, 9, 9]);
          both('!^', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!^', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('^', [0, 1], [0, 1], [0, 1]);
          //both('^', [0, 1], [0, 1], [0, 2]);
          //both('^', [0, 1], [0, 2], [0, 1]);
          //both('^', [0, 1], [0, 2], [0, 2]);
          //both('^', [0, 2], [0, 1], [0, 1]);
          //both('^', [0, 2], [0, 1], [0, 2]);
          //both('^', [0, 2], [0, 2], [0, 1]);
          //both('^', [0, 2], [0, 2], [0, 2]);
          //both('^', [0, 2], [0, 1], [1, 2]);
          //both('^', [0, 2], [1, 2], [0, 1]);
          //both('^', [0, 2], [1, 2], [1, 2]);
          both('^', [0, 10]);
          both('^', [0, 0, 9, 9]);
          both('^', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('^', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
        });

        describe('ternary with shared arg', function() {

          let both = testBinaryTernarySharedArgs.bind(undefined, '!->', 'lhs', ''); // A & B, R = A @ C  and  A & B, R = C @ A
          let lhs = testBinaryTernarySharedArgs.bind(undefined, '!->', 'lhs', 'lhs'); // A & B, R = A @ C
          let rhs = testBinaryTernarySharedArgs.bind(undefined, '!->', 'lhs', 'rhs'); // A & B, R = C @ A

          // A & B, R = A &? C
          both('&?', [0, 1], [0, 1], [0, 1], [0, 1]);
          both('&?', [0, 1], [0, 1], [0, 1], [0, 2]);
          both('&?', [0, 1], [0, 1], [0, 2], [0, 2]);
          both('&?', [0, 1], [0, 2], [0, 2], [0, 2]);
          both('&?', [0, 2], [0, 1], [0, 1], [0, 1]);
          both('&?', [0, 2], [0, 1], [0, 1], [0, 2]);
          both('&?', [0, 2], [0, 1], [0, 2], [0, 2]);
          both('&?', [0, 2], [0, 2], [0, 2], [0, 2]);
          both('&?', [0, 2], [1, 2], [0, 1], [0, 1]);
          both('&?', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
          both('&?', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
          both('&?', [0, 1], [0, 10]);
          both('&?', [0, 1], [0, 0, 9, 9]);
          both('&?', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('&?', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('==?', [0, 1], [0, 1], [0, 1], [0, 1]);
          both('==?', 'issame', [0, 1], [0, 1], [0, 1], [0, 2]);
          both('==?', 'issame', [0, 1], [0, 1], [0, 2], [0, 2]);
          both('==?', 'issame', [0, 1], [0, 2], [0, 2], [0, 2]);
          both('==?', 'issame', [0, 2], [0, 1], [0, 1], [0, 1]);
          both('==?', 'issame', [0, 2], [0, 1], [0, 1], [0, 2]);
          both('==?', 'issame', [0, 2], [0, 1], [0, 2], [0, 2]);
          both('==?', 'issame', [0, 2], [0, 2], [0, 2], [0, 2]);
          both('==?', 'issame', [0, 2], [1, 2], [0, 1], [0, 1]);
          both('==?', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
          both('==?', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
          both('==?', 'issame', [0, 1], [0, 10]);
          both('==?', 'issame', [0, 1], [0, 0, 9, 9]);
          both('==?', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('==?', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!=?', 'xor', [0, 1], [0, 1], [0, 1], [0, 1]);
          both('!=?', 'isdiff', [0, 1], [0, 1], [0, 1], [0, 2]);
          both('!=?', 'isdiff', [0, 1], [0, 1], [0, 2], [0, 2]);
          both('!=?', 'isdiff', [0, 1], [0, 2], [0, 2], [0, 2]);
          both('!=?', 'isdiff', [0, 2], [0, 1], [0, 1], [0, 1]);
          both('!=?', 'isdiff', [0, 2], [0, 1], [0, 1], [0, 2]);
          both('!=?', 'isdiff', [0, 2], [0, 1], [0, 2], [0, 2]);
          both('!=?', 'isdiff', [0, 2], [0, 2], [0, 2], [0, 2]);
          both('!=?', 'isdiff', [0, 2], [1, 2], [0, 1], [0, 1]);
          both('!=?', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
          both('!=?', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
          both('!=?', 'isdiff', [0, 1], [0, 10]);
          both('!=?', 'xor', [0, 1], [0, 0, 9, 9]);
          both('!=?', 'isdiff', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!=?', 'isdiff', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<?', [0, 1], [0, 1], [0, 1], [0, 1]);
          lhs('<?', 'islt', [0, 1], [0, 1], [0, 1], [0, 2]);
          lhs('<?', 'islt', [0, 1], [0, 1], [0, 2], [0, 2]);
          lhs('<?', 'islt', [0, 1], [0, 2], [0, 2], [0, 2]);
          lhs('<?', [0, 2], [0, 1], [0, 1], [0, 1]);
          lhs('<?', 'islt', [0, 2], [0, 1], [0, 1], [0, 2]);
          lhs('<?', 'islt', [0, 2], [0, 1], [0, 2], [0, 2]);
          lhs('<?', 'islt', [0, 2], [0, 2], [0, 2], [0, 2]);
          lhs('<?', [0, 2], [1, 2], [0, 1], [0, 1]);
          lhs('<?', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
          lhs('<?', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
          lhs('<?', 'islt', [0, 1], [0, 10]);
          lhs('<?', [0, 1], [0, 0, 9, 9]);
          lhs('<?', 'islt', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<?', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<?', 'islt', [0, 1], [0, 1], [0, 1], [0, 1]);
          rhs('<?', 'islt', [0, 1], [0, 1], [0, 1], [0, 2]);
          rhs('<?', 'islt', [0, 1], [0, 1], [0, 2], [0, 2]);
          rhs('<?', 'islt', [0, 1], [0, 2], [0, 2], [0, 2]);
          rhs('<?', 'islt', [0, 2], [0, 1], [0, 1], [0, 1]);
          rhs('<?', 'islt', [0, 2], [0, 1], [0, 1], [0, 2]);
          rhs('<?', 'islt', [0, 2], [0, 1], [0, 2], [0, 2]);
          rhs('<?', 'islt', [0, 2], [0, 2], [0, 2], [0, 2]);
          rhs('<?', 'islt', [0, 2], [1, 2], [0, 1], [0, 1]);
          rhs('<?', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
          rhs('<?', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
          rhs('<?', 'islt', [0, 1], [0, 10]);
          rhs('<?', 'islt', [0, 1], [0, 0, 9, 9]);
          rhs('<?', 'islt', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<?', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<=?', [0, 1], [0, 1], [0, 1], [0, 1]);
          lhs('<=?', 'islte', [0, 1], [0, 1], [0, 1], [0, 2]);
          lhs('<=?', 'islte', [0, 1], [0, 1], [0, 2], [0, 2]);
          lhs('<=?', 'islte', [0, 1], [0, 2], [0, 2], [0, 2]);
          lhs('<=?', 'islte', [0, 2], [0, 1], [0, 1], [0, 1]);
          lhs('<=?', 'islte', [0, 2], [0, 1], [0, 1], [0, 2]);
          lhs('<=?', 'islte', [0, 2], [0, 1], [0, 2], [0, 2]);
          lhs('<=?', 'islte', [0, 2], [0, 2], [0, 2], [0, 2]);
          lhs('<=?', 'islte', [0, 2], [1, 2], [0, 1], [0, 1]);
          lhs('<=?', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
          lhs('<=?', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
          lhs('<=?', 'islte', [0, 1], [0, 10]);
          lhs('<=?', 'islte', [0, 1], [0, 0, 9, 9]);
          lhs('<=?', 'islte', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<=?', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<=?', [0, 1], [0, 1], [0, 1], [0, 1]);
          rhs('<=?', 'islte', [0, 1], [0, 1], [0, 1], [0, 2]);
          rhs('<=?', 'islte', [0, 1], [0, 1], [0, 2], [0, 2]);
          rhs('<=?', 'islte', [0, 1], [0, 2], [0, 2], [0, 2]);
          rhs('<=?', [0, 2], [0, 1], [0, 1], [0, 1]);
          rhs('<=?', 'islte', [0, 2], [0, 1], [0, 1], [0, 2]);
          rhs('<=?', 'islte', [0, 2], [0, 1], [0, 2], [0, 2]);
          rhs('<=?', 'islte', [0, 2], [0, 2], [0, 2], [0, 2]);
          rhs('<=?', [0, 2], [1, 2], [0, 1], [0, 1]);
          rhs('<=?', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
          rhs('<=?', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
          rhs('<=?', 'islte', [0, 1], [0, 10]);
          rhs('<=?', [0, 1], [0, 0, 9, 9]);
          rhs('<=?', 'islte', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<=?', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!&?', 'isnall', [0, 1], [0, 1], [0, 1], [0, 1]);
          both('!&?', 'isnall', [0, 1], [0, 1], [0, 1], [0, 2]);
          both('!&?', 'isnall', [0, 1], [0, 1], [0, 2], [0, 2]);
          both('!&?', 'isnall', [0, 1], [0, 2], [0, 2], [0, 2]);
          both('!&?', 'isnall', [0, 2], [0, 1], [0, 1], [0, 1]);
          both('!&?', 'isnall', [0, 2], [0, 1], [0, 1], [0, 2]);
          both('!&?', 'isnall', [0, 2], [0, 1], [0, 2], [0, 2]);
          both('!&?', 'isnall', [0, 2], [0, 2], [0, 2], [0, 2]);
          both('!&?', 'isnall', [0, 2], [1, 2], [0, 1], [0, 1]);
          both('!&?', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
          both('!&?', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
          both('!&?', 'isnall', [0, 1], [0, 10]);
          both('!&?', 'isnall', [0, 1], [0, 0, 9, 9]);
          both('!&?', 'isnall', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!&?', 'isnall', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('|?', [0, 1], [0, 1], [0, 1], [0, 1]);
          both('|?', [0, 1], [0, 1], [0, 1], [0, 2]);
          both('|?', [0, 1], [0, 1], [0, 2], [0, 2]);
          both('|?', [0, 1], [0, 2], [0, 2], [0, 2]);
          both('|?', [0, 2], [0, 1], [0, 1], [0, 1]);
          both('|?', [0, 2], [0, 1], [0, 1], [0, 2]);
          both('|?', [0, 2], [0, 1], [0, 2], [0, 2]);
          both('|?', [0, 2], [0, 2], [0, 2], [0, 2]);
          both('|?', [0, 2], [1, 2], [0, 1], [0, 1]);
          both('|?', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
          both('|?', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
          both('|?', [0, 1], [0, 10]);
          both('|?', [0, 1], [0, 0, 9, 9]);
          both('|?', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('|?', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!|?', [0, 1], [0, 1], [0, 1], [0, 1]);
          both('!|?', [0, 1], [0, 1], [0, 1], [0, 2]);
          both('!|?', [0, 1], [0, 1], [0, 2], [0, 2]);
          both('!|?', [0, 1], [0, 2], [0, 2], [0, 2]);
          both('!|?', [0, 2], [0, 1], [0, 1], [0, 1]);
          both('!|?', [0, 2], [0, 1], [0, 1], [0, 2]);
          both('!|?', [0, 2], [0, 1], [0, 2], [0, 2]);
          both('!|?', [0, 2], [0, 2], [0, 2], [0, 2]);
          both('!|?', [0, 2], [1, 2], [0, 1], [0, 1]);
          both('!|?', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
          both('!|?', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
          both('!|?', [0, 1], [0, 10]);
          both('!|?', [0, 1], [0, 0, 9, 9]);
          both('!|?', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!|?', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('+', [0, 1], [0, 1], [0, 1], [0, 1]);
          both('+', [0, 1], [0, 1], [0, 1], [0, 2]);
          both('+', [0, 1], [0, 1], [0, 2], [0, 2]);
          both('+', [0, 1], [0, 2], [0, 2], [0, 2]);
          both('+', 'isdiff', [0, 2], [0, 1], [0, 1], [0, 1]);
          both('+', 'isdiff', [0, 2], [0, 1], [0, 1], [0, 2]);
          both('+', 'isdiff', [0, 2], [0, 1], [0, 2], [0, 2]);
          both('+', 'sum', [0, 2], [0, 2], [0, 2], [0, 2]);
          both('+', 'sum', [0, 2], [1, 2], [0, 1], [0, 1]);
          both('+', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
          both('+', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
          both('+', 'isdiff', [0, 20], [0, 1], [0, 1], [0, 1]);
          both('+', [0, 20], [0, 10]);
          both('+', [0, 20], [0, 0, 9, 9]);
          both('+', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('+', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('-', 'minus', [0, 1], [0, 1], [0, 1], [0, 1]);
          lhs('-', 'minus', [0, 1], [0, 1], [0, 1], [0, 2]);
          lhs('-', 'minus', [0, 1], [0, 1], [0, 2], [0, 2]);
          lhs('-', 'minus', [0, 1], [0, 2], [0, 2], [0, 2]);
          lhs('-', 'minus', [0, 2], [0, 1], [0, 1], [0, 1]);
          lhs('-', 'minus', [0, 2], [0, 1], [0, 1], [0, 2]);
          lhs('-', 'minus', [0, 2], [0, 1], [0, 2], [0, 2]);
          lhs('-', 'minus', [0, 2], [0, 2], [0, 2], [0, 2]);
          lhs('-', 'minus', [0, 2], [1, 2], [0, 1], [0, 1]);
          lhs('-', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
          lhs('-', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
          lhs('-', 'minus', [0, 20], [0, 1], [0, 1], [0, 1]);
          lhs('-', 'minus', [0, 20], [0, 10]);
          lhs('-', 'minus', [0, 20], [0, 0, 9, 9]);
          lhs('-', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('-', 'minus', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('-', [0, 1], [0, 1], [0, 1], [0, 1]);
          rhs('-', 'minus', [0, 1], [0, 1], [0, 1], [0, 2]);
          rhs('-', 'minus', [0, 1], [0, 1], [0, 2], [0, 2]);
          rhs('-', 'minus', [0, 1], [0, 2], [0, 2], [0, 2]);
          rhs('-', [0, 2], [0, 1], [0, 1], [0, 1]);
          rhs('-', 'minus', [0, 2], [0, 1], [0, 1], [0, 2]);
          rhs('-', 'minus', [0, 2], [0, 1], [0, 2], [0, 2]);
          rhs('-', 'minus', [0, 2], [0, 2], [0, 2], [0, 2]);
          rhs('-', [0, 2], [1, 2], [0, 1], [0, 1]);
          rhs('-', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
          rhs('-', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
          rhs('-', [0, 20], [0, 1], [0, 1], [0, 1]);
          rhs('-', 'minus', [0, 20], [0, 10]);
          rhs('-', [0, 20], [0, 0, 9, 9]);
          rhs('-', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('-', 'reject', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('*', [0, 1], [0, 1], [0, 1], [0, 1]);
          both('*', [0, 1], [0, 1], [0, 1], [0, 2]);
          both('*', [0, 1], [0, 1], [0, 2], [0, 2]);
          both('*', [0, 1], [0, 2], [0, 2], [0, 2]);
          both('*', [0, 2], [0, 1], [0, 1], [0, 1]);
          both('*', [0, 2], [0, 1], [0, 1], [0, 2]);
          both('*', [0, 2], [0, 1], [0, 2], [0, 2]);
          both('*', 'product', [0, 2], [0, 2], [0, 2], [0, 2]);
          both('*', 'product', [0, 2], [1, 2], [0, 1], [0, 1]);
          both('*', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
          both('*', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
          both('*', [0, 100], [0, 1], [0, 1], [0, 1]);
          both('*', 'product', [0, 100], [0, 10]);
          both('*', 'product', [0, 100], [0, 0, 9, 9]);
          both('*', 'product', [0, 100], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('*', 'product', [0, 100], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('/', 'div', [0, 1], [0, 1], [0, 1], [0, 1]);
          lhs('/', 'div', [0, 1], [0, 1], [0, 1], [0, 2]);
          lhs('/', 'div', [0, 1], [0, 1], [0, 2], [0, 2]);
          lhs('/', 'div', [0, 1], [0, 2], [0, 2], [0, 2]);
          lhs('/', 'div', [0, 2], [0, 1], [0, 1], [0, 1]);
          lhs('/', 'div', [0, 2], [0, 1], [0, 1], [0, 2]);
          lhs('/', 'div', [0, 2], [0, 1], [0, 2], [0, 2]);
          lhs('/', 'div', [0, 2], [0, 2], [0, 2], [0, 2]);
          lhs('/', 'div', [0, 2], [1, 2], [0, 1], [0, 1]);
          lhs('/', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
          lhs('/', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
          lhs('/', 'div', [0, 20], [0, 1], [0, 1], [0, 1]);
          lhs('/', 'div', [0, 20], [0, 10]);
          lhs('/', 'div', [0, 20], [0, 0, 9, 9]);
          lhs('/', 'div', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('/', 'div', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('/', 'div', [0, 1], [0, 1], [0, 1], [0, 1]);
          rhs('/', 'div', [0, 1], [0, 1], [0, 1], [0, 2]);
          rhs('/', 'div', [0, 1], [0, 1], [0, 2], [0, 2]);
          rhs('/', 'div', [0, 1], [0, 2], [0, 2], [0, 2]);
          rhs('/', 'div', [0, 2], [0, 1], [0, 1], [0, 1]);
          rhs('/', 'div', [0, 2], [0, 1], [0, 1], [0, 2]);
          rhs('/', 'div', [0, 2], [0, 1], [0, 2], [0, 2]);
          rhs('/', 'div', [0, 2], [0, 2], [0, 2], [0, 2]);
          rhs('/', 'div', [0, 2], [1, 2], [0, 1], [0, 1]);
          rhs('/', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
          rhs('/', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
          rhs('/', 'div', [0, 20], [0, 1], [0, 1], [0, 1]);
          rhs('/', 'div', [0, 20], [0, 10]);
          rhs('/', 'div', [0, 20], [0, 0, 9, 9]);
          rhs('/', 'div', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('/', 'div', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
        });

        describe('ternary with shared result', function() {

          let both = testBinaryTernarySharedResult.bind(undefined, '!->', 'lhs', ''); // A & B, R = A @ C  and  A & B, R = C @ A
          let lhs = testBinaryTernarySharedResult.bind(undefined, '!->', 'lhs', 'lhs'); // A & B, R = A @ C
          let rhs = testBinaryTernarySharedResult.bind(undefined, '!->', 'lhs', 'rhs'); // A & B, R = C @ A

          // A & B, R = A &? C
          both('&?', [0, 1], [0, 1], [0, 1], [0, 1]);
          both('&?', [0, 1], [0, 1], [0, 1], [0, 2]);
          both('&?', [0, 1], [0, 1], [0, 2], [0, 2]);
          both('&?', [0, 1], [0, 2], [0, 2], [0, 2]);
          both('&?', [0, 2], [0, 1], [0, 1], [0, 1]);
          both('&?', [0, 2], [0, 1], [0, 1], [0, 2]);
          both('&?', [0, 2], [0, 1], [0, 2], [0, 2]);
          both('&?', [0, 2], [0, 2], [0, 2], [0, 2]);
          both('&?', [0, 2], [1, 2], [0, 1], [0, 1]);
          both('&?', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
          both('&?', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
          both('&?', [0, 1], [0, 10]);
          both('&?', [0, 1], [0, 0, 9, 9]);
          both('&?', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('&?', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('==?', [0, 1], [0, 1], [0, 1], [0, 1]);
          both('==?', [0, 1], [0, 1], [0, 1], [0, 2]);
          both('==?', [0, 1], [0, 1], [0, 2], [0, 2]);
          both('==?', [0, 1], [0, 2], [0, 2], [0, 2]);
          both('==?', [0, 2], [0, 1], [0, 1], [0, 1]);
          both('==?', [0, 2], [0, 1], [0, 1], [0, 2]);
          both('==?', [0, 2], [0, 1], [0, 2], [0, 2]);
          both('==?', [0, 2], [0, 2], [0, 2], [0, 2]);
          both('==?', [0, 2], [1, 2], [0, 1], [0, 1]);
          both('==?', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
          both('==?', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
          both('==?', [0, 1], [0, 10]);
          both('==?', [0, 1], [0, 0, 9, 9]);
          both('==?', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('==?', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!=?', 'xor', [0, 1], [0, 1], [0, 1], [0, 1]);
          both('!=?', 'diff', [0, 1], [0, 1], [0, 1], [0, 2]);
          both('!=?', 'diff', [0, 1], [0, 1], [0, 2], [0, 2]);
          both('!=?', 'diff', [0, 1], [0, 2], [0, 2], [0, 2]);
          both('!=?', 'xor', [0, 2], [0, 1], [0, 1], [0, 1]);
          both('!=?', 'diff', [0, 2], [0, 1], [0, 1], [0, 2]);
          both('!=?', 'diff', [0, 2], [0, 1], [0, 2], [0, 2]);
          both('!=?', 'diff', [0, 2], [0, 2], [0, 2], [0, 2]);
          both('!=?', 'diff', [0, 2], [1, 2], [0, 1], [0, 1]);
          both('!=?', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
          both('!=?', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
          both('!=?', 'diff', [0, 1], [0, 10]);
          both('!=?', 'xor', [0, 1], [0, 0, 9, 9]);
          both('!=?', 'diff', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!=?', 'diff', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<?', [0, 1], [0, 1], [0, 1], [0, 1]);
          lhs('<?', 'lt', [0, 1], [0, 1], [0, 1], [0, 2]);
          lhs('<?', 'lt', [0, 1], [0, 1], [0, 2], [0, 2]);
          lhs('<?', 'lt', [0, 1], [0, 2], [0, 2], [0, 2]);
          lhs('<?', [0, 2], [0, 1], [0, 1], [0, 1]);
          lhs('<?', 'lt', [0, 2], [0, 1], [0, 1], [0, 2]);
          lhs('<?', 'lt', [0, 2], [0, 1], [0, 2], [0, 2]);
          lhs('<?', 'lt', [0, 2], [0, 2], [0, 2], [0, 2]);
          lhs('<?', 'reject', [0, 2], [1, 2], [0, 1], [0, 1]);
          lhs('<?', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
          lhs('<?', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
          lhs('<?', 'lt', [0, 1], [0, 10]);
          lhs('<?', [0, 1], [0, 0, 9, 9]);
          lhs('<?', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<?', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<?', [0, 1], [0, 1], [0, 1], [0, 1]);
          rhs('<?', [0, 1], [0, 1], [0, 1], [0, 2]);
          rhs('<?', [0, 1], [0, 1], [0, 2], [0, 2]);
          rhs('<?', 'lt', [0, 1], [0, 2], [0, 2], [0, 2]);
          rhs('<?', [0, 2], [0, 1], [0, 1], [0, 1]);
          rhs('<?', [0, 2], [0, 1], [0, 1], [0, 2]);
          rhs('<?', [0, 2], [0, 1], [0, 2], [0, 2]);
          rhs('<?', 'lt', [0, 2], [0, 2], [0, 2], [0, 2]);
          rhs('<?', 'lt', [0, 2], [1, 2], [0, 1], [0, 1]);
          rhs('<?', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
          rhs('<?', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
          rhs('<?', 'lt', [0, 1], [0, 10]);
          rhs('<?', [0, 1], [0, 0, 9, 9]);
          rhs('<?', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<?', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<=?', 'imp', [0, 1], [0, 1], [0, 1], [0, 1]);
          lhs('<=?', 'lte', [0, 1], [0, 1], [0, 1], [0, 2]);
          lhs('<=?', 'lte', [0, 1], [0, 1], [0, 2], [0, 2]);
          lhs('<=?', 'lte', [0, 1], [0, 2], [0, 2], [0, 2]);
          lhs('<=?', 'imp', [0, 2], [0, 1], [0, 1], [0, 1]);
          lhs('<=?', 'lte', [0, 2], [0, 1], [0, 1], [0, 2]);
          lhs('<=?', 'lte', [0, 2], [0, 1], [0, 2], [0, 2]);
          lhs('<=?', 'lte', [0, 2], [0, 2], [0, 2], [0, 2]);
          lhs('<=?', [0, 2], [1, 2], [0, 1], [0, 1]);
          lhs('<=?', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
          lhs('<=?', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
          lhs('<=?', 'lte', [0, 1], [0, 10]);
          lhs('<=?', 'imp', [0, 1], [0, 0, 9, 9]);
          lhs('<=?', 'imp', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<=?', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<=?', 'imp', [0, 1], [0, 1], [0, 1], [0, 1]);
          rhs('<=?', 'imp', [0, 1], [0, 1], [0, 1], [0, 2]);
          rhs('<=?', 'imp', [0, 1], [0, 1], [0, 2], [0, 2]);
          rhs('<=?', 'lte', [0, 1], [0, 2], [0, 2], [0, 2]);
          rhs('<=?', 'imp', [0, 2], [0, 1], [0, 1], [0, 1]);
          rhs('<=?', 'imp', [0, 2], [0, 1], [0, 1], [0, 2]);
          rhs('<=?', 'imp', [0, 2], [0, 1], [0, 2], [0, 2]);
          rhs('<=?', 'lte', [0, 2], [0, 2], [0, 2], [0, 2]);
          rhs('<=?', [0, 2], [1, 2], [0, 1], [0, 1]);
          rhs('<=?', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
          rhs('<=?', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
          rhs('<=?', 'lte', [0, 1], [0, 10]);
          rhs('<=?', 'imp', [0, 1], [0, 0, 9, 9]);
          rhs('<=?', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<=?', 'imp', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!&?', 'nall', [0, 1], [0, 1], [0, 1], [0, 1]);
          both('!&?', 'nall', [0, 1], [0, 1], [0, 1], [0, 2]);
          both('!&?', 'nall', [0, 1], [0, 1], [0, 2], [0, 2]);
          both('!&?', 'nall', [0, 1], [0, 2], [0, 2], [0, 2]);
          both('!&?', 'nall', [0, 2], [0, 1], [0, 1], [0, 1]);
          both('!&?', 'nall', [0, 2], [0, 1], [0, 1], [0, 2]);
          both('!&?', 'nall', [0, 2], [0, 1], [0, 2], [0, 2]);
          both('!&?', 'nall', [0, 2], [0, 2], [0, 2], [0, 2]);
          both('!&?', [0, 2], [1, 2], [0, 1], [0, 1]);
          both('!&?', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
          both('!&?', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
          both('!&?', 'nall', [0, 1], [0, 10]);
          both('!&?', 'nall', [0, 1], [0, 0, 9, 9]);
          both('!&?', 'nall', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!&?', 'nall', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('|?', 'some', [0, 1], [0, 1], [0, 1], [0, 1]);
          both('|?', 'some', [0, 1], [0, 1], [0, 1], [0, 2]);
          both('|?', 'some', [0, 1], [0, 1], [0, 2], [0, 2]);
          both('|?', 'some', [0, 1], [0, 2], [0, 2], [0, 2]);
          both('|?', 'some', [0, 2], [0, 1], [0, 1], [0, 1]);
          both('|?', 'some', [0, 2], [0, 1], [0, 1], [0, 2]);
          both('|?', 'some', [0, 2], [0, 1], [0, 2], [0, 2]);
          both('|?', 'some', [0, 2], [0, 2], [0, 2], [0, 2]);
          both('|?', [0, 2], [1, 2], [0, 1], [0, 1]);
          both('|?', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
          both('|?', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
          both('|?', 'some', [0, 1], [0, 10]);
          both('|?', 'some', [0, 1], [0, 0, 9, 9]);
          both('|?', 'some', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('|?', 'some', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!|?', [0, 1], [0, 1], [0, 1], [0, 1]);
          both('!|?', [0, 1], [0, 1], [0, 1], [0, 2]);
          both('!|?', [0, 1], [0, 1], [0, 2], [0, 2]);
          both('!|?', [0, 1], [0, 2], [0, 2], [0, 2]);
          both('!|?', [0, 2], [0, 1], [0, 1], [0, 1]);
          both('!|?', [0, 2], [0, 1], [0, 1], [0, 2]);
          both('!|?', [0, 2], [0, 1], [0, 2], [0, 2]);
          both('!|?', [0, 2], [0, 2], [0, 2], [0, 2]);
          both('!|?', 'reject', [0, 2], [1, 2], [0, 1], [0, 1]);
          both('!|?', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
          both('!|?', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
          both('!|?', [0, 1], [0, 10]);
          both('!|?', [0, 1], [0, 0, 9, 9]);
          both('!|?', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!|?', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('+', 'sum', [0, 1], [0, 1], [0, 1], [0, 1]);
          both('+', 'sum', [0, 1], [0, 1], [0, 1], [0, 2]);
          both('+', 'sum', [0, 1], [0, 1], [0, 2], [0, 2]);
          both('+', 'sum', [0, 1], [0, 2], [0, 2], [0, 2]);
          both('+', 'some', [0, 2], [0, 1], [0, 1], [0, 1]);
          both('+', 'sum', [0, 2], [0, 1], [0, 1], [0, 2]);
          both('+', 'sum', [0, 2], [0, 1], [0, 2], [0, 2]);
          both('+', 'sum', [0, 2], [0, 2], [0, 2], [0, 2]);
          both('+', 'sum', [0, 2], [1, 2], [0, 1], [0, 1]);
          both('+', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
          both('+', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
          both('+', 'some', [0, 20], [0, 1], [0, 1], [0, 1]);
          both('+', 'sum', [0, 20], [0, 10]);
          both('+', 'sum', [0, 20], [0, 0, 9, 9]);
          both('+', 'sum', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('+', 'sum', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('-', [0, 1], [0, 1], [0, 1], [0, 1]);
          lhs('-', [0, 1], [0, 1], [0, 1], [0, 2]);
          lhs('-', [0, 1], [0, 1], [0, 2], [0, 2]);
          lhs('-', 'minus', [0, 1], [0, 2], [0, 2], [0, 2]);
          lhs('-', [0, 2], [0, 1], [0, 1], [0, 1]);
          lhs('-', [0, 2], [0, 1], [0, 1], [0, 2]);
          lhs('-', [0, 2], [0, 1], [0, 2], [0, 2]);
          lhs('-', 'minus', [0, 2], [0, 2], [0, 2], [0, 2]);
          lhs('-', 'minus', [0, 2], [1, 2], [0, 1], [0, 1]);
          lhs('-', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
          lhs('-', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
          lhs('-', [0, 20], [0, 1], [0, 1], [0, 1]);
          lhs('-', 'minus', [0, 20], [0, 10]);
          lhs('-', [0, 20], [0, 0, 9, 9]);
          lhs('-', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('-', 'minus', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('-', [0, 1], [0, 1], [0, 1], [0, 1]);
          rhs('-', 'minus', [0, 1], [0, 1], [0, 1], [0, 2]);
          rhs('-', 'minus', [0, 1], [0, 1], [0, 2], [0, 2]);
          rhs('-', 'minus', [0, 1], [0, 2], [0, 2], [0, 2]);
          rhs('-', [0, 2], [0, 1], [0, 1], [0, 1]);
          rhs('-', 'minus', [0, 2], [0, 1], [0, 1], [0, 2]);
          rhs('-', 'minus', [0, 2], [0, 1], [0, 2], [0, 2]);
          rhs('-', 'minus', [0, 2], [0, 2], [0, 2], [0, 2]);
          rhs('-', 'reject', [0, 2], [1, 2], [0, 1], [0, 1]);
          rhs('-', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
          rhs('-', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
          rhs('-', [0, 20], [0, 1], [0, 1], [0, 1]);
          rhs('-', 'minus', [0, 20], [0, 10]);
          rhs('-', [0, 20], [0, 0, 9, 9]);
          rhs('-', 'minus', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('-', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('*', [0, 1], [0, 1], [0, 1], [0, 1]);
          both('*', [0, 1], [0, 1], [0, 1], [0, 2]);
          both('*', [0, 1], [0, 1], [0, 2], [0, 2]);
          both('*', [0, 1], [0, 2], [0, 2], [0, 2]);
          both('*', [0, 2], [0, 1], [0, 1], [0, 1]);
          both('*', [0, 2], [0, 1], [0, 1], [0, 2]);
          both('*', [0, 2], [0, 1], [0, 2], [0, 2]);
          both('*', 'product', [0, 2], [0, 2], [0, 2], [0, 2]);
          both('*', [0, 2], [1, 2], [0, 1], [0, 1]);
          both('*', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
          both('*', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
          both('*', [0, 100], [0, 1], [0, 1], [0, 1]);
          both('*', 'product', [0, 100], [0, 10]);
          both('*', 'product', [0, 100], [0, 0, 9, 9]);
          both('*', 'product', [0, 100], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('*', 'product', [0, 100], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('/', 'div', [0, 1], [0, 1], [0, 1], [0, 1]);
          lhs('/', 'div', [0, 1], [0, 1], [0, 1], [0, 2]);
          lhs('/', 'div', [0, 1], [0, 1], [0, 2], [0, 2]);
          lhs('/', 'div', [0, 1], [0, 2], [0, 2], [0, 2]);
          lhs('/', 'div', [0, 2], [0, 1], [0, 1], [0, 1]);
          lhs('/', 'div', [0, 2], [0, 1], [0, 1], [0, 2]);
          lhs('/', 'div', [0, 2], [0, 1], [0, 2], [0, 2]);
          lhs('/', 'div', [0, 2], [0, 2], [0, 2], [0, 2]);
          lhs('/', 'div', [0, 2], [1, 2], [0, 1], [0, 1]);
          lhs('/', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
          lhs('/', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
          lhs('/', 'div', [0, 20], [0, 1], [0, 1], [0, 1]);
          lhs('/', 'div', [0, 20], [0, 10]);
          lhs('/', 'div', [0, 20], [0, 0, 9, 9]);
          lhs('/', 'reject', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('/', 'div', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('/', 'div', [0, 1], [0, 1], [0, 1], [0, 1]);
          rhs('/', 'div', [0, 1], [0, 1], [0, 1], [0, 2]);
          rhs('/', 'div', [0, 1], [0, 1], [0, 2], [0, 2]);
          rhs('/', 'div', [0, 1], [0, 2], [0, 2], [0, 2]);
          rhs('/', 'div', [0, 2], [0, 1], [0, 1], [0, 1]);
          rhs('/', 'div', [0, 2], [0, 1], [0, 1], [0, 2]);
          rhs('/', 'div', [0, 2], [0, 1], [0, 2], [0, 2]);
          rhs('/', 'div', [0, 2], [0, 2], [0, 2], [0, 2]);
          rhs('/', 'div', [0, 2], [1, 2], [0, 1], [0, 1]);
          rhs('/', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
          rhs('/', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
          rhs('/', 'div', [0, 20], [0, 1], [0, 1], [0, 1]);
          rhs('/', 'div', [0, 20], [0, 10]);
          rhs('/', 'div', [0, 20], [0, 0, 9, 9]);
          rhs('/', 'div', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('/', 'reject', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
        });
      });

      describe('NIMP RHS', function() {

        describe('binary', function() {

          let both = testBinaryBinary.bind(undefined, '!->', 'rhs', ''); // A & B, A @ C  and  A & B, C @ A
          let lhs = testBinaryBinary.bind(undefined, '!->', 'rhs', 'lhs'); // A & B, A @ C
          let rhs = testBinaryBinary.bind(undefined, '!->', 'rhs', 'rhs'); // A & B, C @ A

          both('&', 'reject', [0, 1], [0, 1], [0, 1]);
          //both('&', [0, 1], [0, 1], [0, 2]);
          //both('&', [0, 1], [0, 2], [0, 1]);
          //both('&', [0, 1], [0, 2], [0, 2]);
          //both('&', [0, 2], [0, 1], [0, 1]);
          //both('&', [0, 2], [0, 1], [0, 2]);
          //both('&', [0, 2], [0, 2], [0, 1]);
          //both('&', [0, 2], [0, 2], [0, 2]);
          //both('&', [0, 2], [0, 1], [1, 2]);
          //both('&', [0, 2], [1, 2], [0, 1]);
          //both('&', [0, 2], [1, 2], [1, 2]);
          both('&', 'reject', [0, 10]);
          both('&', 'reject', [0, 0, 9, 9]);
          both('&', 'reject', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('&', 'reject', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!=', [0, 1], [0, 1], [0, 1]);
          //both('!=', [0, 1], [0, 1], [0, 2]);
          //both('!=', [0, 1], [0, 2], [0, 1]);
          //both('!=', [0, 1], [0, 2], [0, 2]);
          //both('!=', [0, 2], [0, 1], [0, 1]);
          //both('!=', [0, 2], [0, 1], [0, 2]);
          //both('!=', [0, 2], [0, 2], [0, 1]);
          //both('!=', [0, 2], [0, 2], [0, 2]);
          //both('!=', [0, 2], [0, 1], [1, 2]);
          //both('!=', [0, 2], [1, 2], [0, 1]);
          //both('!=', [0, 2], [1, 2], [1, 2]);
          both('!=', [0, 10]);
          both('!=', [0, 0, 9, 9]);
          both('!=', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!=', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('->', [0, 1], [0, 1], [0, 1]);
          //lhs('->', [0, 1], [0, 1], [0, 2]);
          //lhs('->', [0, 1], [0, 2], [0, 1]);
          //lhs('->', [0, 1], [0, 2], [0, 2]);
          //lhs('->', [0, 2], [0, 1], [0, 1]);
          //lhs('->', [0, 2], [0, 1], [0, 2]);
          //lhs('->', [0, 2], [0, 2], [0, 1]);
          //lhs('->', [0, 2], [0, 2], [0, 2]);
          //lhs('->', [0, 2], [0, 1], [1, 2]);
          //lhs('->', [0, 2], [1, 2], [0, 1]);
          //lhs('->', [0, 2], [1, 2], [1, 2]);
          lhs('->', [0, 10]);
          lhs('->', [0, 0, 9, 9]);
          lhs('->', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('->', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('->', [0, 1], [0, 1], [0, 1]);
          //rhs('->', [0, 1], [0, 1], [0, 2]);
          //rhs('->', [0, 1], [0, 2], [0, 1]);
          //rhs('->', [0, 1], [0, 2], [0, 2]);
          //rhs('->', [0, 2], [0, 1], [0, 1]);
          //rhs('->', [0, 2], [0, 1], [0, 2]);
          //rhs('->', [0, 2], [0, 2], [0, 1]);
          //rhs('->', [0, 2], [0, 2], [0, 2]);
          //rhs('->', [0, 2], [0, 1], [1, 2]);
          //rhs('->', [0, 2], [1, 2], [0, 1]);
          //rhs('->', [0, 2], [1, 2], [1, 2]);
          rhs('->', [0, 10]);
          rhs('->', [0, 0, 9, 9]);
          rhs('->', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('->', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<', [0, 1], [0, 1], [0, 1]);
          //lhs('<', [0, 1], [0, 1], [0, 2]);
          //lhs('<', [0, 1], [0, 2], [0, 1]);
          //lhs('<', [0, 1], [0, 2], [0, 2]);
          //lhs('<', [0, 2], [0, 1], [0, 1]);
          //lhs('<', [0, 2], [0, 1], [0, 2]);
          //lhs('<', [0, 2], [0, 2], [0, 1]);
          //lhs('<', [0, 2], [0, 2], [0, 2]);
          //lhs('<', [0, 2], [0, 1], [1, 2]);
          //lhs('<', [0, 2], [1, 2], [0, 1]);
          //lhs('<', [0, 2], [1, 2], [1, 2]);
          lhs('<', [0, 10]);
          lhs('<', [0, 0, 9, 9]);
          lhs('<', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<', 'reject', [0, 1], [0, 1], [0, 1]);
          //rhs('<', [0, 1], [0, 1], [0, 2]);
          //rhs('<', [0, 1], [0, 2], [0, 1]);
          //rhs('<', [0, 1], [0, 2], [0, 2]);
          //rhs('<', [0, 2], [0, 1], [0, 1]);
          //rhs('<', [0, 2], [0, 1], [0, 2]);
          //rhs('<', [0, 2], [0, 2], [0, 1]);
          //rhs('<', [0, 2], [0, 2], [0, 2]);
          //rhs('<', [0, 2], [0, 1], [1, 2]);
          //rhs('<', [0, 2], [1, 2], [0, 1]);
          //rhs('<', [0, 2], [1, 2], [1, 2]);
          rhs('<', 'reject', [0, 10]);
          rhs('<', 'reject', [0, 0, 9, 9]);
          rhs('<', 'reject', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<', 'reject', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<=', [0, 1], [0, 1], [0, 1]);
          //lhs('<=', [0, 1], [0, 1], [0, 2]);
          //lhs('<=', [0, 1], [0, 2], [0, 1]);
          //lhs('<=', [0, 1], [0, 2], [0, 2]);
          //lhs('<=', [0, 2], [0, 1], [0, 1]);
          //lhs('<=', [0, 2], [0, 1], [0, 2]);
          //lhs('<=', [0, 2], [0, 2], [0, 1]);
          //lhs('<=', [0, 2], [0, 2], [0, 2]);
          //lhs('<=', [0, 2], [0, 1], [1, 2]);
          //lhs('<=', [0, 2], [1, 2], [0, 1]);
          //lhs('<=', [0, 2], [1, 2], [1, 2]);
          lhs('<=', [0, 10]);
          lhs('<=', [0, 0, 9, 9]);
          lhs('<=', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<=', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<=', [0, 1], [0, 1], [0, 1]);
          //rhs('<=', [0, 1], [0, 1], [0, 2]);
          //rhs('<=', [0, 1], [0, 2], [0, 1]);
          //rhs('<=', [0, 1], [0, 2], [0, 2]);
          //rhs('<=', [0, 2], [0, 1], [0, 1]);
          //rhs('<=', [0, 2], [0, 1], [0, 2]);
          //rhs('<=', [0, 2], [0, 2], [0, 1]);
          //rhs('<=', [0, 2], [0, 2], [0, 2]);
          //rhs('<=', [0, 2], [0, 1], [1, 2]);
          //rhs('<=', [0, 2], [1, 2], [0, 1]);
          //rhs('<=', [0, 2], [1, 2], [1, 2]);
          rhs('<=', [0, 10]);
          rhs('<=', [0, 0, 9, 9]);
          rhs('<=', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<=', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!&', [0, 1], [0, 1], [0, 1]);
          //both('!&', [0, 1], [0, 1], [0, 2]);
          //both('!&', [0, 1], [0, 2], [0, 1]);
          //both('!&', [0, 1], [0, 2], [0, 2]);
          //both('!&', [0, 2], [0, 1], [0, 1]);
          //both('!&', [0, 2], [0, 1], [0, 2]);
          //both('!&', [0, 2], [0, 2], [0, 1]);
          //both('!&', [0, 2], [0, 2], [0, 2]);
          //both('!&', [0, 2], [0, 1], [1, 2]);
          //both('!&', [0, 2], [1, 2], [0, 1]);
          //both('!&', [0, 2], [1, 2], [1, 2]);
          both('!&', [0, 10]);
          both('!&', [0, 0, 9, 9]);
          both('!&', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!&', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('!->', 'reject', [0, 1], [0, 1], [0, 1]);
          //lhs('!->', [0, 1], [0, 1], [0, 2]);
          //lhs('!->', [0, 1], [0, 2], [0, 1]);
          //lhs('!->', [0, 1], [0, 2], [0, 2]);
          //lhs('!->', [0, 2], [0, 1], [0, 1]);
          //lhs('!->', [0, 2], [0, 1], [0, 2]);
          //lhs('!->', [0, 2], [0, 2], [0, 1]);
          //lhs('!->', [0, 2], [0, 2], [0, 2]);
          //lhs('!->', [0, 2], [0, 1], [1, 2]);
          //lhs('!->', [0, 2], [1, 2], [0, 1]);
          //lhs('!->', [0, 2], [1, 2], [1, 2]);
          lhs('!->', 'reject', [0, 10]);
          lhs('!->', 'reject', [0, 0, 9, 9]);
          lhs('!->', 'reject', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('!->', 'reject', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('!->', [0, 1], [0, 1], [0, 1]);
          //rhs('!->', [0, 1], [0, 1], [0, 2]);
          //rhs('!->', [0, 1], [0, 2], [0, 1]);
          //rhs('!->', [0, 1], [0, 2], [0, 2]);
          //rhs('!->', [0, 2], [0, 1], [0, 1]);
          //rhs('!->', [0, 2], [0, 1], [0, 2]);
          //rhs('!->', [0, 2], [0, 2], [0, 1]);
          //rhs('!->', [0, 2], [0, 2], [0, 2]);
          //rhs('!->', [0, 2], [0, 1], [1, 2]);
          //rhs('!->', [0, 2], [1, 2], [0, 1]);
          //rhs('!->', [0, 2], [1, 2], [1, 2]);
          rhs('!->', [0, 10]);
          rhs('!->', [0, 0, 9, 9]);
          rhs('!->', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('!->', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!|', [0, 1], [0, 1], [0, 1]);
          //both('!|', [0, 1], [0, 1], [0, 2]);
          //both('!|', [0, 1], [0, 2], [0, 1]);
          //both('!|', [0, 1], [0, 2], [0, 2]);
          //both('!|', [0, 2], [0, 1], [0, 1]);
          //both('!|', [0, 2], [0, 1], [0, 2]);
          //both('!|', [0, 2], [0, 2], [0, 1]);
          //both('!|', [0, 2], [0, 2], [0, 2]);
          //both('!|', [0, 2], [0, 1], [1, 2]);
          //both('!|', [0, 2], [1, 2], [0, 1]);
          //both('!|', [0, 2], [1, 2], [1, 2]);
          both('!|', [0, 10]);
          both('!|', [0, 0, 9, 9]);
          both('!|', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!|', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('==', [0, 1], [0, 1], [0, 1]);
          //both('==', [0, 1], [0, 1], [0, 2]);
          //both('==', [0, 1], [0, 2], [0, 1]);
          //both('==', [0, 1], [0, 2], [0, 2]);
          //both('==', [0, 2], [0, 1], [0, 1]);
          //both('==', [0, 2], [0, 1], [0, 2]);
          //both('==', [0, 2], [0, 2], [0, 1]);
          //both('==', [0, 2], [0, 2], [0, 2]);
          //both('==', [0, 2], [0, 1], [1, 2]);
          //both('==', [0, 2], [1, 2], [0, 1]);
          //both('==', [0, 2], [1, 2], [1, 2]);
          both('==', [0, 10]);
          both('==', [0, 0, 9, 9]);
          both('==', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('==', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!^', [0, 1], [0, 1], [0, 1]);
          //both('!^', [0, 1], [0, 1], [0, 2]);
          //both('!^', [0, 1], [0, 2], [0, 1]);
          //both('!^', [0, 1], [0, 2], [0, 2]);
          //both('!^', [0, 2], [0, 1], [0, 1]);
          //both('!^', [0, 2], [0, 1], [0, 2]);
          //both('!^', [0, 2], [0, 2], [0, 1]);
          //both('!^', [0, 2], [0, 2], [0, 2]);
          //both('!^', [0, 2], [0, 1], [1, 2]);
          //both('!^', [0, 2], [1, 2], [0, 1]);
          //both('!^', [0, 2], [1, 2], [1, 2]);
          both('!^', [0, 10]);                                      // lt+xnor = xor?
          both('!^', [0, 0, 9, 9]);
          both('!^', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);    // xor??
          both('!^', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('^', [0, 1], [0, 1], [0, 1]);
          //both('^', [0, 1], [0, 1], [0, 2]);
          //both('^', [0, 1], [0, 2], [0, 1]);
          //both('^', [0, 1], [0, 2], [0, 2]);
          //both('^', [0, 2], [0, 1], [0, 1]);
          //both('^', [0, 2], [0, 1], [0, 2]);
          //both('^', [0, 2], [0, 2], [0, 1]);
          //both('^', [0, 2], [0, 2], [0, 2]);
          //both('^', [0, 2], [0, 1], [1, 2]);
          //both('^', [0, 2], [1, 2], [0, 1]);
          //both('^', [0, 2], [1, 2], [1, 2]);
          both('^', [0, 10]);
          both('^', [0, 0, 9, 9]);
          both('^', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('^', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
        });

        describe('ternary with shared arg', function() {

          let both = testBinaryTernarySharedArgs.bind(undefined, '!->', 'rhs', ''); // A & B, R = A @ C  and  A & B, R = C @ A
          let lhs = testBinaryTernarySharedArgs.bind(undefined, '!->', 'rhs', 'lhs'); // A & B, R = A @ C
          let rhs = testBinaryTernarySharedArgs.bind(undefined, '!->', 'rhs', 'rhs'); // A & B, R = C @ A

          // A & B, R = A &? C
          both('&?', [0, 1], [0, 1], [0, 1], [0, 1]);
          both('&?', [0, 1], [0, 1], [0, 1], [0, 2]);
          both('&?', [0, 1], [0, 1], [0, 2], [0, 2]);
          both('&?', [0, 1], [0, 2], [0, 2], [0, 2]);
          both('&?', [0, 2], [0, 1], [0, 1], [0, 1]);
          both('&?', [0, 2], [0, 1], [0, 1], [0, 2]);
          both('&?', [0, 2], [0, 1], [0, 2], [0, 2]);
          both('&?', [0, 2], [0, 2], [0, 2], [0, 2]);
          both('&?', 'reject', [0, 2], [1, 2], [0, 1], [0, 1]);
          both('&?', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
          both('&?', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
          both('&?', [0, 1], [0, 10]);
          both('&?', [0, 1], [0, 0, 9, 9]);
          both('&?', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('&?', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('==?', 'xor', [0, 1], [0, 1], [0, 1], [0, 1]);
          both('==?', 'xor', [0, 1], [0, 1], [0, 1], [0, 2]);
          both('==?', 'xor', [0, 1], [0, 1], [0, 2], [0, 2]);
          both('==?', 'xor', [0, 1], [0, 2], [0, 2], [0, 2]);
          both('==?', 'xor', [0, 2], [0, 1], [0, 1], [0, 1]);
          both('==?', 'xor', [0, 2], [0, 1], [0, 1], [0, 2]);
          both('==?', 'xor', [0, 2], [0, 1], [0, 2], [0, 2]);
          both('==?', 'xor', [0, 2], [0, 2], [0, 2], [0, 2]);
          both('==?', 'reject', [0, 2], [1, 2], [0, 1], [0, 1]);
          both('==?', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
          both('==?', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
          both('==?', 'xor', [0, 1], [0, 10]);
          both('==?', 'xor', [0, 1], [0, 0, 9, 9]);
          both('==?', 'xor', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('==?', 'xor', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!=?', [0, 1], [0, 1], [0, 1], [0, 1]);
          both('!=?', 'isdiff', [0, 1], [0, 1], [0, 1], [0, 2]);
          both('!=?', 'isdiff', [0, 1], [0, 1], [0, 2], [0, 2]);
          both('!=?', 'isdiff', [0, 1], [0, 2], [0, 2], [0, 2]);
          both('!=?', 'isdiff', [0, 2], [0, 1], [0, 1], [0, 1]);
          both('!=?', 'isdiff', [0, 2], [0, 1], [0, 1], [0, 2]);
          both('!=?', 'isdiff', [0, 2], [0, 1], [0, 2], [0, 2]);
          both('!=?', 'isdiff', [0, 2], [0, 2], [0, 2], [0, 2]);
          both('!=?', 'reject', [0, 2], [1, 2], [0, 1], [0, 1]);
          both('!=?', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
          both('!=?', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
          both('!=?', 'isdiff', [0, 1], [0, 10]);
          both('!=?', [0, 1], [0, 0, 9, 9]);
          both('!=?', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!=?', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<?', [0, 1], [0, 1], [0, 1], [0, 1]);
          lhs('<?', [0, 1], [0, 1], [0, 1], [0, 2]);
          lhs('<?', [0, 1], [0, 1], [0, 2], [0, 2]);
          lhs('<?', [0, 1], [0, 2], [0, 2], [0, 2]);
          lhs('<?', [0, 2], [0, 1], [0, 1], [0, 1]);
          lhs('<?', [0, 2], [0, 1], [0, 1], [0, 2]);
          lhs('<?', [0, 2], [0, 1], [0, 2], [0, 2]);
          lhs('<?', [0, 2], [0, 2], [0, 2], [0, 2]);
          lhs('<?', 'reject', [0, 2], [1, 2], [0, 1], [0, 1]);
          lhs('<?', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
          lhs('<?', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
          lhs('<?', [0, 1], [0, 10]);
          lhs('<?', [0, 1], [0, 0, 9, 9]);
          lhs('<?', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<?', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<?', [0, 1], [0, 1], [0, 1], [0, 1]);
          rhs('<?', [0, 1], [0, 1], [0, 1], [0, 2]);
          rhs('<?', [0, 1], [0, 1], [0, 2], [0, 2]);
          rhs('<?', [0, 1], [0, 2], [0, 2], [0, 2]);
          rhs('<?', [0, 2], [0, 1], [0, 1], [0, 1]);
          rhs('<?', [0, 2], [0, 1], [0, 1], [0, 2]);
          rhs('<?', [0, 2], [0, 1], [0, 2], [0, 2]);
          rhs('<?', [0, 2], [0, 2], [0, 2], [0, 2]);
          rhs('<?', 'reject', [0, 2], [1, 2], [0, 1], [0, 1]);
          rhs('<?', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
          rhs('<?', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
          rhs('<?', [0, 1], [0, 10]);
          rhs('<?', [0, 1], [0, 0, 9, 9]);
          rhs('<?', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<?', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<=?', [0, 1], [0, 1], [0, 1], [0, 1]);
          lhs('<=?', [0, 1], [0, 1], [0, 1], [0, 2]);
          lhs('<=?', [0, 1], [0, 1], [0, 2], [0, 2]);
          lhs('<=?', [0, 1], [0, 2], [0, 2], [0, 2]);
          lhs('<=?', [0, 2], [0, 1], [0, 1], [0, 1]);
          lhs('<=?', [0, 2], [0, 1], [0, 1], [0, 2]);
          lhs('<=?', [0, 2], [0, 1], [0, 2], [0, 2]);
          lhs('<=?', [0, 2], [0, 2], [0, 2], [0, 2]);
          lhs('<=?', 'reject', [0, 2], [1, 2], [0, 1], [0, 1]);
          lhs('<=?', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
          lhs('<=?', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
          lhs('<=?', [0, 1], [0, 10]);
          lhs('<=?', [0, 1], [0, 0, 9, 9]);
          lhs('<=?', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<=?', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<=?', 'xor', [0, 1], [0, 1], [0, 1], [0, 1]);
          rhs('<=?', 'islte', [0, 1], [0, 1], [0, 1], [0, 2]);
          rhs('<=?', 'islte', [0, 1], [0, 1], [0, 2], [0, 2]);
          rhs('<=?', 'islte', [0, 1], [0, 2], [0, 2], [0, 2]);
          rhs('<=?', 'islte', [0, 2], [0, 1], [0, 1], [0, 1]);
          rhs('<=?', 'islte', [0, 2], [0, 1], [0, 1], [0, 2]);
          rhs('<=?', 'islte', [0, 2], [0, 1], [0, 2], [0, 2]);
          rhs('<=?', 'islte', [0, 2], [0, 2], [0, 2], [0, 2]);
          rhs('<=?', 'reject', [0, 2], [1, 2], [0, 1], [0, 1]);
          rhs('<=?', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
          rhs('<=?', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
          rhs('<=?', 'islte', [0, 1], [0, 10]);
          rhs('<=?', 'islte', [0, 1], [0, 0, 9, 9]);
          rhs('<=?', 'islte', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<=?', 'islte', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!&?', [0, 1], [0, 1], [0, 1], [0, 1]);
          both('!&?', [0, 1], [0, 1], [0, 1], [0, 2]);
          both('!&?', [0, 1], [0, 1], [0, 2], [0, 2]);
          both('!&?', [0, 1], [0, 2], [0, 2], [0, 2]);
          both('!&?', [0, 2], [0, 1], [0, 1], [0, 1]);
          both('!&?', [0, 2], [0, 1], [0, 1], [0, 2]);
          both('!&?', [0, 2], [0, 1], [0, 2], [0, 2]);
          both('!&?', [0, 2], [0, 2], [0, 2], [0, 2]);
          both('!&?', 'reject', [0, 2], [1, 2], [0, 1], [0, 1]);
          both('!&?', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
          both('!&?', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
          both('!&?', [0, 1], [0, 10]);
          both('!&?', [0, 1], [0, 0, 9, 9]);
          both('!&?', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!&?', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('|?', [0, 1], [0, 1], [0, 1], [0, 1]);
          both('|?', [0, 1], [0, 1], [0, 1], [0, 2]);
          both('|?', [0, 1], [0, 1], [0, 2], [0, 2]);
          both('|?', [0, 1], [0, 2], [0, 2], [0, 2]);
          both('|?', [0, 2], [0, 1], [0, 1], [0, 1]);
          both('|?', [0, 2], [0, 1], [0, 1], [0, 2]);
          both('|?', [0, 2], [0, 1], [0, 2], [0, 2]);
          both('|?', [0, 2], [0, 2], [0, 2], [0, 2]);
          both('|?', 'reject', [0, 2], [1, 2], [0, 1], [0, 1]);
          both('|?', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
          both('|?', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
          both('|?', [0, 1], [0, 10]);
          both('|?', [0, 1], [0, 0, 9, 9]);
          both('|?', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('|?', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!|?', 'isnone', [0, 1], [0, 1], [0, 1], [0, 1]);
          both('!|?', 'isnone', [0, 1], [0, 1], [0, 1], [0, 2]);
          both('!|?', 'isnone', [0, 1], [0, 1], [0, 2], [0, 2]);
          both('!|?', 'isnone', [0, 1], [0, 2], [0, 2], [0, 2]);
          both('!|?', 'isnone', [0, 2], [0, 1], [0, 1], [0, 1]);
          both('!|?', 'isnone', [0, 2], [0, 1], [0, 1], [0, 2]);
          both('!|?', 'isnone', [0, 2], [0, 1], [0, 2], [0, 2]);
          both('!|?', 'isnone', [0, 2], [0, 2], [0, 2], [0, 2]);
          both('!|?', 'reject', [0, 2], [1, 2], [0, 1], [0, 1]);
          both('!|?', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
          both('!|?', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
          both('!|?', 'isnone', [0, 1], [0, 10]);
          both('!|?', 'isnone', [0, 1], [0, 0, 9, 9]);
          both('!|?', 'isnone', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!|?', 'isnone', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('+', [0, 1], [0, 1], [0, 1], [0, 1]);
          both('+', [0, 1], [0, 1], [0, 1], [0, 2]);
          both('+', [0, 1], [0, 1], [0, 2], [0, 2]);
          both('+', [0, 1], [0, 2], [0, 2], [0, 2]);
          both('+', [0, 2], [0, 1], [0, 1], [0, 1]);
          both('+', [0, 2], [0, 1], [0, 1], [0, 2]);
          both('+', [0, 2], [0, 1], [0, 2], [0, 2]);
          both('+', [0, 2], [0, 2], [0, 2], [0, 2]);
          both('+', 'reject', [0, 2], [1, 2], [0, 1], [0, 1]);
          both('+', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
          both('+', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
          both('+', [0, 20], [0, 1], [0, 1], [0, 1]);
          both('+', [0, 20], [0, 10]);
          both('+', [0, 20], [0, 0, 9, 9]);
          both('+', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('+', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('-', [0, 1], [0, 1], [0, 1], [0, 1]);
          lhs('-', [0, 1], [0, 1], [0, 1], [0, 2]);
          lhs('-', [0, 1], [0, 1], [0, 2], [0, 2]);
          lhs('-', [0, 1], [0, 2], [0, 2], [0, 2]);
          lhs('-', [0, 2], [0, 1], [0, 1], [0, 1]);
          lhs('-', [0, 2], [0, 1], [0, 1], [0, 2]);
          lhs('-', [0, 2], [0, 1], [0, 2], [0, 2]);
          lhs('-', [0, 2], [0, 2], [0, 2], [0, 2]);
          lhs('-', 'reject', [0, 2], [1, 2], [0, 1], [0, 1]);
          lhs('-', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
          lhs('-', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
          lhs('-', [0, 20], [0, 1], [0, 1], [0, 1]);
          lhs('-', [0, 20], [0, 10]);
          lhs('-', [0, 20], [0, 0, 9, 9]);
          lhs('-', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('-', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('-', [0, 1], [0, 1], [0, 1], [0, 1]);
          rhs('-', [0, 1], [0, 1], [0, 1], [0, 2]);
          rhs('-', [0, 1], [0, 1], [0, 2], [0, 2]);
          rhs('-', [0, 1], [0, 2], [0, 2], [0, 2]);
          rhs('-', [0, 2], [0, 1], [0, 1], [0, 1]);
          rhs('-', [0, 2], [0, 1], [0, 1], [0, 2]);
          rhs('-', [0, 2], [0, 1], [0, 2], [0, 2]);
          rhs('-', [0, 2], [0, 2], [0, 2], [0, 2]);
          rhs('-', 'reject', [0, 2], [1, 2], [0, 1], [0, 1]);
          rhs('-', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
          rhs('-', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
          rhs('-', [0, 20], [0, 1], [0, 1], [0, 1]);
          rhs('-', [0, 20], [0, 10]);
          rhs('-', [0, 20], [0, 0, 9, 9]);
          rhs('-', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('-', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('*', [0, 1], [0, 1], [0, 1], [0, 1]);
          both('*', [0, 1], [0, 1], [0, 1], [0, 2]);
          both('*', [0, 1], [0, 1], [0, 2], [0, 2]);
          both('*', [0, 1], [0, 2], [0, 2], [0, 2]);
          both('*', [0, 2], [0, 1], [0, 1], [0, 1]);
          both('*', [0, 2], [0, 1], [0, 1], [0, 2]);
          both('*', [0, 2], [0, 1], [0, 2], [0, 2]);
          both('*', [0, 2], [0, 2], [0, 2], [0, 2]);
          both('*', 'reject', [0, 2], [1, 2], [0, 1], [0, 1]);
          both('*', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
          both('*', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
          both('*', [0, 100], [0, 1], [0, 1], [0, 1]);
          both('*', [0, 100], [0, 10]);
          both('*', [0, 100], [0, 0, 9, 9]);
          both('*', [0, 100], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('*', [0, 100], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('/', 'div', [0, 1], [0, 1], [0, 1], [0, 1]);
          lhs('/', 'div', [0, 1], [0, 1], [0, 1], [0, 2]);
          lhs('/', 'div', [0, 1], [0, 1], [0, 2], [0, 2]);
          lhs('/', 'div', [0, 1], [0, 2], [0, 2], [0, 2]);
          lhs('/', 'div', [0, 2], [0, 1], [0, 1], [0, 1]);
          lhs('/', 'div', [0, 2], [0, 1], [0, 1], [0, 2]);
          lhs('/', 'div', [0, 2], [0, 1], [0, 2], [0, 2]);
          lhs('/', 'div', [0, 2], [0, 2], [0, 2], [0, 2]);
          lhs('/', 'reject', [0, 2], [1, 2], [0, 1], [0, 1]);
          lhs('/', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
          lhs('/', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
          lhs('/', 'div', [0, 20], [0, 1], [0, 1], [0, 1]);
          lhs('/', 'div', [0, 20], [0, 10]);
          lhs('/', 'div', [0, 20], [0, 0, 9, 9]);
          lhs('/', 'div', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('/', 'div', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('/', 'reject', [0, 1], [0, 1], [0, 1], [0, 1]);
          rhs('/', 'reject', [0, 1], [0, 1], [0, 1], [0, 2]);
          rhs('/', 'reject', [0, 1], [0, 1], [0, 2], [0, 2]);
          rhs('/', 'reject', [0, 1], [0, 2], [0, 2], [0, 2]);
          rhs('/', 'reject', [0, 2], [0, 1], [0, 1], [0, 1]);
          rhs('/', 'reject', [0, 2], [0, 1], [0, 1], [0, 2]);
          rhs('/', 'reject', [0, 2], [0, 1], [0, 2], [0, 2]);
          rhs('/', 'reject', [0, 2], [0, 2], [0, 2], [0, 2]);
          rhs('/', 'reject', [0, 2], [1, 2], [0, 1], [0, 1]);
          rhs('/', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
          rhs('/', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
          rhs('/', 'reject', [0, 20], [0, 1], [0, 1], [0, 1]);
          rhs('/', 'reject', [0, 20], [0, 10]);
          rhs('/', 'reject', [0, 20], [0, 0, 9, 9]);
          rhs('/', 'reject', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('/', 'reject', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
        });

        describe('ternary with shared result', function() {

          let both = testBinaryTernarySharedResult.bind(undefined, '!->', 'rhs', ''); // A & B, R = A @ C  and  A & B, R = C @ A
          let lhs = testBinaryTernarySharedResult.bind(undefined, '!->', 'rhs', 'lhs'); // A & B, R = A @ C
          let rhs = testBinaryTernarySharedResult.bind(undefined, '!->', 'rhs', 'rhs'); // A & B, R = C @ A

          // A & B, R = A &? C
          both('&?', 'nall', [0, 1], [0, 1], [0, 1], [0, 1]);
          both('&?', 'nall', [0, 1], [0, 1], [0, 1], [0, 2]);
          both('&?', 'nall', [0, 1], [0, 1], [0, 2], [0, 2]);
          both('&?', 'nall', [0, 1], [0, 2], [0, 2], [0, 2]);
          both('&?', 'nall', [0, 2], [0, 1], [0, 1], [0, 1]);
          both('&?', 'nall', [0, 2], [0, 1], [0, 1], [0, 2]);
          both('&?', 'nall', [0, 2], [0, 1], [0, 2], [0, 2]);
          both('&?', 'nall', [0, 2], [0, 2], [0, 2], [0, 2]);
          both('&?', [0, 2], [1, 2], [0, 1], [0, 1]);
          both('&?', [0, 2], [1, 2], [1, 2], [0, 1]);
          both('&?', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
          both('&?', 'nall', [0, 1], [0, 10]);
          both('&?', 'nall', [0, 1], [0, 0, 9, 9]);
          both('&?', 'nall', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('&?', 'nall', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('==?', 'xor', [0, 1], [0, 1], [0, 1], [0, 1]);
          both('==?', 'diff', [0, 1], [0, 1], [0, 1], [0, 2]);
          both('==?', 'diff', [0, 1], [0, 1], [0, 2], [0, 2]);
          both('==?', 'diff', [0, 1], [0, 2], [0, 2], [0, 2]);
          both('==?', 'xor', [0, 2], [0, 1], [0, 1], [0, 1]);
          both('==?', 'diff', [0, 2], [0, 1], [0, 1], [0, 2]);
          both('==?', 'diff', [0, 2], [0, 1], [0, 2], [0, 2]);
          both('==?', 'diff', [0, 2], [0, 2], [0, 2], [0, 2]);
          both('==?', 'diff', [0, 2], [1, 2], [0, 1], [0, 1]);
          both('==?', 'diff', [0, 2], [1, 2], [1, 2], [0, 1]);
          both('==?', 'diff', [0, 2], [1, 2], [1, 2], [1, 2]);
          both('==?', 'diff', [0, 1], [0, 10]);
          both('==?', 'xor', [0, 1], [0, 0, 9, 9]);
          both('==?', 'diff', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('==?', 'diff', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!=?', [0, 1], [0, 1], [0, 1], [0, 1]);
          both('!=?', [0, 1], [0, 1], [0, 1], [0, 2]);
          both('!=?', [0, 1], [0, 1], [0, 2], [0, 2]);
          both('!=?', [0, 1], [0, 2], [0, 2], [0, 2]);
          both('!=?', [0, 2], [0, 1], [0, 1], [0, 1]);
          both('!=?', [0, 2], [0, 1], [0, 1], [0, 2]);
          both('!=?', [0, 2], [0, 1], [0, 2], [0, 2]);
          both('!=?', [0, 2], [0, 2], [0, 2], [0, 2]);
          both('!=?', [0, 2], [1, 2], [0, 1], [0, 1]);
          both('!=?', [0, 2], [1, 2], [1, 2], [0, 1]);
          both('!=?', [0, 2], [1, 2], [1, 2], [1, 2]);
          both('!=?', [0, 1], [0, 10]);
          both('!=?', [0, 1], [0, 0, 9, 9]);
          both('!=?', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!=?', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<?', 'imp', [0, 1], [0, 1], [0, 1], [0, 1]);
          lhs('<?', 'imp', [0, 1], [0, 1], [0, 1], [0, 2]);
          lhs('<?', 'imp', [0, 1], [0, 1], [0, 2], [0, 2]);
          lhs('<?', 'lte', [0, 1], [0, 2], [0, 2], [0, 2]);
          lhs('<?', 'imp', [0, 2], [0, 1], [0, 1], [0, 1]);
          lhs('<?', 'imp', [0, 2], [0, 1], [0, 1], [0, 2]);
          lhs('<?', 'imp', [0, 2], [0, 1], [0, 2], [0, 2]);
          lhs('<?', 'lte', [0, 2], [0, 2], [0, 2], [0, 2]);
          lhs('<?', [0, 2], [1, 2], [0, 1], [0, 1]);
          lhs('<?', [0, 2], [1, 2], [1, 2], [0, 1]);
          lhs('<?', 'lte', [0, 2], [1, 2], [1, 2], [1, 2]);
          lhs('<?', 'lte', [0, 1], [0, 10]);
          lhs('<?', 'imp', [0, 1], [0, 0, 9, 9]);
          lhs('<?', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<?', 'imp', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<?', 'imp', [0, 1], [0, 1], [0, 1], [0, 1]);
          rhs('<?', 'lte', [0, 1], [0, 1], [0, 1], [0, 2]);
          rhs('<?', 'lte', [0, 1], [0, 1], [0, 2], [0, 2]);
          rhs('<?', 'lte', [0, 1], [0, 2], [0, 2], [0, 2]);
          rhs('<?', 'imp', [0, 2], [0, 1], [0, 1], [0, 1]);
          rhs('<?', 'lte', [0, 2], [0, 1], [0, 1], [0, 2]);
          rhs('<?', 'lte', [0, 2], [0, 1], [0, 2], [0, 2]);
          rhs('<?', 'lte', [0, 2], [0, 2], [0, 2], [0, 2]);
          rhs('<?', [0, 2], [1, 2], [0, 1], [0, 1]);
          rhs('<?', [0, 2], [1, 2], [1, 2], [0, 1]);
          rhs('<?', 'lte', [0, 2], [1, 2], [1, 2], [1, 2]);
          rhs('<?', 'lte', [0, 1], [0, 10]);
          rhs('<?', 'imp', [0, 1], [0, 0, 9, 9]);
          rhs('<?', 'imp', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<?', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<=?', [0, 1], [0, 1], [0, 1], [0, 1]);
          lhs('<=?', [0, 1], [0, 1], [0, 1], [0, 2]);
          lhs('<=?', [0, 1], [0, 1], [0, 2], [0, 2]);
          lhs('<=?', 'lt', [0, 1], [0, 2], [0, 2], [0, 2]);
          lhs('<=?', [0, 2], [0, 1], [0, 1], [0, 1]);
          lhs('<=?', [0, 2], [0, 1], [0, 1], [0, 2]);
          lhs('<=?', [0, 2], [0, 1], [0, 2], [0, 2]);
          lhs('<=?', 'lt', [0, 2], [0, 2], [0, 2], [0, 2]);
          lhs('<=?', 'lt', [0, 2], [1, 2], [0, 1], [0, 1]);
          lhs('<=?', 'lt', [0, 2], [1, 2], [1, 2], [0, 1]);
          lhs('<=?', [0, 2], [1, 2], [1, 2], [1, 2]);
          lhs('<=?', 'lt', [0, 1], [0, 10]);
          lhs('<=?', [0, 1], [0, 0, 9, 9]);
          lhs('<=?', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<=?', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<=?', [0, 1], [0, 1], [0, 1], [0, 1]);
          rhs('<=?', 'lt', [0, 1], [0, 1], [0, 1], [0, 2]);
          rhs('<=?', 'lt', [0, 1], [0, 1], [0, 2], [0, 2]);
          rhs('<=?', 'lt', [0, 1], [0, 2], [0, 2], [0, 2]);
          rhs('<=?', [0, 2], [0, 1], [0, 1], [0, 1]);
          rhs('<=?', 'lt', [0, 2], [0, 1], [0, 1], [0, 2]);
          rhs('<=?', 'lt', [0, 2], [0, 1], [0, 2], [0, 2]);
          rhs('<=?', 'lt', [0, 2], [0, 2], [0, 2], [0, 2]);
          rhs('<=?', 'reject', [0, 2], [1, 2], [0, 1], [0, 1]);
          rhs('<=?', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
          rhs('<=?', [0, 2], [1, 2], [1, 2], [1, 2]);
          rhs('<=?', 'lt', [0, 1], [0, 10]);
          rhs('<=?', [0, 1], [0, 0, 9, 9]);
          rhs('<=?', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<=?', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!&?', [0, 1], [0, 1], [0, 1], [0, 1]);
          both('!&?', [0, 1], [0, 1], [0, 1], [0, 2]);
          both('!&?', [0, 1], [0, 1], [0, 2], [0, 2]);
          both('!&?', [0, 1], [0, 2], [0, 2], [0, 2]);
          both('!&?', [0, 2], [0, 1], [0, 1], [0, 1]);
          both('!&?', [0, 2], [0, 1], [0, 1], [0, 2]);
          both('!&?', [0, 2], [0, 1], [0, 2], [0, 2]);
          both('!&?', [0, 2], [0, 2], [0, 2], [0, 2]);
          both('!&?', [0, 2], [1, 2], [0, 1], [0, 1]);
          both('!&?', [0, 2], [1, 2], [1, 2], [0, 1]);
          both('!&?', [0, 2], [1, 2], [1, 2], [1, 2]);
          both('!&?', [0, 1], [0, 10]);
          both('!&?', [0, 1], [0, 0, 9, 9]);
          both('!&?', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!&?', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('|?', [0, 1], [0, 1], [0, 1], [0, 1]);
          both('|?', [0, 1], [0, 1], [0, 1], [0, 2]);
          both('|?', [0, 1], [0, 1], [0, 2], [0, 2]);
          both('|?', [0, 1], [0, 2], [0, 2], [0, 2]);
          both('|?', [0, 2], [0, 1], [0, 1], [0, 1]);
          both('|?', [0, 2], [0, 1], [0, 1], [0, 2]);
          both('|?', [0, 2], [0, 1], [0, 2], [0, 2]);
          both('|?', [0, 2], [0, 2], [0, 2], [0, 2]);
          both('|?', 'reject', [0, 2], [1, 2], [0, 1], [0, 1]);
          both('|?', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
          both('|?', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
          both('|?', [0, 1], [0, 10]);
          both('|?', [0, 1], [0, 0, 9, 9]);
          both('|?', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('|?', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!|?', 'some', [0, 1], [0, 1], [0, 1], [0, 1]);
          both('!|?', 'some', [0, 1], [0, 1], [0, 1], [0, 2]);
          both('!|?', 'some', [0, 1], [0, 1], [0, 2], [0, 2]);
          both('!|?', 'some', [0, 1], [0, 2], [0, 2], [0, 2]);
          both('!|?', 'some', [0, 2], [0, 1], [0, 1], [0, 1]);
          both('!|?', 'some', [0, 2], [0, 1], [0, 1], [0, 2]);
          both('!|?', 'some', [0, 2], [0, 1], [0, 2], [0, 2]);
          both('!|?', 'some', [0, 2], [0, 2], [0, 2], [0, 2]);
          both('!|?', [0, 2], [1, 2], [0, 1], [0, 1]);
          both('!|?', [0, 2], [1, 2], [1, 2], [0, 1]);
          both('!|?', [0, 2], [1, 2], [1, 2], [1, 2]);
          both('!|?', 'some', [0, 1], [0, 10]);
          both('!|?', 'some', [0, 1], [0, 0, 9, 9]);
          both('!|?', 'some', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!|?', 'some', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('+', [0, 1], [0, 1], [0, 1], [0, 1]);
          both('+', [0, 1], [0, 1], [0, 1], [0, 2]);
          both('+', [0, 1], [0, 1], [0, 2], [0, 2]);
          both('+', [0, 1], [0, 2], [0, 2], [0, 2]);
          both('+', [0, 2], [0, 1], [0, 1], [0, 1]);
          both('+', [0, 2], [0, 1], [0, 1], [0, 2]);
          both('+', [0, 2], [0, 1], [0, 2], [0, 2]);
          both('+', [0, 2], [0, 2], [0, 2], [0, 2]);
          both('+', 'reject', [0, 2], [1, 2], [0, 1], [0, 1]);
          both('+', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
          both('+', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
          both('+', [0, 20], [0, 1], [0, 1], [0, 1]);
          both('+', [0, 20], [0, 10]);
          both('+', [0, 20], [0, 0, 9, 9]);
          both('+', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('+', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('-', 'minus', [0, 1], [0, 1], [0, 1], [0, 1]);
          lhs('-', 'minus', [0, 1], [0, 1], [0, 1], [0, 2]);
          lhs('-', 'minus', [0, 1], [0, 1], [0, 2], [0, 2]);
          lhs('-', 'minus', [0, 1], [0, 2], [0, 2], [0, 2]);
          lhs('-', 'minus', [0, 2], [0, 1], [0, 1], [0, 1]);
          lhs('-', 'minus', [0, 2], [0, 1], [0, 1], [0, 2]);
          lhs('-', 'minus', [0, 2], [0, 1], [0, 2], [0, 2]);
          lhs('-', 'minus', [0, 2], [0, 2], [0, 2], [0, 2]);
          lhs('-', [0, 2], [1, 2], [0, 1], [0, 1]);
          lhs('-', [0, 2], [1, 2], [1, 2], [0, 1]);
          lhs('-', 'minus', [0, 2], [1, 2], [1, 2], [1, 2]);
          lhs('-', 'minus', [0, 20], [0, 1], [0, 1], [0, 1]);
          lhs('-', 'minus', [0, 20], [0, 10]);
          lhs('-', 'minus', [0, 20], [0, 0, 9, 9]);
          lhs('-', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('-', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('-', 'minus', [0, 1], [0, 1], [0, 1], [0, 1]);
          rhs('-', 'minus', [0, 1], [0, 1], [0, 1], [0, 2]);
          rhs('-', 'minus', [0, 1], [0, 1], [0, 2], [0, 2]);
          rhs('-', 'minus', [0, 1], [0, 2], [0, 2], [0, 2]);
          rhs('-', 'minus', [0, 2], [0, 1], [0, 1], [0, 1]);
          rhs('-', 'minus', [0, 2], [0, 1], [0, 1], [0, 2]);
          rhs('-', 'minus', [0, 2], [0, 1], [0, 2], [0, 2]);
          rhs('-', 'minus', [0, 2], [0, 2], [0, 2], [0, 2]);
          rhs('-', [0, 2], [1, 2], [0, 1], [0, 1]);
          rhs('-', [0, 2], [1, 2], [1, 2], [0, 1]);
          rhs('-', 'minus', [0, 2], [1, 2], [1, 2], [1, 2]);
          rhs('-', 'minus', [0, 20], [0, 1], [0, 1], [0, 1]);
          rhs('-', 'minus', [0, 20], [0, 10]);
          rhs('-', 'minus', [0, 20], [0, 0, 9, 9]);
          rhs('-', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('-', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('*', 'nall', [0, 1], [0, 1], [0, 1], [0, 1]);
          both('*', 'nall', [0, 1], [0, 1], [0, 1], [0, 2]);
          both('*', 'nall', [0, 1], [0, 1], [0, 2], [0, 2]);
          both('*', 'nall', [0, 1], [0, 2], [0, 2], [0, 2]);
          both('*', 'nall', [0, 2], [0, 1], [0, 1], [0, 1]);
          both('*', 'nall', [0, 2], [0, 1], [0, 1], [0, 2]);
          both('*', 'nall', [0, 2], [0, 1], [0, 2], [0, 2]);
          both('*', 'nall', [0, 2], [0, 2], [0, 2], [0, 2]);
          both('*', [0, 2], [1, 2], [0, 1], [0, 1]);
          both('*', [0, 2], [1, 2], [1, 2], [0, 1]);
          both('*', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
          both('*', 'nall', [0, 100], [0, 1], [0, 1], [0, 1]);
          both('*', 'nall', [0, 100], [0, 10]);
          both('*', 'nall', [0, 100], [0, 0, 9, 9]);
          both('*', 'nall', [0, 100], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('*', 'nall', [0, 100], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('/', 'div', [0, 1], [0, 1], [0, 1], [0, 1]);
          lhs('/', 'div', [0, 1], [0, 1], [0, 1], [0, 2]);
          lhs('/', 'div', [0, 1], [0, 1], [0, 2], [0, 2]);
          lhs('/', 'div', [0, 1], [0, 2], [0, 2], [0, 2]);
          lhs('/', 'div', [0, 2], [0, 1], [0, 1], [0, 1]);
          lhs('/', 'div', [0, 2], [0, 1], [0, 1], [0, 2]);
          lhs('/', 'div', [0, 2], [0, 1], [0, 2], [0, 2]);
          lhs('/', 'div', [0, 2], [0, 2], [0, 2], [0, 2]);
          lhs('/', 'reject', [0, 2], [1, 2], [0, 1], [0, 1]);
          lhs('/', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
          lhs('/', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
          lhs('/', 'div', [0, 20], [0, 1], [0, 1], [0, 1]);
          lhs('/', 'div', [0, 20], [0, 10]);
          lhs('/', 'div', [0, 20], [0, 0, 9, 9]);
          lhs('/', 'div', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('/', 'div', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('/', 'div', [0, 1], [0, 1], [0, 1], [0, 1]);
          rhs('/', 'div', [0, 1], [0, 1], [0, 1], [0, 2]);
          rhs('/', 'div', [0, 1], [0, 1], [0, 2], [0, 2]);
          rhs('/', 'div', [0, 1], [0, 2], [0, 2], [0, 2]);
          rhs('/', 'div', [0, 2], [0, 1], [0, 1], [0, 1]);
          rhs('/', 'div', [0, 2], [0, 1], [0, 1], [0, 2]);
          rhs('/', 'div', [0, 2], [0, 1], [0, 2], [0, 2]);
          rhs('/', 'div', [0, 2], [0, 2], [0, 2], [0, 2]);
          rhs('/', 'div', [0, 2], [1, 2], [0, 1], [0, 1]);
          rhs('/', 'div', [0, 2], [1, 2], [1, 2], [0, 1]);
          rhs('/', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
          rhs('/', 'div', [0, 20], [0, 1], [0, 1], [0, 1]);
          rhs('/', 'div', [0, 20], [0, 10]);
          rhs('/', 'div', [0, 20], [0, 0, 9, 9]);
          rhs('/', 'div', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('/', 'div', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
        });
      });
    });

    describe('NONE', function() {

      describe('binary', function() {

        let both = testBinaryBinary.bind(undefined, '!|', '', ''); // A & B, A @ C  and  A & B, C @ A
        let lhs = testBinaryBinary.bind(undefined, '!|', '', 'lhs'); // A & B, A @ C
        let rhs = testBinaryBinary.bind(undefined, '!|', '', 'rhs'); // A & B, C @ A

        both('&', 'reject', [0, 1], [0, 1], [0, 1]);
        //both('&', [0, 1], [0, 1], [0, 2]);
        //both('&', [0, 1], [0, 2], [0, 1]);
        //both('&', [0, 1], [0, 2], [0, 2]);
        //both('&', [0, 2], [0, 1], [0, 1]);
        //both('&', [0, 2], [0, 1], [0, 2]);
        //both('&', [0, 2], [0, 2], [0, 1]);
        //both('&', [0, 2], [0, 2], [0, 2]);
        //both('&', [0, 2], [0, 1], [1, 2]);
        //both('&', [0, 2], [1, 2], [0, 1]);
        //both('&', [0, 2], [1, 2], [1, 2]);
        both('&', 'reject', [0, 10]);
        both('&', 'reject', [0, 0, 9, 9]);
        both('&', 'reject', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('&', 'reject', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!=', [0, 1], [0, 1], [0, 1]);
        //both('!=', [0, 1], [0, 1], [0, 2]);
        //both('!=', [0, 1], [0, 2], [0, 1]);
        //both('!=', [0, 1], [0, 2], [0, 2]);
        //both('!=', [0, 2], [0, 1], [0, 1]);
        //both('!=', [0, 2], [0, 1], [0, 2]);
        //both('!=', [0, 2], [0, 2], [0, 1]);
        //both('!=', [0, 2], [0, 2], [0, 2]);
        //both('!=', [0, 2], [0, 1], [1, 2]);
        //both('!=', [0, 2], [1, 2], [0, 1]);
        //both('!=', [0, 2], [1, 2], [1, 2]);
        both('!=', [0, 10]);
        both('!=', [0, 0, 9, 9]);
        both('!=', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!=', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('->', [0, 1], [0, 1], [0, 1]);
        //lhs('->', [0, 1], [0, 1], [0, 2]);
        //lhs('->', [0, 1], [0, 2], [0, 1]);
        //lhs('->', [0, 1], [0, 2], [0, 2]);
        //lhs('->', [0, 2], [0, 1], [0, 1]);
        //lhs('->', [0, 2], [0, 1], [0, 2]);
        //lhs('->', [0, 2], [0, 2], [0, 1]);
        //lhs('->', [0, 2], [0, 2], [0, 2]);
        //lhs('->', [0, 2], [0, 1], [1, 2]);
        //lhs('->', [0, 2], [1, 2], [0, 1]);
        //lhs('->', [0, 2], [1, 2], [1, 2]);
        lhs('->', [0, 10]);
        lhs('->', [0, 0, 9, 9]);
        lhs('->', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('->', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('->', [0, 1], [0, 1], [0, 1]);
        //rhs('->', [0, 1], [0, 1], [0, 2]);
        //rhs('->', [0, 1], [0, 2], [0, 1]);
        //rhs('->', [0, 1], [0, 2], [0, 2]);
        //rhs('->', [0, 2], [0, 1], [0, 1]);
        //rhs('->', [0, 2], [0, 1], [0, 2]);
        //rhs('->', [0, 2], [0, 2], [0, 1]);
        //rhs('->', [0, 2], [0, 2], [0, 2]);
        //rhs('->', [0, 2], [0, 1], [1, 2]);
        //rhs('->', [0, 2], [1, 2], [0, 1]);
        //rhs('->', [0, 2], [1, 2], [1, 2]);
        rhs('->', [0, 10]);
        rhs('->', [0, 0, 9, 9]);
        rhs('->', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('->', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<', [0, 1], [0, 1], [0, 1]);
        //lhs('<', [0, 1], [0, 1], [0, 2]);
        //lhs('<', [0, 1], [0, 2], [0, 1]);
        //lhs('<', [0, 1], [0, 2], [0, 2]);
        //lhs('<', [0, 2], [0, 1], [0, 1]);
        //lhs('<', [0, 2], [0, 1], [0, 2]);
        //lhs('<', [0, 2], [0, 2], [0, 1]);
        //lhs('<', [0, 2], [0, 2], [0, 2]);
        //lhs('<', [0, 2], [0, 1], [1, 2]);
        //lhs('<', [0, 2], [1, 2], [0, 1]);
        //lhs('<', [0, 2], [1, 2], [1, 2]);
        lhs('<', [0, 10]);
        lhs('<', [0, 0, 9, 9]);
        lhs('<', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<', 'reject', [0, 1], [0, 1], [0, 1]);
        //rhs('<', [0, 1], [0, 1], [0, 2]);
        //rhs('<', [0, 1], [0, 2], [0, 1]);
        //rhs('<', [0, 1], [0, 2], [0, 2]);
        //rhs('<', [0, 2], [0, 1], [0, 1]);
        //rhs('<', [0, 2], [0, 1], [0, 2]);
        //rhs('<', [0, 2], [0, 2], [0, 1]);
        //rhs('<', [0, 2], [0, 2], [0, 2]);
        //rhs('<', [0, 2], [0, 1], [1, 2]);
        //rhs('<', [0, 2], [1, 2], [0, 1]);
        //rhs('<', [0, 2], [1, 2], [1, 2]);
        rhs('<', 'reject', [0, 10]);
        rhs('<', 'reject', [0, 0, 9, 9]);
        rhs('<', 'reject', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<', 'reject', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<=', [0, 1], [0, 1], [0, 1]);
        //lhs('<=', [0, 1], [0, 1], [0, 2]);
        //lhs('<=', [0, 1], [0, 2], [0, 1]);
        //lhs('<=', [0, 1], [0, 2], [0, 2]);
        //lhs('<=', [0, 2], [0, 1], [0, 1]);
        //lhs('<=', [0, 2], [0, 1], [0, 2]);
        //lhs('<=', [0, 2], [0, 2], [0, 1]);
        //lhs('<=', [0, 2], [0, 2], [0, 2]);
        //lhs('<=', [0, 2], [0, 1], [1, 2]);
        //lhs('<=', [0, 2], [1, 2], [0, 1]);
        //lhs('<=', [0, 2], [1, 2], [1, 2]);
        lhs('<=', [0, 10]);
        lhs('<=', [0, 0, 9, 9]);
        lhs('<=', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<=', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<=', [0, 1], [0, 1], [0, 1]);
        //rhs('<=', [0, 1], [0, 1], [0, 2]);
        //rhs('<=', [0, 1], [0, 2], [0, 1]);
        //rhs('<=', [0, 1], [0, 2], [0, 2]);
        //rhs('<=', [0, 2], [0, 1], [0, 1]);
        //rhs('<=', [0, 2], [0, 1], [0, 2]);
        //rhs('<=', [0, 2], [0, 2], [0, 1]);
        //rhs('<=', [0, 2], [0, 2], [0, 2]);
        //rhs('<=', [0, 2], [0, 1], [1, 2]);
        //rhs('<=', [0, 2], [1, 2], [0, 1]);
        //rhs('<=', [0, 2], [1, 2], [1, 2]);
        rhs('<=', [0, 10]);
        rhs('<=', [0, 0, 9, 9]);
        rhs('<=', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<=', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!&', [0, 1], [0, 1], [0, 1]);
        //both('!&', [0, 1], [0, 1], [0, 2]);
        //both('!&', [0, 1], [0, 2], [0, 1]);
        //both('!&', [0, 1], [0, 2], [0, 2]);
        //both('!&', [0, 2], [0, 1], [0, 1]);
        //both('!&', [0, 2], [0, 1], [0, 2]);
        //both('!&', [0, 2], [0, 2], [0, 1]);
        //both('!&', [0, 2], [0, 2], [0, 2]);
        //both('!&', [0, 2], [0, 1], [1, 2]);
        //both('!&', [0, 2], [1, 2], [0, 1]);
        //both('!&', [0, 2], [1, 2], [1, 2]);
        both('!&', [0, 10]);
        both('!&', [0, 0, 9, 9]);
        both('!&', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!&', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('!->', 'reject', [0, 1], [0, 1], [0, 1]);
        //lhs('!->', [0, 1], [0, 1], [0, 2]);
        //lhs('!->', [0, 1], [0, 2], [0, 1]);
        //lhs('!->', [0, 1], [0, 2], [0, 2]);
        //lhs('!->', [0, 2], [0, 1], [0, 1]);
        //lhs('!->', [0, 2], [0, 1], [0, 2]);
        //lhs('!->', [0, 2], [0, 2], [0, 1]);
        //lhs('!->', [0, 2], [0, 2], [0, 2]);
        //lhs('!->', [0, 2], [0, 1], [1, 2]);
        //lhs('!->', [0, 2], [1, 2], [0, 1]);
        //lhs('!->', [0, 2], [1, 2], [1, 2]);
        lhs('!->', 'reject', [0, 10]);
        lhs('!->', 'reject', [0, 0, 9, 9]);
        lhs('!->', 'reject', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('!->', 'reject', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('!->', [0, 1], [0, 1], [0, 1]);
        //rhs('!->', [0, 1], [0, 1], [0, 2]);
        //rhs('!->', [0, 1], [0, 2], [0, 1]);
        //rhs('!->', [0, 1], [0, 2], [0, 2]);
        //rhs('!->', [0, 2], [0, 1], [0, 1]);
        //rhs('!->', [0, 2], [0, 1], [0, 2]);
        //rhs('!->', [0, 2], [0, 2], [0, 1]);
        //rhs('!->', [0, 2], [0, 2], [0, 2]);
        //rhs('!->', [0, 2], [0, 1], [1, 2]);
        //rhs('!->', [0, 2], [1, 2], [0, 1]);
        //rhs('!->', [0, 2], [1, 2], [1, 2]);
        rhs('!->', [0, 10]);
        rhs('!->', [0, 0, 9, 9]);
        rhs('!->', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('!->', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!|', [0, 1], [0, 1], [0, 1]);
        //both('!|', [0, 1], [0, 1], [0, 2]);
        //both('!|', [0, 1], [0, 2], [0, 1]);
        //both('!|', [0, 1], [0, 2], [0, 2]);
        //both('!|', [0, 2], [0, 1], [0, 1]);
        //both('!|', [0, 2], [0, 1], [0, 2]);
        //both('!|', [0, 2], [0, 2], [0, 1]);
        //both('!|', [0, 2], [0, 2], [0, 2]);
        //both('!|', [0, 2], [0, 1], [1, 2]);
        //both('!|', [0, 2], [1, 2], [0, 1]);
        //both('!|', [0, 2], [1, 2], [1, 2]);
        both('!|', [0, 10]);
        both('!|', [0, 0, 9, 9]);
        both('!|', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!|', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('==', [0, 1], [0, 1], [0, 1]);
        //both('==', [0, 1], [0, 1], [0, 2]);
        //both('==', [0, 1], [0, 2], [0, 1]);
        //both('==', [0, 1], [0, 2], [0, 2]);
        //both('==', [0, 2], [0, 1], [0, 1]);
        //both('==', [0, 2], [0, 1], [0, 2]);
        //both('==', [0, 2], [0, 2], [0, 1]);
        //both('==', [0, 2], [0, 2], [0, 2]);
        //both('==', [0, 2], [0, 1], [1, 2]);
        //both('==', [0, 2], [1, 2], [0, 1]);
        //both('==', [0, 2], [1, 2], [1, 2]);
        both('==', [0, 10]);
        both('==', [0, 0, 9, 9]);
        both('==', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('==', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!^', [0, 1], [0, 1], [0, 1]);
        //both('!^', [0, 1], [0, 1], [0, 2]);
        //both('!^', [0, 1], [0, 2], [0, 1]);
        //both('!^', [0, 1], [0, 2], [0, 2]);
        //both('!^', [0, 2], [0, 1], [0, 1]);
        //both('!^', [0, 2], [0, 1], [0, 2]);
        //both('!^', [0, 2], [0, 2], [0, 1]);
        //both('!^', [0, 2], [0, 2], [0, 2]);
        //both('!^', [0, 2], [0, 1], [1, 2]);
        //both('!^', [0, 2], [1, 2], [0, 1]);
        //both('!^', [0, 2], [1, 2], [1, 2]);
        both('!^', [0, 10]);                                      // lt+xnor = xor?
        both('!^', [0, 0, 9, 9]);
        both('!^', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!^', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('^', [0, 1], [0, 1], [0, 1]);
        //both('^', [0, 1], [0, 1], [0, 2]);
        //both('^', [0, 1], [0, 2], [0, 1]);
        //both('^', [0, 1], [0, 2], [0, 2]);
        //both('^', [0, 2], [0, 1], [0, 1]);
        //both('^', [0, 2], [0, 1], [0, 2]);
        //both('^', [0, 2], [0, 2], [0, 1]);
        //both('^', [0, 2], [0, 2], [0, 2]);
        //both('^', [0, 2], [0, 1], [1, 2]);
        //both('^', [0, 2], [1, 2], [0, 1]);
        //both('^', [0, 2], [1, 2], [1, 2]);
        both('^', [0, 10]);
        both('^', [0, 0, 9, 9]);
        both('^', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('^', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
      });

      describe('ternary with shared arg', function() {

        let both = testBinaryTernarySharedArgs.bind(undefined, '!|', '', ''); // A & B, R = A @ C  and  A & B, R = C @ A
        let lhs = testBinaryTernarySharedArgs.bind(undefined, '!|', '', 'lhs'); // A & B, R = A @ C
        let rhs = testBinaryTernarySharedArgs.bind(undefined, '!|', '', 'rhs'); // A & B, R = C @ A

        // A & B, R = A &? C
        both('&?', [0, 1], [0, 1], [0, 1], [0, 1]);
        both('&?', [0, 1], [0, 1], [0, 1], [0, 2]);
        both('&?', [0, 1], [0, 1], [0, 2], [0, 2]);
        both('&?', [0, 1], [0, 2], [0, 2], [0, 2]);
        both('&?', [0, 2], [0, 1], [0, 1], [0, 1]);
        both('&?', [0, 2], [0, 1], [0, 1], [0, 2]);
        both('&?', [0, 2], [0, 1], [0, 2], [0, 2]);
        both('&?', [0, 2], [0, 2], [0, 2], [0, 2]);
        both('&?', 'reject', [0, 2], [1, 2], [0, 1], [0, 1]);
        both('&?', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
        both('&?', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
        both('&?', [0, 1], [0, 10]);
        both('&?', [0, 1], [0, 0, 9, 9]);
        both('&?', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('&?', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('==?', 'xor', [0, 1], [0, 1], [0, 1], [0, 1]);
        both('==?', 'xor', [0, 1], [0, 1], [0, 1], [0, 2]);
        both('==?', 'xor', [0, 1], [0, 1], [0, 2], [0, 2]);
        both('==?', 'xor', [0, 1], [0, 2], [0, 2], [0, 2]);
        both('==?', 'xor', [0, 2], [0, 1], [0, 1], [0, 1]);
        both('==?', 'xor', [0, 2], [0, 1], [0, 1], [0, 2]);
        both('==?', 'xor', [0, 2], [0, 1], [0, 2], [0, 2]);
        both('==?', 'xor', [0, 2], [0, 2], [0, 2], [0, 2]);
        both('==?', 'reject', [0, 2], [1, 2], [0, 1], [0, 1]);
        both('==?', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
        both('==?', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
        both('==?', 'xor', [0, 1], [0, 10]);
        both('==?', 'xor', [0, 1], [0, 0, 9, 9]);
        both('==?', 'xor', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('==?', 'xor', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!=?', [0, 1], [0, 1], [0, 1], [0, 1]);
        both('!=?', 'isdiff', [0, 1], [0, 1], [0, 1], [0, 2]);
        both('!=?', 'isdiff', [0, 1], [0, 1], [0, 2], [0, 2]);
        both('!=?', 'isdiff', [0, 1], [0, 2], [0, 2], [0, 2]);
        both('!=?', 'isdiff', [0, 2], [0, 1], [0, 1], [0, 1]);
        both('!=?', 'isdiff', [0, 2], [0, 1], [0, 1], [0, 2]);
        both('!=?', 'isdiff', [0, 2], [0, 1], [0, 2], [0, 2]);
        both('!=?', 'isdiff', [0, 2], [0, 2], [0, 2], [0, 2]);
        both('!=?', 'reject', [0, 2], [1, 2], [0, 1], [0, 1]);
        both('!=?', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
        both('!=?', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
        both('!=?', 'isdiff', [0, 1], [0, 10]);
        both('!=?', [0, 1], [0, 0, 9, 9]);
        both('!=?', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!=?', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<?', [0, 1], [0, 1], [0, 1], [0, 1]);
        lhs('<?', [0, 1], [0, 1], [0, 1], [0, 2]);
        lhs('<?', [0, 1], [0, 1], [0, 2], [0, 2]);
        lhs('<?', [0, 1], [0, 2], [0, 2], [0, 2]);
        lhs('<?', [0, 2], [0, 1], [0, 1], [0, 1]);
        lhs('<?', [0, 2], [0, 1], [0, 1], [0, 2]);
        lhs('<?', [0, 2], [0, 1], [0, 2], [0, 2]);
        lhs('<?', [0, 2], [0, 2], [0, 2], [0, 2]);
        lhs('<?', 'reject', [0, 2], [1, 2], [0, 1], [0, 1]);
        lhs('<?', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
        lhs('<?', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
        lhs('<?', [0, 1], [0, 10]);
        lhs('<?', [0, 1], [0, 0, 9, 9]);
        lhs('<?', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<?', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<?', [0, 1], [0, 1], [0, 1], [0, 1]);
        rhs('<?', [0, 1], [0, 1], [0, 1], [0, 2]);
        rhs('<?', [0, 1], [0, 1], [0, 2], [0, 2]);
        rhs('<?', [0, 1], [0, 2], [0, 2], [0, 2]);
        rhs('<?', [0, 2], [0, 1], [0, 1], [0, 1]);
        rhs('<?', [0, 2], [0, 1], [0, 1], [0, 2]);
        rhs('<?', [0, 2], [0, 1], [0, 2], [0, 2]);
        rhs('<?', [0, 2], [0, 2], [0, 2], [0, 2]);
        rhs('<?', 'reject', [0, 2], [1, 2], [0, 1], [0, 1]);
        rhs('<?', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
        rhs('<?', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
        rhs('<?', [0, 1], [0, 10]);
        rhs('<?', [0, 1], [0, 0, 9, 9]);
        rhs('<?', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<?', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<=?', [0, 1], [0, 1], [0, 1], [0, 1]);
        lhs('<=?', [0, 1], [0, 1], [0, 1], [0, 2]);
        lhs('<=?', [0, 1], [0, 1], [0, 2], [0, 2]);
        lhs('<=?', [0, 1], [0, 2], [0, 2], [0, 2]);
        lhs('<=?', [0, 2], [0, 1], [0, 1], [0, 1]);
        lhs('<=?', [0, 2], [0, 1], [0, 1], [0, 2]);
        lhs('<=?', [0, 2], [0, 1], [0, 2], [0, 2]);
        lhs('<=?', [0, 2], [0, 2], [0, 2], [0, 2]);
        lhs('<=?', 'reject', [0, 2], [1, 2], [0, 1], [0, 1]);
        lhs('<=?', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
        lhs('<=?', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
        lhs('<=?', [0, 1], [0, 10]);
        lhs('<=?', [0, 1], [0, 0, 9, 9]);
        lhs('<=?', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<=?', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<=?', 'xor', [0, 1], [0, 1], [0, 1], [0, 1]);
        rhs('<=?', 'islte', [0, 1], [0, 1], [0, 1], [0, 2]);
        rhs('<=?', 'islte', [0, 1], [0, 1], [0, 2], [0, 2]);
        rhs('<=?', 'islte', [0, 1], [0, 2], [0, 2], [0, 2]);
        rhs('<=?', 'islte', [0, 2], [0, 1], [0, 1], [0, 1]);
        rhs('<=?', 'islte', [0, 2], [0, 1], [0, 1], [0, 2]);
        rhs('<=?', 'islte', [0, 2], [0, 1], [0, 2], [0, 2]);
        rhs('<=?', 'islte', [0, 2], [0, 2], [0, 2], [0, 2]);
        rhs('<=?', 'reject', [0, 2], [1, 2], [0, 1], [0, 1]);
        rhs('<=?', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
        rhs('<=?', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
        rhs('<=?', 'islte', [0, 1], [0, 10]);
        rhs('<=?', 'islte', [0, 1], [0, 0, 9, 9]);
        rhs('<=?', 'islte', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<=?', 'islte', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!&?', [0, 1], [0, 1], [0, 1], [0, 1]);
        both('!&?', [0, 1], [0, 1], [0, 1], [0, 2]);
        both('!&?', [0, 1], [0, 1], [0, 2], [0, 2]);
        both('!&?', [0, 1], [0, 2], [0, 2], [0, 2]);
        both('!&?', [0, 2], [0, 1], [0, 1], [0, 1]);
        both('!&?', [0, 2], [0, 1], [0, 1], [0, 2]);
        both('!&?', [0, 2], [0, 1], [0, 2], [0, 2]);
        both('!&?', [0, 2], [0, 2], [0, 2], [0, 2]);
        both('!&?', 'reject', [0, 2], [1, 2], [0, 1], [0, 1]);
        both('!&?', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
        both('!&?', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
        both('!&?', [0, 1], [0, 10]);
        both('!&?', [0, 1], [0, 0, 9, 9]);
        both('!&?', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!&?', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('|?', [0, 1], [0, 1], [0, 1], [0, 1]);
        both('|?', [0, 1], [0, 1], [0, 1], [0, 2]);
        both('|?', [0, 1], [0, 1], [0, 2], [0, 2]);
        both('|?', [0, 1], [0, 2], [0, 2], [0, 2]);
        both('|?', [0, 2], [0, 1], [0, 1], [0, 1]);
        both('|?', [0, 2], [0, 1], [0, 1], [0, 2]);
        both('|?', [0, 2], [0, 1], [0, 2], [0, 2]);
        both('|?', [0, 2], [0, 2], [0, 2], [0, 2]);
        both('|?', 'reject', [0, 2], [1, 2], [0, 1], [0, 1]);
        both('|?', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
        both('|?', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
        both('|?', [0, 1], [0, 10]);
        both('|?', [0, 1], [0, 0, 9, 9]);
        both('|?', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('|?', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!|?', 'isnone', [0, 1], [0, 1], [0, 1], [0, 1]);
        both('!|?', 'isnone', [0, 1], [0, 1], [0, 1], [0, 2]);
        both('!|?', 'isnone', [0, 1], [0, 1], [0, 2], [0, 2]);
        both('!|?', 'isnone', [0, 1], [0, 2], [0, 2], [0, 2]);
        both('!|?', 'isnone', [0, 2], [0, 1], [0, 1], [0, 1]);
        both('!|?', 'isnone', [0, 2], [0, 1], [0, 1], [0, 2]);
        both('!|?', 'isnone', [0, 2], [0, 1], [0, 2], [0, 2]);
        both('!|?', 'isnone', [0, 2], [0, 2], [0, 2], [0, 2]);
        both('!|?', 'reject', [0, 2], [1, 2], [0, 1], [0, 1]);
        both('!|?', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
        both('!|?', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
        both('!|?', 'isnone', [0, 1], [0, 10]);
        both('!|?', 'isnone', [0, 1], [0, 0, 9, 9]);
        both('!|?', 'isnone', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!|?', 'isnone', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('+', [0, 1], [0, 1], [0, 1], [0, 1]);
        both('+', [0, 1], [0, 1], [0, 1], [0, 2]);
        both('+', [0, 1], [0, 1], [0, 2], [0, 2]);
        both('+', [0, 1], [0, 2], [0, 2], [0, 2]);
        both('+', [0, 2], [0, 1], [0, 1], [0, 1]);
        both('+', [0, 2], [0, 1], [0, 1], [0, 2]);
        both('+', [0, 2], [0, 1], [0, 2], [0, 2]);
        both('+', [0, 2], [0, 2], [0, 2], [0, 2]);
        both('+', 'reject', [0, 2], [1, 2], [0, 1], [0, 1]);
        both('+', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
        both('+', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
        both('+', [0, 20], [0, 1], [0, 1], [0, 1]);
        both('+', [0, 20], [0, 10]);
        both('+', [0, 20], [0, 0, 9, 9]);
        both('+', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('+', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('-', [0, 1], [0, 1], [0, 1], [0, 1]);
        lhs('-', [0, 1], [0, 1], [0, 1], [0, 2]);
        lhs('-', [0, 1], [0, 1], [0, 2], [0, 2]);
        lhs('-', [0, 1], [0, 2], [0, 2], [0, 2]);
        lhs('-', [0, 2], [0, 1], [0, 1], [0, 1]);
        lhs('-', [0, 2], [0, 1], [0, 1], [0, 2]);
        lhs('-', [0, 2], [0, 1], [0, 2], [0, 2]);
        lhs('-', [0, 2], [0, 2], [0, 2], [0, 2]);
        lhs('-', 'reject', [0, 2], [1, 2], [0, 1], [0, 1]);
        lhs('-', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
        lhs('-', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
        lhs('-', [0, 20], [0, 1], [0, 1], [0, 1]);
        lhs('-', [0, 20], [0, 10]);
        lhs('-', [0, 20], [0, 0, 9, 9]);
        lhs('-', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('-', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('-', [0, 1], [0, 1], [0, 1], [0, 1]);
        rhs('-', [0, 1], [0, 1], [0, 1], [0, 2]);
        rhs('-', [0, 1], [0, 1], [0, 2], [0, 2]);
        rhs('-', [0, 1], [0, 2], [0, 2], [0, 2]);
        rhs('-', [0, 2], [0, 1], [0, 1], [0, 1]);
        rhs('-', [0, 2], [0, 1], [0, 1], [0, 2]);
        rhs('-', [0, 2], [0, 1], [0, 2], [0, 2]);
        rhs('-', [0, 2], [0, 2], [0, 2], [0, 2]);
        rhs('-', 'reject', [0, 2], [1, 2], [0, 1], [0, 1]);
        rhs('-', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
        rhs('-', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
        rhs('-', [0, 20], [0, 1], [0, 1], [0, 1]);
        rhs('-', [0, 20], [0, 10]);
        rhs('-', [0, 20], [0, 0, 9, 9]);
        rhs('-', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('-', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('*', [0, 1], [0, 1], [0, 1], [0, 1]);
        both('*', [0, 1], [0, 1], [0, 1], [0, 2]);
        both('*', [0, 1], [0, 1], [0, 2], [0, 2]);
        both('*', [0, 1], [0, 2], [0, 2], [0, 2]);
        both('*', [0, 2], [0, 1], [0, 1], [0, 1]);
        both('*', [0, 2], [0, 1], [0, 1], [0, 2]);
        both('*', [0, 2], [0, 1], [0, 2], [0, 2]);
        both('*', [0, 2], [0, 2], [0, 2], [0, 2]);
        both('*', 'reject', [0, 2], [1, 2], [0, 1], [0, 1]);
        both('*', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
        both('*', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
        both('*', [0, 100], [0, 1], [0, 1], [0, 1]);
        both('*', [0, 100], [0, 10]);
        both('*', [0, 100], [0, 0, 9, 9]);
        both('*', [0, 100], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('*', [0, 100], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('/', 'div', [0, 1], [0, 1], [0, 1], [0, 1]);
        lhs('/', 'div', [0, 1], [0, 1], [0, 1], [0, 2]);
        lhs('/', 'div', [0, 1], [0, 1], [0, 2], [0, 2]);
        lhs('/', 'div', [0, 1], [0, 2], [0, 2], [0, 2]);
        lhs('/', 'div', [0, 2], [0, 1], [0, 1], [0, 1]);
        lhs('/', 'div', [0, 2], [0, 1], [0, 1], [0, 2]);
        lhs('/', 'div', [0, 2], [0, 1], [0, 2], [0, 2]);
        lhs('/', 'div', [0, 2], [0, 2], [0, 2], [0, 2]);
        lhs('/', 'reject', [0, 2], [1, 2], [0, 1], [0, 1]);
        lhs('/', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
        lhs('/', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
        lhs('/', 'div', [0, 20], [0, 1], [0, 1], [0, 1]);
        lhs('/', 'div', [0, 20], [0, 10]);
        lhs('/', 'div', [0, 20], [0, 0, 9, 9]);
        lhs('/', 'div', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('/', 'div', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('/', 'reject', [0, 1], [0, 1], [0, 1], [0, 1]);
        rhs('/', 'reject', [0, 1], [0, 1], [0, 1], [0, 2]);
        rhs('/', 'reject', [0, 1], [0, 1], [0, 2], [0, 2]);
        rhs('/', 'reject', [0, 1], [0, 2], [0, 2], [0, 2]);
        rhs('/', 'reject', [0, 2], [0, 1], [0, 1], [0, 1]);
        rhs('/', 'reject', [0, 2], [0, 1], [0, 1], [0, 2]);
        rhs('/', 'reject', [0, 2], [0, 1], [0, 2], [0, 2]);
        rhs('/', 'reject', [0, 2], [0, 2], [0, 2], [0, 2]);
        rhs('/', 'reject', [0, 2], [1, 2], [0, 1], [0, 1]);
        rhs('/', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
        rhs('/', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
        rhs('/', 'reject', [0, 20], [0, 1], [0, 1], [0, 1]);
        rhs('/', 'reject', [0, 20], [0, 10]);
        rhs('/', 'reject', [0, 20], [0, 0, 9, 9]);
        rhs('/', 'reject', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('/', 'reject', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
      });

      describe('ternary with shared result', function() {

        let both = testBinaryTernarySharedResult.bind(undefined, '!|', '', ''); // A & B, R = A @ C  and  A & B, R = C @ A
        let rhs = testBinaryTernarySharedResult.bind(undefined, '!|', '', 'lhs'); // A & B, R = A @ C
        let lhs = testBinaryTernarySharedResult.bind(undefined, '!|', '', 'rhs'); // A & B, R = C @ A

        // A & B, R = A &? C
        both('&?', 'nall', [0, 1], [0, 1], [0, 1], [0, 1]);
        both('&?', 'nall', [0, 1], [0, 1], [0, 1], [0, 2]);
        both('&?', 'nall', [0, 1], [0, 1], [0, 2], [0, 2]);
        both('&?', 'nall', [0, 1], [0, 2], [0, 2], [0, 2]);
        both('&?', 'nall', [0, 2], [0, 1], [0, 1], [0, 1]);
        both('&?', 'nall', [0, 2], [0, 1], [0, 1], [0, 2]);
        both('&?', 'nall', [0, 2], [0, 1], [0, 2], [0, 2]);
        both('&?', 'nall', [0, 2], [0, 2], [0, 2], [0, 2]);
        both('&?', [0, 2], [1, 2], [0, 1], [0, 1]);
        both('&?', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
        both('&?', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
        both('&?', 'nall', [0, 1], [0, 10]);
        both('&?', 'nall', [0, 1], [0, 0, 9, 9]);
        both('&?', 'nall', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('&?', 'nall', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('==?', 'xor', [0, 1], [0, 1], [0, 1], [0, 1]);
        both('==?', 'diff', [0, 1], [0, 1], [0, 1], [0, 2]);
        both('==?', 'diff', [0, 1], [0, 1], [0, 2], [0, 2]);
        both('==?', 'diff', [0, 1], [0, 2], [0, 2], [0, 2]);
        both('==?', 'xor', [0, 2], [0, 1], [0, 1], [0, 1]);
        both('==?', 'diff', [0, 2], [0, 1], [0, 1], [0, 2]);
        both('==?', 'diff', [0, 2], [0, 1], [0, 2], [0, 2]);
        both('==?', 'diff', [0, 2], [0, 2], [0, 2], [0, 2]);
        both('==?', 'diff', [0, 2], [1, 2], [0, 1], [0, 1]);
        both('==?', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
        both('==?', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
        both('==?', 'diff', [0, 1], [0, 10]);
        both('==?', 'xor', [0, 1], [0, 0, 9, 9]);
        both('==?', 'diff', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('==?', 'diff', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!=?', [0, 1], [0, 1], [0, 1], [0, 1]);
        both('!=?', [0, 1], [0, 1], [0, 1], [0, 2]);
        both('!=?', [0, 1], [0, 1], [0, 2], [0, 2]);
        both('!=?', [0, 1], [0, 2], [0, 2], [0, 2]);
        both('!=?', [0, 2], [0, 1], [0, 1], [0, 1]);
        both('!=?', [0, 2], [0, 1], [0, 1], [0, 2]);
        both('!=?', [0, 2], [0, 1], [0, 2], [0, 2]);
        both('!=?', [0, 2], [0, 2], [0, 2], [0, 2]);
        both('!=?', [0, 2], [1, 2], [0, 1], [0, 1]);
        both('!=?', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
        both('!=?', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
        both('!=?', [0, 1], [0, 10]);
        both('!=?', [0, 1], [0, 0, 9, 9]);
        both('!=?', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!=?', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<?', 'imp', [0, 1], [0, 1], [0, 1], [0, 1]);
        lhs('<?', 'lte', [0, 1], [0, 1], [0, 1], [0, 2]);
        lhs('<?', 'lte', [0, 1], [0, 1], [0, 2], [0, 2]);
        lhs('<?', 'lte', [0, 1], [0, 2], [0, 2], [0, 2]);
        lhs('<?', 'imp', [0, 2], [0, 1], [0, 1], [0, 1]);
        lhs('<?', 'lte', [0, 2], [0, 1], [0, 1], [0, 2]);
        lhs('<?', 'lte', [0, 2], [0, 1], [0, 2], [0, 2]);
        lhs('<?', 'lte', [0, 2], [0, 2], [0, 2], [0, 2]);
        lhs('<?', [0, 2], [1, 2], [0, 1], [0, 1]);
        lhs('<?', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
        lhs('<?', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
        lhs('<?', 'lte', [0, 1], [0, 10]);
        lhs('<?', 'imp', [0, 1], [0, 0, 9, 9]);
        lhs('<?', 'imp', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<?', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<?', 'imp', [0, 1], [0, 1], [0, 1], [0, 1]);
        rhs('<?', 'imp', [0, 1], [0, 1], [0, 1], [0, 2]);
        rhs('<?', 'imp', [0, 1], [0, 1], [0, 2], [0, 2]);
        rhs('<?', 'lte', [0, 1], [0, 2], [0, 2], [0, 2]);
        rhs('<?', 'imp', [0, 2], [0, 1], [0, 1], [0, 1]);
        rhs('<?', 'imp', [0, 2], [0, 1], [0, 1], [0, 2]);
        rhs('<?', 'imp', [0, 2], [0, 1], [0, 2], [0, 2]);
        rhs('<?', 'lte', [0, 2], [0, 2], [0, 2], [0, 2]);
        rhs('<?', [0, 2], [1, 2], [0, 1], [0, 1]);
        rhs('<?', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
        rhs('<?', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
        rhs('<?', 'lte', [0, 1], [0, 10]);
        rhs('<?', 'imp', [0, 1], [0, 0, 9, 9]);
        rhs('<?', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<?', 'imp', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<=?', [0, 1], [0, 1], [0, 1], [0, 1]);
        lhs('<=?', 'lt', [0, 1], [0, 1], [0, 1], [0, 2]);
        lhs('<=?', 'lt', [0, 1], [0, 1], [0, 2], [0, 2]);
        lhs('<=?', 'lt', [0, 1], [0, 2], [0, 2], [0, 2]);
        lhs('<=?', [0, 2], [0, 1], [0, 1], [0, 1]);
        lhs('<=?', 'lt', [0, 2], [0, 1], [0, 1], [0, 2]);
        lhs('<=?', 'lt', [0, 2], [0, 1], [0, 2], [0, 2]);
        lhs('<=?', 'lt', [0, 2], [0, 2], [0, 2], [0, 2]);
        lhs('<=?', 'reject', [0, 2], [1, 2], [0, 1], [0, 1]);
        lhs('<=?', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
        lhs('<=?', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
        lhs('<=?', 'lt', [0, 1], [0, 10]);
        lhs('<=?', [0, 1], [0, 0, 9, 9]);
        lhs('<=?', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<=?', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<=?', [0, 1], [0, 1], [0, 1], [0, 1]);
        rhs('<=?', [0, 1], [0, 1], [0, 1], [0, 2]);
        rhs('<=?', [0, 1], [0, 1], [0, 2], [0, 2]);
        rhs('<=?', 'lt', [0, 1], [0, 2], [0, 2], [0, 2]);
        rhs('<=?', [0, 2], [0, 1], [0, 1], [0, 1]);
        rhs('<=?', [0, 2], [0, 1], [0, 1], [0, 2]);
        rhs('<=?', [0, 2], [0, 1], [0, 2], [0, 2]);
        rhs('<=?', 'lt', [0, 2], [0, 2], [0, 2], [0, 2]);
        rhs('<=?', 'lt', [0, 2], [1, 2], [0, 1], [0, 1]);
        rhs('<=?', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
        rhs('<=?', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
        rhs('<=?', 'lt', [0, 1], [0, 10]);
        rhs('<=?', [0, 1], [0, 0, 9, 9]);
        rhs('<=?', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<=?', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!&?', [0, 1], [0, 1], [0, 1], [0, 1]);
        both('!&?', [0, 1], [0, 1], [0, 1], [0, 2]);
        both('!&?', [0, 1], [0, 1], [0, 2], [0, 2]);
        both('!&?', [0, 1], [0, 2], [0, 2], [0, 2]);
        both('!&?', [0, 2], [0, 1], [0, 1], [0, 1]);
        both('!&?', [0, 2], [0, 1], [0, 1], [0, 2]);
        both('!&?', [0, 2], [0, 1], [0, 2], [0, 2]);
        both('!&?', [0, 2], [0, 2], [0, 2], [0, 2]);
        both('!&?', [0, 2], [1, 2], [0, 1], [0, 1]);
        both('!&?', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
        both('!&?', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
        both('!&?', [0, 1], [0, 10]);
        both('!&?', [0, 1], [0, 0, 9, 9]);
        both('!&?', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!&?', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('|?', [0, 1], [0, 1], [0, 1], [0, 1]);
        both('|?', [0, 1], [0, 1], [0, 1], [0, 2]);
        both('|?', [0, 1], [0, 1], [0, 2], [0, 2]);
        both('|?', [0, 1], [0, 2], [0, 2], [0, 2]);
        both('|?', [0, 2], [0, 1], [0, 1], [0, 1]);
        both('|?', [0, 2], [0, 1], [0, 1], [0, 2]);
        both('|?', [0, 2], [0, 1], [0, 2], [0, 2]);
        both('|?', [0, 2], [0, 2], [0, 2], [0, 2]);
        both('|?', 'reject', [0, 2], [1, 2], [0, 1], [0, 1]);
        both('|?', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
        both('|?', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
        both('|?', [0, 1], [0, 10]);
        both('|?', [0, 1], [0, 0, 9, 9]);
        both('|?', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('|?', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!|?', 'some', [0, 1], [0, 1], [0, 1], [0, 1]);
        both('!|?', 'some', [0, 1], [0, 1], [0, 1], [0, 2]);
        both('!|?', 'some', [0, 1], [0, 1], [0, 2], [0, 2]);
        both('!|?', 'some', [0, 1], [0, 2], [0, 2], [0, 2]);
        both('!|?', 'some', [0, 2], [0, 1], [0, 1], [0, 1]);
        both('!|?', 'some', [0, 2], [0, 1], [0, 1], [0, 2]);
        both('!|?', 'some', [0, 2], [0, 1], [0, 2], [0, 2]);
        both('!|?', 'some', [0, 2], [0, 2], [0, 2], [0, 2]);
        both('!|?', [0, 2], [1, 2], [0, 1], [0, 1]);
        both('!|?', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
        both('!|?', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
        both('!|?', 'some', [0, 1], [0, 10]);
        both('!|?', 'some', [0, 1], [0, 0, 9, 9]);
        both('!|?', 'some', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!|?', 'some', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('+', [0, 1], [0, 1], [0, 1], [0, 1]);
        both('+', [0, 1], [0, 1], [0, 1], [0, 2]);
        both('+', [0, 1], [0, 1], [0, 2], [0, 2]);
        both('+', [0, 1], [0, 2], [0, 2], [0, 2]);
        both('+', [0, 2], [0, 1], [0, 1], [0, 1]);
        both('+', [0, 2], [0, 1], [0, 1], [0, 2]);
        both('+', [0, 2], [0, 1], [0, 2], [0, 2]);
        both('+', [0, 2], [0, 2], [0, 2], [0, 2]);
        both('+', 'reject', [0, 2], [1, 2], [0, 1], [0, 1]);
        both('+', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
        both('+', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
        both('+', [0, 20], [0, 1], [0, 1], [0, 1]);
        both('+', [0, 20], [0, 10]);
        both('+', [0, 20], [0, 0, 9, 9]);
        both('+', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('+', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('-', 'minus', [0, 1], [0, 1], [0, 1], [0, 1]);
        rhs('-', 'minus', [0, 1], [0, 1], [0, 1], [0, 2]);
        rhs('-', 'minus', [0, 1], [0, 1], [0, 2], [0, 2]);
        rhs('-', 'minus', [0, 1], [0, 2], [0, 2], [0, 2]);
        rhs('-', 'minus', [0, 2], [0, 1], [0, 1], [0, 1]);
        rhs('-', 'minus', [0, 2], [0, 1], [0, 1], [0, 2]);
        rhs('-', 'minus', [0, 2], [0, 1], [0, 2], [0, 2]);
        rhs('-', 'minus', [0, 2], [0, 2], [0, 2], [0, 2]);
        rhs('-', [0, 2], [1, 2], [0, 1], [0, 1]);
        rhs('-', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
        rhs('-', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
        rhs('-', 'minus', [0, 20], [0, 1], [0, 1], [0, 1]);
        rhs('-', 'minus', [0, 20], [0, 10]);
        rhs('-', 'minus', [0, 20], [0, 0, 9, 9]);
        rhs('-', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('-', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('-', 'minus', [0, 1], [0, 1], [0, 1], [0, 1]);
        lhs('-', 'minus', [0, 1], [0, 1], [0, 1], [0, 2]);
        lhs('-', 'minus', [0, 1], [0, 1], [0, 2], [0, 2]);
        lhs('-', 'minus', [0, 1], [0, 2], [0, 2], [0, 2]);
        lhs('-', 'minus', [0, 2], [0, 1], [0, 1], [0, 1]);
        lhs('-', 'minus', [0, 2], [0, 1], [0, 1], [0, 2]);
        lhs('-', 'minus', [0, 2], [0, 1], [0, 2], [0, 2]);
        lhs('-', 'minus', [0, 2], [0, 2], [0, 2], [0, 2]);
        lhs('-', [0, 2], [1, 2], [0, 1], [0, 1]);
        lhs('-', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
        lhs('-', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
        lhs('-', 'minus', [0, 20], [0, 1], [0, 1], [0, 1]);
        lhs('-', 'minus', [0, 20], [0, 10]);
        lhs('-', 'minus', [0, 20], [0, 0, 9, 9]);
        lhs('-', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('-', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('*', 'nall', [0, 1], [0, 1], [0, 1], [0, 1]);
        both('*', 'nall', [0, 1], [0, 1], [0, 1], [0, 2]);
        both('*', 'nall', [0, 1], [0, 1], [0, 2], [0, 2]);
        both('*', 'nall', [0, 1], [0, 2], [0, 2], [0, 2]);
        both('*', 'nall', [0, 2], [0, 1], [0, 1], [0, 1]);
        both('*', 'nall', [0, 2], [0, 1], [0, 1], [0, 2]);
        both('*', 'nall', [0, 2], [0, 1], [0, 2], [0, 2]);
        both('*', 'nall', [0, 2], [0, 2], [0, 2], [0, 2]);
        both('*', [0, 2], [1, 2], [0, 1], [0, 1]);
        both('*', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
        both('*', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
        both('*', 'nall', [0, 100], [0, 1], [0, 1], [0, 1]);
        both('*', 'nall', [0, 100], [0, 10]);
        both('*', 'nall', [0, 100], [0, 0, 9, 9]);
        both('*', 'nall', [0, 100], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('*', 'nall', [0, 100], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('/', 'div', [0, 1], [0, 1], [0, 1], [0, 1]);
        rhs('/', 'div', [0, 1], [0, 1], [0, 1], [0, 2]);
        rhs('/', 'div', [0, 1], [0, 1], [0, 2], [0, 2]);
        rhs('/', 'div', [0, 1], [0, 2], [0, 2], [0, 2]);
        rhs('/', 'div', [0, 2], [0, 1], [0, 1], [0, 1]);
        rhs('/', 'div', [0, 2], [0, 1], [0, 1], [0, 2]);
        rhs('/', 'div', [0, 2], [0, 1], [0, 2], [0, 2]);
        rhs('/', 'div', [0, 2], [0, 2], [0, 2], [0, 2]);
        rhs('/', 'reject', [0, 2], [1, 2], [0, 1], [0, 1]);
        rhs('/', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
        rhs('/', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
        rhs('/', 'div', [0, 20], [0, 1], [0, 1], [0, 1]);
        rhs('/', 'div', [0, 20], [0, 10]);
        rhs('/', 'div', [0, 20], [0, 0, 9, 9]);
        rhs('/', 'div', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('/', 'div', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('/', 'div', [0, 1], [0, 1], [0, 1], [0, 1]);
        lhs('/', 'div', [0, 1], [0, 1], [0, 1], [0, 2]);
        lhs('/', 'div', [0, 1], [0, 1], [0, 2], [0, 2]);
        lhs('/', 'div', [0, 1], [0, 2], [0, 2], [0, 2]);
        lhs('/', 'div', [0, 2], [0, 1], [0, 1], [0, 1]);
        lhs('/', 'div', [0, 2], [0, 1], [0, 1], [0, 2]);
        lhs('/', 'div', [0, 2], [0, 1], [0, 2], [0, 2]);
        lhs('/', 'div', [0, 2], [0, 2], [0, 2], [0, 2]);
        lhs('/', 'div', [0, 2], [1, 2], [0, 1], [0, 1]);
        lhs('/', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
        lhs('/', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
        lhs('/', 'div', [0, 20], [0, 1], [0, 1], [0, 1]);
        lhs('/', 'div', [0, 20], [0, 10]);
        lhs('/', 'div', [0, 20], [0, 0, 9, 9]);
        lhs('/', 'div', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('/', 'div', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
      });
    });

    describe('SAME', function() {

      describe('binary', function() {

        let both = testBinaryBinary.bind(undefined, '==', '', ''); // A & B, A @ C  and  A & B, C @ A
        let lhs = testBinaryBinary.bind(undefined, '==', '', 'lhs'); // A & B, A @ C
        let rhs = testBinaryBinary.bind(undefined, '==', '', 'rhs'); // A & B, C @ A

        both('&', [0, 1], [0, 1], [0, 1]);
        //both('&', [0, 1], [0, 1], [0, 2]);
        //both('&', [0, 1], [0, 2], [0, 1]);
        //both('&', [0, 1], [0, 2], [0, 2]);
        //both('&', [0, 2], [0, 1], [0, 1]);
        //both('&', [0, 2], [0, 1], [0, 2]);
        //both('&', [0, 2], [0, 2], [0, 1]);
        //both('&', [0, 2], [0, 2], [0, 2]);
        //both('&', [0, 2], [0, 1], [1, 2]);
        //both('&', [0, 2], [1, 2], [0, 1]);
        //both('&', [0, 2], [1, 2], [1, 2]);
        both('&', [0, 10]);
        both('&', [0, 0, 9, 9]);
        both('&', 'reject', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('&', 'reject', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!=', 'xor', [0, 1], [0, 1], [0, 1]);
        //both('!=', [0, 1], [0, 1], [0, 2]);
        //both('!=', [0, 1], [0, 2], [0, 1]);
        //both('!=', [0, 1], [0, 2], [0, 2]);
        //both('!=', [0, 2], [0, 1], [0, 1]);
        //both('!=', [0, 2], [0, 1], [0, 2]);
        //both('!=', [0, 2], [0, 2], [0, 1]);
        //both('!=', [0, 2], [0, 2], [0, 2]);
        //both('!=', [0, 2], [0, 1], [1, 2]);
        //both('!=', [0, 2], [1, 2], [0, 1]);
        //both('!=', [0, 2], [1, 2], [1, 2]);
        both('!=', 'diff', [0, 10]);
        both('!=', 'xor', [0, 0, 9, 9]);
        both('!=', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!=', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('->', 'imp', [0, 1], [0, 1], [0, 1]);
        //lhs('->', [0, 1], [0, 1], [0, 2]);
        //lhs('->', [0, 1], [0, 2], [0, 1]);
        //lhs('->', [0, 1], [0, 2], [0, 2]);
        //lhs('->', [0, 2], [0, 1], [0, 1]);
        //lhs('->', [0, 2], [0, 1], [0, 2]);
        //lhs('->', [0, 2], [0, 2], [0, 1]);
        //lhs('->', [0, 2], [0, 2], [0, 2]);
        //lhs('->', [0, 2], [0, 1], [1, 2]);
        //lhs('->', [0, 2], [1, 2], [0, 1]);
        //lhs('->', [0, 2], [1, 2], [1, 2]);
        lhs('->', 'imp', [0, 10]);
        lhs('->', 'imp', [0, 0, 9, 9]);
        lhs('->', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('->', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('->', 'imp', [0, 1], [0, 1], [0, 1]);
        //rhs('->', [0, 1], [0, 1], [0, 2]);
        //rhs('->', [0, 1], [0, 2], [0, 1]);
        //rhs('->', [0, 1], [0, 2], [0, 2]);
        //rhs('->', [0, 2], [0, 1], [0, 1]);
        //rhs('->', [0, 2], [0, 1], [0, 2]);
        //rhs('->', [0, 2], [0, 2], [0, 1]);
        //rhs('->', [0, 2], [0, 2], [0, 2]);
        //rhs('->', [0, 2], [0, 1], [1, 2]);
        //rhs('->', [0, 2], [1, 2], [0, 1]);
        //rhs('->', [0, 2], [1, 2], [1, 2]);
        rhs('->', 'imp', [0, 10]);
        rhs('->', 'imp', [0, 0, 9, 9]);
        rhs('->', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('->', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<', [0, 1], [0, 1], [0, 1]);
        //lhs('<', [0, 1], [0, 1], [0, 2]);
        //lhs('<', [0, 1], [0, 2], [0, 1]);
        //lhs('<', [0, 1], [0, 2], [0, 2]);
        //lhs('<', [0, 2], [0, 1], [0, 1]);
        //lhs('<', [0, 2], [0, 1], [0, 2]);
        //lhs('<', [0, 2], [0, 2], [0, 1]);
        //lhs('<', [0, 2], [0, 2], [0, 2]);
        //lhs('<', [0, 2], [0, 1], [1, 2]);
        //lhs('<', [0, 2], [1, 2], [0, 1]);
        //lhs('<', [0, 2], [1, 2], [1, 2]);
        lhs('<', 'lt', [0, 10]);
        lhs('<', [0, 0, 9, 9]);
        lhs('<', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<', [0, 1], [0, 1], [0, 1]);
        //rhs('<', [0, 1], [0, 1], [0, 2]);
        //rhs('<', [0, 1], [0, 2], [0, 1]);
        //rhs('<', [0, 1], [0, 2], [0, 2]);
        //rhs('<', [0, 2], [0, 1], [0, 1]);
        //rhs('<', [0, 2], [0, 1], [0, 2]);
        //rhs('<', [0, 2], [0, 2], [0, 1]);
        //rhs('<', [0, 2], [0, 2], [0, 2]);
        //rhs('<', [0, 2], [0, 1], [1, 2]);
        //rhs('<', [0, 2], [1, 2], [0, 1]);
        //rhs('<', [0, 2], [1, 2], [1, 2]);
        rhs('<', 'lt', [0, 10]);
        rhs('<', [0, 0, 9, 9]);
        rhs('<', 'reject', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<', 'reject', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<=', 'imp', [0, 1], [0, 1], [0, 1]);
        //lhs('<=', [0, 1], [0, 1], [0, 2]);
        //lhs('<=', [0, 1], [0, 2], [0, 1]);
        //lhs('<=', [0, 1], [0, 2], [0, 2]);
        //lhs('<=', [0, 2], [0, 1], [0, 1]);
        //lhs('<=', [0, 2], [0, 1], [0, 2]);
        //lhs('<=', [0, 2], [0, 2], [0, 1]);
        //lhs('<=', [0, 2], [0, 2], [0, 2]);
        //lhs('<=', [0, 2], [0, 1], [1, 2]);
        //lhs('<=', [0, 2], [1, 2], [0, 1]);
        //lhs('<=', [0, 2], [1, 2], [1, 2]);
        lhs('<=', 'lte', [0, 10]);
        lhs('<=', 'imp', [0, 0, 9, 9]);
        lhs('<=', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<=', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<=', 'imp', [0, 1], [0, 1], [0, 1]);
        //rhs('<=', [0, 1], [0, 1], [0, 2]);
        //rhs('<=', [0, 1], [0, 2], [0, 1]);
        //rhs('<=', [0, 1], [0, 2], [0, 2]);
        //rhs('<=', [0, 2], [0, 1], [0, 1]);
        //rhs('<=', [0, 2], [0, 1], [0, 2]);
        //rhs('<=', [0, 2], [0, 2], [0, 1]);
        //rhs('<=', [0, 2], [0, 2], [0, 2]);
        //rhs('<=', [0, 2], [0, 1], [1, 2]);
        //rhs('<=', [0, 2], [1, 2], [0, 1]);
        //rhs('<=', [0, 2], [1, 2], [1, 2]);
        rhs('<=', 'lte', [0, 10]);
        rhs('<=', 'imp', [0, 0, 9, 9]);
        rhs('<=', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<=', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!&', 'nall', [0, 1], [0, 1], [0, 1]);
        //both('!&', [0, 1], [0, 1], [0, 2]);
        //both('!&', [0, 1], [0, 2], [0, 1]);
        //both('!&', [0, 1], [0, 2], [0, 2]);
        //both('!&', [0, 2], [0, 1], [0, 1]);
        //both('!&', [0, 2], [0, 1], [0, 2]);
        //both('!&', [0, 2], [0, 2], [0, 1]);
        //both('!&', [0, 2], [0, 2], [0, 2]);
        //both('!&', [0, 2], [0, 1], [1, 2]);
        //both('!&', [0, 2], [1, 2], [0, 1]);
        //both('!&', [0, 2], [1, 2], [1, 2]);
        both('!&', 'nall', [0, 10]);
        both('!&', 'nall', [0, 0, 9, 9]);
        both('!&', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!&', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('!->', [0, 1], [0, 1], [0, 1]);
        //lhs('!->', [0, 1], [0, 1], [0, 2]);
        //lhs('!->', [0, 1], [0, 2], [0, 1]);
        //lhs('!->', [0, 1], [0, 2], [0, 2]);
        //lhs('!->', [0, 2], [0, 1], [0, 1]);
        //lhs('!->', [0, 2], [0, 1], [0, 2]);
        //lhs('!->', [0, 2], [0, 2], [0, 1]);
        //lhs('!->', [0, 2], [0, 2], [0, 2]);
        //lhs('!->', [0, 2], [0, 1], [1, 2]);
        //lhs('!->', [0, 2], [1, 2], [0, 1]);
        //lhs('!->', [0, 2], [1, 2], [1, 2]);
        lhs('!->', [0, 10]);
        lhs('!->', [0, 0, 9, 9]);
        lhs('!->', 'reject', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('!->', 'reject', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('!->', [0, 1], [0, 1], [0, 1]);
        //rhs('!->', [0, 1], [0, 1], [0, 2]);
        //rhs('!->', [0, 1], [0, 2], [0, 1]);
        //rhs('!->', [0, 1], [0, 2], [0, 2]);
        //rhs('!->', [0, 2], [0, 1], [0, 1]);
        //rhs('!->', [0, 2], [0, 1], [0, 2]);
        //rhs('!->', [0, 2], [0, 2], [0, 1]);
        //rhs('!->', [0, 2], [0, 2], [0, 2]);
        //rhs('!->', [0, 2], [0, 1], [1, 2]);
        //rhs('!->', [0, 2], [1, 2], [0, 1]);
        //rhs('!->', [0, 2], [1, 2], [1, 2]);
        rhs('!->', [0, 10]);
        rhs('!->', [0, 0, 9, 9]);
        rhs('!->', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('!->', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!|', [0, 1], [0, 1], [0, 1]);
        //both('!|', [0, 1], [0, 1], [0, 2]);
        //both('!|', [0, 1], [0, 2], [0, 1]);
        //both('!|', [0, 1], [0, 2], [0, 2]);
        //both('!|', [0, 2], [0, 1], [0, 1]);
        //both('!|', [0, 2], [0, 1], [0, 2]);
        //both('!|', [0, 2], [0, 2], [0, 1]);
        //both('!|', [0, 2], [0, 2], [0, 2]);
        //both('!|', [0, 2], [0, 1], [1, 2]);
        //both('!|', [0, 2], [1, 2], [0, 1]);
        //both('!|', [0, 2], [1, 2], [1, 2]);
        both('!|', [0, 10]);
        both('!|', [0, 0, 9, 9]);
        both('!|', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!|', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('==', [0, 1], [0, 1], [0, 1]);
        //both('==', [0, 1], [0, 1], [0, 2]);
        //both('==', [0, 1], [0, 2], [0, 1]);
        //both('==', [0, 1], [0, 2], [0, 2]);
        //both('==', [0, 2], [0, 1], [0, 1]);
        //both('==', [0, 2], [0, 1], [0, 2]);
        //both('==', [0, 2], [0, 2], [0, 1]);
        //both('==', [0, 2], [0, 2], [0, 2]);
        //both('==', [0, 2], [0, 1], [1, 2]);
        //both('==', [0, 2], [1, 2], [0, 1]);
        //both('==', [0, 2], [1, 2], [1, 2]);
        both('==', [0, 10]);
        both('==', [0, 0, 9, 9]);
        both('==', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('==', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!^', [0, 1], [0, 1], [0, 1]);
        //both('!^', [0, 1], [0, 1], [0, 2]);
        //both('!^', [0, 1], [0, 2], [0, 1]);
        //both('!^', [0, 1], [0, 2], [0, 2]);
        //both('!^', [0, 2], [0, 1], [0, 1]);
        //both('!^', [0, 2], [0, 1], [0, 2]);
        //both('!^', [0, 2], [0, 2], [0, 1]);
        //both('!^', [0, 2], [0, 2], [0, 2]);
        //both('!^', [0, 2], [0, 1], [1, 2]);
        //both('!^', [0, 2], [1, 2], [0, 1]);
        //both('!^', [0, 2], [1, 2], [1, 2]);
        both('!^', [0, 10]);                                      // lt+xnor = xor?
        both('!^', [0, 0, 9, 9]);
        both('!^', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);    // xor??
        both('!^', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('^', 'xor', [0, 1], [0, 1], [0, 1]);
        //both('^', [0, 1], [0, 1], [0, 2]);
        //both('^', [0, 1], [0, 2], [0, 1]);
        //both('^', [0, 1], [0, 2], [0, 2]);
        //both('^', [0, 2], [0, 1], [0, 1]);
        //both('^', [0, 2], [0, 1], [0, 2]);
        //both('^', [0, 2], [0, 2], [0, 1]);
        //both('^', [0, 2], [0, 2], [0, 2]);
        //both('^', [0, 2], [0, 1], [1, 2]);
        //both('^', [0, 2], [1, 2], [0, 1]);
        //both('^', [0, 2], [1, 2], [1, 2]);
        both('^', 'xor', [0, 10]);
        both('^', 'xor', [0, 0, 9, 9]);
        both('^', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('^', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
      });

      describe('ternary with shared arg', function() {

        let both = testBinaryTernarySharedArgs.bind(undefined, '==', '', ''); // A & B, R = A @ C  and  A & B, R = C @ A
        let lhs = testBinaryTernarySharedArgs.bind(undefined, '==', '', 'lhs'); // A & B, R = A @ C
        let rhs = testBinaryTernarySharedArgs.bind(undefined, '==', '', 'rhs'); // A & B, R = C @ A

        // A & B, R = A &? C
        both('&?', 'isall', [0, 1], [0, 1], [0, 1], [0, 1]);
        both('&?', 'isall', [0, 1], [0, 1], [0, 1], [0, 2]);
        both('&?', 'isall', [0, 1], [0, 1], [0, 2], [0, 2]);
        both('&?', 'isall', [0, 1], [0, 2], [0, 2], [0, 2]);
        both('&?', 'isall', [0, 2], [0, 1], [0, 1], [0, 1]);
        both('&?', 'isall', [0, 2], [0, 1], [0, 1], [0, 2]);
        both('&?', 'isall', [0, 2], [0, 1], [0, 2], [0, 2]);
        both('&?', 'isall', [0, 2], [0, 2], [0, 2], [0, 2]);
        both('&?', [0, 2], [1, 2], [0, 1], [0, 1]);
        both('&?', [0, 2], [1, 2], [1, 2], [0, 1]);
        both('&?', [0, 2], [1, 2], [1, 2], [1, 2]);
        both('&?', 'isall', [0, 1], [0, 10]);
        both('&?', 'isall', [0, 1], [0, 0, 9, 9]);
        both('&?', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('&?', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('==?', 'issame', [0, 1], [0, 1], [0, 1], [0, 1]);
        both('==?', 'issame', [0, 1], [0, 1], [0, 1], [0, 2]);
        both('==?', 'issame', [0, 1], [0, 1], [0, 2], [0, 2]);
        both('==?', 'issame', [0, 1], [0, 2], [0, 2], [0, 2]);
        both('==?', 'issame', [0, 2], [0, 1], [0, 1], [0, 1]);
        both('==?', 'issame', [0, 2], [0, 1], [0, 1], [0, 2]);
        both('==?', 'issame', [0, 2], [0, 1], [0, 2], [0, 2]);
        both('==?', 'issame', [0, 2], [0, 2], [0, 2], [0, 2]);
        both('==?', 'issame', [0, 2], [1, 2], [0, 1], [0, 1]);
        both('==?', 'issame', [0, 2], [1, 2], [1, 2], [0, 1]);
        both('==?', 'issame', [0, 2], [1, 2], [1, 2], [1, 2]);
        both('==?', 'issame', [0, 1], [0, 10]);
        both('==?', 'issame', [0, 1], [0, 0, 9, 9]);
        both('==?', 'xor', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('==?', 'xor', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!=?', 'isdiff', [0, 1], [0, 1], [0, 1], [0, 1]);
        both('!=?', 'isdiff', [0, 1], [0, 1], [0, 1], [0, 2]);
        both('!=?', 'isdiff', [0, 1], [0, 1], [0, 2], [0, 2]);
        both('!=?', 'isdiff', [0, 1], [0, 2], [0, 2], [0, 2]);
        both('!=?', 'isdiff', [0, 2], [0, 1], [0, 1], [0, 1]);
        both('!=?', 'isdiff', [0, 2], [0, 1], [0, 1], [0, 2]);
        both('!=?', 'isdiff', [0, 2], [0, 1], [0, 2], [0, 2]);
        both('!=?', 'isdiff', [0, 2], [0, 2], [0, 2], [0, 2]);
        both('!=?', 'isdiff', [0, 2], [1, 2], [0, 1], [0, 1]);
        both('!=?', 'isdiff', [0, 2], [1, 2], [1, 2], [0, 1]);
        both('!=?', 'isdiff', [0, 2], [1, 2], [1, 2], [1, 2]);
        both('!=?', 'isdiff', [0, 1], [0, 10]);
        both('!=?', 'isdiff', [0, 1], [0, 0, 9, 9]);
        both('!=?', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!=?', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<?', 'islt', [0, 1], [0, 1], [0, 1], [0, 1]);
        lhs('<?', 'islt', [0, 1], [0, 1], [0, 1], [0, 2]);
        lhs('<?', 'islt', [0, 1], [0, 1], [0, 2], [0, 2]);
        lhs('<?', 'islt', [0, 1], [0, 2], [0, 2], [0, 2]);
        lhs('<?', 'islt', [0, 2], [0, 1], [0, 1], [0, 1]);
        lhs('<?', 'islt', [0, 2], [0, 1], [0, 1], [0, 2]);
        lhs('<?', 'islt', [0, 2], [0, 1], [0, 2], [0, 2]);
        lhs('<?', 'islt', [0, 2], [0, 2], [0, 2], [0, 2]);
        lhs('<?', [0, 2], [1, 2], [0, 1], [0, 1]);
        lhs('<?', [0, 2], [1, 2], [1, 2], [0, 1]);
        lhs('<?', 'islt', [0, 2], [1, 2], [1, 2], [1, 2]);
        lhs('<?', 'islt', [0, 1], [0, 10]);
        lhs('<?', 'islt', [0, 1], [0, 0, 9, 9]);
        lhs('<?', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<?', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<?', 'islt', [0, 1], [0, 1], [0, 1], [0, 1]);
        rhs('<?', 'islt', [0, 1], [0, 1], [0, 1], [0, 2]);
        rhs('<?', 'islt', [0, 1], [0, 1], [0, 2], [0, 2]);
        rhs('<?', 'islt', [0, 1], [0, 2], [0, 2], [0, 2]);
        rhs('<?', 'islt', [0, 2], [0, 1], [0, 1], [0, 1]);
        rhs('<?', 'islt', [0, 2], [0, 1], [0, 1], [0, 2]);
        rhs('<?', 'islt', [0, 2], [0, 1], [0, 2], [0, 2]);
        rhs('<?', 'islt', [0, 2], [0, 2], [0, 2], [0, 2]);
        rhs('<?', 'islt', [0, 2], [1, 2], [0, 1], [0, 1]);
        rhs('<?', 'islt', [0, 2], [1, 2], [1, 2], [0, 1]);
        rhs('<?', 'islt', [0, 2], [1, 2], [1, 2], [1, 2]);
        rhs('<?', 'islt', [0, 1], [0, 10]);
        rhs('<?', 'islt', [0, 1], [0, 0, 9, 9]);
        rhs('<?', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<?', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<=?', 'islte', [0, 1], [0, 1], [0, 1], [0, 1]);
        lhs('<=?', 'islte', [0, 1], [0, 1], [0, 1], [0, 2]);
        lhs('<=?', 'islte', [0, 1], [0, 1], [0, 2], [0, 2]);
        lhs('<=?', 'islte', [0, 1], [0, 2], [0, 2], [0, 2]);
        lhs('<=?', 'islte', [0, 2], [0, 1], [0, 1], [0, 1]);
        lhs('<=?', 'islte', [0, 2], [0, 1], [0, 1], [0, 2]);
        lhs('<=?', 'islte', [0, 2], [0, 1], [0, 2], [0, 2]);
        lhs('<=?', 'islte', [0, 2], [0, 2], [0, 2], [0, 2]);
        lhs('<=?', 'islte', [0, 2], [1, 2], [0, 1], [0, 1]);
        lhs('<=?', 'islte', [0, 2], [1, 2], [1, 2], [0, 1]);
        lhs('<=?', 'islte', [0, 2], [1, 2], [1, 2], [1, 2]);
        lhs('<=?', 'islte', [0, 1], [0, 10]);
        lhs('<=?', 'islte', [0, 1], [0, 0, 9, 9]);
        lhs('<=?', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<=?', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<=?', 'islte', [0, 1], [0, 1], [0, 1], [0, 1]);
        rhs('<=?', 'islte', [0, 1], [0, 1], [0, 1], [0, 2]);
        rhs('<=?', 'islte', [0, 1], [0, 1], [0, 2], [0, 2]);
        rhs('<=?', 'islte', [0, 1], [0, 2], [0, 2], [0, 2]);
        rhs('<=?', 'islte', [0, 2], [0, 1], [0, 1], [0, 1]);
        rhs('<=?', 'islte', [0, 2], [0, 1], [0, 1], [0, 2]);
        rhs('<=?', 'islte', [0, 2], [0, 1], [0, 2], [0, 2]);
        rhs('<=?', 'islte', [0, 2], [0, 2], [0, 2], [0, 2]);
        rhs('<=?', [0, 2], [1, 2], [0, 1], [0, 1]);
        rhs('<=?', [0, 2], [1, 2], [1, 2], [0, 1]);
        rhs('<=?', 'islte', [0, 2], [1, 2], [1, 2], [1, 2]);
        rhs('<=?', 'islte', [0, 1], [0, 10]);
        rhs('<=?', 'islte', [0, 1], [0, 0, 9, 9]);
        rhs('<=?', 'islte', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<=?', 'islte', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!&?', 'isnall', [0, 1], [0, 1], [0, 1], [0, 1]);
        both('!&?', 'isnall', [0, 1], [0, 1], [0, 1], [0, 2]);
        both('!&?', 'isnall', [0, 1], [0, 1], [0, 2], [0, 2]);
        both('!&?', 'isnall', [0, 1], [0, 2], [0, 2], [0, 2]);
        both('!&?', 'isnall', [0, 2], [0, 1], [0, 1], [0, 1]);
        both('!&?', 'isnall', [0, 2], [0, 1], [0, 1], [0, 2]);
        both('!&?', 'isnall', [0, 2], [0, 1], [0, 2], [0, 2]);
        both('!&?', 'isnall', [0, 2], [0, 2], [0, 2], [0, 2]);
        both('!&?', 'isnall', [0, 2], [1, 2], [0, 1], [0, 1]);
        both('!&?', 'isnall', [0, 2], [1, 2], [1, 2], [0, 1]);
        both('!&?', [0, 2], [1, 2], [1, 2], [1, 2]);
        both('!&?', 'isnall', [0, 1], [0, 10]);
        both('!&?', 'isnall', [0, 1], [0, 0, 9, 9]);
        both('!&?', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!&?', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('|?', 'issome', [0, 1], [0, 1], [0, 1], [0, 1]);
        both('|?', 'issome', [0, 1], [0, 1], [0, 1], [0, 2]);
        both('|?', 'issome', [0, 1], [0, 1], [0, 2], [0, 2]);
        both('|?', 'issome', [0, 1], [0, 2], [0, 2], [0, 2]);
        both('|?', 'issome', [0, 2], [0, 1], [0, 1], [0, 1]);
        both('|?', 'issome', [0, 2], [0, 1], [0, 1], [0, 2]);
        both('|?', 'issome', [0, 2], [0, 1], [0, 2], [0, 2]);
        both('|?', 'issome', [0, 2], [0, 2], [0, 2], [0, 2]);
        both('|?', [0, 2], [1, 2], [0, 1], [0, 1]);
        both('|?', [0, 2], [1, 2], [1, 2], [0, 1]);
        both('|?', [0, 2], [1, 2], [1, 2], [1, 2]);
        both('|?', 'issome', [0, 1], [0, 10]);
        both('|?', 'issome', [0, 1], [0, 0, 9, 9]);
        both('|?', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('|?', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!|?', 'isnone', [0, 1], [0, 1], [0, 1], [0, 1]);
        both('!|?', 'isnone', [0, 1], [0, 1], [0, 1], [0, 2]);
        both('!|?', 'isnone', [0, 1], [0, 1], [0, 2], [0, 2]);
        both('!|?', 'isnone', [0, 1], [0, 2], [0, 2], [0, 2]);
        both('!|?', 'isnone', [0, 2], [0, 1], [0, 1], [0, 1]);
        both('!|?', 'isnone', [0, 2], [0, 1], [0, 1], [0, 2]);
        both('!|?', 'isnone', [0, 2], [0, 1], [0, 2], [0, 2]);
        both('!|?', 'isnone', [0, 2], [0, 2], [0, 2], [0, 2]);
        both('!|?', [0, 2], [1, 2], [0, 1], [0, 1]);
        both('!|?', [0, 2], [1, 2], [1, 2], [0, 1]);
        both('!|?', [0, 2], [1, 2], [1, 2], [1, 2]);
        both('!|?', 'isnone', [0, 1], [0, 10]);
        both('!|?', 'isnone', [0, 1], [0, 0, 9, 9]);
        both('!|?', 'isnone', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!|?', 'isnone', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('+', 'sum', [0, 1], [0, 1], [0, 1], [0, 1]);
        both('+', 'sum', [0, 1], [0, 1], [0, 1], [0, 2]);
        both('+', 'sum', [0, 1], [0, 1], [0, 2], [0, 2]);
        both('+', 'sum', [0, 1], [0, 2], [0, 2], [0, 2]);
        both('+', 'issome', [0, 2], [0, 1], [0, 1], [0, 1]);
        both('+', 'sum', [0, 2], [0, 1], [0, 1], [0, 2]);
        both('+', 'sum', [0, 2], [0, 1], [0, 2], [0, 2]);
        both('+', 'sum', [0, 2], [0, 2], [0, 2], [0, 2]);
        both('+', 'isdiff', [0, 2], [1, 2], [0, 1], [0, 1]);
        both('+', 'sum', [0, 2], [1, 2], [1, 2], [0, 1]);
        both('+', [0, 2], [1, 2], [1, 2], [1, 2]);
        both('+', 'issome', [0, 20], [0, 1], [0, 1], [0, 1]);
        both('+', 'issome', [0, 20], [0, 10]);
        both('+', 'issome', [0, 20], [0, 0, 9, 9]);
        both('+', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('+', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('-', 'minus', [0, 1], [0, 1], [0, 1], [0, 1]);
        lhs('-', 'minus', [0, 1], [0, 1], [0, 1], [0, 2]);
        lhs('-', 'minus', [0, 1], [0, 1], [0, 2], [0, 2]);
        lhs('-', 'minus', [0, 1], [0, 2], [0, 2], [0, 2]);
        lhs('-', 'minus', [0, 2], [0, 1], [0, 1], [0, 1]);
        lhs('-', 'minus', [0, 2], [0, 1], [0, 1], [0, 2]);
        lhs('-', 'minus', [0, 2], [0, 1], [0, 2], [0, 2]);
        lhs('-', 'minus', [0, 2], [0, 2], [0, 2], [0, 2]);
        lhs('-', 'minus', [0, 2], [1, 2], [0, 1], [0, 1]);
        lhs('-', 'minus', [0, 2], [1, 2], [1, 2], [0, 1]);
        lhs('-', 'minus', [0, 2], [1, 2], [1, 2], [1, 2]);
        lhs('-', 'minus', [0, 20], [0, 1], [0, 1], [0, 1]);
        lhs('-', 'minus', [0, 20], [0, 10]);
        lhs('-', 'minus', [0, 20], [0, 0, 9, 9]);
        lhs('-', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('-', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('-', 'minus', [0, 1], [0, 1], [0, 1], [0, 1]);
        rhs('-', 'minus', [0, 1], [0, 1], [0, 1], [0, 2]);
        rhs('-', 'minus', [0, 1], [0, 1], [0, 2], [0, 2]);
        rhs('-', 'minus', [0, 1], [0, 2], [0, 2], [0, 2]);
        rhs('-', 'minus', [0, 2], [0, 1], [0, 1], [0, 1]);
        rhs('-', 'minus', [0, 2], [0, 1], [0, 1], [0, 2]);
        rhs('-', 'minus', [0, 2], [0, 1], [0, 2], [0, 2]);
        rhs('-', 'minus', [0, 2], [0, 2], [0, 2], [0, 2]);
        rhs('-', [0, 2], [1, 2], [0, 1], [0, 1]);
        rhs('-', [0, 2], [1, 2], [1, 2], [0, 1]);
        rhs('-', 'minus', [0, 2], [1, 2], [1, 2], [1, 2]);
        rhs('-', 'minus', [0, 20], [0, 1], [0, 1], [0, 1]);
        rhs('-', 'minus', [0, 20], [0, 10]);
        rhs('-', 'minus', [0, 20], [0, 0, 9, 9]);
        rhs('-', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('-', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('*', 'product', [0, 1], [0, 1], [0, 1], [0, 1]);
        both('*', 'product', [0, 1], [0, 1], [0, 1], [0, 2]);
        both('*', 'product', [0, 1], [0, 1], [0, 2], [0, 2]);
        both('*', 'product', [0, 1], [0, 2], [0, 2], [0, 2]);
        both('*', 'product', [0, 2], [0, 1], [0, 1], [0, 1]);
        both('*', 'product', [0, 2], [0, 1], [0, 1], [0, 2]);
        both('*', 'product', [0, 2], [0, 1], [0, 2], [0, 2]);
        both('*', 'product', [0, 2], [0, 2], [0, 2], [0, 2]);
        both('*', [0, 2], [1, 2], [0, 1], [0, 1]);
        both('*', 'product', [0, 2], [1, 2], [1, 2], [0, 1]);
        both('*', 'product', [0, 2], [1, 2], [1, 2], [1, 2]);
        both('*', 'product', [0, 100], [0, 1], [0, 1], [0, 1]);
        both('*', 'product', [0, 100], [0, 10]);
        both('*', 'product', [0, 100], [0, 0, 9, 9]);
        both('*', [0, 100], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('*', [0, 100], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('/', 'div', [0, 1], [0, 1], [0, 1], [0, 1]);
        lhs('/', 'div', [0, 1], [0, 1], [0, 1], [0, 2]);
        lhs('/', 'div', [0, 1], [0, 1], [0, 2], [0, 2]);
        lhs('/', 'div', [0, 1], [0, 2], [0, 2], [0, 2]);
        lhs('/', 'div', [0, 2], [0, 1], [0, 1], [0, 1]);
        lhs('/', 'div', [0, 2], [0, 1], [0, 1], [0, 2]);
        lhs('/', 'div', [0, 2], [0, 1], [0, 2], [0, 2]);
        lhs('/', 'div', [0, 2], [0, 2], [0, 2], [0, 2]);
        lhs('/', 'div', [0, 2], [1, 2], [0, 1], [0, 1]);
        lhs('/', 'div', [0, 2], [1, 2], [1, 2], [0, 1]);
        lhs('/', 'div', [0, 2], [1, 2], [1, 2], [1, 2]);
        lhs('/', 'div', [0, 20], [0, 1], [0, 1], [0, 1]);
        lhs('/', 'div', [0, 20], [0, 10]);
        lhs('/', 'div', [0, 20], [0, 0, 9, 9]);
        lhs('/', 'div', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('/', 'div', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('/', 'div', [0, 1], [0, 1], [0, 1], [0, 1]);
        rhs('/', 'div', [0, 1], [0, 1], [0, 1], [0, 2]);
        rhs('/', 'div', [0, 1], [0, 1], [0, 2], [0, 2]);
        rhs('/', 'div', [0, 1], [0, 2], [0, 2], [0, 2]);
        rhs('/', 'div', [0, 2], [0, 1], [0, 1], [0, 1]);
        rhs('/', 'div', [0, 2], [0, 1], [0, 1], [0, 2]);
        rhs('/', 'div', [0, 2], [0, 1], [0, 2], [0, 2]);
        rhs('/', 'div', [0, 2], [0, 2], [0, 2], [0, 2]);
        rhs('/', 'div', [0, 2], [1, 2], [0, 1], [0, 1]);
        rhs('/', 'div', [0, 2], [1, 2], [1, 2], [0, 1]);
        rhs('/', 'div', [0, 2], [1, 2], [1, 2], [1, 2]);
        rhs('/', 'div', [0, 20], [0, 1], [0, 1], [0, 1]);
        rhs('/', 'div', [0, 20], [0, 10]);
        rhs('/', 'div', [0, 20], [0, 0, 9, 9]);
        rhs('/', 'reject', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('/', 'reject', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
      });

      describe('ternary with shared result', function() {

        let both = testBinaryTernarySharedResult.bind(undefined, '==', '', ''); // A & B, R = A @ C  and  A & B, R = C @ A
        let lhs = testBinaryTernarySharedResult.bind(undefined, '==', '', 'lhs'); // A & B, R = A @ C
        let rhs = testBinaryTernarySharedResult.bind(undefined, '==', '', 'rhs'); // A & B, R = C @ A

        // A & B, R = A &? C
        both('&?', 'isall', [0, 1], [0, 1], [0, 1], [0, 1]);
        both('&?', 'isall', [0, 1], [0, 1], [0, 1], [0, 2]);
        both('&?', 'isall', [0, 1], [0, 1], [0, 2], [0, 2]);
        both('&?', 'isall', [0, 1], [0, 2], [0, 2], [0, 2]);
        both('&?', 'isall', [0, 2], [0, 1], [0, 1], [0, 1]);
        both('&?', 'isall', [0, 2], [0, 1], [0, 1], [0, 2]);
        both('&?', 'isall', [0, 2], [0, 1], [0, 2], [0, 2]);
        both('&?', 'isall', [0, 2], [0, 2], [0, 2], [0, 2]);
        both('&?', [0, 2], [1, 2], [0, 1], [0, 1]);
        both('&?', [0, 2], [1, 2], [1, 2], [0, 1]);
        both('&?', [0, 2], [1, 2], [1, 2], [1, 2]);
        both('&?', 'isall', [0, 1], [0, 10]);
        both('&?', 'nall', [0, 1], [0, 0, 9, 9]);
        both('&?', 'nall', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('&?', 'nall', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('==?', 'issame', [0, 1], [0, 1], [0, 1], [0, 1]);
        both('==?', 'issame', [0, 1], [0, 1], [0, 1], [0, 2]);
        both('==?', 'issame', [0, 1], [0, 1], [0, 2], [0, 2]);
        both('==?', 'issame', [0, 1], [0, 2], [0, 2], [0, 2]);
        both('==?', 'issame', [0, 2], [0, 1], [0, 1], [0, 1]);
        both('==?', 'issame', [0, 2], [0, 1], [0, 1], [0, 2]);
        both('==?', 'issame', [0, 2], [0, 1], [0, 2], [0, 2]);
        both('==?', 'issame', [0, 2], [0, 2], [0, 2], [0, 2]);
        both('==?', 'issame', [0, 2], [1, 2], [0, 1], [0, 1]);
        both('==?', [0, 2], [1, 2], [1, 2], [0, 1]);
        both('==?', [0, 2], [1, 2], [1, 2], [1, 2]);
        both('==?', 'issame', [0, 1], [0, 10]);
        both('==?', 'xor', [0, 1], [0, 0, 9, 9]);
        both('==?', 'diff', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('==?', 'diff', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!=?', 'isdiff', [0, 1], [0, 1], [0, 1], [0, 1]);
        both('!=?', 'isdiff', [0, 1], [0, 1], [0, 1], [0, 2]);
        both('!=?', 'isdiff', [0, 1], [0, 1], [0, 2], [0, 2]);
        both('!=?', 'isdiff', [0, 1], [0, 2], [0, 2], [0, 2]);
        both('!=?', 'isdiff', [0, 2], [0, 1], [0, 1], [0, 1]);
        both('!=?', 'isdiff', [0, 2], [0, 1], [0, 1], [0, 2]);
        both('!=?', 'isdiff', [0, 2], [0, 1], [0, 2], [0, 2]);
        both('!=?', 'isdiff', [0, 2], [0, 2], [0, 2], [0, 2]);
        both('!=?', 'isdiff', [0, 2], [1, 2], [0, 1], [0, 1]);
        both('!=?', 'diff', [0, 2], [1, 2], [1, 2], [0, 1]);
        both('!=?', 'diff', [0, 2], [1, 2], [1, 2], [1, 2]);
        both('!=?', 'isdiff', [0, 1], [0, 10]);
        both('!=?', [0, 1], [0, 0, 9, 9]);
        both('!=?', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!=?', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<?', 'islt', [0, 1], [0, 1], [0, 1], [0, 1]);
        lhs('<?', 'islt', [0, 1], [0, 1], [0, 1], [0, 2]);
        lhs('<?', 'islt', [0, 1], [0, 1], [0, 2], [0, 2]);
        lhs('<?', 'islt', [0, 1], [0, 2], [0, 2], [0, 2]);
        lhs('<?', 'islt', [0, 2], [0, 1], [0, 1], [0, 1]);
        lhs('<?', 'islt', [0, 2], [0, 1], [0, 1], [0, 2]);
        lhs('<?', 'islt', [0, 2], [0, 1], [0, 2], [0, 2]);
        lhs('<?', 'islt', [0, 2], [0, 2], [0, 2], [0, 2]);
        lhs('<?', [0, 2], [1, 2], [0, 1], [0, 1]);
        lhs('<?', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
        lhs('<?', [0, 2], [1, 2], [1, 2], [1, 2]);
        lhs('<?', 'islt', [0, 1], [0, 10]);
        lhs('<?', 'imp', [0, 1], [0, 0, 9, 9]);
        lhs('<?', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<?', 'imp', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<?', 'islt', [0, 1], [0, 1], [0, 1], [0, 1]);
        rhs('<?', 'islt', [0, 1], [0, 1], [0, 1], [0, 2]);
        rhs('<?', 'islt', [0, 1], [0, 1], [0, 2], [0, 2]);
        rhs('<?', 'islt', [0, 1], [0, 2], [0, 2], [0, 2]);
        rhs('<?', 'islt', [0, 2], [0, 1], [0, 1], [0, 1]);
        rhs('<?', 'islt', [0, 2], [0, 1], [0, 1], [0, 2]);
        rhs('<?', 'islt', [0, 2], [0, 1], [0, 2], [0, 2]);
        rhs('<?', 'islt', [0, 2], [0, 2], [0, 2], [0, 2]);
        rhs('<?', 'islt', [0, 2], [1, 2], [0, 1], [0, 1]);
        rhs('<?', 'lt', [0, 2], [1, 2], [1, 2], [0, 1]);
        rhs('<?', [0, 2], [1, 2], [1, 2], [1, 2]);
        rhs('<?', 'islt', [0, 1], [0, 10]);
        rhs('<?', 'imp', [0, 1], [0, 0, 9, 9]);
        rhs('<?', 'imp', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<?', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<=?', 'islte', [0, 1], [0, 1], [0, 1], [0, 1]);
        lhs('<=?', 'islte', [0, 1], [0, 1], [0, 1], [0, 2]);
        lhs('<=?', 'islte', [0, 1], [0, 1], [0, 2], [0, 2]);
        lhs('<=?', 'islte', [0, 1], [0, 2], [0, 2], [0, 2]);
        lhs('<=?', 'islte', [0, 2], [0, 1], [0, 1], [0, 1]);
        lhs('<=?', 'islte', [0, 2], [0, 1], [0, 1], [0, 2]);
        lhs('<=?', 'islte', [0, 2], [0, 1], [0, 2], [0, 2]);
        lhs('<=?', 'islte', [0, 2], [0, 2], [0, 2], [0, 2]);
        lhs('<=?', 'islte', [0, 2], [1, 2], [0, 1], [0, 1]);
        lhs('<=?', [0, 2], [1, 2], [1, 2], [0, 1]);
        lhs('<=?', 'lte', [0, 2], [1, 2], [1, 2], [1, 2]);
        lhs('<=?', 'islte', [0, 1], [0, 10]);
        lhs('<=?', [0, 1], [0, 0, 9, 9]);
        lhs('<=?', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<=?', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<=?', 'islte', [0, 1], [0, 1], [0, 1], [0, 1]);
        rhs('<=?', 'islte', [0, 1], [0, 1], [0, 1], [0, 2]);
        rhs('<=?', 'islte', [0, 1], [0, 1], [0, 2], [0, 2]);
        rhs('<=?', 'islte', [0, 1], [0, 2], [0, 2], [0, 2]);
        rhs('<=?', 'islte', [0, 2], [0, 1], [0, 1], [0, 1]);
        rhs('<=?', 'islte', [0, 2], [0, 1], [0, 1], [0, 2]);
        rhs('<=?', 'islte', [0, 2], [0, 1], [0, 2], [0, 2]);
        rhs('<=?', 'islte', [0, 2], [0, 2], [0, 2], [0, 2]);
        rhs('<=?', [0, 2], [1, 2], [0, 1], [0, 1]);
        rhs('<=?', [0, 2], [1, 2], [1, 2], [0, 1]);
        rhs('<=?', 'lte', [0, 2], [1, 2], [1, 2], [1, 2]);
        rhs('<=?', 'islte', [0, 1], [0, 10]);
        rhs('<=?', [0, 1], [0, 0, 9, 9]);
        rhs('<=?', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<=?', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!&?', 'isnall', [0, 1], [0, 1], [0, 1], [0, 1]);
        both('!&?', 'isnall', [0, 1], [0, 1], [0, 1], [0, 2]);
        both('!&?', 'isnall', [0, 1], [0, 1], [0, 2], [0, 2]);
        both('!&?', 'isnall', [0, 1], [0, 2], [0, 2], [0, 2]);
        both('!&?', 'isnall', [0, 2], [0, 1], [0, 1], [0, 1]);
        both('!&?', 'isnall', [0, 2], [0, 1], [0, 1], [0, 2]);
        both('!&?', 'isnall', [0, 2], [0, 1], [0, 2], [0, 2]);
        both('!&?', 'isnall', [0, 2], [0, 2], [0, 2], [0, 2]);
        both('!&?', 'isnall', [0, 2], [1, 2], [0, 1], [0, 1]);
        both('!&?', [0, 2], [1, 2], [1, 2], [0, 1]);
        both('!&?', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
        both('!&?', 'isnall', [0, 1], [0, 10]);
        both('!&?', [0, 1], [0, 0, 9, 9]);
        both('!&?', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!&?', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('|?', 'issome', [0, 1], [0, 1], [0, 1], [0, 1]);
        both('|?', 'issome', [0, 1], [0, 1], [0, 1], [0, 2]);
        both('|?', 'issome', [0, 1], [0, 1], [0, 2], [0, 2]);
        both('|?', 'issome', [0, 1], [0, 2], [0, 2], [0, 2]);
        both('|?', 'issome', [0, 2], [0, 1], [0, 1], [0, 1]);
        both('|?', 'issome', [0, 2], [0, 1], [0, 1], [0, 2]);
        both('|?', 'issome', [0, 2], [0, 1], [0, 2], [0, 2]);
        both('|?', 'issome', [0, 2], [0, 2], [0, 2], [0, 2]);
        both('|?', [0, 2], [1, 2], [0, 1], [0, 1]);
        both('|?', [0, 2], [1, 2], [1, 2], [0, 1]);
        both('|?', [0, 2], [1, 2], [1, 2], [1, 2]);
        both('|?', 'issome', [0, 1], [0, 10]);
        both('|?', [0, 1], [0, 0, 9, 9]);
        both('|?', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('|?', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!|?', 'isnone', [0, 1], [0, 1], [0, 1], [0, 1]);
        both('!|?', 'isnone', [0, 1], [0, 1], [0, 1], [0, 2]);
        both('!|?', 'isnone', [0, 1], [0, 1], [0, 2], [0, 2]);
        both('!|?', 'isnone', [0, 1], [0, 2], [0, 2], [0, 2]);
        both('!|?', 'isnone', [0, 2], [0, 1], [0, 1], [0, 1]);
        both('!|?', 'isnone', [0, 2], [0, 1], [0, 1], [0, 2]);
        both('!|?', 'isnone', [0, 2], [0, 1], [0, 2], [0, 2]);
        both('!|?', 'isnone', [0, 2], [0, 2], [0, 2], [0, 2]);
        both('!|?', [0, 2], [1, 2], [0, 1], [0, 1]);
        both('!|?', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
        both('!|?', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
        both('!|?', 'isnone', [0, 1], [0, 10]);
        both('!|?', 'some', [0, 1], [0, 0, 9, 9]);
        both('!|?', 'some', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!|?', 'some', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('+', 'sum', [0, 1], [0, 1], [0, 1], [0, 1]);
        both('+', 'sum', [0, 1], [0, 1], [0, 1], [0, 2]);
        both('+', 'sum', [0, 1], [0, 1], [0, 2], [0, 2]);
        both('+', 'sum', [0, 1], [0, 2], [0, 2], [0, 2]);
        both('+', 'sum', [0, 2], [0, 1], [0, 1], [0, 1]);
        both('+', 'sum', [0, 2], [0, 1], [0, 1], [0, 2]);
        both('+', 'sum', [0, 2], [0, 1], [0, 2], [0, 2]);
        both('+', 'sum', [0, 2], [0, 2], [0, 2], [0, 2]);
        both('+', [0, 2], [1, 2], [0, 1], [0, 1]);
        both('+', 'sum', [0, 2], [1, 2], [1, 2], [0, 1]);
        both('+', [0, 2], [1, 2], [1, 2], [1, 2]);
        both('+', 'sum', [0, 20], [0, 1], [0, 1], [0, 1]);
        both('+', 'sum', [0, 20], [0, 10]);
        both('+', 'sum', [0, 20], [0, 0, 9, 9]);
        both('+', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('+', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('-', 'minus', [0, 1], [0, 1], [0, 1], [0, 1]);
        lhs('-', 'minus', [0, 1], [0, 1], [0, 1], [0, 2]);
        lhs('-', 'minus', [0, 1], [0, 1], [0, 2], [0, 2]);
        lhs('-', 'minus', [0, 1], [0, 2], [0, 2], [0, 2]);
        lhs('-', 'minus', [0, 2], [0, 1], [0, 1], [0, 1]);
        lhs('-', 'minus', [0, 2], [0, 1], [0, 1], [0, 2]);
        lhs('-', 'minus', [0, 2], [0, 1], [0, 2], [0, 2]);
        lhs('-', 'minus', [0, 2], [0, 2], [0, 2], [0, 2]);
        lhs('-', 'minus', [0, 2], [1, 2], [0, 1], [0, 1]);
        lhs('-', 'minus', [0, 2], [1, 2], [1, 2], [0, 1]);
        lhs('-', [0, 2], [1, 2], [1, 2], [1, 2]);
        lhs('-', 'minus', [0, 20], [0, 1], [0, 1], [0, 1]);
        lhs('-', 'minus', [0, 20], [0, 10]);
        lhs('-', 'minus', [0, 20], [0, 0, 9, 9]);
        lhs('-', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('-', 'minus', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('-', 'minus', [0, 1], [0, 1], [0, 1], [0, 1]);
        rhs('-', 'minus', [0, 1], [0, 1], [0, 1], [0, 2]);
        rhs('-', 'minus', [0, 1], [0, 1], [0, 2], [0, 2]);
        rhs('-', 'minus', [0, 1], [0, 2], [0, 2], [0, 2]);
        rhs('-', 'minus', [0, 2], [0, 1], [0, 1], [0, 1]);
        rhs('-', 'minus', [0, 2], [0, 1], [0, 1], [0, 2]);
        rhs('-', 'minus', [0, 2], [0, 1], [0, 2], [0, 2]);
        rhs('-', 'minus', [0, 2], [0, 2], [0, 2], [0, 2]);
        rhs('-', [0, 2], [1, 2], [0, 1], [0, 1]);
        rhs('-', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
        rhs('-', [0, 2], [1, 2], [1, 2], [1, 2]);
        rhs('-', 'minus', [0, 20], [0, 1], [0, 1], [0, 1]);
        rhs('-', 'minus', [0, 20], [0, 10]);
        rhs('-', 'minus', [0, 20], [0, 0, 9, 9]);
        rhs('-', 'minus', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('-', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('*', 'product', [0, 1], [0, 1], [0, 1], [0, 1]);
        both('*', 'product', [0, 1], [0, 1], [0, 1], [0, 2]);
        both('*', 'product', [0, 1], [0, 1], [0, 2], [0, 2]);
        both('*', 'product', [0, 1], [0, 2], [0, 2], [0, 2]);
        both('*', 'product', [0, 2], [0, 1], [0, 1], [0, 1]);
        both('*', 'product', [0, 2], [0, 1], [0, 1], [0, 2]);
        both('*', 'product', [0, 2], [0, 1], [0, 2], [0, 2]);
        both('*', 'product', [0, 2], [0, 2], [0, 2], [0, 2]);
        both('*', [0, 2], [1, 2], [0, 1], [0, 1]);
        both('*', [0, 2], [1, 2], [1, 2], [0, 1]);
        both('*', 'product', [0, 2], [1, 2], [1, 2], [1, 2]);
        both('*', 'product', [0, 100], [0, 1], [0, 1], [0, 1]);
        both('*', 'product', [0, 100], [0, 10]);
        both('*', 'nall', [0, 100], [0, 0, 9, 9]);
        both('*', 'nall', [0, 100], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('*', 'nall', [0, 100], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('/', 'div', [0, 1], [0, 1], [0, 1], [0, 1]);
        lhs('/', 'div', [0, 1], [0, 1], [0, 1], [0, 2]);
        lhs('/', 'div', [0, 1], [0, 1], [0, 2], [0, 2]);
        lhs('/', 'div', [0, 1], [0, 2], [0, 2], [0, 2]);
        lhs('/', 'div', [0, 2], [0, 1], [0, 1], [0, 1]);
        lhs('/', 'div', [0, 2], [0, 1], [0, 1], [0, 2]);
        lhs('/', 'div', [0, 2], [0, 1], [0, 2], [0, 2]);
        lhs('/', 'div', [0, 2], [0, 2], [0, 2], [0, 2]);
        lhs('/', 'div', [0, 2], [1, 2], [0, 1], [0, 1]);
        lhs('/', 'div', [0, 2], [1, 2], [1, 2], [0, 1]);
        lhs('/', 'div', [0, 2], [1, 2], [1, 2], [1, 2]);
        lhs('/', 'div', [0, 20], [0, 1], [0, 1], [0, 1]);
        lhs('/', 'div', [0, 20], [0, 10]);
        lhs('/', 'div', [0, 20], [0, 0, 9, 9]);
        lhs('/', 'div', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('/', 'div', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('/', 'div', [0, 1], [0, 1], [0, 1], [0, 1]);
        rhs('/', 'div', [0, 1], [0, 1], [0, 1], [0, 2]);
        rhs('/', 'div', [0, 1], [0, 1], [0, 2], [0, 2]);
        rhs('/', 'div', [0, 1], [0, 2], [0, 2], [0, 2]);
        rhs('/', 'div', [0, 2], [0, 1], [0, 1], [0, 1]);
        rhs('/', 'div', [0, 2], [0, 1], [0, 1], [0, 2]);
        rhs('/', 'div', [0, 2], [0, 1], [0, 2], [0, 2]);
        rhs('/', 'div', [0, 2], [0, 2], [0, 2], [0, 2]);
        rhs('/', 'div', [0, 2], [1, 2], [0, 1], [0, 1]);
        rhs('/', 'div', [0, 2], [1, 2], [1, 2], [0, 1]);
        rhs('/', 'div', [0, 2], [1, 2], [1, 2], [1, 2]);
        rhs('/', 'div', [0, 20], [0, 1], [0, 1], [0, 1]);
        rhs('/', 'div', [0, 20], [0, 10]);
        rhs('/', 'div', [0, 20], [0, 0, 9, 9]);
        rhs('/', 'div', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('/', 'div', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
      });
    });

    describe('XNOR', function() {

      describe('binary', function() {

        let both = testBinaryBinary.bind(undefined, '!^', '', ''); // A & B, A @ C  and  A & B, C @ A
        let lhs = testBinaryBinary.bind(undefined, '!^', '', 'lhs'); // A & B, A @ C
        let rhs = testBinaryBinary.bind(undefined, '!^', '', 'rhs'); // A & B, C @ A

        both('&', [0, 1], [0, 1], [0, 1]);
        //both('&', [0, 1], [0, 1], [0, 2]);
        //both('&', [0, 1], [0, 2], [0, 1]);
        //both('&', [0, 1], [0, 2], [0, 2]);
        //both('&', [0, 2], [0, 1], [0, 1]);
        //both('&', [0, 2], [0, 1], [0, 2]);
        //both('&', [0, 2], [0, 2], [0, 1]);
        //both('&', [0, 2], [0, 2], [0, 2]);
        //both('&', [0, 2], [0, 1], [1, 2]);
        //both('&', [0, 2], [1, 2], [0, 1]);
        //both('&', [0, 2], [1, 2], [1, 2]);
        both('&', [0, 10]);
        both('&', [0, 0, 9, 9]);
        both('&', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('&', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!=', 'xor', [0, 1], [0, 1], [0, 1]);
        //both('!=', [0, 1], [0, 1], [0, 2]);
        //both('!=', [0, 1], [0, 2], [0, 1]);
        //both('!=', [0, 1], [0, 2], [0, 2]);
        //both('!=', [0, 2], [0, 1], [0, 1]);
        //both('!=', [0, 2], [0, 1], [0, 2]);
        //both('!=', [0, 2], [0, 2], [0, 1]);
        //both('!=', [0, 2], [0, 2], [0, 2]);
        //both('!=', [0, 2], [0, 1], [1, 2]);
        //both('!=', [0, 2], [1, 2], [0, 1]);
        //both('!=', [0, 2], [1, 2], [1, 2]);
        both('!=', 'diff', [0, 10]);
        both('!=', 'xor', [0, 0, 9, 9]);
        both('!=', 'diff', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!=', 'diff', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('->', 'imp', [0, 1], [0, 1], [0, 1]);
        //lhs('->', [0, 1], [0, 1], [0, 2]);
        //lhs('->', [0, 1], [0, 2], [0, 1]);
        //lhs('->', [0, 1], [0, 2], [0, 2]);
        //lhs('->', [0, 2], [0, 1], [0, 1]);
        //lhs('->', [0, 2], [0, 1], [0, 2]);
        //lhs('->', [0, 2], [0, 2], [0, 1]);
        //lhs('->', [0, 2], [0, 2], [0, 2]);
        //lhs('->', [0, 2], [0, 1], [1, 2]);
        //lhs('->', [0, 2], [1, 2], [0, 1]);
        //lhs('->', [0, 2], [1, 2], [1, 2]);
        lhs('->', 'imp', [0, 10]);
        lhs('->', 'imp', [0, 0, 9, 9]);
        lhs('->', 'imp', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('->', 'imp', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('->', 'imp', [0, 1], [0, 1], [0, 1]);
        //rhs('->', [0, 1], [0, 1], [0, 2]);
        //rhs('->', [0, 1], [0, 2], [0, 1]);
        //rhs('->', [0, 1], [0, 2], [0, 2]);
        //rhs('->', [0, 2], [0, 1], [0, 1]);
        //rhs('->', [0, 2], [0, 1], [0, 2]);
        //rhs('->', [0, 2], [0, 2], [0, 1]);
        //rhs('->', [0, 2], [0, 2], [0, 2]);
        //rhs('->', [0, 2], [0, 1], [1, 2]);
        //rhs('->', [0, 2], [1, 2], [0, 1]);
        //rhs('->', [0, 2], [1, 2], [1, 2]);
        rhs('->', 'imp', [0, 10]);
        rhs('->', 'imp', [0, 0, 9, 9]);
        rhs('->', 'imp', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('->', 'imp', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<', [0, 1], [0, 1], [0, 1]);
        //lhs('<', [0, 1], [0, 1], [0, 2]);
        //lhs('<', [0, 1], [0, 2], [0, 1]);
        //lhs('<', [0, 1], [0, 2], [0, 2]);
        //lhs('<', [0, 2], [0, 1], [0, 1]);
        //lhs('<', [0, 2], [0, 1], [0, 2]);
        //lhs('<', [0, 2], [0, 2], [0, 1]);
        //lhs('<', [0, 2], [0, 2], [0, 2]);
        //lhs('<', [0, 2], [0, 1], [1, 2]);
        //lhs('<', [0, 2], [1, 2], [0, 1]);
        //lhs('<', [0, 2], [1, 2], [1, 2]);
        lhs('<', 'lt', [0, 10]);
        lhs('<', [0, 0, 9, 9]);
        lhs('<', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<', [0, 1], [0, 1], [0, 1]);
        //rhs('<', [0, 1], [0, 1], [0, 2]);
        //rhs('<', [0, 1], [0, 2], [0, 1]);
        //rhs('<', [0, 1], [0, 2], [0, 2]);
        //rhs('<', [0, 2], [0, 1], [0, 1]);
        //rhs('<', [0, 2], [0, 1], [0, 2]);
        //rhs('<', [0, 2], [0, 2], [0, 1]);
        //rhs('<', [0, 2], [0, 2], [0, 2]);
        //rhs('<', [0, 2], [0, 1], [1, 2]);
        //rhs('<', [0, 2], [1, 2], [0, 1]);
        //rhs('<', [0, 2], [1, 2], [1, 2]);
        rhs('<', [0, 10]);
        rhs('<', [0, 0, 9, 9]);
        rhs('<', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<=', 'imp', [0, 1], [0, 1], [0, 1]);
        //lhs('<=', [0, 1], [0, 1], [0, 2]);
        //lhs('<=', [0, 1], [0, 2], [0, 1]);
        //lhs('<=', [0, 1], [0, 2], [0, 2]);
        //lhs('<=', [0, 2], [0, 1], [0, 1]);
        //lhs('<=', [0, 2], [0, 1], [0, 2]);
        //lhs('<=', [0, 2], [0, 2], [0, 1]);
        //lhs('<=', [0, 2], [0, 2], [0, 2]);
        //lhs('<=', [0, 2], [0, 1], [1, 2]);
        //lhs('<=', [0, 2], [1, 2], [0, 1]);
        //lhs('<=', [0, 2], [1, 2], [1, 2]);
        lhs('<=', 'lte', [0, 10]);
        lhs('<=', 'imp', [0, 0, 9, 9]);
        lhs('<=', 'imp', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<=', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<=', 'imp', [0, 1], [0, 1], [0, 1]);
        //rhs('<=', [0, 1], [0, 1], [0, 2]);
        //rhs('<=', [0, 1], [0, 2], [0, 1]);
        //rhs('<=', [0, 1], [0, 2], [0, 2]);
        //rhs('<=', [0, 2], [0, 1], [0, 1]);
        //rhs('<=', [0, 2], [0, 1], [0, 2]);
        //rhs('<=', [0, 2], [0, 2], [0, 1]);
        //rhs('<=', [0, 2], [0, 2], [0, 2]);
        //rhs('<=', [0, 2], [0, 1], [1, 2]);
        //rhs('<=', [0, 2], [1, 2], [0, 1]);
        //rhs('<=', [0, 2], [1, 2], [1, 2]);
        rhs('<=', 'lte', [0, 10]);
        rhs('<=', 'imp', [0, 0, 9, 9]);
        rhs('<=', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<=', 'imp', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!&', 'nall', [0, 1], [0, 1], [0, 1]);
        //both('!&', [0, 1], [0, 1], [0, 2]);
        //both('!&', [0, 1], [0, 2], [0, 1]);
        //both('!&', [0, 1], [0, 2], [0, 2]);
        //both('!&', [0, 2], [0, 1], [0, 1]);
        //both('!&', [0, 2], [0, 1], [0, 2]);
        //both('!&', [0, 2], [0, 2], [0, 1]);
        //both('!&', [0, 2], [0, 2], [0, 2]);
        //both('!&', [0, 2], [0, 1], [1, 2]);
        //both('!&', [0, 2], [1, 2], [0, 1]);
        //both('!&', [0, 2], [1, 2], [1, 2]);
        both('!&', 'nall', [0, 10]);
        both('!&', 'nall', [0, 0, 9, 9]);
        both('!&', 'nall', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!&', 'nall', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('!->', [0, 1], [0, 1], [0, 1]);
        //lhs('!->', [0, 1], [0, 1], [0, 2]);
        //lhs('!->', [0, 1], [0, 2], [0, 1]);
        //lhs('!->', [0, 1], [0, 2], [0, 2]);
        //lhs('!->', [0, 2], [0, 1], [0, 1]);
        //lhs('!->', [0, 2], [0, 1], [0, 2]);
        //lhs('!->', [0, 2], [0, 2], [0, 1]);
        //lhs('!->', [0, 2], [0, 2], [0, 2]);
        //lhs('!->', [0, 2], [0, 1], [1, 2]);
        //lhs('!->', [0, 2], [1, 2], [0, 1]);
        //lhs('!->', [0, 2], [1, 2], [1, 2]);
        lhs('!->', [0, 10]);
        lhs('!->', [0, 0, 9, 9]);
        lhs('!->', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('!->', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('!->', [0, 1], [0, 1], [0, 1]);
        //rhs('!->', [0, 1], [0, 1], [0, 2]);
        //rhs('!->', [0, 1], [0, 2], [0, 1]);
        //rhs('!->', [0, 1], [0, 2], [0, 2]);
        //rhs('!->', [0, 2], [0, 1], [0, 1]);
        //rhs('!->', [0, 2], [0, 1], [0, 2]);
        //rhs('!->', [0, 2], [0, 2], [0, 1]);
        //rhs('!->', [0, 2], [0, 2], [0, 2]);
        //rhs('!->', [0, 2], [0, 1], [1, 2]);
        //rhs('!->', [0, 2], [1, 2], [0, 1]);
        //rhs('!->', [0, 2], [1, 2], [1, 2]);
        rhs('!->', [0, 10]);
        rhs('!->', [0, 0, 9, 9]);
        rhs('!->', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('!->', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!|', [0, 1], [0, 1], [0, 1]);
        //both('!|', [0, 1], [0, 1], [0, 2]);
        //both('!|', [0, 1], [0, 2], [0, 1]);
        //both('!|', [0, 1], [0, 2], [0, 2]);
        //both('!|', [0, 2], [0, 1], [0, 1]);
        //both('!|', [0, 2], [0, 1], [0, 2]);
        //both('!|', [0, 2], [0, 2], [0, 1]);
        //both('!|', [0, 2], [0, 2], [0, 2]);
        //both('!|', [0, 2], [0, 1], [1, 2]);
        //both('!|', [0, 2], [1, 2], [0, 1]);
        //both('!|', [0, 2], [1, 2], [1, 2]);
        both('!|', [0, 10]);
        both('!|', [0, 0, 9, 9]);
        both('!|', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!|', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('==', [0, 1], [0, 1], [0, 1]);
        //both('==', [0, 1], [0, 1], [0, 2]);
        //both('==', [0, 1], [0, 2], [0, 1]);
        //both('==', [0, 1], [0, 2], [0, 2]);
        //both('==', [0, 2], [0, 1], [0, 1]);
        //both('==', [0, 2], [0, 1], [0, 2]);
        //both('==', [0, 2], [0, 2], [0, 1]);
        //both('==', [0, 2], [0, 2], [0, 2]);
        //both('==', [0, 2], [0, 1], [1, 2]);
        //both('==', [0, 2], [1, 2], [0, 1]);
        //both('==', [0, 2], [1, 2], [1, 2]);
        both('==', [0, 10]);
        both('==', [0, 0, 9, 9]);
        both('==', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('==', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!^', [0, 1], [0, 1], [0, 1]);
        //both('!^', [0, 1], [0, 1], [0, 2]);
        //both('!^', [0, 1], [0, 2], [0, 1]);
        //both('!^', [0, 1], [0, 2], [0, 2]);
        //both('!^', [0, 2], [0, 1], [0, 1]);
        //both('!^', [0, 2], [0, 1], [0, 2]);
        //both('!^', [0, 2], [0, 2], [0, 1]);
        //both('!^', [0, 2], [0, 2], [0, 2]);
        //both('!^', [0, 2], [0, 1], [1, 2]);
        //both('!^', [0, 2], [1, 2], [0, 1]);
        //both('!^', [0, 2], [1, 2], [1, 2]);
        both('!^', [0, 10]);                                      // lt+xnor = xor?
        both('!^', [0, 0, 9, 9]);
        both('!^', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);    // xor??
        both('!^', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('^', 'xor', [0, 1], [0, 1], [0, 1]);
        //both('^', [0, 1], [0, 1], [0, 2]);
        //both('^', [0, 1], [0, 2], [0, 1]);
        //both('^', [0, 1], [0, 2], [0, 2]);
        //both('^', [0, 2], [0, 1], [0, 1]);
        //both('^', [0, 2], [0, 1], [0, 2]);
        //both('^', [0, 2], [0, 2], [0, 1]);
        //both('^', [0, 2], [0, 2], [0, 2]);
        //both('^', [0, 2], [0, 1], [1, 2]);
        //both('^', [0, 2], [1, 2], [0, 1]);
        //both('^', [0, 2], [1, 2], [1, 2]);
        both('^', 'xor', [0, 10]);
        both('^', 'xor', [0, 0, 9, 9]);
        both('^', 'xor', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('^', 'xor', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
      });

      describe('ternary with shared arg', function() {

        let both = testBinaryTernarySharedArgs.bind(undefined, '!^', '', ''); // A & B, R = A @ C  and  A & B, R = C @ A
        let lhs = testBinaryTernarySharedArgs.bind(undefined, '!^', '', 'lhs'); // A & B, R = A @ C
        let rhs = testBinaryTernarySharedArgs.bind(undefined, '!^', '', 'rhs'); // A & B, R = C @ A

        // A & B, R = A &? C
        both('&?', 'isall', [0, 1], [0, 1], [0, 1], [0, 1]);
        both('&?', 'isall', [0, 1], [0, 1], [0, 1], [0, 2]);
        both('&?', 'isall', [0, 1], [0, 1], [0, 2], [0, 2]);
        both('&?', 'isall', [0, 1], [0, 2], [0, 2], [0, 2]);
        both('&?', 'isall', [0, 2], [0, 1], [0, 1], [0, 1]);
        both('&?', 'isall', [0, 2], [0, 1], [0, 1], [0, 2]);
        both('&?', 'isall', [0, 2], [0, 1], [0, 2], [0, 2]);
        both('&?', 'isall', [0, 2], [0, 2], [0, 2], [0, 2]);
        both('&?', [0, 2], [1, 2], [0, 1], [0, 1]);
        both('&?', [0, 2], [1, 2], [1, 2], [0, 1]);
        both('&?', [0, 2], [1, 2], [1, 2], [1, 2]);
        both('&?', 'isall', [0, 1], [0, 10]);
        both('&?', 'isall', [0, 1], [0, 0, 9, 9]);
        both('&?', 'isall', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('&?', 'isall', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('==?', 'issame', [0, 1], [0, 1], [0, 1], [0, 1]);
        both('==?', 'issame', [0, 1], [0, 1], [0, 1], [0, 2]);
        both('==?', 'issame', [0, 1], [0, 1], [0, 2], [0, 2]);
        both('==?', 'issame', [0, 1], [0, 2], [0, 2], [0, 2]);
        both('==?', 'issame', [0, 2], [0, 1], [0, 1], [0, 1]);
        both('==?', 'issame', [0, 2], [0, 1], [0, 1], [0, 2]);
        both('==?', 'issame', [0, 2], [0, 1], [0, 2], [0, 2]);
        both('==?', 'issame', [0, 2], [0, 2], [0, 2], [0, 2]);
        both('==?', 'issame', [0, 2], [1, 2], [0, 1], [0, 1]);
        both('==?', 'issame', [0, 2], [1, 2], [1, 2], [0, 1]);
        both('==?', 'issame', [0, 2], [1, 2], [1, 2], [1, 2]);
        both('==?', 'issame', [0, 1], [0, 10]);
        both('==?', 'issame', [0, 1], [0, 0, 9, 9]);
        both('==?', 'issame', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('==?', 'issame', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!=?', 'isdiff', [0, 1], [0, 1], [0, 1], [0, 1]);
        both('!=?', 'isdiff', [0, 1], [0, 1], [0, 1], [0, 2]);
        both('!=?', 'isdiff', [0, 1], [0, 1], [0, 2], [0, 2]);
        both('!=?', 'isdiff', [0, 1], [0, 2], [0, 2], [0, 2]);
        both('!=?', 'isdiff', [0, 2], [0, 1], [0, 1], [0, 1]);
        both('!=?', 'isdiff', [0, 2], [0, 1], [0, 1], [0, 2]);
        both('!=?', 'isdiff', [0, 2], [0, 1], [0, 2], [0, 2]);
        both('!=?', 'isdiff', [0, 2], [0, 2], [0, 2], [0, 2]);
        both('!=?', 'isdiff', [0, 2], [1, 2], [0, 1], [0, 1]);
        both('!=?', 'isdiff', [0, 2], [1, 2], [1, 2], [0, 1]);
        both('!=?', 'isdiff', [0, 2], [1, 2], [1, 2], [1, 2]);
        both('!=?', 'isdiff', [0, 1], [0, 10]);
        both('!=?', 'isdiff', [0, 1], [0, 0, 9, 9]);
        both('!=?', 'isdiff', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!=?', 'isdiff', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<?', 'islt', [0, 1], [0, 1], [0, 1], [0, 1]);
        lhs('<?', 'islt', [0, 1], [0, 1], [0, 1], [0, 2]);
        lhs('<?', 'islt', [0, 1], [0, 1], [0, 2], [0, 2]);
        lhs('<?', 'islt', [0, 1], [0, 2], [0, 2], [0, 2]);
        lhs('<?', 'islt', [0, 2], [0, 1], [0, 1], [0, 1]);
        lhs('<?', 'islt', [0, 2], [0, 1], [0, 1], [0, 2]);
        lhs('<?', 'islt', [0, 2], [0, 1], [0, 2], [0, 2]);
        lhs('<?', 'islt', [0, 2], [0, 2], [0, 2], [0, 2]);
        lhs('<?', [0, 2], [1, 2], [0, 1], [0, 1]);
        lhs('<?', [0, 2], [1, 2], [1, 2], [0, 1]);
        lhs('<?', 'islt', [0, 2], [1, 2], [1, 2], [1, 2]);
        lhs('<?', 'islt', [0, 1], [0, 10]);
        lhs('<?', 'islt', [0, 1], [0, 0, 9, 9]);
        lhs('<?', 'islt', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<?', 'islt', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<?', 'islt', [0, 1], [0, 1], [0, 1], [0, 1]);
        rhs('<?', 'islt', [0, 1], [0, 1], [0, 1], [0, 2]);
        rhs('<?', 'islt', [0, 1], [0, 1], [0, 2], [0, 2]);
        rhs('<?', 'islt', [0, 1], [0, 2], [0, 2], [0, 2]);
        rhs('<?', 'islt', [0, 2], [0, 1], [0, 1], [0, 1]);
        rhs('<?', 'islt', [0, 2], [0, 1], [0, 1], [0, 2]);
        rhs('<?', 'islt', [0, 2], [0, 1], [0, 2], [0, 2]);
        rhs('<?', 'islt', [0, 2], [0, 2], [0, 2], [0, 2]);
        rhs('<?', 'islt', [0, 2], [1, 2], [0, 1], [0, 1]);
        rhs('<?', 'islt', [0, 2], [1, 2], [1, 2], [0, 1]);
        rhs('<?', 'islt', [0, 2], [1, 2], [1, 2], [1, 2]);
        rhs('<?', 'islt', [0, 1], [0, 10]);
        rhs('<?', 'islt', [0, 1], [0, 0, 9, 9]);
        rhs('<?', 'islt', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<?', 'islt', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<=?', 'islte', [0, 1], [0, 1], [0, 1], [0, 1]);
        lhs('<=?', 'islte', [0, 1], [0, 1], [0, 1], [0, 2]);
        lhs('<=?', 'islte', [0, 1], [0, 1], [0, 2], [0, 2]);
        lhs('<=?', 'islte', [0, 1], [0, 2], [0, 2], [0, 2]);
        lhs('<=?', 'islte', [0, 2], [0, 1], [0, 1], [0, 1]);
        lhs('<=?', 'islte', [0, 2], [0, 1], [0, 1], [0, 2]);
        lhs('<=?', 'islte', [0, 2], [0, 1], [0, 2], [0, 2]);
        lhs('<=?', 'islte', [0, 2], [0, 2], [0, 2], [0, 2]);
        lhs('<=?', 'islte', [0, 2], [1, 2], [0, 1], [0, 1]);
        lhs('<=?', 'islte', [0, 2], [1, 2], [1, 2], [0, 1]);
        lhs('<=?', 'islte', [0, 2], [1, 2], [1, 2], [1, 2]);
        lhs('<=?', 'islte', [0, 1], [0, 10]);
        lhs('<=?', 'islte', [0, 1], [0, 0, 9, 9]);
        lhs('<=?', 'islte', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<=?', 'islte', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<=?', 'islte', [0, 1], [0, 1], [0, 1], [0, 1]);
        rhs('<=?', 'islte', [0, 1], [0, 1], [0, 1], [0, 2]);
        rhs('<=?', 'islte', [0, 1], [0, 1], [0, 2], [0, 2]);
        rhs('<=?', 'islte', [0, 1], [0, 2], [0, 2], [0, 2]);
        rhs('<=?', 'islte', [0, 2], [0, 1], [0, 1], [0, 1]);
        rhs('<=?', 'islte', [0, 2], [0, 1], [0, 1], [0, 2]);
        rhs('<=?', 'islte', [0, 2], [0, 1], [0, 2], [0, 2]);
        rhs('<=?', 'islte', [0, 2], [0, 2], [0, 2], [0, 2]);
        rhs('<=?', [0, 2], [1, 2], [0, 1], [0, 1]);
        rhs('<=?', [0, 2], [1, 2], [1, 2], [0, 1]);
        rhs('<=?', 'islte', [0, 2], [1, 2], [1, 2], [1, 2]);
        rhs('<=?', 'islte', [0, 1], [0, 10]);
        rhs('<=?', 'islte', [0, 1], [0, 0, 9, 9]);
        rhs('<=?', 'islte', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<=?', 'islte', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!&?', 'isnall', [0, 1], [0, 1], [0, 1], [0, 1]);
        both('!&?', 'isnall', [0, 1], [0, 1], [0, 1], [0, 2]);
        both('!&?', 'isnall', [0, 1], [0, 1], [0, 2], [0, 2]);
        both('!&?', 'isnall', [0, 1], [0, 2], [0, 2], [0, 2]);
        both('!&?', 'isnall', [0, 2], [0, 1], [0, 1], [0, 1]);
        both('!&?', 'isnall', [0, 2], [0, 1], [0, 1], [0, 2]);
        both('!&?', 'isnall', [0, 2], [0, 1], [0, 2], [0, 2]);
        both('!&?', 'isnall', [0, 2], [0, 2], [0, 2], [0, 2]);
        both('!&?', 'isnall', [0, 2], [1, 2], [0, 1], [0, 1]);
        both('!&?', 'isnall', [0, 2], [1, 2], [1, 2], [0, 1]);
        both('!&?', [0, 2], [1, 2], [1, 2], [1, 2]);
        both('!&?', 'isnall', [0, 1], [0, 10]);
        both('!&?', 'isnall', [0, 1], [0, 0, 9, 9]);
        both('!&?', 'isnall', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!&?', 'isnall', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('|?', 'issome', [0, 1], [0, 1], [0, 1], [0, 1]);
        both('|?', 'issome', [0, 1], [0, 1], [0, 1], [0, 2]);
        both('|?', 'issome', [0, 1], [0, 1], [0, 2], [0, 2]);
        both('|?', 'issome', [0, 1], [0, 2], [0, 2], [0, 2]);
        both('|?', 'issome', [0, 2], [0, 1], [0, 1], [0, 1]);
        both('|?', 'issome', [0, 2], [0, 1], [0, 1], [0, 2]);
        both('|?', 'issome', [0, 2], [0, 1], [0, 2], [0, 2]);
        both('|?', 'issome', [0, 2], [0, 2], [0, 2], [0, 2]);
        both('|?', [0, 2], [1, 2], [0, 1], [0, 1]);
        both('|?', [0, 2], [1, 2], [1, 2], [0, 1]);
        both('|?', [0, 2], [1, 2], [1, 2], [1, 2]);
        both('|?', 'issome', [0, 1], [0, 10]);
        both('|?', 'issome', [0, 1], [0, 0, 9, 9]);
        both('|?', 'issome', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('|?', 'issome', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!|?', 'isnone', [0, 1], [0, 1], [0, 1], [0, 1]);
        both('!|?', 'isnone', [0, 1], [0, 1], [0, 1], [0, 2]);
        both('!|?', 'isnone', [0, 1], [0, 1], [0, 2], [0, 2]);
        both('!|?', 'isnone', [0, 1], [0, 2], [0, 2], [0, 2]);
        both('!|?', 'isnone', [0, 2], [0, 1], [0, 1], [0, 1]);
        both('!|?', 'isnone', [0, 2], [0, 1], [0, 1], [0, 2]);
        both('!|?', 'isnone', [0, 2], [0, 1], [0, 2], [0, 2]);
        both('!|?', 'isnone', [0, 2], [0, 2], [0, 2], [0, 2]);
        both('!|?', [0, 2], [1, 2], [0, 1], [0, 1]);
        both('!|?', [0, 2], [1, 2], [1, 2], [0, 1]);
        both('!|?', [0, 2], [1, 2], [1, 2], [1, 2]);
        both('!|?', 'isnone', [0, 1], [0, 10]);
        both('!|?', 'isnone', [0, 1], [0, 0, 9, 9]);
        both('!|?', 'isnone', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!|?', 'isnone', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('+', 'sum', [0, 1], [0, 1], [0, 1], [0, 1]);
        both('+', 'sum', [0, 1], [0, 1], [0, 1], [0, 2]);
        both('+', 'sum', [0, 1], [0, 1], [0, 2], [0, 2]);
        both('+', 'sum', [0, 1], [0, 2], [0, 2], [0, 2]);
        both('+', 'issome', [0, 2], [0, 1], [0, 1], [0, 1]);
        both('+', 'sum', [0, 2], [0, 1], [0, 1], [0, 2]);
        both('+', 'sum', [0, 2], [0, 1], [0, 2], [0, 2]);
        both('+', 'sum', [0, 2], [0, 2], [0, 2], [0, 2]);
        both('+', 'sum', [0, 2], [1, 2], [0, 1], [0, 1]);
        both('+', 'sum', [0, 2], [1, 2], [1, 2], [0, 1]);
        both('+', [0, 2], [1, 2], [1, 2], [1, 2]);
        both('+', 'issome', [0, 20], [0, 1], [0, 1], [0, 1]);
        both('+', 'issome', [0, 20], [0, 10]);
        both('+', 'issome', [0, 20], [0, 0, 9, 9]);
        both('+', 'issome', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('+', 'issome', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('-', 'minus', [0, 1], [0, 1], [0, 1], [0, 1]);
        lhs('-', 'minus', [0, 1], [0, 1], [0, 1], [0, 2]);
        lhs('-', 'minus', [0, 1], [0, 1], [0, 2], [0, 2]);
        lhs('-', 'minus', [0, 1], [0, 2], [0, 2], [0, 2]);
        lhs('-', 'minus', [0, 2], [0, 1], [0, 1], [0, 1]);
        lhs('-', 'minus', [0, 2], [0, 1], [0, 1], [0, 2]);
        lhs('-', 'minus', [0, 2], [0, 1], [0, 2], [0, 2]);
        lhs('-', 'minus', [0, 2], [0, 2], [0, 2], [0, 2]);
        lhs('-', 'minus', [0, 2], [1, 2], [0, 1], [0, 1]);
        lhs('-', 'minus', [0, 2], [1, 2], [1, 2], [0, 1]);
        lhs('-', 'minus', [0, 2], [1, 2], [1, 2], [1, 2]);
        lhs('-', 'minus', [0, 20], [0, 1], [0, 1], [0, 1]);
        lhs('-', 'minus', [0, 20], [0, 10]);
        lhs('-', 'minus', [0, 20], [0, 0, 9, 9]);
        lhs('-', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('-', 'minus', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('-', 'minus', [0, 1], [0, 1], [0, 1], [0, 1]);
        rhs('-', 'minus', [0, 1], [0, 1], [0, 1], [0, 2]);
        rhs('-', 'minus', [0, 1], [0, 1], [0, 2], [0, 2]);
        rhs('-', 'minus', [0, 1], [0, 2], [0, 2], [0, 2]);
        rhs('-', 'minus', [0, 2], [0, 1], [0, 1], [0, 1]);
        rhs('-', 'minus', [0, 2], [0, 1], [0, 1], [0, 2]);
        rhs('-', 'minus', [0, 2], [0, 1], [0, 2], [0, 2]);
        rhs('-', 'minus', [0, 2], [0, 2], [0, 2], [0, 2]);
        rhs('-', [0, 2], [1, 2], [0, 1], [0, 1]);
        rhs('-', [0, 2], [1, 2], [1, 2], [0, 1]);
        rhs('-', 'minus', [0, 2], [1, 2], [1, 2], [1, 2]);
        rhs('-', 'minus', [0, 20], [0, 1], [0, 1], [0, 1]);
        rhs('-', 'minus', [0, 20], [0, 10]);
        rhs('-', 'minus', [0, 20], [0, 0, 9, 9]);
        rhs('-', 'minus', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('-', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('*', 'product', [0, 1], [0, 1], [0, 1], [0, 1]);
        both('*', 'product', [0, 1], [0, 1], [0, 1], [0, 2]);
        both('*', 'product', [0, 1], [0, 1], [0, 2], [0, 2]);
        both('*', 'product', [0, 1], [0, 2], [0, 2], [0, 2]);
        both('*', 'product', [0, 2], [0, 1], [0, 1], [0, 1]);
        both('*', 'product', [0, 2], [0, 1], [0, 1], [0, 2]);
        both('*', 'product', [0, 2], [0, 1], [0, 2], [0, 2]);
        both('*', 'product', [0, 2], [0, 2], [0, 2], [0, 2]);
        both('*', 'product', [0, 2], [1, 2], [0, 1], [0, 1]);
        both('*', 'product', [0, 2], [1, 2], [1, 2], [0, 1]);
        both('*', 'product', [0, 2], [1, 2], [1, 2], [1, 2]);
        both('*', 'product', [0, 100], [0, 1], [0, 1], [0, 1]);
        both('*', 'product', [0, 100], [0, 10]);
        both('*', 'product', [0, 100], [0, 0, 9, 9]);
        both('*', 'product', [0, 100], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('*', 'product', [0, 100], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('/', 'div', [0, 1], [0, 1], [0, 1], [0, 1]);
        lhs('/', 'div', [0, 1], [0, 1], [0, 1], [0, 2]);
        lhs('/', 'div', [0, 1], [0, 1], [0, 2], [0, 2]);
        lhs('/', 'div', [0, 1], [0, 2], [0, 2], [0, 2]);
        lhs('/', 'div', [0, 2], [0, 1], [0, 1], [0, 1]);
        lhs('/', 'div', [0, 2], [0, 1], [0, 1], [0, 2]);
        lhs('/', 'div', [0, 2], [0, 1], [0, 2], [0, 2]);
        lhs('/', 'div', [0, 2], [0, 2], [0, 2], [0, 2]);
        lhs('/', 'div', [0, 2], [1, 2], [0, 1], [0, 1]);
        lhs('/', 'div', [0, 2], [1, 2], [1, 2], [0, 1]);
        lhs('/', 'div', [0, 2], [1, 2], [1, 2], [1, 2]);
        lhs('/', 'div', [0, 20], [0, 1], [0, 1], [0, 1]);
        lhs('/', 'div', [0, 20], [0, 10]);
        lhs('/', 'div', [0, 20], [0, 0, 9, 9]);
        lhs('/', 'div', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('/', 'div', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('/', 'div', [0, 1], [0, 1], [0, 1], [0, 1]);
        rhs('/', 'div', [0, 1], [0, 1], [0, 1], [0, 2]);
        rhs('/', 'div', [0, 1], [0, 1], [0, 2], [0, 2]);
        rhs('/', 'div', [0, 1], [0, 2], [0, 2], [0, 2]);
        rhs('/', 'div', [0, 2], [0, 1], [0, 1], [0, 1]);
        rhs('/', 'div', [0, 2], [0, 1], [0, 1], [0, 2]);
        rhs('/', 'div', [0, 2], [0, 1], [0, 2], [0, 2]);
        rhs('/', 'div', [0, 2], [0, 2], [0, 2], [0, 2]);
        rhs('/', 'div', [0, 2], [1, 2], [0, 1], [0, 1]);
        rhs('/', 'div', [0, 2], [1, 2], [1, 2], [0, 1]);
        rhs('/', 'div', [0, 2], [1, 2], [1, 2], [1, 2]);
        rhs('/', 'div', [0, 20], [0, 1], [0, 1], [0, 1]);
        rhs('/', 'div', [0, 20], [0, 10]);
        rhs('/', 'div', [0, 20], [0, 0, 9, 9]);
        rhs('/', 'div', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('/', 'div', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
      });

      describe('ternary with shared result', function() {

        let both = testBinaryTernarySharedResult.bind(undefined, '!^', '', ''); // A & B, R = A @ C  and  A & B, R = C @ A
        let lhs = testBinaryTernarySharedResult.bind(undefined, '!^', '', 'lhs'); // A & B, R = A @ C
        let rhs = testBinaryTernarySharedResult.bind(undefined, '!^', '', 'rhs'); // A & B, R = C @ A

        // A & B, R = A &? C
        both('&?', 'isall', [0, 1], [0, 1], [0, 1], [0, 1]);
        both('&?', 'isall', [0, 1], [0, 1], [0, 1], [0, 2]);
        both('&?', 'isall', [0, 1], [0, 1], [0, 2], [0, 2]);
        both('&?', 'isall', [0, 1], [0, 2], [0, 2], [0, 2]);
        both('&?', 'isall', [0, 2], [0, 1], [0, 1], [0, 1]);
        both('&?', 'isall', [0, 2], [0, 1], [0, 1], [0, 2]);
        both('&?', 'isall', [0, 2], [0, 1], [0, 2], [0, 2]);
        both('&?', 'isall', [0, 2], [0, 2], [0, 2], [0, 2]);
        both('&?', [0, 2], [1, 2], [0, 1], [0, 1]);
        both('&?', [0, 2], [1, 2], [1, 2], [0, 1]);
        both('&?', [0, 2], [1, 2], [1, 2], [1, 2]);
        both('&?', 'isall', [0, 1], [0, 10]);
        both('&?', 'isall', [0, 1], [0, 0, 9, 9]);
        both('&?', 'isall', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('&?', 'isall', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('==?', 'issame', [0, 1], [0, 1], [0, 1], [0, 1]);
        both('==?', 'issame', [0, 1], [0, 1], [0, 1], [0, 2]);
        both('==?', 'issame', [0, 1], [0, 1], [0, 2], [0, 2]);
        both('==?', 'issame', [0, 1], [0, 2], [0, 2], [0, 2]);
        both('==?', 'issame', [0, 2], [0, 1], [0, 1], [0, 1]);
        both('==?', 'issame', [0, 2], [0, 1], [0, 1], [0, 2]);
        both('==?', 'issame', [0, 2], [0, 1], [0, 2], [0, 2]);
        both('==?', 'issame', [0, 2], [0, 2], [0, 2], [0, 2]);
        both('==?', 'issame', [0, 2], [1, 2], [0, 1], [0, 1]);
        both('==?', [0, 2], [1, 2], [1, 2], [0, 1]);
        both('==?', [0, 2], [1, 2], [1, 2], [1, 2]);
        both('==?', 'issame', [0, 1], [0, 10]);
        both('==?', 'issame', [0, 1], [0, 0, 9, 9]);
        both('==?', 'issame', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('==?', 'issame', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!=?', 'isdiff', [0, 1], [0, 1], [0, 1], [0, 1]);
        both('!=?', 'isdiff', [0, 1], [0, 1], [0, 1], [0, 2]);
        both('!=?', 'isdiff', [0, 1], [0, 1], [0, 2], [0, 2]);
        both('!=?', 'isdiff', [0, 1], [0, 2], [0, 2], [0, 2]);
        both('!=?', 'isdiff', [0, 2], [0, 1], [0, 1], [0, 1]);
        both('!=?', 'isdiff', [0, 2], [0, 1], [0, 1], [0, 2]);
        both('!=?', 'isdiff', [0, 2], [0, 1], [0, 2], [0, 2]);
        both('!=?', 'isdiff', [0, 2], [0, 2], [0, 2], [0, 2]);
        both('!=?', 'isdiff', [0, 2], [1, 2], [0, 1], [0, 1]);
        both('!=?', 'diff', [0, 2], [1, 2], [1, 2], [0, 1]);
        both('!=?', 'diff', [0, 2], [1, 2], [1, 2], [1, 2]);
        both('!=?', 'isdiff', [0, 1], [0, 10]);
        both('!=?', 'isdiff', [0, 1], [0, 0, 9, 9]);
        both('!=?', 'isdiff', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!=?', 'isdiff', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<?', 'islt', [0, 1], [0, 1], [0, 1], [0, 1]);
        lhs('<?', 'islt', [0, 1], [0, 1], [0, 1], [0, 2]);
        lhs('<?', 'islt', [0, 1], [0, 1], [0, 2], [0, 2]);
        lhs('<?', 'islt', [0, 1], [0, 2], [0, 2], [0, 2]);
        lhs('<?', 'islt', [0, 2], [0, 1], [0, 1], [0, 1]);
        lhs('<?', 'islt', [0, 2], [0, 1], [0, 1], [0, 2]);
        lhs('<?', 'islt', [0, 2], [0, 1], [0, 2], [0, 2]);
        lhs('<?', 'islt', [0, 2], [0, 2], [0, 2], [0, 2]);
        lhs('<?', [0, 2], [1, 2], [0, 1], [0, 1]);
        lhs('<?', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
        lhs('<?', [0, 2], [1, 2], [1, 2], [1, 2]);
        lhs('<?', 'islt', [0, 1], [0, 10]);
        lhs('<?', 'islt', [0, 1], [0, 0, 9, 9]);
        lhs('<?', 'islt', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<?', 'islt', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<?', 'islt', [0, 1], [0, 1], [0, 1], [0, 1]);
        rhs('<?', 'islt', [0, 1], [0, 1], [0, 1], [0, 2]);
        rhs('<?', 'islt', [0, 1], [0, 1], [0, 2], [0, 2]);
        rhs('<?', 'islt', [0, 1], [0, 2], [0, 2], [0, 2]);
        rhs('<?', 'islt', [0, 2], [0, 1], [0, 1], [0, 1]);
        rhs('<?', 'islt', [0, 2], [0, 1], [0, 1], [0, 2]);
        rhs('<?', 'islt', [0, 2], [0, 1], [0, 2], [0, 2]);
        rhs('<?', 'islt', [0, 2], [0, 2], [0, 2], [0, 2]);
        rhs('<?', 'islt', [0, 2], [1, 2], [0, 1], [0, 1]);
        rhs('<?', 'lt', [0, 2], [1, 2], [1, 2], [0, 1]);
        rhs('<?', [0, 2], [1, 2], [1, 2], [1, 2]);
        rhs('<?', 'islt', [0, 1], [0, 10]);
        rhs('<?', 'islt', [0, 1], [0, 0, 9, 9]);
        rhs('<?', 'islt', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<?', 'islt', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<=?', 'islte', [0, 1], [0, 1], [0, 1], [0, 1]);
        lhs('<=?', 'islte', [0, 1], [0, 1], [0, 1], [0, 2]);
        lhs('<=?', 'islte', [0, 1], [0, 1], [0, 2], [0, 2]);
        lhs('<=?', 'islte', [0, 1], [0, 2], [0, 2], [0, 2]);
        lhs('<=?', 'islte', [0, 2], [0, 1], [0, 1], [0, 1]);
        lhs('<=?', 'islte', [0, 2], [0, 1], [0, 1], [0, 2]);
        lhs('<=?', 'islte', [0, 2], [0, 1], [0, 2], [0, 2]);
        lhs('<=?', 'islte', [0, 2], [0, 2], [0, 2], [0, 2]);
        lhs('<=?', 'islte', [0, 2], [1, 2], [0, 1], [0, 1]);
        lhs('<=?', [0, 2], [1, 2], [1, 2], [0, 1]);
        lhs('<=?', 'lte', [0, 2], [1, 2], [1, 2], [1, 2]);
        lhs('<=?', 'islte', [0, 1], [0, 10]);
        lhs('<=?', 'islte', [0, 1], [0, 0, 9, 9]);
        lhs('<=?', 'islte', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<=?', 'islte', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<=?', 'islte', [0, 1], [0, 1], [0, 1], [0, 1]);
        rhs('<=?', 'islte', [0, 1], [0, 1], [0, 1], [0, 2]);
        rhs('<=?', 'islte', [0, 1], [0, 1], [0, 2], [0, 2]);
        rhs('<=?', 'islte', [0, 1], [0, 2], [0, 2], [0, 2]);
        rhs('<=?', 'islte', [0, 2], [0, 1], [0, 1], [0, 1]);
        rhs('<=?', 'islte', [0, 2], [0, 1], [0, 1], [0, 2]);
        rhs('<=?', 'islte', [0, 2], [0, 1], [0, 2], [0, 2]);
        rhs('<=?', 'islte', [0, 2], [0, 2], [0, 2], [0, 2]);
        rhs('<=?', [0, 2], [1, 2], [0, 1], [0, 1]);
        rhs('<=?', [0, 2], [1, 2], [1, 2], [0, 1]);
        rhs('<=?', 'lte', [0, 2], [1, 2], [1, 2], [1, 2]);
        rhs('<=?', 'islte', [0, 1], [0, 10]);
        rhs('<=?', 'islte', [0, 1], [0, 0, 9, 9]);
        rhs('<=?', 'islte', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<=?', 'islte', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!&?', 'isnall', [0, 1], [0, 1], [0, 1], [0, 1]);
        both('!&?', 'isnall', [0, 1], [0, 1], [0, 1], [0, 2]);
        both('!&?', 'isnall', [0, 1], [0, 1], [0, 2], [0, 2]);
        both('!&?', 'isnall', [0, 1], [0, 2], [0, 2], [0, 2]);
        both('!&?', 'isnall', [0, 2], [0, 1], [0, 1], [0, 1]);
        both('!&?', 'isnall', [0, 2], [0, 1], [0, 1], [0, 2]);
        both('!&?', 'isnall', [0, 2], [0, 1], [0, 2], [0, 2]);
        both('!&?', 'isnall', [0, 2], [0, 2], [0, 2], [0, 2]);
        both('!&?', 'isnall', [0, 2], [1, 2], [0, 1], [0, 1]);
        both('!&?', [0, 2], [1, 2], [1, 2], [0, 1]);
        both('!&?', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
        both('!&?', 'isnall', [0, 1], [0, 10]);
        both('!&?', 'isnall', [0, 1], [0, 0, 9, 9]);
        both('!&?', 'isnall', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!&?', 'isnall', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('|?', 'issome', [0, 1], [0, 1], [0, 1], [0, 1]);
        both('|?', 'issome', [0, 1], [0, 1], [0, 1], [0, 2]);
        both('|?', 'issome', [0, 1], [0, 1], [0, 2], [0, 2]);
        both('|?', 'issome', [0, 1], [0, 2], [0, 2], [0, 2]);
        both('|?', 'issome', [0, 2], [0, 1], [0, 1], [0, 1]);
        both('|?', 'issome', [0, 2], [0, 1], [0, 1], [0, 2]);
        both('|?', 'issome', [0, 2], [0, 1], [0, 2], [0, 2]);
        both('|?', 'issome', [0, 2], [0, 2], [0, 2], [0, 2]);
        both('|?', [0, 2], [1, 2], [0, 1], [0, 1]);
        both('|?', [0, 2], [1, 2], [1, 2], [0, 1]);
        both('|?', [0, 2], [1, 2], [1, 2], [1, 2]);
        both('|?', 'issome', [0, 1], [0, 10]);
        both('|?', 'issome', [0, 1], [0, 0, 9, 9]);
        both('|?', 'issome', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('|?', 'issome', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!|?', 'isnone', [0, 1], [0, 1], [0, 1], [0, 1]);
        both('!|?', 'isnone', [0, 1], [0, 1], [0, 1], [0, 2]);
        both('!|?', 'isnone', [0, 1], [0, 1], [0, 2], [0, 2]);
        both('!|?', 'isnone', [0, 1], [0, 2], [0, 2], [0, 2]);
        both('!|?', 'isnone', [0, 2], [0, 1], [0, 1], [0, 1]);
        both('!|?', 'isnone', [0, 2], [0, 1], [0, 1], [0, 2]);
        both('!|?', 'isnone', [0, 2], [0, 1], [0, 2], [0, 2]);
        both('!|?', 'isnone', [0, 2], [0, 2], [0, 2], [0, 2]);
        both('!|?', [0, 2], [1, 2], [0, 1], [0, 1]);
        both('!|?', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
        both('!|?', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
        both('!|?', 'isnone', [0, 1], [0, 10]);
        both('!|?', 'isnone', [0, 1], [0, 0, 9, 9]);
        both('!|?', 'isnone', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!|?', 'isnone', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('+', 'sum', [0, 1], [0, 1], [0, 1], [0, 1]);
        both('+', 'sum', [0, 1], [0, 1], [0, 1], [0, 2]);
        both('+', 'sum', [0, 1], [0, 1], [0, 2], [0, 2]);
        both('+', 'sum', [0, 1], [0, 2], [0, 2], [0, 2]);
        both('+', 'issome', [0, 2], [0, 1], [0, 1], [0, 1]);
        both('+', 'sum', [0, 2], [0, 1], [0, 1], [0, 2]);
        both('+', 'sum', [0, 2], [0, 1], [0, 2], [0, 2]);
        both('+', 'sum', [0, 2], [0, 2], [0, 2], [0, 2]);
        both('+', 'sum', [0, 2], [1, 2], [0, 1], [0, 1]);
        both('+', 'sum', [0, 2], [1, 2], [1, 2], [0, 1]);
        both('+', [0, 2], [1, 2], [1, 2], [1, 2]);
        both('+', 'issome', [0, 20], [0, 1], [0, 1], [0, 1]);
        both('+', 'issome', [0, 20], [0, 10]);
        both('+', 'issome', [0, 20], [0, 0, 9, 9]);
        both('+', 'issome', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('+', 'issome', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('-', 'minus', [0, 1], [0, 1], [0, 1], [0, 1]);
        lhs('-', 'minus', [0, 1], [0, 1], [0, 1], [0, 2]);
        lhs('-', 'minus', [0, 1], [0, 1], [0, 2], [0, 2]);
        lhs('-', 'minus', [0, 1], [0, 2], [0, 2], [0, 2]);
        lhs('-', 'minus', [0, 2], [0, 1], [0, 1], [0, 1]);
        lhs('-', 'minus', [0, 2], [0, 1], [0, 1], [0, 2]);
        lhs('-', 'minus', [0, 2], [0, 1], [0, 2], [0, 2]);
        lhs('-', 'minus', [0, 2], [0, 2], [0, 2], [0, 2]);
        lhs('-', 'minus', [0, 2], [1, 2], [0, 1], [0, 1]);
        lhs('-', 'minus', [0, 2], [1, 2], [1, 2], [0, 1]);
        lhs('-', [0, 2], [1, 2], [1, 2], [1, 2]);
        lhs('-', 'minus', [0, 20], [0, 1], [0, 1], [0, 1]);
        lhs('-', 'minus', [0, 20], [0, 10]);
        lhs('-', 'minus', [0, 20], [0, 0, 9, 9]);
        lhs('-', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('-', 'minus', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('-', 'minus', [0, 1], [0, 1], [0, 1], [0, 1]);
        rhs('-', 'minus', [0, 1], [0, 1], [0, 1], [0, 2]);
        rhs('-', 'minus', [0, 1], [0, 1], [0, 2], [0, 2]);
        rhs('-', 'minus', [0, 1], [0, 2], [0, 2], [0, 2]);
        rhs('-', 'minus', [0, 2], [0, 1], [0, 1], [0, 1]);
        rhs('-', 'minus', [0, 2], [0, 1], [0, 1], [0, 2]);
        rhs('-', 'minus', [0, 2], [0, 1], [0, 2], [0, 2]);
        rhs('-', 'minus', [0, 2], [0, 2], [0, 2], [0, 2]);
        rhs('-', [0, 2], [1, 2], [0, 1], [0, 1]);
        rhs('-', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
        rhs('-', [0, 2], [1, 2], [1, 2], [1, 2]);
        rhs('-', 'minus', [0, 20], [0, 1], [0, 1], [0, 1]);
        rhs('-', 'minus', [0, 20], [0, 10]);
        rhs('-', 'minus', [0, 20], [0, 0, 9, 9]);
        rhs('-', 'minus', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('-', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('*', 'product', [0, 1], [0, 1], [0, 1], [0, 1]);
        both('*', 'product', [0, 1], [0, 1], [0, 1], [0, 2]);
        both('*', 'product', [0, 1], [0, 1], [0, 2], [0, 2]);
        both('*', 'product', [0, 1], [0, 2], [0, 2], [0, 2]);
        both('*', 'product', [0, 2], [0, 1], [0, 1], [0, 1]);
        both('*', 'product', [0, 2], [0, 1], [0, 1], [0, 2]);
        both('*', 'product', [0, 2], [0, 1], [0, 2], [0, 2]);
        both('*', 'product', [0, 2], [0, 2], [0, 2], [0, 2]);
        both('*', 'product', [0, 2], [1, 2], [0, 1], [0, 1]);
        both('*', [0, 2], [1, 2], [1, 2], [0, 1]);
        both('*', 'product', [0, 2], [1, 2], [1, 2], [1, 2]);
        both('*', 'product', [0, 100], [0, 1], [0, 1], [0, 1]);
        both('*', 'product', [0, 100], [0, 10]);
        both('*', 'product', [0, 100], [0, 0, 9, 9]);
        both('*', 'product', [0, 100], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('*', 'product', [0, 100], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('/', 'div', [0, 1], [0, 1], [0, 1], [0, 1]);
        lhs('/', 'div', [0, 1], [0, 1], [0, 1], [0, 2]);
        lhs('/', 'div', [0, 1], [0, 1], [0, 2], [0, 2]);
        lhs('/', 'div', [0, 1], [0, 2], [0, 2], [0, 2]);
        lhs('/', 'div', [0, 2], [0, 1], [0, 1], [0, 1]);
        lhs('/', 'div', [0, 2], [0, 1], [0, 1], [0, 2]);
        lhs('/', 'div', [0, 2], [0, 1], [0, 2], [0, 2]);
        lhs('/', 'div', [0, 2], [0, 2], [0, 2], [0, 2]);
        lhs('/', 'div', [0, 2], [1, 2], [0, 1], [0, 1]);
        lhs('/', 'div', [0, 2], [1, 2], [1, 2], [0, 1]);
        lhs('/', 'div', [0, 2], [1, 2], [1, 2], [1, 2]);
        lhs('/', 'div', [0, 20], [0, 1], [0, 1], [0, 1]);
        lhs('/', 'div', [0, 20], [0, 10]);
        lhs('/', 'div', [0, 20], [0, 0, 9, 9]);
        lhs('/', 'div', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('/', 'div', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('/', 'div', [0, 1], [0, 1], [0, 1], [0, 1]);
        rhs('/', 'div', [0, 1], [0, 1], [0, 1], [0, 2]);
        rhs('/', 'div', [0, 1], [0, 1], [0, 2], [0, 2]);
        rhs('/', 'div', [0, 1], [0, 2], [0, 2], [0, 2]);
        rhs('/', 'div', [0, 2], [0, 1], [0, 1], [0, 1]);
        rhs('/', 'div', [0, 2], [0, 1], [0, 1], [0, 2]);
        rhs('/', 'div', [0, 2], [0, 1], [0, 2], [0, 2]);
        rhs('/', 'div', [0, 2], [0, 2], [0, 2], [0, 2]);
        rhs('/', 'div', [0, 2], [1, 2], [0, 1], [0, 1]);
        rhs('/', 'div', [0, 2], [1, 2], [1, 2], [0, 1]);
        rhs('/', 'div', [0, 2], [1, 2], [1, 2], [1, 2]);
        rhs('/', 'div', [0, 20], [0, 1], [0, 1], [0, 1]);
        rhs('/', 'div', [0, 20], [0, 10]);
        rhs('/', 'div', [0, 20], [0, 0, 9, 9]);
        rhs('/', 'div', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('/', 'div', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
      });
    });

    describe('XOR', function() {

      describe('binary', function() {

        let both = testBinaryBinary.bind(undefined, '^', '', ''); // A & B, A @ C  and  A & B, C @ A
        let lhs = testBinaryBinary.bind(undefined, '^', '', 'lhs'); // A & B, A @ C
        let rhs = testBinaryBinary.bind(undefined, '^', '', 'rhs'); // A & B, C @ A

        both('&', [0, 1], [0, 1], [0, 1]);
        //both('&', [0, 1], [0, 1], [0, 2]);
        //both('&', [0, 1], [0, 2], [0, 1]);
        //both('&', [0, 1], [0, 2], [0, 2]);
        //both('&', [0, 2], [0, 1], [0, 1]);
        //both('&', [0, 2], [0, 1], [0, 2]);
        //both('&', [0, 2], [0, 2], [0, 1]);
        //both('&', [0, 2], [0, 2], [0, 2]);
        //both('&', [0, 2], [0, 1], [1, 2]);
        //both('&', [0, 2], [1, 2], [0, 1]);
        //both('&', [0, 2], [1, 2], [1, 2]);
        both('&', [0, 10]);
        both('&', [0, 0, 9, 9]);
        both('&', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('&', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!=', [0, 1], [0, 1], [0, 1]);
        //both('!=', [0, 1], [0, 1], [0, 2]);
        //both('!=', [0, 1], [0, 2], [0, 1]);
        //both('!=', [0, 1], [0, 2], [0, 2]);
        //both('!=', [0, 2], [0, 1], [0, 1]);
        //both('!=', [0, 2], [0, 1], [0, 2]);
        //both('!=', [0, 2], [0, 2], [0, 1]);
        //both('!=', [0, 2], [0, 2], [0, 2]);
        //both('!=', [0, 2], [0, 1], [1, 2]);
        //both('!=', [0, 2], [1, 2], [0, 1]);
        //both('!=', [0, 2], [1, 2], [1, 2]);
        both('!=', 'diff,xor', [0, 10]);
        both('!=', [0, 0, 9, 9]);
        both('!=', 'diff,xor', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!=', 'diff,xor', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('->', 'some', [0, 1], [0, 1], [0, 1]);
        //lhs('->', [0, 1], [0, 1], [0, 2]);
        //lhs('->', [0, 1], [0, 2], [0, 1]);
        //lhs('->', [0, 1], [0, 2], [0, 2]);
        //lhs('->', [0, 2], [0, 1], [0, 1]);
        //lhs('->', [0, 2], [0, 1], [0, 2]);
        //lhs('->', [0, 2], [0, 2], [0, 1]);
        //lhs('->', [0, 2], [0, 2], [0, 2]);
        //lhs('->', [0, 2], [0, 1], [1, 2]);
        //lhs('->', [0, 2], [1, 2], [0, 1]);
        //lhs('->', [0, 2], [1, 2], [1, 2]);
        lhs('->', 'some', [0, 10]);
        lhs('->', 'some', [0, 0, 9, 9]);
        lhs('->', 'some', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('->', 'some', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('->', 'nall', [0, 1], [0, 1], [0, 1]);
        //rhs('->', [0, 1], [0, 1], [0, 2]);
        //rhs('->', [0, 1], [0, 2], [0, 1]);
        //rhs('->', [0, 1], [0, 2], [0, 2]);
        //rhs('->', [0, 2], [0, 1], [0, 1]);
        //rhs('->', [0, 2], [0, 1], [0, 2]);
        //rhs('->', [0, 2], [0, 2], [0, 1]);
        //rhs('->', [0, 2], [0, 2], [0, 2]);
        //rhs('->', [0, 2], [0, 1], [1, 2]);
        //rhs('->', [0, 2], [1, 2], [0, 1]);
        //rhs('->', [0, 2], [1, 2], [1, 2]);
        rhs('->', 'nall', [0, 10]);
        rhs('->', 'nall', [0, 0, 9, 9]);
        rhs('->', 'nall', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('->', 'nall', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<', [0, 1], [0, 1], [0, 1]);
        //lhs('<', [0, 1], [0, 1], [0, 2]);
        //lhs('<', [0, 1], [0, 2], [0, 1]);
        //lhs('<', [0, 1], [0, 2], [0, 2]);
        //lhs('<', [0, 2], [0, 1], [0, 1]);
        //lhs('<', [0, 2], [0, 1], [0, 2]);
        //lhs('<', [0, 2], [0, 2], [0, 1]);
        //lhs('<', [0, 2], [0, 2], [0, 2]);
        //lhs('<', [0, 2], [0, 1], [1, 2]);
        //lhs('<', [0, 2], [1, 2], [0, 1]);
        //lhs('<', [0, 2], [1, 2], [1, 2]);
        lhs('<', 'lt,xor', [0, 10]);
        lhs('<', [0, 0, 9, 9]);
        lhs('<', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<', [0, 1], [0, 1], [0, 1]);
        //rhs('<', [0, 1], [0, 1], [0, 2]);
        //rhs('<', [0, 1], [0, 2], [0, 1]);
        //rhs('<', [0, 1], [0, 2], [0, 2]);
        //rhs('<', [0, 2], [0, 1], [0, 1]);
        //rhs('<', [0, 2], [0, 1], [0, 2]);
        //rhs('<', [0, 2], [0, 2], [0, 1]);
        //rhs('<', [0, 2], [0, 2], [0, 2]);
        //rhs('<', [0, 2], [0, 1], [1, 2]);
        //rhs('<', [0, 2], [1, 2], [0, 1]);
        //rhs('<', [0, 2], [1, 2], [1, 2]);
        rhs('<', [0, 10]);
        rhs('<', [0, 0, 9, 9]);
        rhs('<', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<=', 'some', [0, 1], [0, 1], [0, 1]);
        //lhs('<=', [0, 1], [0, 1], [0, 2]);
        //lhs('<=', [0, 1], [0, 2], [0, 1]);
        //lhs('<=', [0, 1], [0, 2], [0, 2]);
        //lhs('<=', [0, 2], [0, 1], [0, 1]);
        //lhs('<=', [0, 2], [0, 1], [0, 2]);
        //lhs('<=', [0, 2], [0, 2], [0, 1]);
        //lhs('<=', [0, 2], [0, 2], [0, 2]);
        //lhs('<=', [0, 2], [0, 1], [1, 2]);
        //lhs('<=', [0, 2], [1, 2], [0, 1]);
        //lhs('<=', [0, 2], [1, 2], [1, 2]);
        lhs('<=', 'lte,xor', [0, 10]);
        lhs('<=', 'some', [0, 0, 9, 9]);
        lhs('<=', 'some', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<=', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<=', 'nall', [0, 1], [0, 1], [0, 1]);
        //rhs('<=', [0, 1], [0, 1], [0, 2]);
        //rhs('<=', [0, 1], [0, 2], [0, 1]);
        //rhs('<=', [0, 1], [0, 2], [0, 2]);
        //rhs('<=', [0, 2], [0, 1], [0, 1]);
        //rhs('<=', [0, 2], [0, 1], [0, 2]);
        //rhs('<=', [0, 2], [0, 2], [0, 1]);
        //rhs('<=', [0, 2], [0, 2], [0, 2]);
        //rhs('<=', [0, 2], [0, 1], [1, 2]);
        //rhs('<=', [0, 2], [1, 2], [0, 1]);
        //rhs('<=', [0, 2], [1, 2], [1, 2]);
        rhs('<=', 'lte,xor', [0, 10]);
        rhs('<=', 'nall', [0, 0, 9, 9]);
        rhs('<=', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<=', 'nall', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!&', 'imp', [0, 1], [0, 1], [0, 1]);
        //both('!&', [0, 1], [0, 1], [0, 2]);
        //both('!&', [0, 1], [0, 2], [0, 1]);
        //both('!&', [0, 1], [0, 2], [0, 2]);
        //both('!&', [0, 2], [0, 1], [0, 1]);
        //both('!&', [0, 2], [0, 1], [0, 2]);
        //both('!&', [0, 2], [0, 2], [0, 1]);
        //both('!&', [0, 2], [0, 2], [0, 2]);
        //both('!&', [0, 2], [0, 1], [1, 2]);
        //both('!&', [0, 2], [1, 2], [0, 1]);
        //both('!&', [0, 2], [1, 2], [1, 2]);
        both('!&', 'imp', [0, 10]);
        both('!&', 'imp', [0, 0, 9, 9]);
        both('!&', 'imp', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!&', 'imp', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('!->', [0, 1], [0, 1], [0, 1]);
        //lhs('!->', [0, 1], [0, 1], [0, 2]);
        //lhs('!->', [0, 1], [0, 2], [0, 1]);
        //lhs('!->', [0, 1], [0, 2], [0, 2]);
        //lhs('!->', [0, 2], [0, 1], [0, 1]);
        //lhs('!->', [0, 2], [0, 1], [0, 2]);
        //lhs('!->', [0, 2], [0, 2], [0, 1]);
        //lhs('!->', [0, 2], [0, 2], [0, 2]);
        //lhs('!->', [0, 2], [0, 1], [1, 2]);
        //lhs('!->', [0, 2], [1, 2], [0, 1]);
        //lhs('!->', [0, 2], [1, 2], [1, 2]);
        lhs('!->', [0, 10]);
        lhs('!->', [0, 0, 9, 9]);
        lhs('!->', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('!->', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('!->', [0, 1], [0, 1], [0, 1]);
        //rhs('!->', [0, 1], [0, 1], [0, 2]);
        //rhs('!->', [0, 1], [0, 2], [0, 1]);
        //rhs('!->', [0, 1], [0, 2], [0, 2]);
        //rhs('!->', [0, 2], [0, 1], [0, 1]);
        //rhs('!->', [0, 2], [0, 1], [0, 2]);
        //rhs('!->', [0, 2], [0, 2], [0, 1]);
        //rhs('!->', [0, 2], [0, 2], [0, 2]);
        //rhs('!->', [0, 2], [0, 1], [1, 2]);
        //rhs('!->', [0, 2], [1, 2], [0, 1]);
        //rhs('!->', [0, 2], [1, 2], [1, 2]);
        rhs('!->', [0, 10]);
        rhs('!->', [0, 0, 9, 9]);
        rhs('!->', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('!->', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!|', [0, 1], [0, 1], [0, 1]);
        //both('!|', [0, 1], [0, 1], [0, 2]);
        //both('!|', [0, 1], [0, 2], [0, 1]);
        //both('!|', [0, 1], [0, 2], [0, 2]);
        //both('!|', [0, 2], [0, 1], [0, 1]);
        //both('!|', [0, 2], [0, 1], [0, 2]);
        //both('!|', [0, 2], [0, 2], [0, 1]);
        //both('!|', [0, 2], [0, 2], [0, 2]);
        //both('!|', [0, 2], [0, 1], [1, 2]);
        //both('!|', [0, 2], [1, 2], [0, 1]);
        //both('!|', [0, 2], [1, 2], [1, 2]);
        both('!|', [0, 10]);
        both('!|', [0, 0, 9, 9]);
        both('!|', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!|', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('==', 'xor', [0, 1], [0, 1], [0, 1]);
        //both('==', [0, 1], [0, 1], [0, 2]);
        //both('==', [0, 1], [0, 2], [0, 1]);
        //both('==', [0, 1], [0, 2], [0, 2]);
        //both('==', [0, 2], [0, 1], [0, 1]);
        //both('==', [0, 2], [0, 1], [0, 2]);
        //both('==', [0, 2], [0, 2], [0, 1]);
        //both('==', [0, 2], [0, 2], [0, 2]);
        //both('==', [0, 2], [0, 1], [1, 2]);
        //both('==', [0, 2], [1, 2], [0, 1]);
        //both('==', [0, 2], [1, 2], [1, 2]);
        both('==', 'xor', [0, 10]);
        both('==', 'xor', [0, 0, 9, 9]);
        both('==', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('==', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!^', 'xor', [0, 1], [0, 1], [0, 1]);
        //both('!^', [0, 1], [0, 1], [0, 2]);
        //both('!^', [0, 1], [0, 2], [0, 1]);
        //both('!^', [0, 1], [0, 2], [0, 2]);
        //both('!^', [0, 2], [0, 1], [0, 1]);
        //both('!^', [0, 2], [0, 1], [0, 2]);
        //both('!^', [0, 2], [0, 2], [0, 1]);
        //both('!^', [0, 2], [0, 2], [0, 2]);
        //both('!^', [0, 2], [0, 1], [1, 2]);
        //both('!^', [0, 2], [1, 2], [0, 1]);
        //both('!^', [0, 2], [1, 2], [1, 2]);
        both('!^', 'xor', [0, 10]);
        both('!^', 'xor', [0, 0, 9, 9]);
        both('!^', 'xor', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!^', 'xor', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('^', [0, 1], [0, 1], [0, 1]);
        //both('^', [0, 1], [0, 1], [0, 2]);
        //both('^', [0, 1], [0, 2], [0, 1]);
        //both('^', [0, 1], [0, 2], [0, 2]);
        //both('^', [0, 2], [0, 1], [0, 1]);
        //both('^', [0, 2], [0, 1], [0, 2]);
        //both('^', [0, 2], [0, 2], [0, 1]);
        //both('^', [0, 2], [0, 2], [0, 2]);
        //both('^', [0, 2], [0, 1], [1, 2]);
        //both('^', [0, 2], [1, 2], [0, 1]);
        //both('^', [0, 2], [1, 2], [1, 2]);
        both('^', [0, 10]);
        both('^', [0, 0, 9, 9]);
        both('^', [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('^', [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
      });

      describe('ternary with shared arg', function() {

        let both = testBinaryTernarySharedArgs.bind(undefined, '^', '', ''); // A & B, R = A @ C  and  A & B, R = C @ A
        let lhs = testBinaryTernarySharedArgs.bind(undefined, '^', '', 'lhs'); // A & B, R = A @ C
        let rhs = testBinaryTernarySharedArgs.bind(undefined, '^', '', 'rhs'); // A & B, R = C @ A

        // A & B, R = A &? C
        both('&?', 'isall,xor', [0, 1], [0, 1], [0, 1], [0, 1]);
        both('&?', 'isall,xor', [0, 1], [0, 1], [0, 1], [0, 2]);
        both('&?', 'isall,xor', [0, 1], [0, 1], [0, 2], [0, 2]);
        both('&?', 'isall,xor', [0, 1], [0, 2], [0, 2], [0, 2]);
        both('&?', 'isall,xor', [0, 2], [0, 1], [0, 1], [0, 1]);
        both('&?', 'isall,xor', [0, 2], [0, 1], [0, 1], [0, 2]);
        both('&?', 'isall,xor', [0, 2], [0, 1], [0, 2], [0, 2]);
        both('&?', 'isall,xor', [0, 2], [0, 2], [0, 2], [0, 2]);
        both('&?', [0, 2], [1, 2], [0, 1], [0, 1]);
        both('&?', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
        both('&?', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
        both('&?', 'isall,xor', [0, 1], [0, 10]);
        both('&?', 'isall,xor', [0, 1], [0, 0, 9, 9]);
        both('&?', 'isall,xor', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('&?', 'isall,xor', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('==?', 'issame,xor', [0, 1], [0, 1], [0, 1], [0, 1]);
        both('==?', 'issame,xor', [0, 1], [0, 1], [0, 1], [0, 2]);
        both('==?', 'issame,xor', [0, 1], [0, 1], [0, 2], [0, 2]);
        both('==?', 'issame,xor', [0, 1], [0, 2], [0, 2], [0, 2]);
        both('==?', 'issame,xor', [0, 2], [0, 1], [0, 1], [0, 1]);
        both('==?', 'issame,xor', [0, 2], [0, 1], [0, 1], [0, 2]);
        both('==?', 'issame,xor', [0, 2], [0, 1], [0, 2], [0, 2]);
        both('==?', 'issame,xor', [0, 2], [0, 2], [0, 2], [0, 2]);
        both('==?', 'issame', [0, 2], [1, 2], [0, 1], [0, 1]);
        both('==?', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
        both('==?', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
        both('==?', 'issame,xor', [0, 1], [0, 10]);
        both('==?', 'issame,xor', [0, 1], [0, 0, 9, 9]);
        both('==?', 'issame,xor', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('==?', 'issame,xor', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!=?', 'isdiff,xor', [0, 1], [0, 1], [0, 1], [0, 1]);
        both('!=?', 'isdiff,xor', [0, 1], [0, 1], [0, 1], [0, 2]);
        both('!=?', 'isdiff,xor', [0, 1], [0, 1], [0, 2], [0, 2]);
        both('!=?', 'isdiff,xor', [0, 1], [0, 2], [0, 2], [0, 2]);
        both('!=?', 'isdiff,xor', [0, 2], [0, 1], [0, 1], [0, 1]);
        both('!=?', 'isdiff,xor', [0, 2], [0, 1], [0, 1], [0, 2]);
        both('!=?', 'isdiff,xor', [0, 2], [0, 1], [0, 2], [0, 2]);
        both('!=?', 'isdiff,xor', [0, 2], [0, 2], [0, 2], [0, 2]);
        both('!=?', 'isdiff', [0, 2], [1, 2], [0, 1], [0, 1]);
        both('!=?', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
        both('!=?', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
        both('!=?', 'isdiff,xor', [0, 1], [0, 10]);
        both('!=?', 'isdiff,xor', [0, 1], [0, 0, 9, 9]);
        both('!=?', 'isdiff,xor', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!=?', 'isdiff,xor', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<?', 'islt,xor', [0, 1], [0, 1], [0, 1], [0, 1]);
        lhs('<?', 'islt,xor', [0, 1], [0, 1], [0, 1], [0, 2]);
        lhs('<?', 'islt,xor', [0, 1], [0, 1], [0, 2], [0, 2]);
        lhs('<?', 'islt,xor', [0, 1], [0, 2], [0, 2], [0, 2]);
        lhs('<?', 'islt,xor', [0, 2], [0, 1], [0, 1], [0, 1]);
        lhs('<?', 'islt,xor', [0, 2], [0, 1], [0, 1], [0, 2]);
        lhs('<?', 'islt,xor', [0, 2], [0, 1], [0, 2], [0, 2]);
        lhs('<?', 'islt,xor', [0, 2], [0, 2], [0, 2], [0, 2]);
        lhs('<?', [0, 2], [1, 2], [0, 1], [0, 1]);
        lhs('<?', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
        lhs('<?', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
        lhs('<?', 'islt,xor', [0, 1], [0, 10]);
        lhs('<?', 'islt,xor', [0, 1], [0, 0, 9, 9]);
        lhs('<?', 'islt,xor', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<?', 'islt,xor', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<?', 'islt,xor', [0, 1], [0, 1], [0, 1], [0, 1]);
        rhs('<?', 'islt,xor', [0, 1], [0, 1], [0, 1], [0, 2]);
        rhs('<?', 'islt,xor', [0, 1], [0, 1], [0, 2], [0, 2]);
        rhs('<?', 'islt,xor', [0, 1], [0, 2], [0, 2], [0, 2]);
        rhs('<?', 'islt,xor', [0, 2], [0, 1], [0, 1], [0, 1]);
        rhs('<?', 'islt,xor', [0, 2], [0, 1], [0, 1], [0, 2]);
        rhs('<?', 'islt,xor', [0, 2], [0, 1], [0, 2], [0, 2]);
        rhs('<?', 'islt,xor', [0, 2], [0, 2], [0, 2], [0, 2]);
        rhs('<?', 'islt', [0, 2], [1, 2], [0, 1], [0, 1]);
        rhs('<?', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
        rhs('<?', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
        rhs('<?', 'islt,xor', [0, 1], [0, 10]);
        rhs('<?', 'islt,xor', [0, 1], [0, 0, 9, 9]);
        rhs('<?', 'islt,xor', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<?', 'islt,xor', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<=?', 'islte,xor', [0, 1], [0, 1], [0, 1], [0, 1]);
        lhs('<=?', 'islte,xor', [0, 1], [0, 1], [0, 1], [0, 2]);
        lhs('<=?', 'islte,xor', [0, 1], [0, 1], [0, 2], [0, 2]);
        lhs('<=?', 'islte,xor', [0, 1], [0, 2], [0, 2], [0, 2]);
        lhs('<=?', 'islte,xor', [0, 2], [0, 1], [0, 1], [0, 1]);
        lhs('<=?', 'islte,xor', [0, 2], [0, 1], [0, 1], [0, 2]);
        lhs('<=?', 'islte,xor', [0, 2], [0, 1], [0, 2], [0, 2]);
        lhs('<=?', 'islte,xor', [0, 2], [0, 2], [0, 2], [0, 2]);
        lhs('<=?', 'islte', [0, 2], [1, 2], [0, 1], [0, 1]);
        lhs('<=?', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
        lhs('<=?', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
        lhs('<=?', 'islte,xor', [0, 1], [0, 10]);
        lhs('<=?', 'islte,xor', [0, 1], [0, 0, 9, 9]);
        lhs('<=?', 'islte,xor', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<=?', 'islte,xor', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<=?', 'islte,xor', [0, 1], [0, 1], [0, 1], [0, 1]);
        rhs('<=?', 'islte,xor', [0, 1], [0, 1], [0, 1], [0, 2]);
        rhs('<=?', 'islte,xor', [0, 1], [0, 1], [0, 2], [0, 2]);
        rhs('<=?', 'islte,xor', [0, 1], [0, 2], [0, 2], [0, 2]);
        rhs('<=?', 'islte,xor', [0, 2], [0, 1], [0, 1], [0, 1]);
        rhs('<=?', 'islte,xor', [0, 2], [0, 1], [0, 1], [0, 2]);
        rhs('<=?', 'islte,xor', [0, 2], [0, 1], [0, 2], [0, 2]);
        rhs('<=?', 'islte,xor', [0, 2], [0, 2], [0, 2], [0, 2]);
        rhs('<=?', [0, 2], [1, 2], [0, 1], [0, 1]);
        rhs('<=?', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
        rhs('<=?', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
        rhs('<=?', 'islte,xor', [0, 1], [0, 10]);
        rhs('<=?', 'islte,xor', [0, 1], [0, 0, 9, 9]);
        rhs('<=?', 'islte,xor', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<=?', 'islte,xor', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!&?', 'isnall,xor', [0, 1], [0, 1], [0, 1], [0, 1]);
        both('!&?', 'isnall,xor', [0, 1], [0, 1], [0, 1], [0, 2]);
        both('!&?', 'isnall,xor', [0, 1], [0, 1], [0, 2], [0, 2]);
        both('!&?', 'isnall,xor', [0, 1], [0, 2], [0, 2], [0, 2]);
        both('!&?', 'isnall,xor', [0, 2], [0, 1], [0, 1], [0, 1]);
        both('!&?', 'isnall,xor', [0, 2], [0, 1], [0, 1], [0, 2]);
        both('!&?', 'isnall,xor', [0, 2], [0, 1], [0, 2], [0, 2]);
        both('!&?', 'isnall,xor', [0, 2], [0, 2], [0, 2], [0, 2]);
        both('!&?', 'isnall', [0, 2], [1, 2], [0, 1], [0, 1]);
        both('!&?', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
        both('!&?', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
        both('!&?', 'isnall,xor', [0, 1], [0, 10]);
        both('!&?', 'isnall,xor', [0, 1], [0, 0, 9, 9]);
        both('!&?', 'isnall,xor', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!&?', 'isnall,xor', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('|?', 'issome,xor', [0, 1], [0, 1], [0, 1], [0, 1]);
        both('|?', 'issome,xor', [0, 1], [0, 1], [0, 1], [0, 2]);
        both('|?', 'issome,xor', [0, 1], [0, 1], [0, 2], [0, 2]);
        both('|?', 'issome,xor', [0, 1], [0, 2], [0, 2], [0, 2]);
        both('|?', 'issome,xor', [0, 2], [0, 1], [0, 1], [0, 1]);
        both('|?', 'issome,xor', [0, 2], [0, 1], [0, 1], [0, 2]);
        both('|?', 'issome,xor', [0, 2], [0, 1], [0, 2], [0, 2]);
        both('|?', 'issome,xor', [0, 2], [0, 2], [0, 2], [0, 2]);
        both('|?', [0, 2], [1, 2], [0, 1], [0, 1]);
        both('|?', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
        both('|?', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
        both('|?', 'issome,xor', [0, 1], [0, 10]);
        both('|?', 'issome,xor', [0, 1], [0, 0, 9, 9]);
        both('|?', 'issome,xor', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('|?', 'issome,xor', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!|?', 'isnone,xor', [0, 1], [0, 1], [0, 1], [0, 1]);
        both('!|?', 'isnone,xor', [0, 1], [0, 1], [0, 1], [0, 2]);
        both('!|?', 'isnone,xor', [0, 1], [0, 1], [0, 2], [0, 2]);
        both('!|?', 'isnone,xor', [0, 1], [0, 2], [0, 2], [0, 2]);
        both('!|?', 'isnone,xor', [0, 2], [0, 1], [0, 1], [0, 1]);
        both('!|?', 'isnone,xor', [0, 2], [0, 1], [0, 1], [0, 2]);
        both('!|?', 'isnone,xor', [0, 2], [0, 1], [0, 2], [0, 2]);
        both('!|?', 'isnone,xor', [0, 2], [0, 2], [0, 2], [0, 2]);
        both('!|?', [0, 2], [1, 2], [0, 1], [0, 1]);
        both('!|?', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
        both('!|?', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
        both('!|?', 'isnone,xor', [0, 1], [0, 10]);
        both('!|?', 'isnone,xor', [0, 1], [0, 0, 9, 9]);
        both('!|?', 'isnone,xor', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!|?', 'isnone,xor', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('+', 'sum,xor', [0, 1], [0, 1], [0, 1], [0, 1]);
        both('+', 'sum,xor', [0, 1], [0, 1], [0, 1], [0, 2]);
        both('+', 'sum,xor', [0, 1], [0, 1], [0, 2], [0, 2]);
        both('+', 'sum,xor', [0, 1], [0, 2], [0, 2], [0, 2]);
        both('+', 'issome,xor', [0, 2], [0, 1], [0, 1], [0, 1]);
        both('+', 'sum,xor', [0, 2], [0, 1], [0, 1], [0, 2]);
        both('+', 'sum,xor', [0, 2], [0, 1], [0, 2], [0, 2]);
        both('+', 'sum,xor', [0, 2], [0, 2], [0, 2], [0, 2]);
        both('+', 'sum', [0, 2], [1, 2], [0, 1], [0, 1]);
        both('+', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
        both('+', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
        both('+', 'issome,xor', [0, 20], [0, 1], [0, 1], [0, 1]);
        both('+', 'issome,xor', [0, 20], [0, 10]);
        both('+', 'issome,xor', [0, 20], [0, 0, 9, 9]);
        both('+', 'issome,xor', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('+', 'issome,xor', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('-', 'minus,xor', [0, 1], [0, 1], [0, 1], [0, 1]);
        lhs('-', 'minus,xor', [0, 1], [0, 1], [0, 1], [0, 2]);
        lhs('-', 'minus,xor', [0, 1], [0, 1], [0, 2], [0, 2]);
        lhs('-', 'minus,xor', [0, 1], [0, 2], [0, 2], [0, 2]);
        lhs('-', 'minus,xor', [0, 2], [0, 1], [0, 1], [0, 1]);
        lhs('-', 'minus,xor', [0, 2], [0, 1], [0, 1], [0, 2]);
        lhs('-', 'minus,xor', [0, 2], [0, 1], [0, 2], [0, 2]);
        lhs('-', 'minus,xor', [0, 2], [0, 2], [0, 2], [0, 2]);
        lhs('-', 'minus', [0, 2], [1, 2], [0, 1], [0, 1]);
        lhs('-', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
        lhs('-', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
        lhs('-', 'minus,xor', [0, 20], [0, 1], [0, 1], [0, 1]);
        lhs('-', 'minus,xor', [0, 20], [0, 10]);
        lhs('-', 'minus,xor', [0, 20], [0, 0, 9, 9]);
        lhs('-', 'xor', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('-', 'minus,xor', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('-', 'minus,xor', [0, 1], [0, 1], [0, 1], [0, 1]);
        rhs('-', 'minus,xor', [0, 1], [0, 1], [0, 1], [0, 2]);
        rhs('-', 'minus,xor', [0, 1], [0, 1], [0, 2], [0, 2]);
        rhs('-', 'minus,xor', [0, 1], [0, 2], [0, 2], [0, 2]);
        rhs('-', 'minus,xor', [0, 2], [0, 1], [0, 1], [0, 1]);
        rhs('-', 'minus,xor', [0, 2], [0, 1], [0, 1], [0, 2]);
        rhs('-', 'minus,xor', [0, 2], [0, 1], [0, 2], [0, 2]);
        rhs('-', 'minus,xor', [0, 2], [0, 2], [0, 2], [0, 2]);
        rhs('-', [0, 2], [1, 2], [0, 1], [0, 1]);
        rhs('-', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
        rhs('-', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
        rhs('-', 'minus,xor', [0, 20], [0, 1], [0, 1], [0, 1]);
        rhs('-', 'minus,xor', [0, 20], [0, 10]);
        rhs('-', 'minus,xor', [0, 20], [0, 0, 9, 9]);
        rhs('-', 'minus,xor', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('-', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('*', 'product,xor', [0, 1], [0, 1], [0, 1], [0, 1]);
        both('*', 'product,xor', [0, 1], [0, 1], [0, 1], [0, 2]);
        both('*', 'product,xor', [0, 1], [0, 1], [0, 2], [0, 2]);
        both('*', 'product,xor', [0, 1], [0, 2], [0, 2], [0, 2]);
        both('*', 'product,xor', [0, 2], [0, 1], [0, 1], [0, 1]);
        both('*', 'product,xor', [0, 2], [0, 1], [0, 1], [0, 2]);
        both('*', 'product,xor', [0, 2], [0, 1], [0, 2], [0, 2]);
        both('*', 'product,xor', [0, 2], [0, 2], [0, 2], [0, 2]);
        both('*', 'product', [0, 2], [1, 2], [0, 1], [0, 1]);
        both('*', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
        both('*', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
        both('*', 'product,xor', [0, 100], [0, 1], [0, 1], [0, 1]);
        both('*', 'product,xor', [0, 100], [0, 10]);
        both('*', 'product,xor', [0, 100], [0, 0, 9, 9]);
        both('*', 'product,xor', [0, 100], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('*', 'product,xor', [0, 100], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('/', 'div,xor', [0, 1], [0, 1], [0, 1], [0, 1]);
        lhs('/', 'div,xor', [0, 1], [0, 1], [0, 1], [0, 2]);
        lhs('/', 'div,xor', [0, 1], [0, 1], [0, 2], [0, 2]);
        lhs('/', 'div,xor', [0, 1], [0, 2], [0, 2], [0, 2]);
        lhs('/', 'div,xor', [0, 2], [0, 1], [0, 1], [0, 1]);
        lhs('/', 'div,xor', [0, 2], [0, 1], [0, 1], [0, 2]);
        lhs('/', 'div,xor', [0, 2], [0, 1], [0, 2], [0, 2]);
        lhs('/', 'div,xor', [0, 2], [0, 2], [0, 2], [0, 2]);
        lhs('/', 'div', [0, 2], [1, 2], [0, 1], [0, 1]);
        lhs('/', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
        lhs('/', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
        lhs('/', 'div,xor', [0, 20], [0, 1], [0, 1], [0, 1]);
        lhs('/', 'div,xor', [0, 20], [0, 10]);
        lhs('/', 'div,xor', [0, 20], [0, 0, 9, 9]);
        lhs('/', 'div,xor', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('/', 'div,xor', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('/', 'div,xor', [0, 1], [0, 1], [0, 1], [0, 1]);
        rhs('/', 'div,xor', [0, 1], [0, 1], [0, 1], [0, 2]);
        rhs('/', 'div,xor', [0, 1], [0, 1], [0, 2], [0, 2]);
        rhs('/', 'div,xor', [0, 1], [0, 2], [0, 2], [0, 2]);
        rhs('/', 'div,xor', [0, 2], [0, 1], [0, 1], [0, 1]);
        rhs('/', 'div,xor', [0, 2], [0, 1], [0, 1], [0, 2]);
        rhs('/', 'div,xor', [0, 2], [0, 1], [0, 2], [0, 2]);
        rhs('/', 'div,xor', [0, 2], [0, 2], [0, 2], [0, 2]);
        rhs('/', 'div', [0, 2], [1, 2], [0, 1], [0, 1]);
        rhs('/', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
        rhs('/', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
        rhs('/', 'div,xor', [0, 20], [0, 1], [0, 1], [0, 1]);
        rhs('/', 'div,xor', [0, 20], [0, 10]);
        rhs('/', 'div,xor', [0, 20], [0, 0, 9, 9]);
        rhs('/', 'div,xor', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('/', 'div,xor', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
      });

      describe('ternary with shared result', function() {

        let both = testBinaryTernarySharedResult.bind(undefined, '^', '', ''); // A & B, R = A @ C  and  A & B, R = C @ A
        let lhs = testBinaryTernarySharedResult.bind(undefined, '^', '', 'lhs'); // A & B, R = A @ C
        let rhs = testBinaryTernarySharedResult.bind(undefined, '^', '', 'rhs'); // A & B, R = C @ A

        // A & B, R = A &? C
        both('&?', 'isnall', [0, 1], [0, 1], [0, 1], [0, 1]);
        both('&?', 'isnall', [0, 1], [0, 1], [0, 1], [0, 2]);
        both('&?', 'isnall', [0, 1], [0, 1], [0, 2], [0, 2]);
        both('&?', 'isnall', [0, 1], [0, 2], [0, 2], [0, 2]);
        both('&?', 'isnall', [0, 2], [0, 1], [0, 1], [0, 1]);
        both('&?', 'isnall', [0, 2], [0, 1], [0, 1], [0, 2]);
        both('&?', 'isnall', [0, 2], [0, 1], [0, 2], [0, 2]);
        both('&?', 'isnall', [0, 2], [0, 2], [0, 2], [0, 2]);
        both('&?', 'xor', [0, 2], [1, 2], [0, 1], [0, 1]);
        both('&?', [0, 2], [1, 2], [1, 2], [0, 1]);
        both('&?', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
        both('&?', 'isnall', [0, 1], [0, 10]);
        both('&?', 'isnall', [0, 1], [0, 0, 9, 9]);
        both('&?', 'isnall', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('&?', 'isnall', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('==?', 'issame,xor', [0, 1], [0, 1], [0, 1], [0, 1]);
        both('==?', 'issame,xor', [0, 1], [0, 1], [0, 1], [0, 2]);
        both('==?', 'issame,xor', [0, 1], [0, 1], [0, 2], [0, 2]);
        both('==?', 'issame,xor', [0, 1], [0, 2], [0, 2], [0, 2]);
        both('==?', 'issame,xor', [0, 2], [0, 1], [0, 1], [0, 1]);
        both('==?', 'issame,xor', [0, 2], [0, 1], [0, 1], [0, 2]);
        both('==?', 'issame,xor', [0, 2], [0, 1], [0, 2], [0, 2]);
        both('==?', 'issame,xor', [0, 2], [0, 2], [0, 2], [0, 2]);
        both('==?', 'issame,xor', [0, 2], [1, 2], [0, 1], [0, 1]);
        both('==?', 'diff', [0, 2], [1, 2], [1, 2], [0, 1]);
        both('==?', 'diff', [0, 2], [1, 2], [1, 2], [1, 2]);
        both('==?', 'issame,xor', [0, 1], [0, 10]);
        both('==?', 'issame,xor', [0, 1], [0, 0, 9, 9]);
        both('==?', 'issame,xor', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('==?', 'issame,xor', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!=?', 'isdiff,xor', [0, 1], [0, 1], [0, 1], [0, 1]);
        both('!=?', 'isdiff,xor', [0, 1], [0, 1], [0, 1], [0, 2]);
        both('!=?', 'isdiff,xor', [0, 1], [0, 1], [0, 2], [0, 2]);
        both('!=?', 'isdiff,xor', [0, 1], [0, 2], [0, 2], [0, 2]);
        both('!=?', 'isdiff,xor', [0, 2], [0, 1], [0, 1], [0, 1]);
        both('!=?', 'isdiff,xor', [0, 2], [0, 1], [0, 1], [0, 2]);
        both('!=?', 'isdiff,xor', [0, 2], [0, 1], [0, 2], [0, 2]);
        both('!=?', 'isdiff,xor', [0, 2], [0, 2], [0, 2], [0, 2]);
        both('!=?', 'isdiff,xor', [0, 2], [1, 2], [0, 1], [0, 1]);
        both('!=?', [0, 2], [1, 2], [1, 2], [0, 1]);
        both('!=?', [0, 2], [1, 2], [1, 2], [1, 2]);
        both('!=?', 'isdiff,xor', [0, 1], [0, 10]);
        both('!=?', 'isdiff,xor', [0, 1], [0, 0, 9, 9]);
        both('!=?', 'isdiff,xor', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!=?', 'isdiff,xor', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<?', 'islt,xor', [0, 1], [0, 1], [0, 1], [0, 1]);
        lhs('<?', 'islt,xor', [0, 1], [0, 1], [0, 1], [0, 2]);
        lhs('<?', 'islt,xor', [0, 1], [0, 1], [0, 2], [0, 2]);
        lhs('<?', 'islt,xor', [0, 1], [0, 2], [0, 2], [0, 2]);
        lhs('<?', 'islt,xor', [0, 2], [0, 1], [0, 1], [0, 1]);
        lhs('<?', 'islt,xor', [0, 2], [0, 1], [0, 1], [0, 2]);
        lhs('<?', 'islt,xor', [0, 2], [0, 1], [0, 2], [0, 2]);
        lhs('<?', 'islt,xor', [0, 2], [0, 2], [0, 2], [0, 2]);
        lhs('<?', [0, 2], [1, 2], [0, 1], [0, 1]);
        lhs('<?', [0, 2], [1, 2], [1, 2], [0, 1]);
        lhs('<?', 'lte', [0, 2], [1, 2], [1, 2], [1, 2]);
        lhs('<?', 'islt,xor', [0, 1], [0, 10]);
        lhs('<?', 'islt,xor', [0, 1], [0, 0, 9, 9]);
        lhs('<?', 'islt,xor', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<?', 'islt,xor', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<?', 'islt,xor', [0, 1], [0, 1], [0, 1], [0, 1]);
        rhs('<?', 'islt,xor', [0, 1], [0, 1], [0, 1], [0, 2]);
        rhs('<?', 'islt,xor', [0, 1], [0, 1], [0, 2], [0, 2]);
        rhs('<?', 'islt,xor', [0, 1], [0, 2], [0, 2], [0, 2]);
        rhs('<?', 'islt,xor', [0, 2], [0, 1], [0, 1], [0, 1]);
        rhs('<?', 'islt,xor', [0, 2], [0, 1], [0, 1], [0, 2]);
        rhs('<?', 'islt,xor', [0, 2], [0, 1], [0, 2], [0, 2]);
        rhs('<?', 'islt,xor', [0, 2], [0, 2], [0, 2], [0, 2]);
        rhs('<?', 'islt,xor', [0, 2], [1, 2], [0, 1], [0, 1]);
        rhs('<?', [0, 2], [1, 2], [1, 2], [0, 1]);
        rhs('<?', 'lte', [0, 2], [1, 2], [1, 2], [1, 2]);
        rhs('<?', 'islt,xor', [0, 1], [0, 10]);
        rhs('<?', 'islt,xor', [0, 1], [0, 0, 9, 9]);
        rhs('<?', 'islt,xor', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<?', 'islt,xor', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<=?', 'islte,xor', [0, 1], [0, 1], [0, 1], [0, 1]);
        lhs('<=?', 'islte,xor', [0, 1], [0, 1], [0, 1], [0, 2]);
        lhs('<=?', 'islte,xor', [0, 1], [0, 1], [0, 2], [0, 2]);
        lhs('<=?', 'islte,xor', [0, 1], [0, 2], [0, 2], [0, 2]);
        lhs('<=?', 'islte,xor', [0, 2], [0, 1], [0, 1], [0, 1]);
        lhs('<=?', 'islte,xor', [0, 2], [0, 1], [0, 1], [0, 2]);
        lhs('<=?', 'islte,xor', [0, 2], [0, 1], [0, 2], [0, 2]);
        lhs('<=?', 'islte,xor', [0, 2], [0, 2], [0, 2], [0, 2]);
        lhs('<=?', 'islte,xor', [0, 2], [1, 2], [0, 1], [0, 1]);
        lhs('<=?', 'lt', [0, 2], [1, 2], [1, 2], [0, 1]);
        lhs('<=?', [0, 2], [1, 2], [1, 2], [1, 2]);
        lhs('<=?', 'islte,xor', [0, 1], [0, 10]);
        lhs('<=?', 'islte,xor', [0, 1], [0, 0, 9, 9]);
        lhs('<=?', 'islte,xor', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<=?', 'islte,xor', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<=?', 'islte,xor', [0, 1], [0, 1], [0, 1], [0, 1]);
        rhs('<=?', 'islte,xor', [0, 1], [0, 1], [0, 1], [0, 2]);
        rhs('<=?', 'islte,xor', [0, 1], [0, 1], [0, 2], [0, 2]);
        rhs('<=?', 'islte,xor', [0, 1], [0, 2], [0, 2], [0, 2]);
        rhs('<=?', 'islte,xor', [0, 2], [0, 1], [0, 1], [0, 1]);
        rhs('<=?', 'islte,xor', [0, 2], [0, 1], [0, 1], [0, 2]);
        rhs('<=?', 'islte,xor', [0, 2], [0, 1], [0, 2], [0, 2]);
        rhs('<=?', 'islte,xor', [0, 2], [0, 2], [0, 2], [0, 2]);
        rhs('<=?', [0, 2], [1, 2], [0, 1], [0, 1]);
        rhs('<=?', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
        rhs('<=?', [0, 2], [1, 2], [1, 2], [1, 2]);
        rhs('<=?', 'islte,xor', [0, 1], [0, 10]);
        rhs('<=?', 'islte,xor', [0, 1], [0, 0, 9, 9]);
        rhs('<=?', 'islte,xor', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<=?', 'islte,xor', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!&?', 'isnall,xor', [0, 1], [0, 1], [0, 1], [0, 1]);
        both('!&?', 'isnall,xor', [0, 1], [0, 1], [0, 1], [0, 2]);
        both('!&?', 'isnall,xor', [0, 1], [0, 1], [0, 2], [0, 2]);
        both('!&?', 'isnall,xor', [0, 1], [0, 2], [0, 2], [0, 2]);
        both('!&?', 'isnall,xor', [0, 2], [0, 1], [0, 1], [0, 1]);
        both('!&?', 'isnall,xor', [0, 2], [0, 1], [0, 1], [0, 2]);
        both('!&?', 'isnall,xor', [0, 2], [0, 1], [0, 2], [0, 2]);
        both('!&?', 'isnall,xor', [0, 2], [0, 2], [0, 2], [0, 2]);
        both('!&?', 'isnall,xor', [0, 2], [1, 2], [0, 1], [0, 1]);
        both('!&?', [0, 2], [1, 2], [1, 2], [0, 1]);
        both('!&?', [0, 2], [1, 2], [1, 2], [1, 2]);
        both('!&?', 'isnall,xor', [0, 1], [0, 10]);
        both('!&?', 'isnall,xor', [0, 1], [0, 0, 9, 9]);
        both('!&?', 'isnall,xor', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!&?', 'isnall,xor', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('|?', 'isnone', [0, 1], [0, 1], [0, 1], [0, 1]);
        both('|?', 'isnone', [0, 1], [0, 1], [0, 1], [0, 2]);
        both('|?', 'isnone', [0, 1], [0, 1], [0, 2], [0, 2]);
        both('|?', 'isnone', [0, 1], [0, 2], [0, 2], [0, 2]);
        both('|?', 'isnone', [0, 2], [0, 1], [0, 1], [0, 1]);
        both('|?', 'isnone', [0, 2], [0, 1], [0, 1], [0, 2]);
        both('|?', 'isnone', [0, 2], [0, 1], [0, 2], [0, 2]);
        both('|?', 'isnone', [0, 2], [0, 2], [0, 2], [0, 2]);
        both('|?', [0, 2], [1, 2], [0, 1], [0, 1]);
        both('|?', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
        both('|?', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
        both('|?', 'isnone', [0, 1], [0, 10]);
        both('|?', 'isnone', [0, 1], [0, 0, 9, 9]);
        both('|?', 'isnone', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('|?', 'isnone', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!|?', 'isnone,xor', [0, 1], [0, 1], [0, 1], [0, 1]);
        both('!|?', 'isnone,xor', [0, 1], [0, 1], [0, 1], [0, 2]);
        both('!|?', 'isnone,xor', [0, 1], [0, 1], [0, 2], [0, 2]);
        both('!|?', 'isnone,xor', [0, 1], [0, 2], [0, 2], [0, 2]);
        both('!|?', 'isnone,xor', [0, 2], [0, 1], [0, 1], [0, 1]);
        both('!|?', 'isnone,xor', [0, 2], [0, 1], [0, 1], [0, 2]);
        both('!|?', 'isnone,xor', [0, 2], [0, 1], [0, 2], [0, 2]);
        both('!|?', 'isnone,xor', [0, 2], [0, 2], [0, 2], [0, 2]);
        both('!|?', [0, 2], [1, 2], [0, 1], [0, 1]);
        both('!|?', [0, 2], [1, 2], [1, 2], [0, 1]);
        both('!|?', [0, 2], [1, 2], [1, 2], [1, 2]);
        both('!|?', 'isnone,xor', [0, 1], [0, 10]);
        both('!|?', 'isnone,xor', [0, 1], [0, 0, 9, 9]);
        both('!|?', 'isnone,xor', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!|?', 'isnone,xor', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('+', 'sum,xor', [0, 1], [0, 1], [0, 1], [0, 1]);
        both('+', 'sum,xor', [0, 1], [0, 1], [0, 1], [0, 2]);
        both('+', 'sum,xor', [0, 1], [0, 1], [0, 2], [0, 2]);
        both('+', 'sum,xor', [0, 1], [0, 2], [0, 2], [0, 2]);
        both('+', 'isnone', [0, 2], [0, 1], [0, 1], [0, 1]);
        both('+', 'sum,xor', [0, 2], [0, 1], [0, 1], [0, 2]);
        both('+', 'sum,xor', [0, 2], [0, 1], [0, 2], [0, 2]);
        both('+', 'sum,xor', [0, 2], [0, 2], [0, 2], [0, 2]);
        both('+', 'sum', [0, 2], [1, 2], [0, 1], [0, 1]);
        both('+', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
        both('+', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
        both('+', 'isnone', [0, 20], [0, 1], [0, 1], [0, 1]);
        both('+', 'isnone', [0, 20], [0, 10]);
        both('+', 'isnone', [0, 20], [0, 0, 9, 9]);
        both('+', 'isnone', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('+', 'isnone', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('-', 'minus,xor', [0, 1], [0, 1], [0, 1], [0, 1]);
        lhs('-', 'minus,xor', [0, 1], [0, 1], [0, 1], [0, 2]);
        lhs('-', 'minus,xor', [0, 1], [0, 1], [0, 2], [0, 2]);
        lhs('-', 'minus,xor', [0, 1], [0, 2], [0, 2], [0, 2]);
        lhs('-', 'minus,xor', [0, 2], [0, 1], [0, 1], [0, 1]);
        lhs('-', 'minus,xor', [0, 2], [0, 1], [0, 1], [0, 2]);
        lhs('-', 'minus,xor', [0, 2], [0, 1], [0, 2], [0, 2]);
        lhs('-', 'minus,xor', [0, 2], [0, 2], [0, 2], [0, 2]);
        lhs('-', 'minus,xor', [0, 2], [1, 2], [0, 1], [0, 1]);
        lhs('-', [0, 2], [1, 2], [1, 2], [0, 1]);
        lhs('-', 'minus', [0, 2], [1, 2], [1, 2], [1, 2]);
        lhs('-', 'minus,xor', [0, 20], [0, 1], [0, 1], [0, 1]);
        lhs('-', 'minus,xor', [0, 20], [0, 10]);
        lhs('-', 'minus,xor', [0, 20], [0, 0, 9, 9]);
        lhs('-', 'xor', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('-', 'minus,xor', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('-', 'minus,xor', [0, 1], [0, 1], [0, 1], [0, 1]);
        rhs('-', 'minus,xor', [0, 1], [0, 1], [0, 1], [0, 2]);
        rhs('-', 'minus,xor', [0, 1], [0, 1], [0, 2], [0, 2]);
        rhs('-', 'minus,xor', [0, 1], [0, 2], [0, 2], [0, 2]);
        rhs('-', 'minus,xor', [0, 2], [0, 1], [0, 1], [0, 1]);
        rhs('-', 'minus,xor', [0, 2], [0, 1], [0, 1], [0, 2]);
        rhs('-', 'minus,xor', [0, 2], [0, 1], [0, 2], [0, 2]);
        rhs('-', 'minus,xor', [0, 2], [0, 2], [0, 2], [0, 2]);
        rhs('-', [0, 2], [1, 2], [0, 1], [0, 1]);
        rhs('-', [0, 2], [1, 2], [1, 2], [0, 1]);
        rhs('-', 'minus', [0, 2], [1, 2], [1, 2], [1, 2]);
        rhs('-', 'minus,xor', [0, 20], [0, 1], [0, 1], [0, 1]);
        rhs('-', 'minus,xor', [0, 20], [0, 10]);
        rhs('-', 'minus,xor', [0, 20], [0, 0, 9, 9]);
        rhs('-', 'minus,xor', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('-', 'xor', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('*', 'product,xor', [0, 1], [0, 1], [0, 1], [0, 1]);
        both('*', 'product,xor', [0, 1], [0, 1], [0, 1], [0, 2]);
        both('*', 'product,xor', [0, 1], [0, 1], [0, 2], [0, 2]);
        both('*', 'product,xor', [0, 1], [0, 2], [0, 2], [0, 2]);
        both('*', 'product,xor', [0, 2], [0, 1], [0, 1], [0, 1]);
        both('*', 'product,xor', [0, 2], [0, 1], [0, 1], [0, 2]);
        both('*', 'product,xor', [0, 2], [0, 1], [0, 2], [0, 2]);
        both('*', 'product,xor', [0, 2], [0, 2], [0, 2], [0, 2]);
        both('*', 'product,xor', [0, 2], [1, 2], [0, 1], [0, 1]);
        both('*', [0, 2], [1, 2], [1, 2], [0, 1]);
        both('*', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
        both('*', 'product,xor', [0, 100], [0, 1], [0, 1], [0, 1]);
        both('*', 'product,xor', [0, 100], [0, 10]);
        both('*', 'product,xor', [0, 100], [0, 0, 9, 9]);
        both('*', 'product,xor', [0, 100], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('*', 'product,xor', [0, 100], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('/', 'div,xor', [0, 1], [0, 1], [0, 1], [0, 1]);
        lhs('/', 'div,xor', [0, 1], [0, 1], [0, 1], [0, 2]);
        lhs('/', 'div,xor', [0, 1], [0, 1], [0, 2], [0, 2]);
        lhs('/', 'div,xor', [0, 1], [0, 2], [0, 2], [0, 2]);
        lhs('/', 'div,xor', [0, 2], [0, 1], [0, 1], [0, 1]);
        lhs('/', 'div,xor', [0, 2], [0, 1], [0, 1], [0, 2]);
        lhs('/', 'div,xor', [0, 2], [0, 1], [0, 2], [0, 2]);
        lhs('/', 'div,xor', [0, 2], [0, 2], [0, 2], [0, 2]);
        lhs('/', 'div', [0, 2], [1, 2], [0, 1], [0, 1]);
        lhs('/', 'reject', [0, 2], [1, 2], [1, 2], [0, 1]);
        lhs('/', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
        lhs('/', 'div,xor', [0, 20], [0, 1], [0, 1], [0, 1]);
        lhs('/', 'div,xor', [0, 20], [0, 10]);
        lhs('/', 'div,xor', [0, 20], [0, 0, 9, 9]);
        lhs('/', 'div', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('/', 'div,xor', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('/', 'div,xor', [0, 1], [0, 1], [0, 1], [0, 1]);
        rhs('/', 'div,xor', [0, 1], [0, 1], [0, 1], [0, 2]);
        rhs('/', 'div,xor', [0, 1], [0, 1], [0, 2], [0, 2]);
        rhs('/', 'div,xor', [0, 1], [0, 2], [0, 2], [0, 2]);
        rhs('/', 'div,xor', [0, 2], [0, 1], [0, 1], [0, 1]);
        rhs('/', 'div,xor', [0, 2], [0, 1], [0, 1], [0, 2]);
        rhs('/', 'div,xor', [0, 2], [0, 1], [0, 2], [0, 2]);
        rhs('/', 'div,xor', [0, 2], [0, 2], [0, 2], [0, 2]);
        rhs('/', 'div,xor', [0, 2], [1, 2], [0, 1], [0, 1]);
        rhs('/', 'div', [0, 2], [1, 2], [1, 2], [0, 1]);
        rhs('/', 'reject', [0, 2], [1, 2], [1, 2], [1, 2]);
        rhs('/', 'div,xor', [0, 20], [0, 1], [0, 1], [0, 1]);
        rhs('/', 'div,xor', [0, 20], [0, 10]);
        rhs('/', 'div,xor', [0, 20], [0, 0, 9, 9]);
        rhs('/', 'div,xor', [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('/', 'div', [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
      });
    });
  });

  describe('result constraint', function() {

    describe('ISALL', function() {

      describe('binary with shared arg', function() {

        let both = testTernaryBinarySharedArgs.bind(undefined, '&?', '', ''); // R = A @1 B, A @2 C  and  R = A @1 B, C @2 A
        let lhs = testTernaryBinarySharedArgs.bind(undefined, '&?', '', 'lhs'); // R = A @1 B, A @2 C
        let rhs = testTernaryBinarySharedArgs.bind(undefined, '&?', '', 'rhs'); // R = A @1 B, C @2 A

        both('&', [0, 1], [0, 1]);
        both('&', [0, 2], [0, 1]);
        both('&', [0, 2], [0, 2]);
        both('&', [0, 1], [0, 10]);
        both('&', [0, 1], [0, 0, 9, 9]);
        both('&', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('&', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!=', 'isall,xor', [0, 1], [0, 1]);
        both('!=', 'isall,xor', [0, 2], [0, 1]);
        both('!=', 'diff,isall', [0, 2], [0, 2]);
        both('!=', 'diff,isall', [0, 1], [0, 10]);
        both('!=', 'isall,xor', [0, 1], [0, 0, 9, 9]);
        both('!=', 'diff,isall', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!=', 'diff,isall', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('->', 'imp,isall', [0, 1], [0, 1]);
        lhs('->', 'imp,isall', [0, 2], [0, 1]);
        lhs('->', 'imp,isall', [0, 2], [0, 1]);
        lhs('->', 'imp,isall', [0, 1], [0, 10]);
        lhs('->', 'imp,isall', [0, 1], [0, 0, 9, 9]);
        lhs('->', 'imp,isall', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('->', 'imp,isall', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('->', 'imp,isall', [0, 1], [0, 1]);
        rhs('->', 'imp,isall', [0, 2], [0, 1]);
        rhs('->', 'imp,isall', [0, 2], [0, 2]);
        rhs('->', 'imp,isall', [0, 1], [0, 10]);
        rhs('->', 'imp,isall', [0, 1], [0, 0, 9, 9]);
        rhs('->', 'imp,isall', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('->', 'imp,isall', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<', [0, 1], [0, 1]);
        lhs('<', [0, 2], [0, 1]);
        lhs('<', 'isall,lt', [0, 2], [0, 2]);
        lhs('<', 'isall,lt', [0, 1], [0, 10]);
        lhs('<', [0, 1], [0, 0, 9, 9]);
        lhs('<', 'isall', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<', [0, 1], [0, 1]);
        rhs('<', [0, 2], [0, 1]);
        rhs('<', [0, 2], [0, 2]);
        rhs('<', [0, 1], [0, 10]);
        rhs('<', [0, 1], [0, 0, 9, 9]);
        rhs('<', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<=', 'imp,isall', [0, 1], [0, 1]);
        lhs('<=', 'imp,isall', [0, 2], [0, 1]);
        lhs('<=', 'isall,lte', [0, 2], [0, 2]);
        lhs('<=', 'isall,lte', [0, 1], [0, 10]);
        lhs('<=', 'imp,isall', [0, 1], [0, 0, 9, 9]);
        lhs('<=', 'imp,isall', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<=', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<=', 'imp,isall', [0, 1], [0, 1]);
        rhs('<=', 'imp,isall', [0, 2], [0, 1]);
        rhs('<=', 'isall,lte', [0, 2], [0, 2]);
        rhs('<=', 'isall,lte', [0, 1], [0, 10]);
        rhs('<=', 'imp,isall', [0, 1], [0, 0, 9, 9]);
        rhs('<=', 'isall', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<=', 'imp,isall', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!&', 'isall,nall', [0, 1], [0, 1]);
        both('!&', 'isall,nall', [0, 2], [0, 1]);
        both('!&', 'isall,nall', [0, 2], [0, 2]);
        both('!&', 'isall,nall', [0, 1], [0, 10]);
        both('!&', 'isall,nall', [0, 1], [0, 0, 9, 9]);
        both('!&', 'isall,nall', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!&', 'isall,nall', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('!->', [0, 1], [0, 1]);
        lhs('!->', [0, 2], [0, 1]);
        lhs('!->', [0, 2], [0, 2]);
        lhs('!->', [0, 1], [0, 10]);
        lhs('!->', [0, 1], [0, 0, 9, 9]);
        lhs('!->', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('!->', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('!->', [0, 1], [0, 1]);
        rhs('!->', [0, 2], [0, 1]);
        rhs('!->', [0, 2], [0, 2]);
        rhs('!->', [0, 1], [0, 10]);
        rhs('!->', [0, 1], [0, 0, 9, 9]);
        rhs('!->', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('!->', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!|', [0, 1], [0, 1]);
        both('!|', [0, 2], [0, 1]);
        both('!|', [0, 2], [0, 2]);
        both('!|', [0, 1], [0, 10]);
        both('!|', [0, 1], [0, 0, 9, 9]);
        both('!|', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!|', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('==', 'isall', [0, 1], [0, 1]);
        both('==', 'isall', [0, 2], [0, 1]);
        both('==', 'isall', [0, 2], [0, 2]);
        both('==', 'isall', [0, 1], [0, 10]);
        both('==', 'isall', [0, 1], [0, 0, 9, 9]);
        both('==', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('==', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!^', 'isall', [0, 1], [0, 1]);
        both('!^', 'isall', [0, 2], [0, 1]);
        both('!^', 'isall', [0, 2], [0, 2]);
        both('!^', 'isall', [0, 1], [0, 10]);
        both('!^', 'isall', [0, 1], [0, 0, 9, 9]);
        both('!^', 'isall', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!^', 'isall', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('^', 'isall,xor', [0, 1], [0, 1]);
        both('^', 'isall,xor', [0, 2], [0, 1]);
        both('^', 'isall,xor', [0, 2], [0, 2]);
        both('^', 'isall,xor', [0, 1], [0, 10]);
        both('^', 'isall,xor', [0, 1], [0, 0, 9, 9]);
        both('^', 'isall,xor', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('^', 'isall,xor', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
      });

      describe('binary with shared result', function() {

        let both = testTernaryBinarySharedArgs.bind(undefined, '&?', '', ''); // R = A @1 B, A @2 C  and  R = A @1 B, C @2 A
        let lhs = testTernaryBinarySharedArgs.bind(undefined, '&?', '', 'lhs'); // R = A @1 B, A @2 C
        let rhs = testTernaryBinarySharedArgs.bind(undefined, '&?', '', 'rhs'); // R = A @1 B, C @2 A

        both('&', [0, 1], [0, 1]);
        both('&', [0, 2], [0, 1]);
        both('&', [0, 2], [0, 2]);
        both('&', [0, 1], [0, 10]);
        both('&', [0, 1], [0, 0, 9, 9]);
        both('&', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('&', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!=', 'isall,xor', [0, 1], [0, 1]);
        both('!=', 'isall,xor', [0, 2], [0, 1]);
        both('!=', 'diff,isall', [0, 2], [0, 2]);
        both('!=', 'diff,isall', [0, 1], [0, 10]);
        both('!=', 'isall,xor', [0, 1], [0, 0, 9, 9]);
        both('!=', 'diff,isall', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!=', 'diff,isall', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('->', 'imp,isall', [0, 1], [0, 1]);
        lhs('->', 'imp,isall', [0, 2], [0, 1]);
        lhs('->', 'imp,isall', [0, 2], [0, 1]);
        lhs('->', 'imp,isall', [0, 1], [0, 10]);
        lhs('->', 'imp,isall', [0, 1], [0, 0, 9, 9]);
        lhs('->', 'imp,isall', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('->', 'imp,isall', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('->', 'imp,isall', [0, 1], [0, 1]);
        rhs('->', 'imp,isall', [0, 2], [0, 1]);
        rhs('->', 'imp,isall', [0, 2], [0, 2]);
        rhs('->', 'imp,isall', [0, 1], [0, 10]);
        rhs('->', 'imp,isall', [0, 1], [0, 0, 9, 9]);
        rhs('->', 'imp,isall', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('->', 'imp,isall', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<', [0, 1], [0, 1]);
        lhs('<', [0, 2], [0, 1]);
        lhs('<', 'isall,lt', [0, 2], [0, 2]);
        lhs('<', 'isall,lt', [0, 1], [0, 10]);
        lhs('<', [0, 1], [0, 0, 9, 9]);
        lhs('<', 'isall', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<', [0, 1], [0, 1]);
        rhs('<', [0, 2], [0, 1]);
        rhs('<', [0, 2], [0, 2]);
        rhs('<', [0, 1], [0, 10]);
        rhs('<', [0, 1], [0, 0, 9, 9]);
        rhs('<', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<=', 'imp,isall', [0, 1], [0, 1]);
        lhs('<=', 'imp,isall', [0, 2], [0, 1]);
        lhs('<=', 'isall,lte', [0, 2], [0, 2]);
        lhs('<=', 'isall,lte', [0, 1], [0, 10]);
        lhs('<=', 'imp,isall', [0, 1], [0, 0, 9, 9]);
        lhs('<=', 'imp,isall', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<=', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<=', 'imp,isall', [0, 1], [0, 1]);
        rhs('<=', 'imp,isall', [0, 2], [0, 1]);
        rhs('<=', 'isall,lte', [0, 2], [0, 2]);
        rhs('<=', 'isall,lte', [0, 1], [0, 10]);
        rhs('<=', 'imp,isall', [0, 1], [0, 0, 9, 9]);
        rhs('<=', 'isall', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<=', 'imp,isall', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!&', 'isall,nall', [0, 1], [0, 1]);
        both('!&', 'isall,nall', [0, 2], [0, 1]);
        both('!&', 'isall,nall', [0, 2], [0, 2]);
        both('!&', 'isall,nall', [0, 1], [0, 10]);
        both('!&', 'isall,nall', [0, 1], [0, 0, 9, 9]);
        both('!&', 'isall,nall', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!&', 'isall,nall', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('!->', [0, 1], [0, 1]);
        lhs('!->', [0, 2], [0, 1]);
        lhs('!->', [0, 2], [0, 2]);
        lhs('!->', [0, 1], [0, 10]);
        lhs('!->', [0, 1], [0, 0, 9, 9]);
        lhs('!->', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('!->', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('!->', [0, 1], [0, 1]);
        rhs('!->', [0, 2], [0, 1]);
        rhs('!->', [0, 2], [0, 2]);
        rhs('!->', [0, 1], [0, 10]);
        rhs('!->', [0, 1], [0, 0, 9, 9]);
        rhs('!->', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('!->', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!|', [0, 1], [0, 1]);
        both('!|', [0, 2], [0, 1]);
        both('!|', [0, 2], [0, 2]);
        both('!|', [0, 1], [0, 10]);
        both('!|', [0, 1], [0, 0, 9, 9]);
        both('!|', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!|', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('==', 'isall', [0, 1], [0, 1]);
        both('==', 'isall', [0, 2], [0, 1]);
        both('==', 'isall', [0, 2], [0, 2]);
        both('==', 'isall', [0, 1], [0, 10]);
        both('==', 'isall', [0, 1], [0, 0, 9, 9]);
        both('==', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('==', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!^', 'isall', [0, 1], [0, 1]);
        both('!^', 'isall', [0, 2], [0, 1]);
        both('!^', 'isall', [0, 2], [0, 2]);
        both('!^', 'isall', [0, 1], [0, 10]);
        both('!^', 'isall', [0, 1], [0, 0, 9, 9]);
        both('!^', 'isall', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!^', 'isall', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('^', 'isall,xor', [0, 1], [0, 1]);
        both('^', 'isall,xor', [0, 2], [0, 1]);
        both('^', 'isall,xor', [0, 2], [0, 2]);
        both('^', 'isall,xor', [0, 1], [0, 10]);
        both('^', 'isall,xor', [0, 1], [0, 0, 9, 9]);
        both('^', 'isall,xor', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('^', 'isall,xor', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
      });

      describe('ternary with shared args', function() {

        let both = testTernaryTernarySharedArgs.bind(undefined, '&?', '', '');          // R = A @1 B, S = A @2 C  and  R = A @1 B, S = C @2 A
        let lhs = testTernaryTernarySharedArgs.bind(undefined, '&?', '', 'lhs');    // R = A @1 B, S = A @2 C
        let rhs = testTernaryTernarySharedArgs.bind(undefined, '&?', '', 'rhs');    // R = A @1 B, S = C @2 A

        // R = A & B, S = A &? C
        both('&?', 'isall,isall', [0, 1], [0, 1], [0, 1]);
        both('&?', 'isall,isall', [0, 2], [0, 1], [0, 2]);
        both('&?', 'isall,isall', [0, 2], [0, 2], [0, 2]);
        both('&?', 'isall,isall', [0, 1], [0, 2], [0, 2]);
        both('&?', 'isall,isall', [0, 1], [0, 1], [0, 10]);
        both('&?', 'isall,isall', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('&?', 'isall,isall', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('&?', 'isall,isall', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('==?', 'isall,issame', [0, 1], [0, 1], [0, 1]);
        both('==?', 'isall,issame', [0, 2], [0, 1], [0, 2]);
        both('==?', 'isall,issame', [0, 2], [0, 2], [0, 2]);
        both('==?', 'isall,issame', [0, 1], [0, 2], [0, 2]);
        both('==?', 'isall,issame', [0, 1], [0, 1], [0, 10]);
        both('==?', 'isall,issame', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('==?', 'isall,issame', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('==?', 'isall,issame', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!=?', 'isall,isdiff', [0, 1], [0, 1], [0, 1]);
        both('!=?', 'isall,isdiff', [0, 2], [0, 1], [0, 2]);
        both('!=?', 'isall,isdiff', [0, 2], [0, 2], [0, 2]);
        both('!=?', 'isall,isdiff', [0, 1], [0, 2], [0, 2]);
        both('!=?', 'isall,isdiff', [0, 1], [0, 1], [0, 10]);
        both('!=?', 'isall,isdiff', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('!=?', 'isall,isdiff', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!=?', 'isall,isdiff', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<?', 'isall,islt', [0, 1], [0, 1], [0, 1]);
        lhs('<?', 'isall,islt', [0, 2], [0, 1], [0, 2]);
        lhs('<?', 'isall,islt', [0, 2], [0, 2], [0, 2]);
        lhs('<?', 'isall,islt', [0, 1], [0, 2], [0, 2]);
        lhs('<?', 'isall,islt', [0, 1], [0, 1], [0, 10]);
        lhs('<?', 'isall,islt', [0, 1], [0, 1], [0, 0, 9, 9]);
        lhs('<?', 'isall,islt', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<?', 'isall,islt', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<?', 'isall,islt', [0, 1], [0, 1], [0, 1]);
        rhs('<?', 'isall,islt', [0, 2], [0, 1], [0, 2]);
        rhs('<?', 'isall,islt', [0, 2], [0, 2], [0, 2]);
        rhs('<?', 'isall,islt', [0, 1], [0, 2], [0, 2]);
        rhs('<?', 'isall,islt', [0, 1], [0, 1], [0, 10]);
        rhs('<?', 'isall,islt', [0, 1], [0, 1], [0, 0, 9, 9]);
        rhs('<?', 'isall,islt', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<?', 'isall,islt', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<=?', 'isall,islte', [0, 1], [0, 1], [0, 1]);
        lhs('<=?', 'isall,islte', [0, 2], [0, 1], [0, 2]);
        lhs('<=?', 'isall,islte', [0, 2], [0, 2], [0, 2]);
        lhs('<=?', 'isall,islte', [0, 1], [0, 2], [0, 2]);
        lhs('<=?', 'isall,islte', [0, 1], [0, 1], [0, 10]);
        lhs('<=?', 'isall,islte', [0, 1], [0, 1], [0, 0, 9, 9]);
        lhs('<=?', 'isall,islte', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<=?', 'isall,islte', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<=?', 'isall,islte', [0, 1], [0, 1], [0, 1]);
        rhs('<=?', 'isall,islte', [0, 2], [0, 1], [0, 2]);
        rhs('<=?', 'isall,islte', [0, 2], [0, 2], [0, 2]);
        rhs('<=?', 'isall,islte', [0, 1], [0, 2], [0, 2]);
        rhs('<=?', 'isall,islte', [0, 1], [0, 1], [0, 10]);
        rhs('<=?', 'isall,islte', [0, 1], [0, 1], [0, 0, 9, 9]);
        rhs('<=?', 'isall,islte', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<=?', 'isall,islte', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!&?', 'isall,isnall', [0, 1], [0, 1], [0, 1]);
        both('!&?', 'isall,isnall', [0, 2], [0, 1], [0, 2]);
        both('!&?', 'isall,isnall', [0, 2], [0, 2], [0, 2]);
        both('!&?', 'isall,isnall', [0, 1], [0, 2], [0, 2]);
        both('!&?', 'isall,isnall', [0, 1], [0, 1], [0, 10]);
        both('!&?', 'isall,isnall', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('!&?', 'isall,isnall', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!&?', 'isall,isnall', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('|?', 'isall,issome', [0, 1], [0, 1], [0, 1]);
        both('|?', 'isall,issome', [0, 2], [0, 1], [0, 2]);
        both('|?', 'isall,issome', [0, 2], [0, 2], [0, 2]);
        both('|?', 'isall,issome', [0, 1], [0, 2], [0, 2]);
        both('|?', 'isall,issome', [0, 1], [0, 1], [0, 10]);
        both('|?', 'isall,issome', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('|?', 'isall,issome', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('|?', 'isall,issome', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!|?', 'isall,isnone', [0, 1], [0, 1], [0, 1]);
        both('!|?', 'isall,isnone', [0, 2], [0, 1], [0, 2]);
        both('!|?', 'isall,isnone', [0, 2], [0, 2], [0, 2]);
        both('!|?', 'isall,isnone', [0, 1], [0, 2], [0, 2]);
        both('!|?', 'isall,isnone', [0, 1], [0, 1], [0, 10]);
        both('!|?', 'isall,isnone', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('!|?', 'isall,isnone', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!|?', 'isall,isnone', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('+', 'isall,issome', [0, 1], [0, 20], [0, 1]);
        both('+', 'isall,sum', [0, 2], [0, 1], [0, 2]);
        both('+', 'isall,sum', [0, 2], [0, 2], [0, 2]);
        both('+', 'isall,sum', [0, 1], [0, 2], [0, 2]);
        both('+', 'isall,issome', [0, 1], [0, 20], [0, 10]);
        both('+', 'isall,issome', [0, 1], [0, 20], [0, 0, 9, 9]);
        both('+', 'isall,issome', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('+', 'isall,issome', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('-', 'isall,minus', [0, 1], [0, 20], [0, 1]);
        lhs('-', 'isall,minus', [0, 2], [0, 1], [0, 2]);
        lhs('-', 'isall,minus', [0, 2], [0, 2], [0, 2]);
        lhs('-', 'isall,minus', [0, 1], [0, 2], [0, 2]);
        lhs('-', 'isall,minus', [0, 1], [0, 20], [0, 10]);
        lhs('-', 'isall,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
        lhs('-', 'isall', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('-', 'isall,minus', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('-', 'isall,minus', [0, 1], [0, 20], [0, 1]);
        rhs('-', 'isall,minus', [0, 2], [0, 1], [0, 2]);
        rhs('-', 'isall,minus', [0, 2], [0, 2], [0, 2]);
        rhs('-', 'isall,minus', [0, 1], [0, 2], [0, 2]);
        rhs('-', 'isall,minus', [0, 1], [0, 20], [0, 10]);
        rhs('-', 'isall,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
        rhs('-', 'isall,minus', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('-', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('*', 'isall,product', [0, 1], [0, 100], [0, 1]);
        both('*', 'isall,product', [0, 2], [0, 1], [0, 2]);
        both('*', 'isall,product', [0, 2], [0, 2], [0, 2]);
        both('*', 'isall,product', [0, 1], [0, 2], [0, 2]);
        both('*', 'isall,product', [0, 1], [0, 100], [0, 10]);
        both('*', 'isall,product', [0, 1], [0, 100], [0, 0, 9, 9]);
        both('*', 'isall,product', [0, 1], [0, 100], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('*', 'isall,product', [0, 1], [0, 100], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('/', 'div,isall', [0, 1], [0, 20], [0, 1]);
        lhs('/', 'div,isall', [0, 2], [0, 1], [0, 2]);
        lhs('/', 'div,isall', [0, 2], [0, 2], [0, 2]);
        lhs('/', 'div,isall', [0, 1], [0, 2], [0, 2]);
        lhs('/', 'div,isall', [0, 1], [0, 20], [0, 10]);
        lhs('/', 'div,isall', [0, 1], [0, 20], [0, 0, 9, 9]);
        lhs('/', 'div,isall', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('/', 'div,isall', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('/', 'div,isall', [0, 1], [0, 20], [0, 1]);
        rhs('/', 'div,isall', [0, 2], [0, 1], [0, 2]);
        rhs('/', 'div,isall', [0, 2], [0, 2], [0, 2]);
        rhs('/', 'div,isall', [0, 1], [0, 2], [0, 2]);
        rhs('/', 'div,isall', [0, 1], [0, 20], [0, 10]);
        rhs('/', 'div,isall', [0, 1], [0, 20], [0, 0, 9, 9]);
        rhs('/', 'div,isall', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('/', 'div,isall', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
      });

      describe('ternary with shared R', function() {

        let both = testTernaryTernarySharedArgs.bind(undefined, '&?', '', '');          // R = A @1 B, S = A @2 C  and  R = A @1 B, S = C @2 A
        let lhs = testTernaryTernarySharedArgs.bind(undefined, '&?', '', 'lhs');    // R = A @1 B, S = A @2 C
        let rhs = testTernaryTernarySharedArgs.bind(undefined, '&?', '', 'rhs');    // R = A @1 B, S = C @2 A

        // R = A & B, S = A &? C
        both('&?', 'isall,isall', [0, 1], [0, 1], [0, 1]);
        both('&?', 'isall,isall', [0, 2], [0, 1], [0, 2]);
        both('&?', 'isall,isall', [0, 2], [0, 2], [0, 2]);
        both('&?', 'isall,isall', [0, 1], [0, 2], [0, 2]);
        both('&?', 'isall,isall', [0, 1], [0, 1], [0, 10]);
        both('&?', 'isall,isall', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('&?', 'isall,isall', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('&?', 'isall,isall', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('==?', 'isall,issame', [0, 1], [0, 1], [0, 1]);
        both('==?', 'isall,issame', [0, 2], [0, 1], [0, 2]);
        both('==?', 'isall,issame', [0, 2], [0, 2], [0, 2]);
        both('==?', 'isall,issame', [0, 1], [0, 2], [0, 2]);
        both('==?', 'isall,issame', [0, 1], [0, 1], [0, 10]);
        both('==?', 'isall,issame', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('==?', 'isall,issame', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('==?', 'isall,issame', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!=?', 'isall,isdiff', [0, 1], [0, 1], [0, 1]);
        both('!=?', 'isall,isdiff', [0, 2], [0, 1], [0, 2]);
        both('!=?', 'isall,isdiff', [0, 2], [0, 2], [0, 2]);
        both('!=?', 'isall,isdiff', [0, 1], [0, 2], [0, 2]);
        both('!=?', 'isall,isdiff', [0, 1], [0, 1], [0, 10]);
        both('!=?', 'isall,isdiff', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('!=?', 'isall,isdiff', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!=?', 'isall,isdiff', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<?', 'isall,islt', [0, 1], [0, 1], [0, 1]);
        lhs('<?', 'isall,islt', [0, 2], [0, 1], [0, 2]);
        lhs('<?', 'isall,islt', [0, 2], [0, 2], [0, 2]);
        lhs('<?', 'isall,islt', [0, 1], [0, 2], [0, 2]);
        lhs('<?', 'isall,islt', [0, 1], [0, 1], [0, 10]);
        lhs('<?', 'isall,islt', [0, 1], [0, 1], [0, 0, 9, 9]);
        lhs('<?', 'isall,islt', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<?', 'isall,islt', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<?', 'isall,islt', [0, 1], [0, 1], [0, 1]);
        rhs('<?', 'isall,islt', [0, 2], [0, 1], [0, 2]);
        rhs('<?', 'isall,islt', [0, 2], [0, 2], [0, 2]);
        rhs('<?', 'isall,islt', [0, 1], [0, 2], [0, 2]);
        rhs('<?', 'isall,islt', [0, 1], [0, 1], [0, 10]);
        rhs('<?', 'isall,islt', [0, 1], [0, 1], [0, 0, 9, 9]);
        rhs('<?', 'isall,islt', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<?', 'isall,islt', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<=?', 'isall,islte', [0, 1], [0, 1], [0, 1]);
        lhs('<=?', 'isall,islte', [0, 2], [0, 1], [0, 2]);
        lhs('<=?', 'isall,islte', [0, 2], [0, 2], [0, 2]);
        lhs('<=?', 'isall,islte', [0, 1], [0, 2], [0, 2]);
        lhs('<=?', 'isall,islte', [0, 1], [0, 1], [0, 10]);
        lhs('<=?', 'isall,islte', [0, 1], [0, 1], [0, 0, 9, 9]);
        lhs('<=?', 'isall,islte', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<=?', 'isall,islte', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<=?', 'isall,islte', [0, 1], [0, 1], [0, 1]);
        rhs('<=?', 'isall,islte', [0, 2], [0, 1], [0, 2]);
        rhs('<=?', 'isall,islte', [0, 2], [0, 2], [0, 2]);
        rhs('<=?', 'isall,islte', [0, 1], [0, 2], [0, 2]);
        rhs('<=?', 'isall,islte', [0, 1], [0, 1], [0, 10]);
        rhs('<=?', 'isall,islte', [0, 1], [0, 1], [0, 0, 9, 9]);
        rhs('<=?', 'isall,islte', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<=?', 'isall,islte', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!&?', 'isall,isnall', [0, 1], [0, 1], [0, 1]);
        both('!&?', 'isall,isnall', [0, 2], [0, 1], [0, 2]);
        both('!&?', 'isall,isnall', [0, 2], [0, 2], [0, 2]);
        both('!&?', 'isall,isnall', [0, 1], [0, 2], [0, 2]);
        both('!&?', 'isall,isnall', [0, 1], [0, 1], [0, 10]);
        both('!&?', 'isall,isnall', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('!&?', 'isall,isnall', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!&?', 'isall,isnall', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('|?', 'isall,issome', [0, 1], [0, 1], [0, 1]);
        both('|?', 'isall,issome', [0, 2], [0, 1], [0, 2]);
        both('|?', 'isall,issome', [0, 2], [0, 2], [0, 2]);
        both('|?', 'isall,issome', [0, 1], [0, 2], [0, 2]);
        both('|?', 'isall,issome', [0, 1], [0, 1], [0, 10]);
        both('|?', 'isall,issome', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('|?', 'isall,issome', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('|?', 'isall,issome', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!|?', 'isall,isnone', [0, 1], [0, 1], [0, 1]);
        both('!|?', 'isall,isnone', [0, 2], [0, 1], [0, 2]);
        both('!|?', 'isall,isnone', [0, 2], [0, 2], [0, 2]);
        both('!|?', 'isall,isnone', [0, 1], [0, 2], [0, 2]);
        both('!|?', 'isall,isnone', [0, 1], [0, 1], [0, 10]);
        both('!|?', 'isall,isnone', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('!|?', 'isall,isnone', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!|?', 'isall,isnone', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('+', 'isall,issome', [0, 1], [0, 20], [0, 1]);
        both('+', 'isall,sum', [0, 2], [0, 1], [0, 2]);
        both('+', 'isall,sum', [0, 2], [0, 2], [0, 2]);
        both('+', 'isall,sum', [0, 1], [0, 2], [0, 2]);
        both('+', 'isall,issome', [0, 1], [0, 20], [0, 10]);
        both('+', 'isall,issome', [0, 1], [0, 20], [0, 0, 9, 9]);
        both('+', 'isall,issome', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('+', 'isall,issome', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('-', 'isall,minus', [0, 1], [0, 20], [0, 1]);
        lhs('-', 'isall,minus', [0, 2], [0, 1], [0, 2]);
        lhs('-', 'isall,minus', [0, 2], [0, 2], [0, 2]);
        lhs('-', 'isall,minus', [0, 1], [0, 2], [0, 2]);
        lhs('-', 'isall,minus', [0, 1], [0, 20], [0, 10]);
        lhs('-', 'isall,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
        lhs('-', 'isall', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('-', 'isall,minus', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('-', 'isall,minus', [0, 1], [0, 20], [0, 1]);
        rhs('-', 'isall,minus', [0, 2], [0, 1], [0, 2]);
        rhs('-', 'isall,minus', [0, 2], [0, 2], [0, 2]);
        rhs('-', 'isall,minus', [0, 1], [0, 2], [0, 2]);
        rhs('-', 'isall,minus', [0, 1], [0, 20], [0, 10]);
        rhs('-', 'isall,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
        rhs('-', 'isall,minus', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('-', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('*', 'isall,product', [0, 1], [0, 100], [0, 1]);
        both('*', 'isall,product', [0, 2], [0, 1], [0, 2]);
        both('*', 'isall,product', [0, 2], [0, 2], [0, 2]);
        both('*', 'isall,product', [0, 1], [0, 2], [0, 2]);
        both('*', 'isall,product', [0, 1], [0, 100], [0, 10]);
        both('*', 'isall,product', [0, 1], [0, 100], [0, 0, 9, 9]);
        both('*', 'isall,product', [0, 1], [0, 100], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('*', 'isall,product', [0, 1], [0, 100], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('/', 'div,isall', [0, 1], [0, 20], [0, 1]);
        lhs('/', 'div,isall', [0, 2], [0, 1], [0, 2]);
        lhs('/', 'div,isall', [0, 2], [0, 2], [0, 2]);
        lhs('/', 'div,isall', [0, 1], [0, 2], [0, 2]);
        lhs('/', 'div,isall', [0, 1], [0, 20], [0, 10]);
        lhs('/', 'div,isall', [0, 1], [0, 20], [0, 0, 9, 9]);
        lhs('/', 'div,isall', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('/', 'div,isall', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('/', 'div,isall', [0, 1], [0, 20], [0, 1]);
        rhs('/', 'div,isall', [0, 2], [0, 1], [0, 2]);
        rhs('/', 'div,isall', [0, 2], [0, 2], [0, 2]);
        rhs('/', 'div,isall', [0, 1], [0, 2], [0, 2]);
        rhs('/', 'div,isall', [0, 1], [0, 20], [0, 10]);
        rhs('/', 'div,isall', [0, 1], [0, 20], [0, 0, 9, 9]);
        rhs('/', 'div,isall', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('/', 'div,isall', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
      });

      describe('ternary with shared S', function() {

        let both = testTernaryTernarySharedArgs.bind(undefined, '&?', '', '');          // R = A @1 B, S = A @2 C  and  R = A @1 B, S = C @2 A
        let lhs = testTernaryTernarySharedArgs.bind(undefined, '&?', '', 'lhs');    // R = A @1 B, S = A @2 C
        let rhs = testTernaryTernarySharedArgs.bind(undefined, '&?', '', 'rhs');    // R = A @1 B, S = C @2 A

        // R = A & B, S = A &? C
        both('&?', 'isall,isall', [0, 1], [0, 1], [0, 1]);
        both('&?', 'isall,isall', [0, 2], [0, 1], [0, 2]);
        both('&?', 'isall,isall', [0, 2], [0, 2], [0, 2]);
        both('&?', 'isall,isall', [0, 1], [0, 2], [0, 2]);
        both('&?', 'isall,isall', [0, 1], [0, 1], [0, 10]);
        both('&?', 'isall,isall', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('&?', 'isall,isall', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('&?', 'isall,isall', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('==?', 'isall,issame', [0, 1], [0, 1], [0, 1]);
        both('==?', 'isall,issame', [0, 2], [0, 1], [0, 2]);
        both('==?', 'isall,issame', [0, 2], [0, 2], [0, 2]);
        both('==?', 'isall,issame', [0, 1], [0, 2], [0, 2]);
        both('==?', 'isall,issame', [0, 1], [0, 1], [0, 10]);
        both('==?', 'isall,issame', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('==?', 'isall,issame', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('==?', 'isall,issame', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!=?', 'isall,isdiff', [0, 1], [0, 1], [0, 1]);
        both('!=?', 'isall,isdiff', [0, 2], [0, 1], [0, 2]);
        both('!=?', 'isall,isdiff', [0, 2], [0, 2], [0, 2]);
        both('!=?', 'isall,isdiff', [0, 1], [0, 2], [0, 2]);
        both('!=?', 'isall,isdiff', [0, 1], [0, 1], [0, 10]);
        both('!=?', 'isall,isdiff', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('!=?', 'isall,isdiff', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!=?', 'isall,isdiff', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<?', 'isall,islt', [0, 1], [0, 1], [0, 1]);
        lhs('<?', 'isall,islt', [0, 2], [0, 1], [0, 2]);
        lhs('<?', 'isall,islt', [0, 2], [0, 2], [0, 2]);
        lhs('<?', 'isall,islt', [0, 1], [0, 2], [0, 2]);
        lhs('<?', 'isall,islt', [0, 1], [0, 1], [0, 10]);
        lhs('<?', 'isall,islt', [0, 1], [0, 1], [0, 0, 9, 9]);
        lhs('<?', 'isall,islt', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<?', 'isall,islt', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<?', 'isall,islt', [0, 1], [0, 1], [0, 1]);
        rhs('<?', 'isall,islt', [0, 2], [0, 1], [0, 2]);
        rhs('<?', 'isall,islt', [0, 2], [0, 2], [0, 2]);
        rhs('<?', 'isall,islt', [0, 1], [0, 2], [0, 2]);
        rhs('<?', 'isall,islt', [0, 1], [0, 1], [0, 10]);
        rhs('<?', 'isall,islt', [0, 1], [0, 1], [0, 0, 9, 9]);
        rhs('<?', 'isall,islt', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<?', 'isall,islt', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<=?', 'isall,islte', [0, 1], [0, 1], [0, 1]);
        lhs('<=?', 'isall,islte', [0, 2], [0, 1], [0, 2]);
        lhs('<=?', 'isall,islte', [0, 2], [0, 2], [0, 2]);
        lhs('<=?', 'isall,islte', [0, 1], [0, 2], [0, 2]);
        lhs('<=?', 'isall,islte', [0, 1], [0, 1], [0, 10]);
        lhs('<=?', 'isall,islte', [0, 1], [0, 1], [0, 0, 9, 9]);
        lhs('<=?', 'isall,islte', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<=?', 'isall,islte', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<=?', 'isall,islte', [0, 1], [0, 1], [0, 1]);
        rhs('<=?', 'isall,islte', [0, 2], [0, 1], [0, 2]);
        rhs('<=?', 'isall,islte', [0, 2], [0, 2], [0, 2]);
        rhs('<=?', 'isall,islte', [0, 1], [0, 2], [0, 2]);
        rhs('<=?', 'isall,islte', [0, 1], [0, 1], [0, 10]);
        rhs('<=?', 'isall,islte', [0, 1], [0, 1], [0, 0, 9, 9]);
        rhs('<=?', 'isall,islte', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<=?', 'isall,islte', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!&?', 'isall,isnall', [0, 1], [0, 1], [0, 1]);
        both('!&?', 'isall,isnall', [0, 2], [0, 1], [0, 2]);
        both('!&?', 'isall,isnall', [0, 2], [0, 2], [0, 2]);
        both('!&?', 'isall,isnall', [0, 1], [0, 2], [0, 2]);
        both('!&?', 'isall,isnall', [0, 1], [0, 1], [0, 10]);
        both('!&?', 'isall,isnall', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('!&?', 'isall,isnall', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!&?', 'isall,isnall', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('|?', 'isall,issome', [0, 1], [0, 1], [0, 1]);
        both('|?', 'isall,issome', [0, 2], [0, 1], [0, 2]);
        both('|?', 'isall,issome', [0, 2], [0, 2], [0, 2]);
        both('|?', 'isall,issome', [0, 1], [0, 2], [0, 2]);
        both('|?', 'isall,issome', [0, 1], [0, 1], [0, 10]);
        both('|?', 'isall,issome', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('|?', 'isall,issome', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('|?', 'isall,issome', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!|?', 'isall,isnone', [0, 1], [0, 1], [0, 1]);
        both('!|?', 'isall,isnone', [0, 2], [0, 1], [0, 2]);
        both('!|?', 'isall,isnone', [0, 2], [0, 2], [0, 2]);
        both('!|?', 'isall,isnone', [0, 1], [0, 2], [0, 2]);
        both('!|?', 'isall,isnone', [0, 1], [0, 1], [0, 10]);
        both('!|?', 'isall,isnone', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('!|?', 'isall,isnone', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!|?', 'isall,isnone', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('+', 'isall,issome', [0, 1], [0, 20], [0, 1]);
        both('+', 'isall,sum', [0, 2], [0, 1], [0, 2]);
        both('+', 'isall,sum', [0, 2], [0, 2], [0, 2]);
        both('+', 'isall,sum', [0, 1], [0, 2], [0, 2]);
        both('+', 'isall,issome', [0, 1], [0, 20], [0, 10]);
        both('+', 'isall,issome', [0, 1], [0, 20], [0, 0, 9, 9]);
        both('+', 'isall,issome', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('+', 'isall,issome', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('-', 'isall,minus', [0, 1], [0, 20], [0, 1]);
        lhs('-', 'isall,minus', [0, 2], [0, 1], [0, 2]);
        lhs('-', 'isall,minus', [0, 2], [0, 2], [0, 2]);
        lhs('-', 'isall,minus', [0, 1], [0, 2], [0, 2]);
        lhs('-', 'isall,minus', [0, 1], [0, 20], [0, 10]);
        lhs('-', 'isall,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
        lhs('-', 'isall', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('-', 'isall,minus', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('-', 'isall,minus', [0, 1], [0, 20], [0, 1]);
        rhs('-', 'isall,minus', [0, 2], [0, 1], [0, 2]);
        rhs('-', 'isall,minus', [0, 2], [0, 2], [0, 2]);
        rhs('-', 'isall,minus', [0, 1], [0, 2], [0, 2]);
        rhs('-', 'isall,minus', [0, 1], [0, 20], [0, 10]);
        rhs('-', 'isall,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
        rhs('-', 'isall,minus', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('-', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('*', 'isall,product', [0, 1], [0, 100], [0, 1]);
        both('*', 'isall,product', [0, 2], [0, 1], [0, 2]);
        both('*', 'isall,product', [0, 2], [0, 2], [0, 2]);
        both('*', 'isall,product', [0, 1], [0, 2], [0, 2]);
        both('*', 'isall,product', [0, 1], [0, 100], [0, 10]);
        both('*', 'isall,product', [0, 1], [0, 100], [0, 0, 9, 9]);
        both('*', 'isall,product', [0, 1], [0, 100], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('*', 'isall,product', [0, 1], [0, 100], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('/', 'div,isall', [0, 1], [0, 20], [0, 1]);
        lhs('/', 'div,isall', [0, 2], [0, 1], [0, 2]);
        lhs('/', 'div,isall', [0, 2], [0, 2], [0, 2]);
        lhs('/', 'div,isall', [0, 1], [0, 2], [0, 2]);
        lhs('/', 'div,isall', [0, 1], [0, 20], [0, 10]);
        lhs('/', 'div,isall', [0, 1], [0, 20], [0, 0, 9, 9]);
        lhs('/', 'div,isall', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('/', 'div,isall', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('/', 'div,isall', [0, 1], [0, 20], [0, 1]);
        rhs('/', 'div,isall', [0, 2], [0, 1], [0, 2]);
        rhs('/', 'div,isall', [0, 2], [0, 2], [0, 2]);
        rhs('/', 'div,isall', [0, 1], [0, 2], [0, 2]);
        rhs('/', 'div,isall', [0, 1], [0, 20], [0, 10]);
        rhs('/', 'div,isall', [0, 1], [0, 20], [0, 0, 9, 9]);
        rhs('/', 'div,isall', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('/', 'div,isall', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
      });

      describe('ternary with shared results', function() {

        let both = testTernaryTernarySharedArgs.bind(undefined, '&?', '', '');          // R = A @1 B, S = A @2 C  and  R = A @1 B, S = C @2 A
        let lhs = testTernaryTernarySharedArgs.bind(undefined, '&?', '', 'lhs');    // R = A @1 B, S = A @2 C
        let rhs = testTernaryTernarySharedArgs.bind(undefined, '&?', '', 'rhs');    // R = A @1 B, S = C @2 A

        // R = A & B, S = A &? C
        both('&?', 'isall,isall', [0, 1], [0, 1], [0, 1]);
        both('&?', 'isall,isall', [0, 2], [0, 1], [0, 2]);
        both('&?', 'isall,isall', [0, 2], [0, 2], [0, 2]);
        both('&?', 'isall,isall', [0, 1], [0, 2], [0, 2]);
        both('&?', 'isall,isall', [0, 1], [0, 1], [0, 10]);
        both('&?', 'isall,isall', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('&?', 'isall,isall', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('&?', 'isall,isall', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('==?', 'isall,issame', [0, 1], [0, 1], [0, 1]);
        both('==?', 'isall,issame', [0, 2], [0, 1], [0, 2]);
        both('==?', 'isall,issame', [0, 2], [0, 2], [0, 2]);
        both('==?', 'isall,issame', [0, 1], [0, 2], [0, 2]);
        both('==?', 'isall,issame', [0, 1], [0, 1], [0, 10]);
        both('==?', 'isall,issame', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('==?', 'isall,issame', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('==?', 'isall,issame', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!=?', 'isall,isdiff', [0, 1], [0, 1], [0, 1]);
        both('!=?', 'isall,isdiff', [0, 2], [0, 1], [0, 2]);
        both('!=?', 'isall,isdiff', [0, 2], [0, 2], [0, 2]);
        both('!=?', 'isall,isdiff', [0, 1], [0, 2], [0, 2]);
        both('!=?', 'isall,isdiff', [0, 1], [0, 1], [0, 10]);
        both('!=?', 'isall,isdiff', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('!=?', 'isall,isdiff', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!=?', 'isall,isdiff', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<?', 'isall,islt', [0, 1], [0, 1], [0, 1]);
        lhs('<?', 'isall,islt', [0, 2], [0, 1], [0, 2]);
        lhs('<?', 'isall,islt', [0, 2], [0, 2], [0, 2]);
        lhs('<?', 'isall,islt', [0, 1], [0, 2], [0, 2]);
        lhs('<?', 'isall,islt', [0, 1], [0, 1], [0, 10]);
        lhs('<?', 'isall,islt', [0, 1], [0, 1], [0, 0, 9, 9]);
        lhs('<?', 'isall,islt', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<?', 'isall,islt', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<?', 'isall,islt', [0, 1], [0, 1], [0, 1]);
        rhs('<?', 'isall,islt', [0, 2], [0, 1], [0, 2]);
        rhs('<?', 'isall,islt', [0, 2], [0, 2], [0, 2]);
        rhs('<?', 'isall,islt', [0, 1], [0, 2], [0, 2]);
        rhs('<?', 'isall,islt', [0, 1], [0, 1], [0, 10]);
        rhs('<?', 'isall,islt', [0, 1], [0, 1], [0, 0, 9, 9]);
        rhs('<?', 'isall,islt', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<?', 'isall,islt', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<=?', 'isall,islte', [0, 1], [0, 1], [0, 1]);
        lhs('<=?', 'isall,islte', [0, 2], [0, 1], [0, 2]);
        lhs('<=?', 'isall,islte', [0, 2], [0, 2], [0, 2]);
        lhs('<=?', 'isall,islte', [0, 1], [0, 2], [0, 2]);
        lhs('<=?', 'isall,islte', [0, 1], [0, 1], [0, 10]);
        lhs('<=?', 'isall,islte', [0, 1], [0, 1], [0, 0, 9, 9]);
        lhs('<=?', 'isall,islte', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<=?', 'isall,islte', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<=?', 'isall,islte', [0, 1], [0, 1], [0, 1]);
        rhs('<=?', 'isall,islte', [0, 2], [0, 1], [0, 2]);
        rhs('<=?', 'isall,islte', [0, 2], [0, 2], [0, 2]);
        rhs('<=?', 'isall,islte', [0, 1], [0, 2], [0, 2]);
        rhs('<=?', 'isall,islte', [0, 1], [0, 1], [0, 10]);
        rhs('<=?', 'isall,islte', [0, 1], [0, 1], [0, 0, 9, 9]);
        rhs('<=?', 'isall,islte', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<=?', 'isall,islte', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!&?', 'isall,isnall', [0, 1], [0, 1], [0, 1]);
        both('!&?', 'isall,isnall', [0, 2], [0, 1], [0, 2]);
        both('!&?', 'isall,isnall', [0, 2], [0, 2], [0, 2]);
        both('!&?', 'isall,isnall', [0, 1], [0, 2], [0, 2]);
        both('!&?', 'isall,isnall', [0, 1], [0, 1], [0, 10]);
        both('!&?', 'isall,isnall', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('!&?', 'isall,isnall', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!&?', 'isall,isnall', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('|?', 'isall,issome', [0, 1], [0, 1], [0, 1]);
        both('|?', 'isall,issome', [0, 2], [0, 1], [0, 2]);
        both('|?', 'isall,issome', [0, 2], [0, 2], [0, 2]);
        both('|?', 'isall,issome', [0, 1], [0, 2], [0, 2]);
        both('|?', 'isall,issome', [0, 1], [0, 1], [0, 10]);
        both('|?', 'isall,issome', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('|?', 'isall,issome', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('|?', 'isall,issome', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!|?', 'isall,isnone', [0, 1], [0, 1], [0, 1]);
        both('!|?', 'isall,isnone', [0, 2], [0, 1], [0, 2]);
        both('!|?', 'isall,isnone', [0, 2], [0, 2], [0, 2]);
        both('!|?', 'isall,isnone', [0, 1], [0, 2], [0, 2]);
        both('!|?', 'isall,isnone', [0, 1], [0, 1], [0, 10]);
        both('!|?', 'isall,isnone', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('!|?', 'isall,isnone', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!|?', 'isall,isnone', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('+', 'isall,issome', [0, 1], [0, 20], [0, 1]);
        both('+', 'isall,sum', [0, 2], [0, 1], [0, 2]);
        both('+', 'isall,sum', [0, 2], [0, 2], [0, 2]);
        both('+', 'isall,sum', [0, 1], [0, 2], [0, 2]);
        both('+', 'isall,issome', [0, 1], [0, 20], [0, 10]);
        both('+', 'isall,issome', [0, 1], [0, 20], [0, 0, 9, 9]);
        both('+', 'isall,issome', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('+', 'isall,issome', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('-', 'isall,minus', [0, 1], [0, 20], [0, 1]);
        lhs('-', 'isall,minus', [0, 2], [0, 1], [0, 2]);
        lhs('-', 'isall,minus', [0, 2], [0, 2], [0, 2]);
        lhs('-', 'isall,minus', [0, 1], [0, 2], [0, 2]);
        lhs('-', 'isall,minus', [0, 1], [0, 20], [0, 10]);
        lhs('-', 'isall,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
        lhs('-', 'isall', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('-', 'isall,minus', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('-', 'isall,minus', [0, 1], [0, 20], [0, 1]);
        rhs('-', 'isall,minus', [0, 2], [0, 1], [0, 2]);
        rhs('-', 'isall,minus', [0, 2], [0, 2], [0, 2]);
        rhs('-', 'isall,minus', [0, 1], [0, 2], [0, 2]);
        rhs('-', 'isall,minus', [0, 1], [0, 20], [0, 10]);
        rhs('-', 'isall,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
        rhs('-', 'isall,minus', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('-', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('*', 'isall,product', [0, 1], [0, 100], [0, 1]);
        both('*', 'isall,product', [0, 2], [0, 1], [0, 2]);
        both('*', 'isall,product', [0, 2], [0, 2], [0, 2]);
        both('*', 'isall,product', [0, 1], [0, 2], [0, 2]);
        both('*', 'isall,product', [0, 1], [0, 100], [0, 10]);
        both('*', 'isall,product', [0, 1], [0, 100], [0, 0, 9, 9]);
        both('*', 'isall,product', [0, 1], [0, 100], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('*', 'isall,product', [0, 1], [0, 100], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('/', 'div,isall', [0, 1], [0, 20], [0, 1]);
        lhs('/', 'div,isall', [0, 2], [0, 1], [0, 2]);
        lhs('/', 'div,isall', [0, 2], [0, 2], [0, 2]);
        lhs('/', 'div,isall', [0, 1], [0, 2], [0, 2]);
        lhs('/', 'div,isall', [0, 1], [0, 20], [0, 10]);
        lhs('/', 'div,isall', [0, 1], [0, 20], [0, 0, 9, 9]);
        lhs('/', 'div,isall', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('/', 'div,isall', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('/', 'div,isall', [0, 1], [0, 20], [0, 1]);
        rhs('/', 'div,isall', [0, 2], [0, 1], [0, 2]);
        rhs('/', 'div,isall', [0, 2], [0, 2], [0, 2]);
        rhs('/', 'div,isall', [0, 1], [0, 2], [0, 2]);
        rhs('/', 'div,isall', [0, 1], [0, 20], [0, 10]);
        rhs('/', 'div,isall', [0, 1], [0, 20], [0, 0, 9, 9]);
        rhs('/', 'div,isall', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('/', 'div,isall', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
      });
    });

    describe('ISDIFF', function() {

      describe('binary with shared arg', function() {

        let both = testTernaryBinarySharedArgs.bind(undefined, '!=?', '', ''); // R = A @1 B, A @2 C  and  R = A @1 B, C @2 A and R = B @1 A, A @2 C  and  R = B @1 A, C @2 A
        let lhs = testTernaryBinarySharedArgs.bind(undefined, '!=?', '', 'lhs'); // R = A @1 B, A @2 C and R = B @1 A, A @2 C
        let rhs = testTernaryBinarySharedArgs.bind(undefined, '!=?', '', 'rhs'); // R = A @1 B, C @2 A and R = A @1 B, C @2 A

        both('&', 'xor', [0, 1], [0, 1]);
        both('&', 'isdiff', [0, 2], [0, 1]);
        both('&', 'isdiff', [0, 2], [0, 2]);
        both('&', 'isdiff', [0, 1], [0, 10]);
        both('&', 'xor', [0, 1], [0, 0, 9, 9]);
        both('&', 'isdiff', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('&', 'isdiff', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!=', 'isdiff,xor', [0, 1], [0, 1]);
        both('!=', 'isdiff,xor', [0, 2], [0, 1]);
        both('!=', 'diff,isdiff', [0, 2], [0, 2]);
        both('!=', 'diff,isdiff', [0, 1], [0, 10]);
        both('!=', 'isdiff,xor', [0, 1], [0, 0, 9, 9]);
        both('!=', 'diff,isdiff', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!=', 'diff,isdiff', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('->', 'imp,isdiff', [0, 1], [0, 1]);
        lhs('->', 'imp,isdiff', [0, 2], [0, 1]);
        lhs('->', 'imp,isdiff', [0, 2], [0, 1]);
        lhs('->', 'imp,isdiff', [0, 1], [0, 10]);
        lhs('->', 'imp,isdiff', [0, 1], [0, 0, 9, 9]);
        lhs('->', 'imp,isdiff', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('->', 'imp,isdiff', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('->', 'imp,isdiff', [0, 1], [0, 1]);
        rhs('->', 'imp,isdiff', [0, 2], [0, 1]);
        rhs('->', 'imp,isdiff', [0, 2], [0, 2]);
        rhs('->', 'imp,isdiff', [0, 1], [0, 10]);
        rhs('->', 'imp,isdiff', [0, 1], [0, 0, 9, 9]);
        rhs('->', 'imp,isdiff', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('->', 'imp,isdiff', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<', [0, 1], [0, 1]);
        lhs('<', 'isdiff', [0, 2], [0, 1]);
        lhs('<', 'isdiff,lt', [0, 2], [0, 2]);
        lhs('<', 'isdiff,lt', [0, 1], [0, 10]);
        lhs('<', [0, 1], [0, 0, 9, 9]);
        lhs('<', 'isdiff', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<', 'xor', [0, 1], [0, 1]);
        rhs('<', 'isdiff', [0, 2], [0, 1]);
        rhs('<', 'isdiff,lt', [0, 2], [0, 2]);
        rhs('<', 'isdiff,lt', [0, 1], [0, 10]);
        rhs('<', 'xor', [0, 1], [0, 0, 9, 9]);
        rhs('<', 'isdiff', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<', 'isdiff', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<=', 'imp,isdiff', [0, 1], [0, 1]);
        lhs('<=', 'imp,isdiff', [0, 2], [0, 1]);
        lhs('<=', 'isdiff,lte', [0, 2], [0, 2]);
        lhs('<=', 'isdiff,lte', [0, 1], [0, 10]);
        lhs('<=', 'imp,isdiff', [0, 1], [0, 0, 9, 9]);
        lhs('<=', 'imp,isdiff', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<=', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<=', 'imp,isdiff', [0, 1], [0, 1]);
        rhs('<=', 'imp,isdiff', [0, 2], [0, 1]);
        rhs('<=', 'isdiff,lte', [0, 2], [0, 2]);
        rhs('<=', 'isdiff,lte', [0, 1], [0, 10]);
        rhs('<=', 'imp,isdiff', [0, 1], [0, 0, 9, 9]);
        rhs('<=', 'isdiff', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<=', 'imp,isdiff', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!&', 'isdiff,nall', [0, 1], [0, 1]);
        both('!&', 'isdiff,nall', [0, 2], [0, 1]);
        both('!&', 'isdiff,nall', [0, 2], [0, 2]);
        both('!&', 'isdiff,nall', [0, 1], [0, 10]);
        both('!&', 'isdiff,nall', [0, 1], [0, 0, 9, 9]);
        both('!&', 'isdiff,nall', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!&', 'isdiff,nall', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('!->', 'xor', [0, 1], [0, 1]);
        lhs('!->', 'isdiff', [0, 2], [0, 1]);
        lhs('!->', 'isdiff', [0, 2], [0, 2]);
        lhs('!->', 'isdiff', [0, 1], [0, 10]);
        lhs('!->', 'xor', [0, 1], [0, 0, 9, 9]);
        lhs('!->', 'isdiff', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('!->', 'isdiff', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('!->', [0, 1], [0, 1]);
        rhs('!->', 'isdiff', [0, 2], [0, 1]);
        rhs('!->', 'isdiff', [0, 2], [0, 2]);
        rhs('!->', 'isdiff', [0, 1], [0, 10]);
        rhs('!->', [0, 1], [0, 0, 9, 9]);
        rhs('!->', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('!->', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!|', [0, 1], [0, 1]);
        both('!|', 'isdiff', [0, 2], [0, 1]);
        both('!|', 'isdiff', [0, 2], [0, 2]);
        both('!|', 'isdiff', [0, 1], [0, 10]);
        both('!|', [0, 1], [0, 0, 9, 9]);
        both('!|', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!|', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('==', 'isdiff', [0, 1], [0, 1]);
        both('==', 'isdiff', [0, 2], [0, 1]);
        both('==', 'isdiff', [0, 2], [0, 2]);
        both('==', 'isdiff', [0, 1], [0, 10]);
        both('==', 'isdiff', [0, 1], [0, 0, 9, 9]);
        both('==', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('==', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!^', 'isdiff', [0, 1], [0, 1]);
        both('!^', 'isdiff', [0, 2], [0, 1]);
        both('!^', 'isdiff', [0, 2], [0, 2]);
        both('!^', 'isdiff', [0, 1], [0, 10]);
        both('!^', 'isdiff', [0, 1], [0, 0, 9, 9]);
        both('!^', 'isdiff', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!^', 'isdiff', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('^', 'isdiff,xor', [0, 1], [0, 1]);
        both('^', 'isdiff,xor', [0, 2], [0, 1]);
        both('^', 'isdiff,xor', [0, 2], [0, 2]);
        both('^', 'isdiff,xor', [0, 1], [0, 10]);
        both('^', 'isdiff,xor', [0, 1], [0, 0, 9, 9]);
        both('^', 'isdiff,xor', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('^', 'isdiff,xor', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
      });

      describe('binary with shared result', function() {

        let both = testTernaryBinarySharedResult.bind(undefined, '!=?', '', ''); // R = A @1 B, R @2 C  and  R = A @1 B, C @2 R and R = B @1 A, R @2 C  and  R = B @1 A, C @2 R
        let lhs = testTernaryBinarySharedResult.bind(undefined, '!=?', '', 'lhs'); // R = A @1 B, R @2 C and R = B @1 A, R @2 C
        let rhs = testTernaryBinarySharedResult.bind(undefined, '!=?', '', 'rhs'); // R = A @1 B, C @2 R and R = B @1 A, C @2 R

        both('&', 'xor', [0, 1], [0, 1]);
        both('&', 'xor', [0, 2], [0, 1]);
        both('&', 'diff', [0, 2], [0, 2]);
        both('&', 'diff', [0, 1], [0, 10]);
        both('&', 'xor', [0, 1], [0, 0, 9, 9]);
        both('&', 'diff', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('&', 'diff', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!=', 'isdiff,xor', [0, 1], [0, 1]);
        both('!=', 'diff,isdiff', [0, 2], [0, 1]);
        both('!=', 'diff,isdiff', [0, 2], [0, 2]);
        both('!=', 'diff,isdiff', [0, 1], [0, 10]);
        both('!=', 'diff,isdiff', [0, 1], [0, 0, 9, 9]);
        both('!=', 'diff,isdiff', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!=', 'diff,isdiff', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('->', 'imp,isdiff', [0, 1], [0, 1]);
        lhs('->', 'imp,isdiff', [0, 2], [0, 1]);
        lhs('->', 'imp,isdiff', [0, 2], [0, 1]);
        lhs('->', 'imp,isdiff', [0, 1], [0, 10]);
        lhs('->', 'imp,isdiff', [0, 1], [0, 0, 9, 9]);
        lhs('->', 'imp,isdiff', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('->', 'imp,isdiff', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('->', 'imp,isdiff', [0, 1], [0, 1]);
        rhs('->', 'imp,isdiff', [0, 2], [0, 1]);
        rhs('->', 'imp,isdiff', [0, 2], [0, 2]);
        rhs('->', 'imp,isdiff', [0, 1], [0, 10]);
        rhs('->', 'imp,isdiff', [0, 1], [0, 0, 9, 9]);
        rhs('->', 'imp,isdiff', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('->', 'imp,isdiff', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<', [0, 1], [0, 1]);
        lhs('<', [0, 2], [0, 1]);
        lhs('<', 'isdiff,lt', [0, 2], [0, 2]);
        lhs('<', 'isdiff,lt', [0, 1], [0, 10]);
        lhs('<', [0, 1], [0, 0, 9, 9]);
        lhs('<', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<', 'xor', [0, 1], [0, 1]);
        rhs('<', 'xor', [0, 2], [0, 1]);
        rhs('<', 'diff', [0, 2], [0, 2]);
        rhs('<', 'diff', [0, 1], [0, 10]);
        rhs('<', 'xor', [0, 1], [0, 0, 9, 9]);
        rhs('<', 'diff', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<', 'diff', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<=', 'imp,isdiff', [0, 1], [0, 1]);
        lhs('<=', 'imp,isdiff', [0, 2], [0, 1]);
        lhs('<=', 'isdiff,lte', [0, 2], [0, 2]);
        lhs('<=', 'isdiff,lte', [0, 1], [0, 10]);
        lhs('<=', 'imp,isdiff', [0, 1], [0, 0, 9, 9]);
        lhs('<=', 'imp,isdiff', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<=', 'imp,isdiff', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<=', 'imp,isdiff', [0, 1], [0, 1]);
        rhs('<=', 'isdiff,lte', [0, 2], [0, 1]);
        rhs('<=', 'isdiff,lte', [0, 2], [0, 2]);
        rhs('<=', 'imp,isdiff', [0, 1], [0, 10]);
        rhs('<=', [0, 1], [0, 0, 9, 9]);
        rhs('<=', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<=', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!&', 'isdiff,nall', [0, 1], [0, 1]);
        both('!&', 'isdiff,nall', [0, 2], [0, 1]);
        both('!&', 'isdiff,nall', [0, 2], [0, 2]);
        both('!&', 'isdiff,nall', [0, 1], [0, 10]);
        both('!&', 'isdiff,nall', [0, 1], [0, 0, 9, 9]);
        both('!&', 'isdiff,nall', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!&', 'isdiff,nall', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('!->', 'xor', [0, 1], [0, 1]);
        lhs('!->', 'xor', [0, 2], [0, 1]);
        lhs('!->', 'diff', [0, 2], [0, 2]);
        lhs('!->', 'diff', [0, 1], [0, 10]);
        lhs('!->', 'xor', [0, 1], [0, 0, 9, 9]);
        lhs('!->', 'diff', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('!->', 'diff', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('!->', [0, 1], [0, 1]);
        rhs('!->', [0, 2], [0, 1]);
        rhs('!->', [0, 2], [0, 2]);
        rhs('!->', [0, 1], [0, 10]);
        rhs('!->', [0, 1], [0, 0, 9, 9]);
        rhs('!->', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('!->', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!|', [0, 1], [0, 1]);
        both('!|', [0, 2], [0, 1]);
        both('!|', [0, 2], [0, 2]);
        both('!|', [0, 1], [0, 10]);
        both('!|', [0, 1], [0, 0, 9, 9]);
        both('!|', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!|', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('==', 'isdiff', [0, 1], [0, 1]);
        both('==', 'isdiff', [0, 2], [0, 1]);
        both('==', 'isdiff', [0, 2], [0, 2]);
        both('==', 'isdiff', [0, 1], [0, 10]);
        both('==', [0, 1], [0, 0, 9, 9]);
        both('==', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('==', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!^', 'isdiff', [0, 1], [0, 1]);
        both('!^', 'isdiff', [0, 2], [0, 1]);
        both('!^', 'isdiff', [0, 2], [0, 2]);
        both('!^', 'isdiff', [0, 1], [0, 10]);
        both('!^', 'isdiff', [0, 1], [0, 0, 9, 9]);
        both('!^', 'isdiff', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!^', 'isdiff', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('^', 'isdiff,xor', [0, 1], [0, 1]);
        both('^', 'isdiff,xor', [0, 2], [0, 1]);
        both('^', 'isdiff,xor', [0, 2], [0, 2]);
        both('^', 'isdiff,xor', [0, 1], [0, 10]);
        both('^', 'isdiff,xor', [0, 1], [0, 0, 9, 9]);
        both('^', 'isdiff,xor', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('^', 'isdiff,xor', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
      });

      describe('ternary with shared args', function() {

        let both = testTernaryTernarySharedArgs.bind(undefined, '!=?', '', '');          // R = A @1 B, S = A @2 C and R = A @1 B, S = C @2 A and R = B @1 A, S = A @2 C and R = B @1 A, S = C @2 A
        let lhs = testTernaryTernarySharedArgs.bind(undefined, '!=?', '', 'lhs');    // R = A @1 B, S = A @2 C and R = B @1 A, S = A @2 C
        let rhs = testTernaryTernarySharedArgs.bind(undefined, '!=?', '', 'rhs');    // R = A @1 B, S = C @2 A and R = B @1 A, S = C @2 A

        // R = A & B, S = A &? C
        both('&?', 'isall,isdiff', [0, 1], [0, 1], [0, 1]);
        both('&?', 'isall,isdiff', [0, 2], [0, 1], [0, 2]);
        both('&?', 'isall,isdiff', [0, 2], [0, 2], [0, 2]);
        both('&?', 'isall,isdiff', [0, 1], [0, 2], [0, 2]);
        both('&?', 'isall,isdiff', [0, 1], [0, 1], [0, 10]);
        both('&?', 'isall,isdiff', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('&?', 'isall,isdiff', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('&?', 'isall,isdiff', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('==?', 'isdiff,issame', [0, 1], [0, 1], [0, 1]);
        both('==?', 'isdiff,issame', [0, 2], [0, 1], [0, 2]);
        both('==?', 'isdiff,issame', [0, 2], [0, 2], [0, 2]);
        both('==?', 'isdiff,issame', [0, 1], [0, 2], [0, 2]);
        both('==?', 'isdiff,issame', [0, 1], [0, 1], [0, 10]);
        both('==?', 'isdiff,issame', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('==?', 'isdiff,issame', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('==?', 'isdiff,issame', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!=?', 'isdiff,isdiff', [0, 1], [0, 1], [0, 1]);
        both('!=?', 'isdiff,isdiff', [0, 2], [0, 1], [0, 2]);
        both('!=?', 'isdiff,isdiff', [0, 2], [0, 2], [0, 2]);
        both('!=?', 'isdiff,isdiff', [0, 1], [0, 2], [0, 2]);
        both('!=?', 'isdiff,isdiff', [0, 1], [0, 1], [0, 10]);
        both('!=?', 'isdiff,isdiff', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('!=?', 'isdiff,isdiff', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!=?', 'isdiff,isdiff', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<?', 'isdiff,islt', [0, 1], [0, 1], [0, 1]);
        lhs('<?', 'isdiff,islt', [0, 2], [0, 1], [0, 2]);
        lhs('<?', 'isdiff,islt', [0, 2], [0, 2], [0, 2]);
        lhs('<?', 'isdiff,islt', [0, 1], [0, 2], [0, 2]);
        lhs('<?', 'isdiff,islt', [0, 1], [0, 1], [0, 10]);
        lhs('<?', 'isdiff,islt', [0, 1], [0, 1], [0, 0, 9, 9]);
        lhs('<?', 'isdiff,islt', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<?', 'isdiff,islt', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<?', 'isdiff,islt', [0, 1], [0, 1], [0, 1]);
        rhs('<?', 'isdiff,islt', [0, 2], [0, 1], [0, 2]);
        rhs('<?', 'isdiff,islt', [0, 2], [0, 2], [0, 2]);
        rhs('<?', 'isdiff,islt', [0, 1], [0, 2], [0, 2]);
        rhs('<?', 'isdiff,islt', [0, 1], [0, 1], [0, 10]);
        rhs('<?', 'isdiff,islt', [0, 1], [0, 1], [0, 0, 9, 9]);
        rhs('<?', 'isdiff,islt', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<?', 'isdiff,islt', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<=?', 'isdiff,islte', [0, 1], [0, 1], [0, 1]);
        lhs('<=?', 'isdiff,islte', [0, 2], [0, 1], [0, 2]);
        lhs('<=?', 'isdiff,islte', [0, 2], [0, 2], [0, 2]);
        lhs('<=?', 'isdiff,islte', [0, 1], [0, 2], [0, 2]);
        lhs('<=?', 'isdiff,islte', [0, 1], [0, 1], [0, 10]);
        lhs('<=?', 'isdiff,islte', [0, 1], [0, 1], [0, 0, 9, 9]);
        lhs('<=?', 'isdiff,islte', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<=?', 'isdiff,islte', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<=?', 'isdiff,islte', [0, 1], [0, 1], [0, 1]);
        rhs('<=?', 'isdiff,islte', [0, 2], [0, 1], [0, 2]);
        rhs('<=?', 'isdiff,islte', [0, 2], [0, 2], [0, 2]);
        rhs('<=?', 'isdiff,islte', [0, 1], [0, 2], [0, 2]);
        rhs('<=?', 'isdiff,islte', [0, 1], [0, 1], [0, 10]);
        rhs('<=?', 'isdiff,islte', [0, 1], [0, 1], [0, 0, 9, 9]);
        rhs('<=?', 'isdiff,islte', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<=?', 'isdiff,islte', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!&?', 'isdiff,isnall', [0, 1], [0, 1], [0, 1]);
        both('!&?', 'isdiff,isnall', [0, 2], [0, 1], [0, 2]);
        both('!&?', 'isdiff,isnall', [0, 2], [0, 2], [0, 2]);
        both('!&?', 'isdiff,isnall', [0, 1], [0, 2], [0, 2]);
        both('!&?', 'isdiff,isnall', [0, 1], [0, 1], [0, 10]);
        both('!&?', 'isdiff,isnall', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('!&?', 'isdiff,isnall', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!&?', 'isdiff,isnall', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('|?', 'isdiff,issome', [0, 1], [0, 1], [0, 1]);
        both('|?', 'isdiff,issome', [0, 2], [0, 1], [0, 2]);
        both('|?', 'isdiff,issome', [0, 2], [0, 2], [0, 2]);
        both('|?', 'isdiff,issome', [0, 1], [0, 2], [0, 2]);
        both('|?', 'isdiff,issome', [0, 1], [0, 1], [0, 10]);
        both('|?', 'isdiff,issome', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('|?', 'isdiff,issome', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('|?', 'isdiff,issome', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!|?', 'isdiff,isnone', [0, 1], [0, 1], [0, 1]);
        both('!|?', 'isdiff,isnone', [0, 2], [0, 1], [0, 2]);
        both('!|?', 'isdiff,isnone', [0, 2], [0, 2], [0, 2]);
        both('!|?', 'isdiff,isnone', [0, 1], [0, 2], [0, 2]);
        both('!|?', 'isdiff,isnone', [0, 1], [0, 1], [0, 10]);
        both('!|?', 'isdiff,isnone', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('!|?', 'isdiff,isnone', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!|?', 'isdiff,isnone', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('+', 'isdiff,issome', [0, 1], [0, 20], [0, 1]);
        both('+', 'isdiff,sum', [0, 2], [0, 1], [0, 2]);
        both('+', 'isdiff,sum', [0, 2], [0, 2], [0, 2]);
        both('+', 'isdiff,sum', [0, 1], [0, 2], [0, 2]);
        both('+', 'isdiff,issome', [0, 1], [0, 20], [0, 10]);
        both('+', 'isdiff,issome', [0, 1], [0, 20], [0, 0, 9, 9]);
        both('+', 'isdiff,issome', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('+', 'isdiff,issome', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('-', 'isdiff,minus', [0, 1], [0, 20], [0, 1]);
        lhs('-', 'isdiff,minus', [0, 2], [0, 1], [0, 2]);
        lhs('-', 'isdiff,minus', [0, 2], [0, 2], [0, 2]);
        lhs('-', 'isdiff,minus', [0, 1], [0, 2], [0, 2]);
        lhs('-', 'isdiff,minus', [0, 1], [0, 20], [0, 10]);
        lhs('-', 'isdiff,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
        lhs('-', 'isdiff', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('-', 'isdiff,minus', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('-', 'isdiff,minus', [0, 1], [0, 20], [0, 1]);
        rhs('-', 'isdiff,minus', [0, 2], [0, 1], [0, 2]);
        rhs('-', 'isdiff,minus', [0, 2], [0, 2], [0, 2]);
        rhs('-', 'isdiff,minus', [0, 1], [0, 2], [0, 2]);
        rhs('-', 'isdiff,minus', [0, 1], [0, 20], [0, 10]);
        rhs('-', 'isdiff,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
        rhs('-', 'isdiff,minus', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('-', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('*', 'isdiff,product', [0, 1], [0, 100], [0, 1]);
        both('*', 'isdiff,product', [0, 2], [0, 1], [0, 2]);
        both('*', 'isdiff,product', [0, 2], [0, 2], [0, 2]);
        both('*', 'isdiff,product', [0, 1], [0, 2], [0, 2]);
        both('*', 'isdiff,product', [0, 1], [0, 100], [0, 10]);
        both('*', 'isdiff,product', [0, 1], [0, 100], [0, 0, 9, 9]);
        both('*', 'isdiff,product', [0, 1], [0, 100], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('*', 'isdiff,product', [0, 1], [0, 100], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('/', 'div,isdiff', [0, 1], [0, 20], [0, 1]);
        lhs('/', 'div,isdiff', [0, 2], [0, 1], [0, 2]);
        lhs('/', 'div,isdiff', [0, 2], [0, 2], [0, 2]);
        lhs('/', 'div,isdiff', [0, 1], [0, 2], [0, 2]);
        lhs('/', 'div,isdiff', [0, 1], [0, 20], [0, 10]);
        lhs('/', 'div,isdiff', [0, 1], [0, 20], [0, 0, 9, 9]);
        lhs('/', 'div,isdiff', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('/', 'div,isdiff', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('/', 'div,isdiff', [0, 1], [0, 20], [0, 1]);
        rhs('/', 'div,isdiff', [0, 2], [0, 1], [0, 2]);
        rhs('/', 'div,isdiff', [0, 2], [0, 2], [0, 2]);
        rhs('/', 'div,isdiff', [0, 1], [0, 2], [0, 2]);
        rhs('/', 'div,isdiff', [0, 1], [0, 20], [0, 10]);
        rhs('/', 'div,isdiff', [0, 1], [0, 20], [0, 0, 9, 9]);
        rhs('/', 'div,isdiff', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('/', 'div,isdiff', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
      });

      describe('ternary with shared R', function() {

        let both = testTernaryTernarySharedR.bind(undefined, '!=?', '', '');          // R = A @1 B, S = R @2 C and R = A @1 B, S = C @2 R and R = B @1 A, S = R @2 C and R = B @1 A, S = C @2 R
        let lhs = testTernaryTernarySharedR.bind(undefined, '!=?', '', 'lhs');    // R = A @1 B, S = R @2 C and R = B @1 A, S = R @2 C
        let rhs = testTernaryTernarySharedR.bind(undefined, '!=?', '', 'rhs');    // R = A @1 B, S = C @2 R and R = B @1 A, S = C @2 R

        // R = A & B, S = A &? C
        both('&?', 'isall,isdiff', [0, 1], [0, 1], [0, 1]);
        both('&?', 'isall,isdiff', [0, 2], [0, 1], [0, 2]);
        both('&?', 'isall,isdiff', [0, 2], [0, 2], [0, 2]);
        both('&?', 'isall,isdiff', [0, 1], [0, 2], [0, 2]);
        both('&?', 'isall,isdiff', [0, 1], [0, 1], [0, 10]);
        both('&?', 'isall,isdiff', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('&?', 'isall,isdiff', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('&?', 'isall,isdiff', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('==?', 'isdiff,issame', [0, 1], [0, 1], [0, 1]);
        both('==?', 'isdiff,issame', [0, 2], [0, 1], [0, 2]);
        both('==?', 'isdiff,issame', [0, 2], [0, 2], [0, 2]);
        both('==?', 'isdiff,issame', [0, 1], [0, 2], [0, 2]);
        both('==?', 'isdiff,issame', [0, 1], [0, 1], [0, 10]);
        both('==?', 'isdiff,issame', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('==?', 'isdiff,issame', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('==?', 'isdiff,issame', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!=?', 'isdiff,isdiff', [0, 1], [0, 1], [0, 1]);
        both('!=?', 'isdiff,isdiff', [0, 2], [0, 1], [0, 2]);
        both('!=?', 'isdiff,isdiff', [0, 2], [0, 2], [0, 2]);
        both('!=?', 'isdiff,isdiff', [0, 1], [0, 2], [0, 2]);
        both('!=?', 'isdiff,isdiff', [0, 1], [0, 1], [0, 10]);
        both('!=?', 'isdiff,isdiff', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('!=?', 'isdiff,isdiff', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!=?', 'isdiff,isdiff', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<?', 'isdiff,islt', [0, 1], [0, 1], [0, 1]);
        lhs('<?', 'isdiff,islt', [0, 2], [0, 1], [0, 2]);
        lhs('<?', 'isdiff,islt', [0, 2], [0, 2], [0, 2]);
        lhs('<?', 'isdiff,islt', [0, 1], [0, 2], [0, 2]);
        lhs('<?', 'isdiff,islt', [0, 1], [0, 1], [0, 10]);
        lhs('<?', 'isdiff,islt', [0, 1], [0, 1], [0, 0, 9, 9]);
        lhs('<?', 'isdiff,islt', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<?', 'isdiff,islt', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<?', 'isdiff,islt', [0, 1], [0, 1], [0, 1]);
        rhs('<?', 'isdiff,islt', [0, 2], [0, 1], [0, 2]);
        rhs('<?', 'isdiff,islt', [0, 2], [0, 2], [0, 2]);
        rhs('<?', 'isdiff,islt', [0, 1], [0, 2], [0, 2]);
        rhs('<?', 'isdiff,islt', [0, 1], [0, 1], [0, 10]);
        rhs('<?', 'isdiff,islt', [0, 1], [0, 1], [0, 0, 9, 9]);
        rhs('<?', 'isdiff,islt', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<?', 'isdiff,islt', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<=?', 'isdiff,islte', [0, 1], [0, 1], [0, 1]);
        lhs('<=?', 'isdiff,islte', [0, 2], [0, 1], [0, 2]);
        lhs('<=?', 'isdiff,islte', [0, 2], [0, 2], [0, 2]);
        lhs('<=?', 'isdiff,islte', [0, 1], [0, 2], [0, 2]);
        lhs('<=?', 'isdiff,islte', [0, 1], [0, 1], [0, 10]);
        lhs('<=?', 'isdiff,islte', [0, 1], [0, 1], [0, 0, 9, 9]);
        lhs('<=?', 'isdiff,islte', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<=?', 'isdiff,islte', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<=?', 'isdiff,islte', [0, 1], [0, 1], [0, 1]);
        rhs('<=?', 'isdiff,islte', [0, 2], [0, 1], [0, 2]);
        rhs('<=?', 'isdiff,islte', [0, 2], [0, 2], [0, 2]);
        rhs('<=?', 'isdiff,islte', [0, 1], [0, 2], [0, 2]);
        rhs('<=?', 'isdiff,islte', [0, 1], [0, 1], [0, 10]);
        rhs('<=?', 'isdiff,islte', [0, 1], [0, 1], [0, 0, 9, 9]);
        rhs('<=?', 'isdiff,islte', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<=?', 'isdiff,islte', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!&?', 'isdiff,isnall', [0, 1], [0, 1], [0, 1]);
        both('!&?', 'isdiff,isnall', [0, 2], [0, 1], [0, 2]);
        both('!&?', 'isdiff,isnall', [0, 2], [0, 2], [0, 2]);
        both('!&?', 'isdiff,isnall', [0, 1], [0, 2], [0, 2]);
        both('!&?', 'isdiff,isnall', [0, 1], [0, 1], [0, 10]);
        both('!&?', 'isdiff,isnall', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('!&?', 'isdiff,isnall', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!&?', 'isdiff,isnall', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('|?', 'isdiff,issome', [0, 1], [0, 1], [0, 1]);
        both('|?', 'isdiff,issome', [0, 2], [0, 1], [0, 2]);
        both('|?', 'isdiff,issome', [0, 2], [0, 2], [0, 2]);
        both('|?', 'isdiff,issome', [0, 1], [0, 2], [0, 2]);
        both('|?', 'isdiff,issome', [0, 1], [0, 1], [0, 10]);
        both('|?', 'isdiff,issome', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('|?', 'isdiff,issome', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('|?', 'isdiff,issome', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!|?', 'isdiff,isnone', [0, 1], [0, 1], [0, 1]);
        both('!|?', 'isdiff,isnone', [0, 2], [0, 1], [0, 2]);
        both('!|?', 'isdiff,isnone', [0, 2], [0, 2], [0, 2]);
        both('!|?', 'isdiff,isnone', [0, 1], [0, 2], [0, 2]);
        both('!|?', 'isdiff,isnone', [0, 1], [0, 1], [0, 10]);
        both('!|?', 'isdiff,isnone', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('!|?', 'isdiff,isnone', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!|?', 'isdiff,isnone', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('+', 'isdiff,sum', [0, 1], [0, 20], [0, 1]);
        both('+', 'isdiff,issome', [0, 2], [0, 1], [0, 2]);
        both('+', 'isdiff,sum', [0, 2], [0, 2], [0, 2]);
        both('+', 'isdiff,sum', [0, 1], [0, 2], [0, 2]);
        both('+', 'isdiff,sum', [0, 1], [0, 20], [0, 10]);
        both('+', 'isdiff,sum', [0, 1], [0, 20], [0, 0, 9, 9]);
        both('+', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('+', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('-', 'isdiff,minus', [0, 1], [0, 20], [0, 1]);
        lhs('-', 'isdiff,minus', [0, 2], [0, 1], [0, 2]);
        lhs('-', 'isdiff,minus', [0, 2], [0, 2], [0, 2]);
        lhs('-', 'isdiff,minus', [0, 1], [0, 2], [0, 2]);
        lhs('-', 'isdiff,minus', [0, 1], [0, 20], [0, 10]);
        lhs('-', 'isdiff,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
        lhs('-', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('-', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('-', 'isdiff,minus', [0, 1], [0, 20], [0, 1]);
        rhs('-', 'isdiff,minus', [0, 2], [0, 1], [0, 2]);
        rhs('-', 'isdiff,minus', [0, 2], [0, 2], [0, 2]);
        rhs('-', 'isdiff,minus', [0, 1], [0, 2], [0, 2]);
        rhs('-', 'isdiff,minus', [0, 1], [0, 20], [0, 10]);
        rhs('-', 'isdiff,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
        rhs('-', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('-', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('*', 'isdiff,product', [0, 1], [0, 100], [0, 1]);
        both('*', 'isdiff,product', [0, 2], [0, 1], [0, 2]);
        both('*', 'isdiff,product', [0, 2], [0, 2], [0, 2]);
        both('*', 'isdiff,product', [0, 1], [0, 2], [0, 2]);
        both('*', 'isdiff,product', [0, 1], [0, 100], [0, 10]);
        both('*', 'isdiff,product', [0, 1], [0, 100], [0, 0, 9, 9]);
        both('*', 'isdiff,nall', [0, 1], [0, 100], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('*', 'isdiff,nall', [0, 1], [0, 100], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('/', 'div,isdiff', [0, 1], [0, 20], [0, 1]);
        lhs('/', 'div,isdiff', [0, 2], [0, 1], [0, 2]);
        lhs('/', 'div,isdiff', [0, 2], [0, 2], [0, 2]);
        lhs('/', 'div,isdiff', [0, 1], [0, 2], [0, 2]);
        lhs('/', 'div,isdiff', [0, 1], [0, 20], [0, 10]);
        lhs('/', 'div,isdiff', [0, 1], [0, 20], [0, 0, 9, 9]);
        lhs('/', 'div,isdiff', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('/', 'div,isdiff', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('/', 'div,isdiff', [0, 1], [0, 20], [0, 1]);
        rhs('/', 'div,isdiff', [0, 2], [0, 1], [0, 2]);
        rhs('/', 'div,isdiff', [0, 2], [0, 2], [0, 2]);
        rhs('/', 'div,isdiff', [0, 1], [0, 2], [0, 2]);
        rhs('/', 'div,isdiff', [0, 1], [0, 20], [0, 10]);
        rhs('/', 'div,isdiff', [0, 1], [0, 20], [0, 0, 9, 9]);
        rhs('/', 'div,isdiff', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('/', 'div,isdiff', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
      });

      describe('ternary with shared S', function() {

        let both = testTernaryTernarySharedS.bind(undefined, '!=?', '', '');          // R = S @1 B, S = A @2 C and R = S @1 B, S = C @2 A and R = B @1 S, S = A @2 C and R = B @1 S, S = C @2 A
        let lhs = testTernaryTernarySharedS.bind(undefined, '!=?', '', 'lhs');    // R = S @1 B, S = A @2 C and R = B @1 S, S = A @2 C
        let rhs = testTernaryTernarySharedS.bind(undefined, '!=?', '', 'rhs');    // R = S @1 B, S = C @2 A and R = B @1 S, S = C @2 A

        // R = A & B, S = A &? C
        both('&?', 'isall,isdiff', [0, 1], [0, 1], [0, 1]);
        both('&?', 'isall,isdiff', [0, 2], [0, 1], [0, 2]);
        both('&?', 'isall,isdiff', [0, 2], [0, 2], [0, 2]);
        both('&?', 'isall,isdiff', [0, 1], [0, 2], [0, 2]);
        both('&?', 'isall,isdiff', [0, 1], [0, 1], [0, 10]);
        both('&?', 'isall,isdiff', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('&?', 'isall,isdiff', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('&?', 'isall,isdiff', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('==?', 'isdiff,issame', [0, 1], [0, 1], [0, 1]);
        both('==?', 'isdiff,issame', [0, 2], [0, 1], [0, 2]);
        both('==?', 'isdiff,issame', [0, 2], [0, 2], [0, 2]);
        both('==?', 'isdiff,issame', [0, 1], [0, 2], [0, 2]);
        both('==?', 'isdiff,issame', [0, 1], [0, 1], [0, 10]);
        both('==?', 'isdiff,issame', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('==?', 'isdiff,issame', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('==?', 'isdiff,issame', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!=?', 'isdiff,isdiff', [0, 1], [0, 1], [0, 1]);
        both('!=?', 'isdiff,isdiff', [0, 2], [0, 1], [0, 2]);
        both('!=?', 'isdiff,isdiff', [0, 2], [0, 2], [0, 2]);
        both('!=?', 'isdiff,isdiff', [0, 1], [0, 2], [0, 2]);
        both('!=?', 'isdiff,isdiff', [0, 1], [0, 1], [0, 10]);
        both('!=?', 'isdiff,isdiff', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('!=?', 'isdiff,isdiff', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!=?', 'isdiff,isdiff', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<?', 'isdiff,islt', [0, 1], [0, 1], [0, 1]);
        lhs('<?', 'isdiff,islt', [0, 2], [0, 1], [0, 2]);
        lhs('<?', 'isdiff,islt', [0, 2], [0, 2], [0, 2]);
        lhs('<?', 'isdiff,islt', [0, 1], [0, 2], [0, 2]);
        lhs('<?', 'isdiff,islt', [0, 1], [0, 1], [0, 10]);
        lhs('<?', 'isdiff,islt', [0, 1], [0, 1], [0, 0, 9, 9]);
        lhs('<?', 'isdiff,islt', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<?', 'isdiff,islt', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<?', 'isdiff,islt', [0, 1], [0, 1], [0, 1]);
        rhs('<?', 'isdiff,islt', [0, 2], [0, 1], [0, 2]);
        rhs('<?', 'isdiff,islt', [0, 2], [0, 2], [0, 2]);
        rhs('<?', 'isdiff,islt', [0, 1], [0, 2], [0, 2]);
        rhs('<?', 'isdiff,islt', [0, 1], [0, 1], [0, 10]);
        rhs('<?', 'isdiff,islt', [0, 1], [0, 1], [0, 0, 9, 9]);
        rhs('<?', 'isdiff,islt', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<?', 'isdiff,islt', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<=?', 'isdiff,islte', [0, 1], [0, 1], [0, 1]);
        lhs('<=?', 'isdiff,islte', [0, 2], [0, 1], [0, 2]);
        lhs('<=?', 'isdiff,islte', [0, 2], [0, 2], [0, 2]);
        lhs('<=?', 'isdiff,islte', [0, 1], [0, 2], [0, 2]);
        lhs('<=?', 'isdiff,islte', [0, 1], [0, 1], [0, 10]);
        lhs('<=?', 'isdiff,islte', [0, 1], [0, 1], [0, 0, 9, 9]);
        lhs('<=?', 'isdiff,islte', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<=?', 'isdiff,islte', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<=?', 'isdiff,islte', [0, 1], [0, 1], [0, 1]);
        rhs('<=?', 'isdiff,islte', [0, 2], [0, 1], [0, 2]);
        rhs('<=?', 'isdiff,islte', [0, 2], [0, 2], [0, 2]);
        rhs('<=?', 'isdiff,islte', [0, 1], [0, 2], [0, 2]);
        rhs('<=?', 'isdiff,islte', [0, 1], [0, 1], [0, 10]);
        rhs('<=?', 'isdiff,islte', [0, 1], [0, 1], [0, 0, 9, 9]);
        rhs('<=?', 'isdiff,islte', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<=?', 'isdiff,islte', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!&?', 'isdiff,isnall', [0, 1], [0, 1], [0, 1]);
        both('!&?', 'isdiff,isnall', [0, 2], [0, 1], [0, 2]);
        both('!&?', 'isdiff,isnall', [0, 2], [0, 2], [0, 2]);
        both('!&?', 'isdiff,isnall', [0, 1], [0, 2], [0, 2]);
        both('!&?', 'isdiff,isnall', [0, 1], [0, 1], [0, 10]);
        both('!&?', 'isdiff,isnall', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('!&?', 'isdiff,isnall', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!&?', 'isdiff,isnall', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('|?', 'isdiff,issome', [0, 1], [0, 1], [0, 1]);
        both('|?', 'isdiff,issome', [0, 2], [0, 1], [0, 2]);
        both('|?', 'isdiff,issome', [0, 2], [0, 2], [0, 2]);
        both('|?', 'isdiff,issome', [0, 1], [0, 2], [0, 2]);
        both('|?', 'isdiff,issome', [0, 1], [0, 1], [0, 10]);
        both('|?', 'isdiff,issome', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('|?', 'isdiff,issome', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('|?', 'isdiff,issome', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!|?', 'isdiff,isnone', [0, 1], [0, 1], [0, 1]);
        both('!|?', 'isdiff,isnone', [0, 2], [0, 1], [0, 2]);
        both('!|?', 'isdiff,isnone', [0, 2], [0, 2], [0, 2]);
        both('!|?', 'isdiff,isnone', [0, 1], [0, 2], [0, 2]);
        both('!|?', 'isdiff,isnone', [0, 1], [0, 1], [0, 10]);
        both('!|?', 'isdiff,isnone', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('!|?', 'isdiff,isnone', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!|?', 'isdiff,isnone', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('+', 'isdiff,sum', [0, 1], [0, 20], [0, 1]);
        both('+', 'isdiff,sum', [0, 2], [0, 1], [0, 2]);
        both('+', 'isdiff,sum', [0, 2], [0, 2], [0, 2]);
        both('+', 'isdiff,sum', [0, 1], [0, 2], [0, 2]);
        both('+', 'isdiff,sum', [0, 1], [0, 20], [0, 10]);
        both('+', 'isdiff,sum', [0, 1], [0, 20], [0, 0, 9, 9]);
        both('+', 'isdiff,sum', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('+', 'isdiff,sum', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('-', 'isdiff,minus', [0, 1], [0, 20], [0, 1]);
        lhs('-', 'isdiff,minus', [0, 2], [0, 1], [0, 2]);
        lhs('-', 'isdiff,minus', [0, 2], [0, 2], [0, 2]);
        lhs('-', 'isdiff,minus', [0, 1], [0, 2], [0, 2]);
        lhs('-', 'isdiff,minus', [0, 1], [0, 20], [0, 10]);
        lhs('-', 'isdiff,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
        lhs('-', 'isdiff', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('-', 'isdiff,minus', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('-', 'isdiff,minus', [0, 1], [0, 20], [0, 1]);
        rhs('-', 'isdiff,minus', [0, 2], [0, 1], [0, 2]);
        rhs('-', 'isdiff,minus', [0, 2], [0, 2], [0, 2]);
        rhs('-', 'isdiff,minus', [0, 1], [0, 2], [0, 2]);
        rhs('-', 'isdiff,minus', [0, 1], [0, 20], [0, 10]);
        rhs('-', 'isdiff,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
        rhs('-', 'isdiff,minus', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('-', 'isdiff', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('*', 'isdiff,product', [0, 1], [0, 100], [0, 1]);
        both('*', 'isdiff,product', [0, 2], [0, 1], [0, 2]);
        both('*', 'isdiff,product', [0, 2], [0, 2], [0, 2]);
        both('*', 'isdiff,product', [0, 1], [0, 2], [0, 2]);
        both('*', 'isdiff,product', [0, 1], [0, 100], [0, 10]);
        both('*', 'isdiff,product', [0, 1], [0, 100], [0, 0, 9, 9]);
        both('*', 'isdiff,product', [0, 1], [0, 100], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('*', 'isdiff,product', [0, 1], [0, 100], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('/', 'div,isdiff', [0, 1], [0, 20], [0, 1]);
        lhs('/', 'div,isdiff', [0, 2], [0, 1], [0, 2]);
        lhs('/', 'div,isdiff', [0, 2], [0, 2], [0, 2]);
        lhs('/', 'div,isdiff', [0, 1], [0, 2], [0, 2]);
        lhs('/', 'div,isdiff', [0, 1], [0, 20], [0, 10]);
        lhs('/', 'div,isdiff', [0, 1], [0, 20], [0, 0, 9, 9]);
        lhs('/', 'div', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('/', 'div,isdiff', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('/', 'div,isdiff', [0, 1], [0, 20], [0, 1]);
        rhs('/', 'div,isdiff', [0, 2], [0, 1], [0, 2]);
        rhs('/', 'div,isdiff', [0, 2], [0, 2], [0, 2]);
        rhs('/', 'div,isdiff', [0, 1], [0, 2], [0, 2]);
        rhs('/', 'div,isdiff', [0, 1], [0, 20], [0, 10]);
        rhs('/', 'div,isdiff', [0, 1], [0, 20], [0, 0, 9, 9]);
        rhs('/', 'div,isdiff', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('/', 'div', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
      });

      describe('ternary with shared results', function() {

        let both = testTernaryTernarySharedResults.bind(undefined, '!=?', '', '');          // R = S @1 B, S = R @2 C and R = S @1 B, S = C @2 R and R = S @1 B, S = R @2 C and R = S @1 B, S = C @2 R
        let lhs = testTernaryTernarySharedResults.bind(undefined, '!=?', '', 'lhs');    // R = S @1 B, S = R @2 C and R = B @1 S, S = R @2 C
        let rhs = testTernaryTernarySharedResults.bind(undefined, '!=?', '', 'rhs');    // R = S @1 B, S = C @2 R and R = B @1 S, S = C @2 R

        // R = A & B, S = A &? C
        both('&?', 'isall,isdiff', [0, 1], [0, 1], [0, 1]);
        both('&?', 'isall,isdiff', [0, 2], [0, 1], [0, 2]);
        both('&?', 'isall,isdiff', [0, 2], [0, 2], [0, 2]);
        both('&?', 'isall,isdiff', [0, 1], [0, 2], [0, 2]);
        both('&?', 'isall,isdiff', [0, 1], [0, 1], [0, 10]);
        both('&?', 'isall,isdiff', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('&?', 'isall,isdiff', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('&?', 'isall,isdiff', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('==?', 'isdiff,issame', [0, 1], [0, 1], [0, 1]);
        both('==?', 'isdiff,issame', [0, 2], [0, 1], [0, 2]);
        both('==?', 'isdiff,issame', [0, 2], [0, 2], [0, 2]);
        both('==?', 'isdiff,issame', [0, 1], [0, 2], [0, 2]);
        both('==?', 'isdiff,issame', [0, 1], [0, 1], [0, 10]);
        both('==?', 'isdiff,issame', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('==?', 'isdiff,issame', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('==?', 'isdiff,issame', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!=?', 'isdiff,isdiff', [0, 1], [0, 1], [0, 1]);
        both('!=?', 'isdiff,isdiff', [0, 2], [0, 1], [0, 2]);
        both('!=?', 'isdiff,isdiff', [0, 2], [0, 2], [0, 2]);
        both('!=?', 'isdiff,isdiff', [0, 1], [0, 2], [0, 2]);
        both('!=?', 'isdiff,isdiff', [0, 1], [0, 1], [0, 10]);
        both('!=?', 'isdiff,isdiff', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('!=?', 'isdiff,isdiff', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!=?', 'isdiff,isdiff', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<?', 'isdiff,islt', [0, 1], [0, 1], [0, 1]);
        lhs('<?', 'isdiff,islt', [0, 2], [0, 1], [0, 2]);
        lhs('<?', 'isdiff,islt', [0, 2], [0, 2], [0, 2]);
        lhs('<?', 'isdiff,islt', [0, 1], [0, 2], [0, 2]);
        lhs('<?', 'isdiff,islt', [0, 1], [0, 1], [0, 10]);
        lhs('<?', 'isdiff,islt', [0, 1], [0, 1], [0, 0, 9, 9]);
        lhs('<?', 'isdiff,islt', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<?', 'isdiff,islt', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<?', 'isdiff,islt', [0, 1], [0, 1], [0, 1]);
        rhs('<?', 'isdiff,islt', [0, 2], [0, 1], [0, 2]);
        rhs('<?', 'isdiff,islt', [0, 2], [0, 2], [0, 2]);
        rhs('<?', 'isdiff,islt', [0, 1], [0, 2], [0, 2]);
        rhs('<?', 'isdiff,islt', [0, 1], [0, 1], [0, 10]);
        rhs('<?', 'isdiff,islt', [0, 1], [0, 1], [0, 0, 9, 9]);
        rhs('<?', 'isdiff,islt', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<?', 'isdiff,islt', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<=?', 'isdiff,islte', [0, 1], [0, 1], [0, 1]);
        lhs('<=?', 'isdiff,islte', [0, 2], [0, 1], [0, 2]);
        lhs('<=?', 'isdiff,islte', [0, 2], [0, 2], [0, 2]);
        lhs('<=?', 'isdiff,islte', [0, 1], [0, 2], [0, 2]);
        lhs('<=?', 'isdiff,islte', [0, 1], [0, 1], [0, 10]);
        lhs('<=?', 'isdiff,islte', [0, 1], [0, 1], [0, 0, 9, 9]);
        lhs('<=?', 'isdiff,islte', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<=?', 'isdiff,islte', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<=?', 'isdiff,islte', [0, 1], [0, 1], [0, 1]);
        rhs('<=?', 'isdiff,islte', [0, 2], [0, 1], [0, 2]);
        rhs('<=?', 'isdiff,islte', [0, 2], [0, 2], [0, 2]);
        rhs('<=?', 'isdiff,islte', [0, 1], [0, 2], [0, 2]);
        rhs('<=?', 'isdiff,islte', [0, 1], [0, 1], [0, 10]);
        rhs('<=?', 'isdiff,islte', [0, 1], [0, 1], [0, 0, 9, 9]);
        rhs('<=?', 'isdiff,islte', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<=?', 'isdiff,islte', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!&?', 'isdiff,isnall', [0, 1], [0, 1], [0, 1]);
        both('!&?', 'isdiff,isnall', [0, 2], [0, 1], [0, 2]);
        both('!&?', 'isdiff,isnall', [0, 2], [0, 2], [0, 2]);
        both('!&?', 'isdiff,isnall', [0, 1], [0, 2], [0, 2]);
        both('!&?', 'isdiff,isnall', [0, 1], [0, 1], [0, 10]);
        both('!&?', 'isdiff,isnall', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('!&?', 'isdiff,isnall', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!&?', 'isdiff,isnall', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('|?', 'isdiff,issome', [0, 1], [0, 1], [0, 1]);
        both('|?', 'isdiff,issome', [0, 2], [0, 1], [0, 2]);
        both('|?', 'isdiff,issome', [0, 2], [0, 2], [0, 2]);
        both('|?', 'isdiff,issome', [0, 1], [0, 2], [0, 2]);
        both('|?', 'isdiff,issome', [0, 1], [0, 1], [0, 10]);
        both('|?', 'isdiff,issome', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('|?', 'isdiff,issome', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('|?', 'isdiff,issome', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!|?', 'isdiff,isnone', [0, 1], [0, 1], [0, 1]);
        both('!|?', 'isdiff,isnone', [0, 2], [0, 1], [0, 2]);
        both('!|?', 'isdiff,isnone', [0, 2], [0, 2], [0, 2]);
        both('!|?', 'isdiff,isnone', [0, 1], [0, 2], [0, 2]);
        both('!|?', 'isdiff,isnone', [0, 1], [0, 1], [0, 10]);
        both('!|?', 'isdiff,isnone', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('!|?', 'isdiff,isnone', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!|?', 'isdiff,isnone', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('+', 'isdiff,sum', [0, 1], [0, 20], [0, 1]);
        both('+', 'isdiff,issome', [0, 2], [0, 1], [0, 2]);
        both('+', 'isdiff,sum', [0, 2], [0, 2], [0, 2]);
        both('+', 'isdiff,sum', [0, 1], [0, 2], [0, 2]);
        both('+', 'isdiff,sum', [0, 1], [0, 20], [0, 10]);
        both('+', 'isdiff,sum', [0, 1], [0, 20], [0, 0, 9, 9]);
        both('+', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('+', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('-', 'isdiff,minus', [0, 1], [0, 20], [0, 1]);
        lhs('-', 'isdiff,minus', [0, 2], [0, 1], [0, 2]);
        lhs('-', 'isdiff,minus', [0, 2], [0, 2], [0, 2]);
        lhs('-', 'isdiff,minus', [0, 1], [0, 2], [0, 2]);
        lhs('-', 'isdiff,minus', [0, 1], [0, 20], [0, 10]);
        lhs('-', 'isdiff,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
        lhs('-', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('-', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('-', 'isdiff,minus', [0, 1], [0, 20], [0, 1]);
        rhs('-', 'isdiff,minus', [0, 2], [0, 1], [0, 2]);
        rhs('-', 'isdiff,minus', [0, 2], [0, 2], [0, 2]);
        rhs('-', 'isdiff,minus', [0, 1], [0, 2], [0, 2]);
        rhs('-', 'isdiff,minus', [0, 1], [0, 20], [0, 10]);
        rhs('-', 'isdiff,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
        rhs('-', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('-', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('*', 'isdiff,product', [0, 1], [0, 100], [0, 1]);
        both('*', 'isdiff,product', [0, 2], [0, 1], [0, 2]);
        both('*', 'isdiff,product', [0, 2], [0, 2], [0, 2]);
        both('*', 'isdiff,product', [0, 1], [0, 2], [0, 2]);
        both('*', 'isdiff,product', [0, 1], [0, 100], [0, 10]);
        both('*', 'isdiff,product', [0, 1], [0, 100], [0, 0, 9, 9]);
        both('*', 'nall', [0, 1], [0, 100], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('*', 'nall', [0, 1], [0, 100], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('/', 'div,isdiff', [0, 1], [0, 20], [0, 1]);
        lhs('/', 'div,isdiff', [0, 2], [0, 1], [0, 2]);
        lhs('/', 'div,isdiff', [0, 2], [0, 2], [0, 2]);
        lhs('/', 'div,isdiff', [0, 1], [0, 2], [0, 2]);
        lhs('/', 'div,isdiff', [0, 1], [0, 20], [0, 10]);
        lhs('/', 'div,isdiff', [0, 1], [0, 20], [0, 0, 9, 9]);
        lhs('/', 'div', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('/', 'div', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('/', 'div,isdiff', [0, 1], [0, 20], [0, 1]);
        rhs('/', 'div,isdiff', [0, 2], [0, 1], [0, 2]);
        rhs('/', 'div,isdiff', [0, 2], [0, 2], [0, 2]);
        rhs('/', 'div,isdiff', [0, 1], [0, 2], [0, 2]);
        rhs('/', 'div,isdiff', [0, 1], [0, 20], [0, 10]);
        rhs('/', 'div,isdiff', [0, 1], [0, 20], [0, 0, 9, 9]);
        rhs('/', 'div,isdiff', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('/', 'div', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
      });
    });

    describe('ISLT', function() {

      describe('ISLT LHS', function() {

        describe('binary with shared arg', function() {

          let both = testTernaryBinarySharedArgs.bind(undefined, '<?', 'lhs', ''); // R = A @1 B, A @2 C  and  R = A @1 B, C @2 A and R = B @1 A, A @2 C  and  R = B @1 A, C @2 A
          let lhs = testTernaryBinarySharedArgs.bind(undefined, '<?', 'lhs', 'lhs'); // R = A @1 B, A @2 C and R = B @1 A, A @2 C
          let rhs = testTernaryBinarySharedArgs.bind(undefined, '<?', 'lhs', 'rhs'); // R = A @1 B, C @2 A and R = A @1 B, C @2 A

          both('&', [0, 1], [0, 1]);
          both('&', [0, 2], [0, 1]);
          both('&', 'islt', [0, 2], [0, 2]);
          both('&', 'islt', [0, 1], [0, 10]);
          both('&', [0, 1], [0, 0, 9, 9]);
          both('&', 'islt', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('&', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!=', 'islt,xor', [0, 1], [0, 1]);
          both('!=', 'islt,xor', [0, 2], [0, 1]);
          both('!=', 'diff,islt', [0, 2], [0, 2]);
          both('!=', 'diff,islt', [0, 1], [0, 10]);
          both('!=', 'islt,xor', [0, 1], [0, 0, 9, 9]);
          both('!=', 'diff,islt', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!=', 'diff,islt', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('->', 'imp,islt', [0, 1], [0, 1]);
          lhs('->', 'imp,islt', [0, 2], [0, 1]);
          lhs('->', 'imp,islt', [0, 2], [0, 1]);
          lhs('->', 'imp,islt', [0, 1], [0, 10]);
          lhs('->', 'imp,islt', [0, 1], [0, 0, 9, 9]);
          lhs('->', 'imp,islt', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('->', 'imp,islt', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('->', 'imp,islt', [0, 1], [0, 1]);
          rhs('->', 'imp,islt', [0, 2], [0, 1]);
          rhs('->', 'imp,islt', [0, 2], [0, 2]);
          rhs('->', 'imp,islt', [0, 1], [0, 10]);
          rhs('->', 'imp,islt', [0, 1], [0, 0, 9, 9]);
          rhs('->', 'imp,islt', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('->', 'imp,islt', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<', [0, 1], [0, 1]);
          lhs('<', [0, 2], [0, 1]);
          lhs('<', 'islt,lt', [0, 2], [0, 2]);
          lhs('<', 'islt,lt', [0, 1], [0, 10]);
          lhs('<', [0, 1], [0, 0, 9, 9]);
          lhs('<', 'islt', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<', [0, 1], [0, 1]);
          rhs('<', [0, 2], [0, 1]);
          rhs('<', 'islt,lt', [0, 2], [0, 2]);
          rhs('<', 'islt,lt', [0, 1], [0, 10]);
          rhs('<', [0, 1], [0, 0, 9, 9]);
          rhs('<', 'islt', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<=', 'imp,islt', [0, 1], [0, 1]);
          lhs('<=', 'imp,islt', [0, 2], [0, 1]);
          lhs('<=', 'islt,lte', [0, 2], [0, 2]);
          lhs('<=', 'islt,lte', [0, 1], [0, 10]);
          lhs('<=', 'imp,islt', [0, 1], [0, 0, 9, 9]);
          lhs('<=', 'imp,islt', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<=', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<=', 'imp,islt', [0, 1], [0, 1]);
          rhs('<=', 'imp,islt', [0, 2], [0, 1]);
          rhs('<=', 'islt,lte', [0, 2], [0, 2]);
          rhs('<=', 'islt,lte', [0, 1], [0, 10]);
          rhs('<=', 'imp,islt', [0, 1], [0, 0, 9, 9]);
          rhs('<=', 'islt', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<=', 'imp,islt', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!&', 'islt,nall', [0, 1], [0, 1]);
          both('!&', 'islt,nall', [0, 2], [0, 1]);
          both('!&', 'islt,nall', [0, 2], [0, 2]);
          both('!&', 'islt,nall', [0, 1], [0, 10]);
          both('!&', 'islt,nall', [0, 1], [0, 0, 9, 9]);
          both('!&', 'islt,nall', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!&', 'islt,nall', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('!->', [0, 1], [0, 1]);
          lhs('!->', [0, 2], [0, 1]);
          lhs('!->', 'islt', [0, 2], [0, 2]);
          lhs('!->', 'islt', [0, 1], [0, 10]);
          lhs('!->', [0, 1], [0, 0, 9, 9]);
          lhs('!->', 'islt', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('!->', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('!->', [0, 1], [0, 1]);
          rhs('!->', [0, 2], [0, 1]);
          rhs('!->', [0, 2], [0, 2]);
          rhs('!->', [0, 1], [0, 10]);
          rhs('!->', [0, 1], [0, 0, 9, 9]);
          rhs('!->', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('!->', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!|', [0, 1], [0, 1]);
          both('!|', [0, 2], [0, 1]);
          both('!|', [0, 2], [0, 2]);
          both('!|', [0, 1], [0, 10]);
          both('!|', [0, 1], [0, 0, 9, 9]);
          both('!|', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!|', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('==', 'islt', [0, 1], [0, 1]);
          both('==', 'islt', [0, 2], [0, 1]);
          both('==', 'islt', [0, 2], [0, 2]);
          both('==', 'islt', [0, 1], [0, 10]);
          both('==', 'islt', [0, 1], [0, 0, 9, 9]);
          both('==', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('==', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!^', 'islt', [0, 1], [0, 1]);
          both('!^', 'islt', [0, 2], [0, 1]);
          both('!^', 'islt', [0, 2], [0, 2]);
          both('!^', 'islt', [0, 1], [0, 10]);
          both('!^', 'islt', [0, 1], [0, 0, 9, 9]);
          both('!^', 'islt', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!^', 'islt', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('^', 'islt,xor', [0, 1], [0, 1]);
          both('^', 'islt,xor', [0, 2], [0, 1]);
          both('^', 'islt,xor', [0, 2], [0, 2]);
          both('^', 'islt,xor', [0, 1], [0, 10]);
          both('^', 'islt,xor', [0, 1], [0, 0, 9, 9]);
          both('^', 'islt,xor', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('^', 'islt,xor', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
        });

        describe('binary with shared result', function() {

          let both = testTernaryBinarySharedResult.bind(undefined, '<?', 'lhs', ''); // R = A @1 B, R @2 C  and  R = A @1 B, C @2 R and R = B @1 A, R @2 C  and  R = B @1 A, C @2 R
          let lhs = testTernaryBinarySharedResult.bind(undefined, '<?', 'lhs', 'lhs'); // R = A @1 B, R @2 C and R = B @1 A, R @2 C
          let rhs = testTernaryBinarySharedResult.bind(undefined, '<?', 'lhs', 'rhs'); // R = A @1 B, C @2 R and R = B @1 A, C @2 R

          both('&', [0, 1], [0, 1]);
          both('&', [0, 2], [0, 1]);
          both('&', 'lt', [0, 2], [0, 2]);
          both('&', 'lt', [0, 1], [0, 10]);
          both('&', [0, 1], [0, 0, 9, 9]);
          both('&', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('&', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!=', 'islt,xor', [0, 1], [0, 1]);
          both('!=', 'diff,islt', [0, 2], [0, 1]);
          both('!=', 'diff,islt', [0, 2], [0, 2]);
          both('!=', 'diff,islt', [0, 1], [0, 10]);
          both('!=', 'diff,islt', [0, 1], [0, 0, 9, 9]);
          both('!=', 'diff,islt', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!=', 'diff,islt', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('->', 'imp,islt', [0, 1], [0, 1]);
          lhs('->', 'imp,islt', [0, 2], [0, 1]);
          lhs('->', 'imp,islt', [0, 2], [0, 1]);
          lhs('->', 'imp,islt', [0, 1], [0, 10]);
          lhs('->', 'imp,islt', [0, 1], [0, 0, 9, 9]);
          lhs('->', 'imp,islt', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('->', 'imp,islt', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('->', 'imp,islt', [0, 1], [0, 1]);
          rhs('->', 'imp,islt', [0, 2], [0, 1]);
          rhs('->', 'imp,islt', [0, 2], [0, 2]);
          rhs('->', 'imp,islt', [0, 1], [0, 10]);
          rhs('->', 'imp,islt', [0, 1], [0, 0, 9, 9]);
          rhs('->', 'imp,islt', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('->', 'imp,islt', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<', 'imp', [0, 1], [0, 1]);
          lhs('<', 'imp', [0, 2], [0, 1]);
          lhs('<', 'islt,lt', [0, 2], [0, 2]);
          lhs('<', 'islt,lt', [0, 1], [0, 10]);
          lhs('<', [0, 1], [0, 0, 9, 9]);
          lhs('<', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<', [0, 1], [0, 1]);
          rhs('<', [0, 2], [0, 1]);
          rhs('<', 'lt', [0, 2], [0, 2]);
          rhs('<', 'lt', [0, 1], [0, 10]);
          rhs('<', [0, 1], [0, 0, 9, 9]);
          rhs('<', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<=', 'imp,islt', [0, 1], [0, 1]);
          lhs('<=', 'imp,islt', [0, 2], [0, 1]);
          lhs('<=', 'islt,lte', [0, 2], [0, 2]);
          lhs('<=', 'islt,lte', [0, 1], [0, 10]);
          lhs('<=', 'imp,islt', [0, 1], [0, 0, 9, 9]);
          lhs('<=', 'imp,islt', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<=', 'imp,islt', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<=', 'imp,islt', [0, 1], [0, 1]);
          rhs('<=', 'islt,lte', [0, 2], [0, 1]);
          rhs('<=', 'islt,lte', [0, 2], [0, 2]);
          rhs('<=', 'imp,islt', [0, 1], [0, 10]);
          rhs('<=', [0, 1], [0, 0, 9, 9]);
          rhs('<=', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<=', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!&', 'islt,nall', [0, 1], [0, 1]);
          both('!&', 'islt,nall', [0, 2], [0, 1]);
          both('!&', 'islt,nall', [0, 2], [0, 2]);
          both('!&', 'islt,nall', [0, 1], [0, 10]);
          both('!&', 'islt,nall', [0, 1], [0, 0, 9, 9]);
          both('!&', 'islt,nall', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!&', 'islt,nall', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('!->', [0, 1], [0, 1]);
          lhs('!->', [0, 2], [0, 1]);
          lhs('!->', 'lt', [0, 2], [0, 2]);
          lhs('!->', 'lt', [0, 1], [0, 10]);
          lhs('!->', [0, 1], [0, 0, 9, 9]);
          lhs('!->', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('!->', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('!->', 'imp', [0, 1], [0, 1]);
          rhs('!->', 'imp', [0, 2], [0, 1]);
          rhs('!->', 'lte', [0, 2], [0, 2]);
          rhs('!->', 'lte', [0, 1], [0, 10]);
          rhs('!->', 'imp', [0, 1], [0, 0, 9, 9]);
          rhs('!->', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('!->', 'imp', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!|', 'imp', [0, 1], [0, 1]);
          both('!|', 'imp', [0, 2], [0, 1]);
          both('!|', 'lte', [0, 2], [0, 2]);
          both('!|', 'lte', [0, 1], [0, 10]);
          both('!|', 'imp', [0, 1], [0, 0, 9, 9]);
          both('!|', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!|', 'imp', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('==', 'islt', [0, 1], [0, 1]);
          both('==', 'islt', [0, 2], [0, 1]);
          both('==', 'islt', [0, 2], [0, 2]);
          both('==', 'islt', [0, 1], [0, 10]);
          both('==', 'imp', [0, 1], [0, 0, 9, 9]);
          both('==', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('==', 'imp', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!^', 'islt', [0, 1], [0, 1]);
          both('!^', 'islt', [0, 2], [0, 1]);
          both('!^', 'islt', [0, 2], [0, 2]);
          both('!^', 'islt', [0, 1], [0, 10]);
          both('!^', 'islt', [0, 1], [0, 0, 9, 9]);
          both('!^', 'islt', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!^', 'islt', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('^', 'islt,xor', [0, 1], [0, 1]);
          both('^', 'islt,xor', [0, 2], [0, 1]);
          both('^', 'islt,xor', [0, 2], [0, 2]);
          both('^', 'islt,xor', [0, 1], [0, 10]);
          both('^', 'islt,xor', [0, 1], [0, 0, 9, 9]);
          both('^', 'islt,xor', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('^', 'islt,xor', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
        });

        describe('ternary with shared args', function() {

          let both = testTernaryTernarySharedArgs.bind(undefined, '<?', 'lhs', '');          // R = A @1 B, S = A @2 C and R = A @1 B, S = C @2 A and R = B @1 A, S = A @2 C and R = B @1 A, S = C @2 A
          let lhs = testTernaryTernarySharedArgs.bind(undefined, '<?', 'lhs', 'lhs');    // R = A @1 B, S = A @2 C and R = B @1 A, S = A @2 C
          let rhs = testTernaryTernarySharedArgs.bind(undefined, '<?', 'lhs', 'rhs');    // R = A @1 B, S = C @2 A and R = B @1 A, S = C @2 A

          // R = A & B, S = A &? C
          both('&?', 'isall,islt', [0, 1], [0, 1], [0, 1]);
          both('&?', 'isall,islt', [0, 2], [0, 1], [0, 2]);
          both('&?', 'isall,islt', [0, 2], [0, 2], [0, 2]);
          both('&?', 'isall,islt', [0, 1], [0, 2], [0, 2]);
          both('&?', 'isall,islt', [0, 1], [0, 1], [0, 10]);
          both('&?', 'isall,islt', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('&?', 'isall,islt', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('&?', 'isall,islt', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('==?', 'islt,issame', [0, 1], [0, 1], [0, 1]);
          both('==?', 'islt,issame', [0, 2], [0, 1], [0, 2]);
          both('==?', 'islt,issame', [0, 2], [0, 2], [0, 2]);
          both('==?', 'islt,issame', [0, 1], [0, 2], [0, 2]);
          both('==?', 'islt,issame', [0, 1], [0, 1], [0, 10]);
          both('==?', 'islt,issame', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('==?', 'islt,issame', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('==?', 'islt,issame', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!=?', 'isdiff,islt', [0, 1], [0, 1], [0, 1]);
          both('!=?', 'isdiff,islt', [0, 2], [0, 1], [0, 2]);
          both('!=?', 'isdiff,islt', [0, 2], [0, 2], [0, 2]);
          both('!=?', 'isdiff,islt', [0, 1], [0, 2], [0, 2]);
          both('!=?', 'isdiff,islt', [0, 1], [0, 1], [0, 10]);
          both('!=?', 'isdiff,islt', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('!=?', 'isdiff,islt', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!=?', 'isdiff,islt', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<?', 'islt,islt', [0, 1], [0, 1], [0, 1]);
          lhs('<?', 'islt,islt', [0, 2], [0, 1], [0, 2]);
          lhs('<?', 'islt,islt', [0, 2], [0, 2], [0, 2]);
          lhs('<?', 'islt,islt', [0, 1], [0, 2], [0, 2]);
          lhs('<?', 'islt,islt', [0, 1], [0, 1], [0, 10]);
          lhs('<?', 'islt,islt', [0, 1], [0, 1], [0, 0, 9, 9]);
          lhs('<?', 'islt,islt', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<?', 'islt,islt', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<?', 'islt,islt', [0, 1], [0, 1], [0, 1]);
          rhs('<?', 'islt,islt', [0, 2], [0, 1], [0, 2]);
          rhs('<?', 'islt,islt', [0, 2], [0, 2], [0, 2]);
          rhs('<?', 'islt,islt', [0, 1], [0, 2], [0, 2]);
          rhs('<?', 'islt,islt', [0, 1], [0, 1], [0, 10]);
          rhs('<?', 'islt,islt', [0, 1], [0, 1], [0, 0, 9, 9]);
          rhs('<?', 'islt,islt', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<?', 'islt,islt', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<=?', 'islt,islte', [0, 1], [0, 1], [0, 1]);
          lhs('<=?', 'islt,islte', [0, 2], [0, 1], [0, 2]);
          lhs('<=?', 'islt,islte', [0, 2], [0, 2], [0, 2]);
          lhs('<=?', 'islt,islte', [0, 1], [0, 2], [0, 2]);
          lhs('<=?', 'islt,islte', [0, 1], [0, 1], [0, 10]);
          lhs('<=?', 'islt,islte', [0, 1], [0, 1], [0, 0, 9, 9]);
          lhs('<=?', 'islt,islte', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<=?', 'islt,islte', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<=?', 'islt,islte', [0, 1], [0, 1], [0, 1]);
          rhs('<=?', 'islt,islte', [0, 2], [0, 1], [0, 2]);
          rhs('<=?', 'islt,islte', [0, 2], [0, 2], [0, 2]);
          rhs('<=?', 'islt,islte', [0, 1], [0, 2], [0, 2]);
          rhs('<=?', 'islt,islte', [0, 1], [0, 1], [0, 10]);
          rhs('<=?', 'islt,islte', [0, 1], [0, 1], [0, 0, 9, 9]);
          rhs('<=?', 'islt,islte', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<=?', 'islt,islte', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!&?', 'islt,isnall', [0, 1], [0, 1], [0, 1]);
          both('!&?', 'islt,isnall', [0, 2], [0, 1], [0, 2]);
          both('!&?', 'islt,isnall', [0, 2], [0, 2], [0, 2]);
          both('!&?', 'islt,isnall', [0, 1], [0, 2], [0, 2]);
          both('!&?', 'islt,isnall', [0, 1], [0, 1], [0, 10]);
          both('!&?', 'islt,isnall', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('!&?', 'islt,isnall', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!&?', 'islt,isnall', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('|?', 'islt,issome', [0, 1], [0, 1], [0, 1]);
          both('|?', 'islt,issome', [0, 2], [0, 1], [0, 2]);
          both('|?', 'islt,issome', [0, 2], [0, 2], [0, 2]);
          both('|?', 'islt,issome', [0, 1], [0, 2], [0, 2]);
          both('|?', 'islt,issome', [0, 1], [0, 1], [0, 10]);
          both('|?', 'islt,issome', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('|?', 'islt,issome', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('|?', 'islt,issome', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!|?', 'islt,isnone', [0, 1], [0, 1], [0, 1]);
          both('!|?', 'islt,isnone', [0, 2], [0, 1], [0, 2]);
          both('!|?', 'islt,isnone', [0, 2], [0, 2], [0, 2]);
          both('!|?', 'islt,isnone', [0, 1], [0, 2], [0, 2]);
          both('!|?', 'islt,isnone', [0, 1], [0, 1], [0, 10]);
          both('!|?', 'islt,isnone', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('!|?', 'islt,isnone', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!|?', 'islt,isnone', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('+', 'islt,issome', [0, 1], [0, 20], [0, 1]);
          both('+', 'islt,sum', [0, 2], [0, 1], [0, 2]);
          both('+', 'islt,sum', [0, 2], [0, 2], [0, 2]);
          both('+', 'islt,sum', [0, 1], [0, 2], [0, 2]);
          both('+', 'islt,issome', [0, 1], [0, 20], [0, 10]);
          both('+', 'islt,issome', [0, 1], [0, 20], [0, 0, 9, 9]);
          both('+', 'islt,issome', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('+', 'islt,issome', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('-', 'islt,minus', [0, 1], [0, 20], [0, 1]);
          lhs('-', 'islt,minus', [0, 2], [0, 1], [0, 2]);
          lhs('-', 'islt,minus', [0, 2], [0, 2], [0, 2]);
          lhs('-', 'islt,minus', [0, 1], [0, 2], [0, 2]);
          lhs('-', 'islt,minus', [0, 1], [0, 20], [0, 10]);
          lhs('-', 'islt,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
          lhs('-', 'islt', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('-', 'islt,minus', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('-', 'islt,minus', [0, 1], [0, 20], [0, 1]);
          rhs('-', 'islt,minus', [0, 2], [0, 1], [0, 2]);
          rhs('-', 'islt,minus', [0, 2], [0, 2], [0, 2]);
          rhs('-', 'islt,minus', [0, 1], [0, 2], [0, 2]);
          rhs('-', 'islt,minus', [0, 1], [0, 20], [0, 10]);
          rhs('-', 'islt,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
          rhs('-', 'islt,minus', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('-', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('*', 'islt,product', [0, 1], [0, 100], [0, 1]);
          both('*', 'islt,product', [0, 2], [0, 1], [0, 2]);
          both('*', 'islt,product', [0, 2], [0, 2], [0, 2]);
          both('*', 'islt,product', [0, 1], [0, 2], [0, 2]);
          both('*', 'islt,product', [0, 1], [0, 100], [0, 10]);
          both('*', 'islt,product', [0, 1], [0, 100], [0, 0, 9, 9]);
          both('*', 'islt,product', [0, 1], [0, 100], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('*', 'islt,product', [0, 1], [0, 100], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('/', 'div,islt', [0, 1], [0, 20], [0, 1]);
          lhs('/', 'div,islt', [0, 2], [0, 1], [0, 2]);
          lhs('/', 'div,islt', [0, 2], [0, 2], [0, 2]);
          lhs('/', 'div,islt', [0, 1], [0, 2], [0, 2]);
          lhs('/', 'div,islt', [0, 1], [0, 20], [0, 10]);
          lhs('/', 'div,islt', [0, 1], [0, 20], [0, 0, 9, 9]);
          lhs('/', 'div,islt', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('/', 'div,islt', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('/', 'div,islt', [0, 1], [0, 20], [0, 1]);
          rhs('/', 'div,islt', [0, 2], [0, 1], [0, 2]);
          rhs('/', 'div,islt', [0, 2], [0, 2], [0, 2]);
          rhs('/', 'div,islt', [0, 1], [0, 2], [0, 2]);
          rhs('/', 'div,islt', [0, 1], [0, 20], [0, 10]);
          rhs('/', 'div,islt', [0, 1], [0, 20], [0, 0, 9, 9]);
          rhs('/', 'div,islt', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('/', 'div,islt', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
        });

        describe('ternary with shared R', function() {

          let both = testTernaryTernarySharedR.bind(undefined, '<?', 'lhs', '');          // R = A @1 B, S = R @2 C and R = A @1 B, S = C @2 R and R = B @1 A, S = R @2 C and R = B @1 A, S = C @2 R
          let lhs = testTernaryTernarySharedR.bind(undefined, '<?', 'lhs', 'lhs');    // R = A @1 B, S = R @2 C and R = B @1 A, S = R @2 C
          let rhs = testTernaryTernarySharedR.bind(undefined, '<?', 'lhs', 'rhs');    // R = A @1 B, S = C @2 R and R = B @1 A, S = C @2 R

          // R = A & B, S = A &? C
          both('&?', 'isall,islt', [0, 1], [0, 1], [0, 1]);
          both('&?', 'isall,islt', [0, 2], [0, 1], [0, 2]);
          both('&?', 'isall,islt', [0, 2], [0, 2], [0, 2]);
          both('&?', 'isall,islt', [0, 1], [0, 2], [0, 2]);
          both('&?', 'isall,islt', [0, 1], [0, 1], [0, 10]);
          both('&?', 'isall,islt', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('&?', 'isall,islt', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('&?', 'isall,islt', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('==?', 'islt,issame', [0, 1], [0, 1], [0, 1]);
          both('==?', 'islt,issame', [0, 2], [0, 1], [0, 2]);
          both('==?', 'islt,issame', [0, 2], [0, 2], [0, 2]);
          both('==?', 'islt,issame', [0, 1], [0, 2], [0, 2]);
          both('==?', 'islt,issame', [0, 1], [0, 1], [0, 10]);
          both('==?', 'islt,issame', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('==?', 'islt,issame', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('==?', 'islt,issame', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!=?', 'isdiff,islt', [0, 1], [0, 1], [0, 1]);
          both('!=?', 'isdiff,islt', [0, 2], [0, 1], [0, 2]);
          both('!=?', 'isdiff,islt', [0, 2], [0, 2], [0, 2]);
          both('!=?', 'isdiff,islt', [0, 1], [0, 2], [0, 2]);
          both('!=?', 'isdiff,islt', [0, 1], [0, 1], [0, 10]);
          both('!=?', 'isdiff,islt', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('!=?', 'isdiff,islt', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!=?', 'isdiff,islt', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<?', 'islt,islt', [0, 1], [0, 1], [0, 1]);
          lhs('<?', 'islt,islt', [0, 2], [0, 1], [0, 2]);
          lhs('<?', 'islt,islt', [0, 2], [0, 2], [0, 2]);
          lhs('<?', 'islt,islt', [0, 1], [0, 2], [0, 2]);
          lhs('<?', 'islt,islt', [0, 1], [0, 1], [0, 10]);
          lhs('<?', 'islt,islt', [0, 1], [0, 1], [0, 0, 9, 9]);
          lhs('<?', 'islt,islt', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<?', 'islt,islt', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<?', 'islt,islt', [0, 1], [0, 1], [0, 1]);
          rhs('<?', 'islt,islt', [0, 2], [0, 1], [0, 2]);
          rhs('<?', 'islt,islt', [0, 2], [0, 2], [0, 2]);
          rhs('<?', 'islt,islt', [0, 1], [0, 2], [0, 2]);
          rhs('<?', 'islt,islt', [0, 1], [0, 1], [0, 10]);
          rhs('<?', 'islt,islt', [0, 1], [0, 1], [0, 0, 9, 9]);
          rhs('<?', 'islt,islt', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<?', 'islt,islt', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<=?', 'islt,islte', [0, 1], [0, 1], [0, 1]);
          lhs('<=?', 'islt,islte', [0, 2], [0, 1], [0, 2]);
          lhs('<=?', 'islt,islte', [0, 2], [0, 2], [0, 2]);
          lhs('<=?', 'islt,islte', [0, 1], [0, 2], [0, 2]);
          lhs('<=?', 'islt,islte', [0, 1], [0, 1], [0, 10]);
          lhs('<=?', 'islt,islte', [0, 1], [0, 1], [0, 0, 9, 9]);
          lhs('<=?', 'islt,islte', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<=?', 'islt,islte', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<=?', 'islt,islte', [0, 1], [0, 1], [0, 1]);
          rhs('<=?', 'islt,islte', [0, 2], [0, 1], [0, 2]);
          rhs('<=?', 'islt,islte', [0, 2], [0, 2], [0, 2]);
          rhs('<=?', 'islt,islte', [0, 1], [0, 2], [0, 2]);
          rhs('<=?', 'islt,islte', [0, 1], [0, 1], [0, 10]);
          rhs('<=?', 'islt,islte', [0, 1], [0, 1], [0, 0, 9, 9]);
          rhs('<=?', 'islt,islte', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<=?', 'islt,islte', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!&?', 'islt,isnall', [0, 1], [0, 1], [0, 1]);
          both('!&?', 'islt,isnall', [0, 2], [0, 1], [0, 2]);
          both('!&?', 'islt,isnall', [0, 2], [0, 2], [0, 2]);
          both('!&?', 'islt,isnall', [0, 1], [0, 2], [0, 2]);
          both('!&?', 'islt,isnall', [0, 1], [0, 1], [0, 10]);
          both('!&?', 'islt,isnall', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('!&?', 'islt,isnall', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!&?', 'islt,isnall', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('|?', 'islt,issome', [0, 1], [0, 1], [0, 1]);
          both('|?', 'islt,issome', [0, 2], [0, 1], [0, 2]);
          both('|?', 'islt,issome', [0, 2], [0, 2], [0, 2]);
          both('|?', 'islt,issome', [0, 1], [0, 2], [0, 2]);
          both('|?', 'islt,issome', [0, 1], [0, 1], [0, 10]);
          both('|?', 'islt,issome', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('|?', 'islt,issome', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('|?', 'islt,issome', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!|?', 'islt,isnone', [0, 1], [0, 1], [0, 1]);
          both('!|?', 'islt,isnone', [0, 2], [0, 1], [0, 2]);
          both('!|?', 'islt,isnone', [0, 2], [0, 2], [0, 2]);
          both('!|?', 'islt,isnone', [0, 1], [0, 2], [0, 2]);
          both('!|?', 'islt,isnone', [0, 1], [0, 1], [0, 10]);
          both('!|?', 'islt,isnone', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('!|?', 'islt,isnone', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!|?', 'islt,isnone', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('+', 'islt,sum', [0, 1], [0, 20], [0, 1]);
          both('+', 'islt,issome', [0, 2], [0, 1], [0, 2]);
          both('+', 'islt,sum', [0, 2], [0, 2], [0, 2]);
          both('+', 'islt,sum', [0, 1], [0, 2], [0, 2]);
          both('+', 'islt,sum', [0, 1], [0, 20], [0, 10]);
          both('+', 'islt,sum', [0, 1], [0, 20], [0, 0, 9, 9]);
          both('+', 'lte', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('+', 'lte', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('-', 'islt,minus', [0, 1], [0, 20], [0, 1]);
          lhs('-', 'islt,minus', [0, 2], [0, 1], [0, 2]);
          lhs('-', 'islt,minus', [0, 2], [0, 2], [0, 2]);
          lhs('-', 'islt,minus', [0, 1], [0, 2], [0, 2]);
          lhs('-', 'islt,minus', [0, 1], [0, 20], [0, 10]);
          lhs('-', 'islt,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
          lhs('-', 'lte', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('-', 'lte', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('-', 'islt,minus', [0, 1], [0, 20], [0, 1]);
          rhs('-', 'islt,minus', [0, 2], [0, 1], [0, 2]);
          rhs('-', 'islt,minus', [0, 2], [0, 2], [0, 2]);
          rhs('-', 'islt,minus', [0, 1], [0, 2], [0, 2]);
          rhs('-', 'islt,minus', [0, 1], [0, 20], [0, 10]);
          rhs('-', 'islt,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
          rhs('-', 'lte', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('-', 'lte', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('*', 'islt,product', [0, 1], [0, 100], [0, 1]);
          both('*', 'islt,product', [0, 2], [0, 1], [0, 2]);
          both('*', 'islt,product', [0, 2], [0, 2], [0, 2]);
          both('*', 'islt,product', [0, 1], [0, 2], [0, 2]);
          both('*', 'islt,product', [0, 1], [0, 100], [0, 10]);
          both('*', 'islt,product', [0, 1], [0, 100], [0, 0, 9, 9]);
          both('*', 'islt,nall', [0, 1], [0, 100], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('*', 'islt,nall', [0, 1], [0, 100], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('/', 'div,islt', [0, 1], [0, 20], [0, 1]);
          lhs('/', 'div,islt', [0, 2], [0, 1], [0, 2]);
          lhs('/', 'div,islt', [0, 2], [0, 2], [0, 2]);
          lhs('/', 'div,islt', [0, 1], [0, 2], [0, 2]);
          lhs('/', 'div,islt', [0, 1], [0, 20], [0, 10]);
          lhs('/', 'div,islt', [0, 1], [0, 20], [0, 0, 9, 9]);
          lhs('/', 'div,islt', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('/', 'div,islt', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('/', 'div,islt', [0, 1], [0, 20], [0, 1]);
          rhs('/', 'div,islt', [0, 2], [0, 1], [0, 2]);
          rhs('/', 'div,islt', [0, 2], [0, 2], [0, 2]);
          rhs('/', 'div,islt', [0, 1], [0, 2], [0, 2]);
          rhs('/', 'div,islt', [0, 1], [0, 20], [0, 10]);
          rhs('/', 'div,islt', [0, 1], [0, 20], [0, 0, 9, 9]);
          rhs('/', 'div,islt', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('/', 'div,islt', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
        });

        describe('ternary with shared S', function() {

          let both = testTernaryTernarySharedS.bind(undefined, '<?', 'lhs', '');          // R = S @1 B, S = A @2 C and R = S @1 B, S = C @2 A and R = B @1 S, S = A @2 C and R = B @1 S, S = C @2 A
          let lhs = testTernaryTernarySharedS.bind(undefined, '<?', 'lhs', 'lhs');    // R = S @1 B, S = A @2 C and R = B @1 S, S = A @2 C
          let rhs = testTernaryTernarySharedS.bind(undefined, '<?', 'lhs', 'rhs');    // R = S @1 B, S = C @2 A and R = B @1 S, S = C @2 A

          // R = A & B, S = A &? C
          both('&?', 'isall,islt', [0, 1], [0, 1], [0, 1]);
          both('&?', 'isall,islt', [0, 2], [0, 1], [0, 2]);
          both('&?', 'isall,islt', [0, 2], [0, 2], [0, 2]);
          both('&?', 'isall,islt', [0, 1], [0, 2], [0, 2]);
          both('&?', 'isall,islt', [0, 1], [0, 1], [0, 10]);
          both('&?', 'isall,islt', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('&?', 'isall,islt', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('&?', 'isall,islt', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('==?', 'islt,issame', [0, 1], [0, 1], [0, 1]);
          both('==?', 'islt,issame', [0, 2], [0, 1], [0, 2]);
          both('==?', 'islt,issame', [0, 2], [0, 2], [0, 2]);
          both('==?', 'islt,issame', [0, 1], [0, 2], [0, 2]);
          both('==?', 'islt,issame', [0, 1], [0, 1], [0, 10]);
          both('==?', 'islt,issame', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('==?', 'islt,issame', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('==?', 'islt,issame', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!=?', 'isdiff,islt', [0, 1], [0, 1], [0, 1]);
          both('!=?', 'isdiff,islt', [0, 2], [0, 1], [0, 2]);
          both('!=?', 'isdiff,islt', [0, 2], [0, 2], [0, 2]);
          both('!=?', 'isdiff,islt', [0, 1], [0, 2], [0, 2]);
          both('!=?', 'isdiff,islt', [0, 1], [0, 1], [0, 10]);
          both('!=?', 'isdiff,islt', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('!=?', 'isdiff,islt', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!=?', 'isdiff,islt', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<?', 'islt,islt', [0, 1], [0, 1], [0, 1]);
          lhs('<?', 'islt,islt', [0, 2], [0, 1], [0, 2]);
          lhs('<?', 'islt,islt', [0, 2], [0, 2], [0, 2]);
          lhs('<?', 'islt,islt', [0, 1], [0, 2], [0, 2]);
          lhs('<?', 'islt,islt', [0, 1], [0, 1], [0, 10]);
          lhs('<?', 'islt,islt', [0, 1], [0, 1], [0, 0, 9, 9]);
          lhs('<?', 'islt,islt', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<?', 'islt,islt', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<?', 'islt,islt', [0, 1], [0, 1], [0, 1]);
          rhs('<?', 'islt,islt', [0, 2], [0, 1], [0, 2]);
          rhs('<?', 'islt,islt', [0, 2], [0, 2], [0, 2]);
          rhs('<?', 'islt,islt', [0, 1], [0, 2], [0, 2]);
          rhs('<?', 'islt,islt', [0, 1], [0, 1], [0, 10]);
          rhs('<?', 'islt,islt', [0, 1], [0, 1], [0, 0, 9, 9]);
          rhs('<?', 'islt,islt', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<?', 'islt,islt', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<=?', 'islt,islte', [0, 1], [0, 1], [0, 1]);
          lhs('<=?', 'islt,islte', [0, 2], [0, 1], [0, 2]);
          lhs('<=?', 'islt,islte', [0, 2], [0, 2], [0, 2]);
          lhs('<=?', 'islt,islte', [0, 1], [0, 2], [0, 2]);
          lhs('<=?', 'islt,islte', [0, 1], [0, 1], [0, 10]);
          lhs('<=?', 'islt,islte', [0, 1], [0, 1], [0, 0, 9, 9]);
          lhs('<=?', 'islt,islte', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<=?', 'islt,islte', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<=?', 'islt,islte', [0, 1], [0, 1], [0, 1]);
          rhs('<=?', 'islt,islte', [0, 2], [0, 1], [0, 2]);
          rhs('<=?', 'islt,islte', [0, 2], [0, 2], [0, 2]);
          rhs('<=?', 'islt,islte', [0, 1], [0, 2], [0, 2]);
          rhs('<=?', 'islt,islte', [0, 1], [0, 1], [0, 10]);
          rhs('<=?', 'islt,islte', [0, 1], [0, 1], [0, 0, 9, 9]);
          rhs('<=?', 'islt,islte', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<=?', 'islt,islte', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!&?', 'islt,isnall', [0, 1], [0, 1], [0, 1]);
          both('!&?', 'islt,isnall', [0, 2], [0, 1], [0, 2]);
          both('!&?', 'islt,isnall', [0, 2], [0, 2], [0, 2]);
          both('!&?', 'islt,isnall', [0, 1], [0, 2], [0, 2]);
          both('!&?', 'islt,isnall', [0, 1], [0, 1], [0, 10]);
          both('!&?', 'islt,isnall', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('!&?', 'islt,isnall', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!&?', 'islt,isnall', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('|?', 'islt,issome', [0, 1], [0, 1], [0, 1]);
          both('|?', 'islt,issome', [0, 2], [0, 1], [0, 2]);
          both('|?', 'islt,issome', [0, 2], [0, 2], [0, 2]);
          both('|?', 'islt,issome', [0, 1], [0, 2], [0, 2]);
          both('|?', 'islt,issome', [0, 1], [0, 1], [0, 10]);
          both('|?', 'islt,issome', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('|?', 'islt,issome', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('|?', 'islt,issome', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!|?', 'islt,isnone', [0, 1], [0, 1], [0, 1]);
          both('!|?', 'islt,isnone', [0, 2], [0, 1], [0, 2]);
          both('!|?', 'islt,isnone', [0, 2], [0, 2], [0, 2]);
          both('!|?', 'islt,isnone', [0, 1], [0, 2], [0, 2]);
          both('!|?', 'islt,isnone', [0, 1], [0, 1], [0, 10]);
          both('!|?', 'islt,isnone', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('!|?', 'islt,isnone', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!|?', 'islt,isnone', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('+', 'islt,sum', [0, 1], [0, 20], [0, 1]);
          both('+', 'islt,sum', [0, 2], [0, 1], [0, 2]);
          both('+', 'islt,sum', [0, 2], [0, 2], [0, 2]);
          both('+', 'islt,sum', [0, 1], [0, 2], [0, 2]);
          both('+', 'islt,sum', [0, 1], [0, 20], [0, 10]);
          both('+', 'islt,sum', [0, 1], [0, 20], [0, 0, 9, 9]);
          both('+', 'islt,sum', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('+', 'islt,sum', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('-', 'islt,minus', [0, 1], [0, 20], [0, 1]);
          lhs('-', 'islt,minus', [0, 2], [0, 1], [0, 2]);
          lhs('-', 'islt,minus', [0, 2], [0, 2], [0, 2]);
          lhs('-', 'islt,minus', [0, 1], [0, 2], [0, 2]);
          lhs('-', 'islt,minus', [0, 1], [0, 20], [0, 10]);
          lhs('-', 'islt,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
          lhs('-', 'islt', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('-', 'islt,minus', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('-', 'islt,minus', [0, 1], [0, 20], [0, 1]);
          rhs('-', 'islt,minus', [0, 2], [0, 1], [0, 2]);
          rhs('-', 'islt,minus', [0, 2], [0, 2], [0, 2]);
          rhs('-', 'islt,minus', [0, 1], [0, 2], [0, 2]);
          rhs('-', 'islt,minus', [0, 1], [0, 20], [0, 10]);
          rhs('-', 'islt,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
          rhs('-', 'islt,minus', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('-', 'islt', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('*', 'islt,product', [0, 1], [0, 100], [0, 1]);
          both('*', 'islt,product', [0, 2], [0, 1], [0, 2]);
          both('*', 'islt,product', [0, 2], [0, 2], [0, 2]);
          both('*', 'islt,product', [0, 1], [0, 2], [0, 2]);
          both('*', 'islt,product', [0, 1], [0, 100], [0, 10]);
          both('*', 'islt,product', [0, 1], [0, 100], [0, 0, 9, 9]);
          both('*', 'islt,product', [0, 1], [0, 100], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('*', 'islt,product', [0, 1], [0, 100], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('/', 'div,islt', [0, 1], [0, 20], [0, 1]);
          lhs('/', 'div,islt', [0, 2], [0, 1], [0, 2]);
          lhs('/', 'div,islt', [0, 2], [0, 2], [0, 2]);
          lhs('/', 'div,islt', [0, 1], [0, 2], [0, 2]);
          lhs('/', 'div,islt', [0, 1], [0, 20], [0, 10]);
          lhs('/', 'div,islt', [0, 1], [0, 20], [0, 0, 9, 9]);
          lhs('/', 'div', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('/', 'div,islt', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('/', 'div,islt', [0, 1], [0, 20], [0, 1]);
          rhs('/', 'div,islt', [0, 2], [0, 1], [0, 2]);
          rhs('/', 'div,islt', [0, 2], [0, 2], [0, 2]);
          rhs('/', 'div,islt', [0, 1], [0, 2], [0, 2]);
          rhs('/', 'div,islt', [0, 1], [0, 20], [0, 10]);
          rhs('/', 'div,islt', [0, 1], [0, 20], [0, 0, 9, 9]);
          rhs('/', 'div,islt', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('/', 'div', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
        });

        describe('ternary with shared results', function() {

          let both = testTernaryTernarySharedResults.bind(undefined, '<?', 'lhs', '');          // R = S @1 B, S = R @2 C and R = S @1 B, S = C @2 R and R = S @1 B, S = R @2 C and R = S @1 B, S = C @2 R
          let lhs = testTernaryTernarySharedResults.bind(undefined, '<?', 'lhs', 'lhs');    // R = S @1 B, S = R @2 C and R = B @1 S, S = R @2 C
          let rhs = testTernaryTernarySharedResults.bind(undefined, '<?', 'lhs', 'rhs');    // R = S @1 B, S = C @2 R and R = B @1 S, S = C @2 R

          // R = A & B, S = A &? C
          both('&?', 'isall,islt', [0, 1], [0, 1], [0, 1]);
          both('&?', 'isall,islt', [0, 2], [0, 1], [0, 2]);
          both('&?', 'isall,islt', [0, 2], [0, 2], [0, 2]);
          both('&?', 'isall,islt', [0, 1], [0, 2], [0, 2]);
          both('&?', 'isall,islt', [0, 1], [0, 1], [0, 10]);
          both('&?', 'isall,islt', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('&?', 'isall,islt', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('&?', 'isall,islt', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('==?', 'islt,issame', [0, 1], [0, 1], [0, 1]);
          both('==?', 'islt,issame', [0, 2], [0, 1], [0, 2]);
          both('==?', 'islt,issame', [0, 2], [0, 2], [0, 2]);
          both('==?', 'islt,issame', [0, 1], [0, 2], [0, 2]);
          both('==?', 'islt,issame', [0, 1], [0, 1], [0, 10]);
          both('==?', 'islt,issame', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('==?', 'islt,issame', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('==?', 'islt,issame', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!=?', 'isdiff,islt', [0, 1], [0, 1], [0, 1]);
          both('!=?', 'isdiff,islt', [0, 2], [0, 1], [0, 2]);
          both('!=?', 'isdiff,islt', [0, 2], [0, 2], [0, 2]);
          both('!=?', 'isdiff,islt', [0, 1], [0, 2], [0, 2]);
          both('!=?', 'isdiff,islt', [0, 1], [0, 1], [0, 10]);
          both('!=?', 'isdiff,islt', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('!=?', 'isdiff,islt', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!=?', 'isdiff,islt', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<?', 'islt,islt', [0, 1], [0, 1], [0, 1]);
          lhs('<?', 'islt,islt', [0, 2], [0, 1], [0, 2]);
          lhs('<?', 'islt,islt', [0, 2], [0, 2], [0, 2]);
          lhs('<?', 'islt,islt', [0, 1], [0, 2], [0, 2]);
          lhs('<?', 'islt,islt', [0, 1], [0, 1], [0, 10]);
          lhs('<?', 'islt,islt', [0, 1], [0, 1], [0, 0, 9, 9]);
          lhs('<?', 'islt,islt', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<?', 'islt,islt', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<?', 'islt,islt', [0, 1], [0, 1], [0, 1]);
          rhs('<?', 'islt,islt', [0, 2], [0, 1], [0, 2]);
          rhs('<?', 'islt,islt', [0, 2], [0, 2], [0, 2]);
          rhs('<?', 'islt,islt', [0, 1], [0, 2], [0, 2]);
          rhs('<?', 'islt,islt', [0, 1], [0, 1], [0, 10]);
          rhs('<?', 'islt,islt', [0, 1], [0, 1], [0, 0, 9, 9]);
          rhs('<?', 'islt,islt', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<?', 'islt,islt', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<=?', 'islt,islte', [0, 1], [0, 1], [0, 1]);
          lhs('<=?', 'islt,islte', [0, 2], [0, 1], [0, 2]);
          lhs('<=?', 'islt,islte', [0, 2], [0, 2], [0, 2]);
          lhs('<=?', 'islt,islte', [0, 1], [0, 2], [0, 2]);
          lhs('<=?', 'islt,islte', [0, 1], [0, 1], [0, 10]);
          lhs('<=?', 'islt,islte', [0, 1], [0, 1], [0, 0, 9, 9]);
          lhs('<=?', 'islt,islte', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<=?', 'islt,islte', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<=?', 'islt,islte', [0, 1], [0, 1], [0, 1]);
          rhs('<=?', 'islt,islte', [0, 2], [0, 1], [0, 2]);
          rhs('<=?', 'islt,islte', [0, 2], [0, 2], [0, 2]);
          rhs('<=?', 'islt,islte', [0, 1], [0, 2], [0, 2]);
          rhs('<=?', 'islt,islte', [0, 1], [0, 1], [0, 10]);
          rhs('<=?', 'islt,islte', [0, 1], [0, 1], [0, 0, 9, 9]);
          rhs('<=?', 'islt,islte', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<=?', 'islt,islte', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!&?', 'islt,isnall', [0, 1], [0, 1], [0, 1]);
          both('!&?', 'islt,isnall', [0, 2], [0, 1], [0, 2]);
          both('!&?', 'islt,isnall', [0, 2], [0, 2], [0, 2]);
          both('!&?', 'islt,isnall', [0, 1], [0, 2], [0, 2]);
          both('!&?', 'islt,isnall', [0, 1], [0, 1], [0, 10]);
          both('!&?', 'islt,isnall', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('!&?', 'islt,isnall', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!&?', 'islt,isnall', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('|?', 'islt,issome', [0, 1], [0, 1], [0, 1]);
          both('|?', 'islt,issome', [0, 2], [0, 1], [0, 2]);
          both('|?', 'islt,issome', [0, 2], [0, 2], [0, 2]);
          both('|?', 'islt,issome', [0, 1], [0, 2], [0, 2]);
          both('|?', 'islt,issome', [0, 1], [0, 1], [0, 10]);
          both('|?', 'islt,issome', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('|?', 'islt,issome', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('|?', 'islt,issome', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!|?', 'islt,isnone', [0, 1], [0, 1], [0, 1]);
          both('!|?', 'islt,isnone', [0, 2], [0, 1], [0, 2]);
          both('!|?', 'islt,isnone', [0, 2], [0, 2], [0, 2]);
          both('!|?', 'islt,isnone', [0, 1], [0, 2], [0, 2]);
          both('!|?', 'islt,isnone', [0, 1], [0, 1], [0, 10]);
          both('!|?', 'islt,isnone', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('!|?', 'islt,isnone', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!|?', 'islt,isnone', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('+', 'islt,sum', [0, 1], [0, 20], [0, 1]);
          both('+', 'islt,issome', [0, 2], [0, 1], [0, 2]);
          both('+', 'islt,sum', [0, 2], [0, 2], [0, 2]);
          both('+', 'islt,sum', [0, 1], [0, 2], [0, 2]);
          both('+', 'islt,sum', [0, 1], [0, 20], [0, 10]);
          both('+', 'islt,sum', [0, 1], [0, 20], [0, 0, 9, 9]);
          both('+', 'lte', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('+', 'lte', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('-', 'islt,minus', [0, 1], [0, 20], [0, 1]);
          lhs('-', 'islt,minus', [0, 2], [0, 1], [0, 2]);
          lhs('-', 'islt,minus', [0, 2], [0, 2], [0, 2]);
          lhs('-', 'islt,minus', [0, 1], [0, 2], [0, 2]);
          lhs('-', 'islt,minus', [0, 1], [0, 20], [0, 10]);
          lhs('-', 'islt,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
          lhs('-', 'lte', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('-', 'lte', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('-', 'islt,minus', [0, 1], [0, 20], [0, 1]);
          rhs('-', 'islt,minus', [0, 2], [0, 1], [0, 2]);
          rhs('-', 'islt,minus', [0, 2], [0, 2], [0, 2]);
          rhs('-', 'islt,minus', [0, 1], [0, 2], [0, 2]);
          rhs('-', 'islt,minus', [0, 1], [0, 20], [0, 10]);
          rhs('-', 'islt,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
          rhs('-', 'lte', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('-', 'lte', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('*', 'islt,product', [0, 1], [0, 100], [0, 1]);
          both('*', 'islt,product', [0, 2], [0, 1], [0, 2]);
          both('*', 'islt,product', [0, 2], [0, 2], [0, 2]);
          both('*', 'islt,product', [0, 1], [0, 2], [0, 2]);
          both('*', 'islt,product', [0, 1], [0, 100], [0, 10]);
          both('*', 'islt,product', [0, 1], [0, 100], [0, 0, 9, 9]);
          both('*', 'lte,nall', [0, 1], [0, 100], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('*', 'lte,nall', [0, 1], [0, 100], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('/', 'div,islt', [0, 1], [0, 20], [0, 1]);
          lhs('/', 'div,islt', [0, 2], [0, 1], [0, 2]);
          lhs('/', 'div,islt', [0, 2], [0, 2], [0, 2]);
          lhs('/', 'div,islt', [0, 1], [0, 2], [0, 2]);
          lhs('/', 'div,islt', [0, 1], [0, 20], [0, 10]);
          lhs('/', 'div,islt', [0, 1], [0, 20], [0, 0, 9, 9]);
          lhs('/', 'div,lte', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('/', 'div,lte', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('/', 'div,islt', [0, 1], [0, 20], [0, 1]);
          rhs('/', 'div,islt', [0, 2], [0, 1], [0, 2]);
          rhs('/', 'div,islt', [0, 2], [0, 2], [0, 2]);
          rhs('/', 'div,islt', [0, 1], [0, 2], [0, 2]);
          rhs('/', 'div,islt', [0, 1], [0, 20], [0, 10]);
          rhs('/', 'div,islt', [0, 1], [0, 20], [0, 0, 9, 9]);
          rhs('/', 'div,islt', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('/', 'div,lte', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
        });
      });

      describe('ISLT RHS', function() {

        describe('binary with shared arg', function() {

          let both = testTernaryBinarySharedArgs.bind(undefined, '<?', 'rhs', ''); // R = A @1 B, A @2 C  and  R = A @1 B, C @2 A and R = B @1 A, A @2 C  and  R = B @1 A, C @2 A
          let lhs = testTernaryBinarySharedArgs.bind(undefined, '<?', 'rhs', 'lhs'); // R = A @1 B, A @2 C and R = B @1 A, A @2 C
          let rhs = testTernaryBinarySharedArgs.bind(undefined, '<?', 'rhs', 'rhs'); // R = A @1 B, C @2 A and R = A @1 B, C @2 A

          both('&', 'islt', [0, 1], [0, 1]);
          both('&', 'islt', [0, 2], [0, 1]);
          both('&', 'islt', [0, 2], [0, 2]);
          both('&', 'islt', [0, 1], [0, 10]);
          both('&', 'islt', [0, 1], [0, 0, 9, 9]);
          both('&', 'islt', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('&', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!=', 'islt,xor', [0, 1], [0, 1]);
          both('!=', 'islt,xor', [0, 2], [0, 1]);
          both('!=', 'diff,islt', [0, 2], [0, 2]);
          both('!=', 'diff,islt', [0, 1], [0, 10]);
          both('!=', 'islt,xor', [0, 1], [0, 0, 9, 9]);
          both('!=', 'diff,islt', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!=', 'diff,islt', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('->', 'imp,islt', [0, 1], [0, 1]);
          lhs('->', 'imp,islt', [0, 2], [0, 1]);
          lhs('->', 'imp,islt', [0, 2], [0, 1]);
          lhs('->', 'imp,islt', [0, 1], [0, 10]);
          lhs('->', 'imp,islt', [0, 1], [0, 0, 9, 9]);
          lhs('->', 'imp,islt', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('->', 'imp,islt', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('->', 'imp,islt', [0, 1], [0, 1]);
          rhs('->', 'imp,islt', [0, 2], [0, 1]);
          rhs('->', 'imp,islt', [0, 2], [0, 2]);
          rhs('->', 'imp,islt', [0, 1], [0, 10]);
          rhs('->', 'imp,islt', [0, 1], [0, 0, 9, 9]);
          rhs('->', 'imp,islt', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('->', 'imp,islt', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<', [0, 1], [0, 1]);
          lhs('<', [0, 2], [0, 1]);
          lhs('<', 'islt,lt', [0, 2], [0, 2]);
          lhs('<', 'islt,lt', [0, 1], [0, 10]);
          lhs('<', [0, 1], [0, 0, 9, 9]);
          lhs('<', 'islt', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<', 'islt', [0, 1], [0, 1]);
          rhs('<', 'islt', [0, 2], [0, 1]);
          rhs('<', 'islt,lt', [0, 2], [0, 2]);
          rhs('<', 'islt,lt', [0, 1], [0, 10]);
          rhs('<', 'islt', [0, 1], [0, 0, 9, 9]);
          rhs('<', 'islt', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<=', 'imp,islt', [0, 1], [0, 1]);
          lhs('<=', 'imp,islt', [0, 2], [0, 1]);
          lhs('<=', 'islt,lte', [0, 2], [0, 2]);
          lhs('<=', 'islt,lte', [0, 1], [0, 10]);
          lhs('<=', 'imp,islt', [0, 1], [0, 0, 9, 9]);
          lhs('<=', 'imp,islt', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<=', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<=', 'imp,islt', [0, 1], [0, 1]);
          rhs('<=', 'imp,islt', [0, 2], [0, 1]);
          rhs('<=', 'islt,lte', [0, 2], [0, 2]);
          rhs('<=', 'islt,lte', [0, 1], [0, 10]);
          rhs('<=', 'imp,islt', [0, 1], [0, 0, 9, 9]);
          rhs('<=', 'islt', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<=', 'imp,islt', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!&', 'islt,nall', [0, 1], [0, 1]);
          both('!&', 'islt,nall', [0, 2], [0, 1]);
          both('!&', 'islt,nall', [0, 2], [0, 2]);
          both('!&', 'islt,nall', [0, 1], [0, 10]);
          both('!&', 'islt,nall', [0, 1], [0, 0, 9, 9]);
          both('!&', 'islt,nall', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!&', 'islt,nall', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('!->', 'islt', [0, 1], [0, 1]);
          lhs('!->', 'islt', [0, 2], [0, 1]);
          lhs('!->', 'islt', [0, 2], [0, 2]);
          lhs('!->', 'islt', [0, 1], [0, 10]);
          lhs('!->', 'islt', [0, 1], [0, 0, 9, 9]);
          lhs('!->', 'islt', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('!->', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('!->', [0, 1], [0, 1]);
          rhs('!->', [0, 2], [0, 1]);
          rhs('!->', [0, 2], [0, 2]);
          rhs('!->', [0, 1], [0, 10]);
          rhs('!->', [0, 1], [0, 0, 9, 9]);
          rhs('!->', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('!->', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!|', [0, 1], [0, 1]);
          both('!|', [0, 2], [0, 1]);
          both('!|', [0, 2], [0, 2]);
          both('!|', [0, 1], [0, 10]);
          both('!|', [0, 1], [0, 0, 9, 9]);
          both('!|', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!|', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('==', 'islt', [0, 1], [0, 1]);
          both('==', 'islt', [0, 2], [0, 1]);
          both('==', 'islt', [0, 2], [0, 2]);
          both('==', 'islt', [0, 1], [0, 10]);
          both('==', 'islt', [0, 1], [0, 0, 9, 9]);
          both('==', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('==', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!^', 'islt', [0, 1], [0, 1]);
          both('!^', 'islt', [0, 2], [0, 1]);
          both('!^', 'islt', [0, 2], [0, 2]);
          both('!^', 'islt', [0, 1], [0, 10]);
          both('!^', 'islt', [0, 1], [0, 0, 9, 9]);
          both('!^', 'islt', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!^', 'islt', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('^', 'islt,xor', [0, 1], [0, 1]);
          both('^', 'islt,xor', [0, 2], [0, 1]);
          both('^', 'islt,xor', [0, 2], [0, 2]);
          both('^', 'islt,xor', [0, 1], [0, 10]);
          both('^', 'islt,xor', [0, 1], [0, 0, 9, 9]);
          both('^', 'islt,xor', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('^', 'islt,xor', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
        });

        describe('binary with shared result', function() {

          let both = testTernaryBinarySharedResult.bind(undefined, '<?', 'rhs', ''); // R = A @1 B, R @2 C  and  R = A @1 B, C @2 R and R = B @1 A, R @2 C  and  R = B @1 A, C @2 R
          let lhs = testTernaryBinarySharedResult.bind(undefined, '<?', 'rhs', 'lhs'); // R = A @1 B, R @2 C and R = B @1 A, R @2 C
          let rhs = testTernaryBinarySharedResult.bind(undefined, '<?', 'rhs', 'rhs'); // R = A @1 B, C @2 R and R = B @1 A, C @2 R

          both('&', [0, 1], [0, 1]);
          both('&', [0, 2], [0, 1]);
          both('&', 'lt', [0, 2], [0, 2]);
          both('&', 'lt', [0, 1], [0, 10]);
          both('&', [0, 1], [0, 0, 9, 9]);
          both('&', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('&', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!=', 'islt,xor', [0, 1], [0, 1]);
          both('!=', 'diff,islt', [0, 2], [0, 1]);
          both('!=', 'diff,islt', [0, 2], [0, 2]);
          both('!=', 'diff,islt', [0, 1], [0, 10]);
          both('!=', 'diff,islt', [0, 1], [0, 0, 9, 9]);
          both('!=', 'diff,islt', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!=', 'diff,islt', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('->', 'imp,islt', [0, 1], [0, 1]);
          lhs('->', 'imp,islt', [0, 2], [0, 1]);
          lhs('->', 'imp,islt', [0, 2], [0, 1]);
          lhs('->', 'imp,islt', [0, 1], [0, 10]);
          lhs('->', 'imp,islt', [0, 1], [0, 0, 9, 9]);
          lhs('->', 'imp,islt', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('->', 'imp,islt', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('->', 'imp,islt', [0, 1], [0, 1]);
          rhs('->', 'imp,islt', [0, 2], [0, 1]);
          rhs('->', 'imp,islt', [0, 2], [0, 2]);
          rhs('->', 'imp,islt', [0, 1], [0, 10]);
          rhs('->', 'imp,islt', [0, 1], [0, 0, 9, 9]);
          rhs('->', 'imp,islt', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('->', 'imp,islt', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<', 'imp', [0, 1], [0, 1]);
          lhs('<', 'imp', [0, 2], [0, 1]);
          lhs('<', 'islt,lt', [0, 2], [0, 2]);
          lhs('<', 'islt,lt', [0, 1], [0, 10]);
          lhs('<', [0, 1], [0, 0, 9, 9]);
          lhs('<', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<', [0, 1], [0, 1]);
          rhs('<', [0, 2], [0, 1]);
          rhs('<', 'lt', [0, 2], [0, 2]);
          rhs('<', 'lt', [0, 1], [0, 10]);
          rhs('<', [0, 1], [0, 0, 9, 9]);
          rhs('<', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<=', 'imp,islt', [0, 1], [0, 1]);
          lhs('<=', 'imp,islt', [0, 2], [0, 1]);
          lhs('<=', 'islt,lte', [0, 2], [0, 2]);
          lhs('<=', 'islt,lte', [0, 1], [0, 10]);
          lhs('<=', 'imp,islt', [0, 1], [0, 0, 9, 9]);
          lhs('<=', 'imp,islt', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<=', 'imp,islt', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<=', 'imp,islt', [0, 1], [0, 1]);
          rhs('<=', 'islt,lte', [0, 2], [0, 1]);
          rhs('<=', 'islt,lte', [0, 2], [0, 2]);
          rhs('<=', 'imp,islt', [0, 1], [0, 10]);
          rhs('<=', [0, 1], [0, 0, 9, 9]);
          rhs('<=', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<=', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!&', 'islt,nall', [0, 1], [0, 1]);
          both('!&', 'islt,nall', [0, 2], [0, 1]);
          both('!&', 'islt,nall', [0, 2], [0, 2]);
          both('!&', 'islt,nall', [0, 1], [0, 10]);
          both('!&', 'islt,nall', [0, 1], [0, 0, 9, 9]);
          both('!&', 'islt,nall', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!&', 'islt,nall', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('!->', [0, 1], [0, 1]);
          lhs('!->', [0, 2], [0, 1]);
          lhs('!->', 'lt', [0, 2], [0, 2]);
          lhs('!->', 'lt', [0, 1], [0, 10]);
          lhs('!->', [0, 1], [0, 0, 9, 9]);
          lhs('!->', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('!->', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('!->', 'imp', [0, 1], [0, 1]);
          rhs('!->', 'imp', [0, 2], [0, 1]);
          rhs('!->', 'lte', [0, 2], [0, 2]);
          rhs('!->', 'lte', [0, 1], [0, 10]);
          rhs('!->', 'imp', [0, 1], [0, 0, 9, 9]);
          rhs('!->', 'imp', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('!->', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!|', 'imp', [0, 1], [0, 1]);
          both('!|', 'imp', [0, 2], [0, 1]);
          both('!|', 'lte', [0, 2], [0, 2]);
          both('!|', 'lte', [0, 1], [0, 10]);
          both('!|', 'imp', [0, 1], [0, 0, 9, 9]);
          both('!|', 'imp', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!|', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('==', 'islt', [0, 1], [0, 1]);
          both('==', 'islt', [0, 2], [0, 1]);
          both('==', 'islt', [0, 2], [0, 2]);
          both('==', 'islt', [0, 1], [0, 10]);
          both('==', 'imp', [0, 1], [0, 0, 9, 9]);
          both('==', 'imp', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('==', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!^', 'islt', [0, 1], [0, 1]);
          both('!^', 'islt', [0, 2], [0, 1]);
          both('!^', 'islt', [0, 2], [0, 2]);
          both('!^', 'islt', [0, 1], [0, 10]);
          both('!^', 'islt', [0, 1], [0, 0, 9, 9]);
          both('!^', 'islt', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!^', 'islt', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('^', 'islt,xor', [0, 1], [0, 1]);
          both('^', 'islt,xor', [0, 2], [0, 1]);
          both('^', 'islt,xor', [0, 2], [0, 2]);
          both('^', 'islt,xor', [0, 1], [0, 10]);
          both('^', 'islt,xor', [0, 1], [0, 0, 9, 9]);
          both('^', 'islt,xor', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('^', 'islt,xor', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
        });

        describe('ternary with shared args', function() {

          let both = testTernaryTernarySharedArgs.bind(undefined, '<?', 'rhs', '');          // R = A @1 B, S = A @2 C and R = A @1 B, S = C @2 A and R = B @1 A, S = A @2 C and R = B @1 A, S = C @2 A
          let lhs = testTernaryTernarySharedArgs.bind(undefined, '<?', 'rhs', 'lhs');    // R = A @1 B, S = A @2 C and R = B @1 A, S = A @2 C
          let rhs = testTernaryTernarySharedArgs.bind(undefined, '<?', 'rhs', 'rhs');    // R = A @1 B, S = C @2 A and R = B @1 A, S = C @2 A

          // R = A & B, S = A &? C
          both('&?', 'isall,islt', [0, 1], [0, 1], [0, 1]);
          both('&?', 'isall,islt', [0, 2], [0, 1], [0, 2]);
          both('&?', 'isall,islt', [0, 2], [0, 2], [0, 2]);
          both('&?', 'isall,islt', [0, 1], [0, 2], [0, 2]);
          both('&?', 'isall,islt', [0, 1], [0, 1], [0, 10]);
          both('&?', 'isall,islt', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('&?', 'isall,islt', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('&?', 'isall,islt', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('==?', 'islt,issame', [0, 1], [0, 1], [0, 1]);
          both('==?', 'islt,issame', [0, 2], [0, 1], [0, 2]);
          both('==?', 'islt,issame', [0, 2], [0, 2], [0, 2]);
          both('==?', 'islt,issame', [0, 1], [0, 2], [0, 2]);
          both('==?', 'islt,issame', [0, 1], [0, 1], [0, 10]);
          both('==?', 'islt,issame', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('==?', 'islt,issame', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('==?', 'islt,issame', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!=?', 'isdiff,islt', [0, 1], [0, 1], [0, 1]);
          both('!=?', 'isdiff,islt', [0, 2], [0, 1], [0, 2]);
          both('!=?', 'isdiff,islt', [0, 2], [0, 2], [0, 2]);
          both('!=?', 'isdiff,islt', [0, 1], [0, 2], [0, 2]);
          both('!=?', 'isdiff,islt', [0, 1], [0, 1], [0, 10]);
          both('!=?', 'isdiff,islt', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('!=?', 'isdiff,islt', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!=?', 'isdiff,islt', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<?', 'islt,islt', [0, 1], [0, 1], [0, 1]);
          lhs('<?', 'islt,islt', [0, 2], [0, 1], [0, 2]);
          lhs('<?', 'islt,islt', [0, 2], [0, 2], [0, 2]);
          lhs('<?', 'islt,islt', [0, 1], [0, 2], [0, 2]);
          lhs('<?', 'islt,islt', [0, 1], [0, 1], [0, 10]);
          lhs('<?', 'islt,islt', [0, 1], [0, 1], [0, 0, 9, 9]);
          lhs('<?', 'islt,islt', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<?', 'islt,islt', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<?', 'islt,islt', [0, 1], [0, 1], [0, 1]);
          rhs('<?', 'islt,islt', [0, 2], [0, 1], [0, 2]);
          rhs('<?', 'islt,islt', [0, 2], [0, 2], [0, 2]);
          rhs('<?', 'islt,islt', [0, 1], [0, 2], [0, 2]);
          rhs('<?', 'islt,islt', [0, 1], [0, 1], [0, 10]);
          rhs('<?', 'islt,islt', [0, 1], [0, 1], [0, 0, 9, 9]);
          rhs('<?', 'islt,islt', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<?', 'islt,islt', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<=?', 'islt,islte', [0, 1], [0, 1], [0, 1]);
          lhs('<=?', 'islt,islte', [0, 2], [0, 1], [0, 2]);
          lhs('<=?', 'islt,islte', [0, 2], [0, 2], [0, 2]);
          lhs('<=?', 'islt,islte', [0, 1], [0, 2], [0, 2]);
          lhs('<=?', 'islt,islte', [0, 1], [0, 1], [0, 10]);
          lhs('<=?', 'islt,islte', [0, 1], [0, 1], [0, 0, 9, 9]);
          lhs('<=?', 'islt,islte', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<=?', 'islt,islte', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<=?', 'islt,islte', [0, 1], [0, 1], [0, 1]);
          rhs('<=?', 'islt,islte', [0, 2], [0, 1], [0, 2]);
          rhs('<=?', 'islt,islte', [0, 2], [0, 2], [0, 2]);
          rhs('<=?', 'islt,islte', [0, 1], [0, 2], [0, 2]);
          rhs('<=?', 'islt,islte', [0, 1], [0, 1], [0, 10]);
          rhs('<=?', 'islt,islte', [0, 1], [0, 1], [0, 0, 9, 9]);
          rhs('<=?', 'islt,islte', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<=?', 'islt,islte', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!&?', 'islt,isnall', [0, 1], [0, 1], [0, 1]);
          both('!&?', 'islt,isnall', [0, 2], [0, 1], [0, 2]);
          both('!&?', 'islt,isnall', [0, 2], [0, 2], [0, 2]);
          both('!&?', 'islt,isnall', [0, 1], [0, 2], [0, 2]);
          both('!&?', 'islt,isnall', [0, 1], [0, 1], [0, 10]);
          both('!&?', 'islt,isnall', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('!&?', 'islt,isnall', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!&?', 'islt,isnall', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('|?', 'islt,issome', [0, 1], [0, 1], [0, 1]);
          both('|?', 'islt,issome', [0, 2], [0, 1], [0, 2]);
          both('|?', 'islt,issome', [0, 2], [0, 2], [0, 2]);
          both('|?', 'islt,issome', [0, 1], [0, 2], [0, 2]);
          both('|?', 'islt,issome', [0, 1], [0, 1], [0, 10]);
          both('|?', 'islt,issome', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('|?', 'islt,issome', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('|?', 'islt,issome', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!|?', 'islt,isnone', [0, 1], [0, 1], [0, 1]);
          both('!|?', 'islt,isnone', [0, 2], [0, 1], [0, 2]);
          both('!|?', 'islt,isnone', [0, 2], [0, 2], [0, 2]);
          both('!|?', 'islt,isnone', [0, 1], [0, 2], [0, 2]);
          both('!|?', 'islt,isnone', [0, 1], [0, 1], [0, 10]);
          both('!|?', 'islt,isnone', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('!|?', 'islt,isnone', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!|?', 'islt,isnone', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('+', 'islt,issome', [0, 1], [0, 20], [0, 1]);
          both('+', 'islt,sum', [0, 2], [0, 1], [0, 2]);
          both('+', 'islt,sum', [0, 2], [0, 2], [0, 2]);
          both('+', 'islt,sum', [0, 1], [0, 2], [0, 2]);
          both('+', 'islt,issome', [0, 1], [0, 20], [0, 10]);
          both('+', 'islt,issome', [0, 1], [0, 20], [0, 0, 9, 9]);
          both('+', 'islt,issome', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('+', 'islt,issome', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('-', 'islt,minus', [0, 1], [0, 20], [0, 1]);
          lhs('-', 'islt,minus', [0, 2], [0, 1], [0, 2]);
          lhs('-', 'islt,minus', [0, 2], [0, 2], [0, 2]);
          lhs('-', 'islt,minus', [0, 1], [0, 2], [0, 2]);
          lhs('-', 'islt,minus', [0, 1], [0, 20], [0, 10]);
          lhs('-', 'islt,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
          lhs('-', 'islt', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('-', 'islt,minus', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('-', 'islt,minus', [0, 1], [0, 20], [0, 1]);
          rhs('-', 'islt,minus', [0, 2], [0, 1], [0, 2]);
          rhs('-', 'islt,minus', [0, 2], [0, 2], [0, 2]);
          rhs('-', 'islt,minus', [0, 1], [0, 2], [0, 2]);
          rhs('-', 'islt,minus', [0, 1], [0, 20], [0, 10]);
          rhs('-', 'islt,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
          rhs('-', 'islt,minus', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('-', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('*', 'islt,product', [0, 1], [0, 100], [0, 1]);
          both('*', 'islt,product', [0, 2], [0, 1], [0, 2]);
          both('*', 'islt,product', [0, 2], [0, 2], [0, 2]);
          both('*', 'islt,product', [0, 1], [0, 2], [0, 2]);
          both('*', 'islt,product', [0, 1], [0, 100], [0, 10]);
          both('*', 'islt,product', [0, 1], [0, 100], [0, 0, 9, 9]);
          both('*', 'islt,product', [0, 1], [0, 100], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('*', 'islt,product', [0, 1], [0, 100], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('/', 'div,islt', [0, 1], [0, 20], [0, 1]);
          lhs('/', 'div,islt', [0, 2], [0, 1], [0, 2]);
          lhs('/', 'div,islt', [0, 2], [0, 2], [0, 2]);
          lhs('/', 'div,islt', [0, 1], [0, 2], [0, 2]);
          lhs('/', 'div,islt', [0, 1], [0, 20], [0, 10]);
          lhs('/', 'div,islt', [0, 1], [0, 20], [0, 0, 9, 9]);
          lhs('/', 'div,islt', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('/', 'div,islt', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('/', 'div,islt', [0, 1], [0, 20], [0, 1]);
          rhs('/', 'div,islt', [0, 2], [0, 1], [0, 2]);
          rhs('/', 'div,islt', [0, 2], [0, 2], [0, 2]);
          rhs('/', 'div,islt', [0, 1], [0, 2], [0, 2]);
          rhs('/', 'div,islt', [0, 1], [0, 20], [0, 10]);
          rhs('/', 'div,islt', [0, 1], [0, 20], [0, 0, 9, 9]);
          rhs('/', 'div,islt', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('/', 'div,islt', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
        });

        describe('ternary with shared R', function() {

          let both = testTernaryTernarySharedR.bind(undefined, '<?', 'rhs', '');          // R = A @1 B, S = R @2 C and R = A @1 B, S = C @2 R and R = B @1 A, S = R @2 C and R = B @1 A, S = C @2 R
          let lhs = testTernaryTernarySharedR.bind(undefined, '<?', 'rhs', 'lhs');    // R = A @1 B, S = R @2 C and R = B @1 A, S = R @2 C
          let rhs = testTernaryTernarySharedR.bind(undefined, '<?', 'rhs', 'rhs');    // R = A @1 B, S = C @2 R and R = B @1 A, S = C @2 R

          // R = A & B, S = A &? C
          both('&?', 'isall,islt', [0, 1], [0, 1], [0, 1]);
          both('&?', 'isall,islt', [0, 2], [0, 1], [0, 2]);
          both('&?', 'isall,islt', [0, 2], [0, 2], [0, 2]);
          both('&?', 'isall,islt', [0, 1], [0, 2], [0, 2]);
          both('&?', 'isall,islt', [0, 1], [0, 1], [0, 10]);
          both('&?', 'isall,islt', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('&?', 'isall,islt', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('&?', 'isall,islt', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('==?', 'islt,issame', [0, 1], [0, 1], [0, 1]);
          both('==?', 'islt,issame', [0, 2], [0, 1], [0, 2]);
          both('==?', 'islt,issame', [0, 2], [0, 2], [0, 2]);
          both('==?', 'islt,issame', [0, 1], [0, 2], [0, 2]);
          both('==?', 'islt,issame', [0, 1], [0, 1], [0, 10]);
          both('==?', 'islt,issame', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('==?', 'islt,issame', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('==?', 'islt,issame', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!=?', 'isdiff,islt', [0, 1], [0, 1], [0, 1]);
          both('!=?', 'isdiff,islt', [0, 2], [0, 1], [0, 2]);
          both('!=?', 'isdiff,islt', [0, 2], [0, 2], [0, 2]);
          both('!=?', 'isdiff,islt', [0, 1], [0, 2], [0, 2]);
          both('!=?', 'isdiff,islt', [0, 1], [0, 1], [0, 10]);
          both('!=?', 'isdiff,islt', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('!=?', 'isdiff,islt', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!=?', 'isdiff,islt', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<?', 'islt,islt', [0, 1], [0, 1], [0, 1]);
          lhs('<?', 'islt,islt', [0, 2], [0, 1], [0, 2]);
          lhs('<?', 'islt,islt', [0, 2], [0, 2], [0, 2]);
          lhs('<?', 'islt,islt', [0, 1], [0, 2], [0, 2]);
          lhs('<?', 'islt,islt', [0, 1], [0, 1], [0, 10]);
          lhs('<?', 'islt,islt', [0, 1], [0, 1], [0, 0, 9, 9]);
          lhs('<?', 'islt,islt', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<?', 'islt,islt', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<?', 'islt,islt', [0, 1], [0, 1], [0, 1]);
          rhs('<?', 'islt,islt', [0, 2], [0, 1], [0, 2]);
          rhs('<?', 'islt,islt', [0, 2], [0, 2], [0, 2]);
          rhs('<?', 'islt,islt', [0, 1], [0, 2], [0, 2]);
          rhs('<?', 'islt,islt', [0, 1], [0, 1], [0, 10]);
          rhs('<?', 'islt,islt', [0, 1], [0, 1], [0, 0, 9, 9]);
          rhs('<?', 'islt,islt', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<?', 'islt,islt', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<=?', 'islt,islte', [0, 1], [0, 1], [0, 1]);
          lhs('<=?', 'islt,islte', [0, 2], [0, 1], [0, 2]);
          lhs('<=?', 'islt,islte', [0, 2], [0, 2], [0, 2]);
          lhs('<=?', 'islt,islte', [0, 1], [0, 2], [0, 2]);
          lhs('<=?', 'islt,islte', [0, 1], [0, 1], [0, 10]);
          lhs('<=?', 'islt,islte', [0, 1], [0, 1], [0, 0, 9, 9]);
          lhs('<=?', 'islt,islte', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<=?', 'islt,islte', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<=?', 'islt,islte', [0, 1], [0, 1], [0, 1]);
          rhs('<=?', 'islt,islte', [0, 2], [0, 1], [0, 2]);
          rhs('<=?', 'islt,islte', [0, 2], [0, 2], [0, 2]);
          rhs('<=?', 'islt,islte', [0, 1], [0, 2], [0, 2]);
          rhs('<=?', 'islt,islte', [0, 1], [0, 1], [0, 10]);
          rhs('<=?', 'islt,islte', [0, 1], [0, 1], [0, 0, 9, 9]);
          rhs('<=?', 'islt,islte', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<=?', 'islt,islte', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!&?', 'islt,isnall', [0, 1], [0, 1], [0, 1]);
          both('!&?', 'islt,isnall', [0, 2], [0, 1], [0, 2]);
          both('!&?', 'islt,isnall', [0, 2], [0, 2], [0, 2]);
          both('!&?', 'islt,isnall', [0, 1], [0, 2], [0, 2]);
          both('!&?', 'islt,isnall', [0, 1], [0, 1], [0, 10]);
          both('!&?', 'islt,isnall', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('!&?', 'islt,isnall', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!&?', 'islt,isnall', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('|?', 'islt,issome', [0, 1], [0, 1], [0, 1]);
          both('|?', 'islt,issome', [0, 2], [0, 1], [0, 2]);
          both('|?', 'islt,issome', [0, 2], [0, 2], [0, 2]);
          both('|?', 'islt,issome', [0, 1], [0, 2], [0, 2]);
          both('|?', 'islt,issome', [0, 1], [0, 1], [0, 10]);
          both('|?', 'islt,issome', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('|?', 'islt,issome', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('|?', 'islt,issome', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!|?', 'islt,isnone', [0, 1], [0, 1], [0, 1]);
          both('!|?', 'islt,isnone', [0, 2], [0, 1], [0, 2]);
          both('!|?', 'islt,isnone', [0, 2], [0, 2], [0, 2]);
          both('!|?', 'islt,isnone', [0, 1], [0, 2], [0, 2]);
          both('!|?', 'islt,isnone', [0, 1], [0, 1], [0, 10]);
          both('!|?', 'islt,isnone', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('!|?', 'islt,isnone', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!|?', 'islt,isnone', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('+', 'islt,sum', [0, 1], [0, 20], [0, 1]);
          both('+', 'islt,issome', [0, 2], [0, 1], [0, 2]);
          both('+', 'islt,sum', [0, 2], [0, 2], [0, 2]);
          both('+', 'islt,sum', [0, 1], [0, 2], [0, 2]);
          both('+', 'islt,sum', [0, 1], [0, 20], [0, 10]);
          both('+', 'islt,sum', [0, 1], [0, 20], [0, 0, 9, 9]);
          both('+', 'lte', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('+', 'lte', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('-', 'islt,minus', [0, 1], [0, 20], [0, 1]);
          lhs('-', 'islt,minus', [0, 2], [0, 1], [0, 2]);
          lhs('-', 'islt,minus', [0, 2], [0, 2], [0, 2]);
          lhs('-', 'islt,minus', [0, 1], [0, 2], [0, 2]);
          lhs('-', 'islt,minus', [0, 1], [0, 20], [0, 10]);
          lhs('-', 'islt,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
          lhs('-', 'lte', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('-', 'lte', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('-', 'islt,minus', [0, 1], [0, 20], [0, 1]);
          rhs('-', 'islt,minus', [0, 2], [0, 1], [0, 2]);
          rhs('-', 'islt,minus', [0, 2], [0, 2], [0, 2]);
          rhs('-', 'islt,minus', [0, 1], [0, 2], [0, 2]);
          rhs('-', 'islt,minus', [0, 1], [0, 20], [0, 10]);
          rhs('-', 'islt,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
          rhs('-', 'lte', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('-', 'lte', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('*', 'islt,product', [0, 1], [0, 100], [0, 1]);
          both('*', 'islt,product', [0, 2], [0, 1], [0, 2]);
          both('*', 'islt,product', [0, 2], [0, 2], [0, 2]);
          both('*', 'islt,product', [0, 1], [0, 2], [0, 2]);
          both('*', 'islt,product', [0, 1], [0, 100], [0, 10]);
          both('*', 'islt,product', [0, 1], [0, 100], [0, 0, 9, 9]);
          both('*', 'islt,nall', [0, 1], [0, 100], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('*', 'islt,nall', [0, 1], [0, 100], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('/', 'div,islt', [0, 1], [0, 20], [0, 1]);
          lhs('/', 'div,islt', [0, 2], [0, 1], [0, 2]);
          lhs('/', 'div,islt', [0, 2], [0, 2], [0, 2]);
          lhs('/', 'div,islt', [0, 1], [0, 2], [0, 2]);
          lhs('/', 'div,islt', [0, 1], [0, 20], [0, 10]);
          lhs('/', 'div,islt', [0, 1], [0, 20], [0, 0, 9, 9]);
          lhs('/', 'div,islt', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('/', 'div,islt', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('/', 'div,islt', [0, 1], [0, 20], [0, 1]);
          rhs('/', 'div,islt', [0, 2], [0, 1], [0, 2]);
          rhs('/', 'div,islt', [0, 2], [0, 2], [0, 2]);
          rhs('/', 'div,islt', [0, 1], [0, 2], [0, 2]);
          rhs('/', 'div,islt', [0, 1], [0, 20], [0, 10]);
          rhs('/', 'div,islt', [0, 1], [0, 20], [0, 0, 9, 9]);
          rhs('/', 'div,islt', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('/', 'div,islt', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
        });

        describe('ternary with shared S', function() {

          let both = testTernaryTernarySharedS.bind(undefined, '<?', 'rhs', '');          // R = S @1 B, S = A @2 C and R = S @1 B, S = C @2 A and R = B @1 S, S = A @2 C and R = B @1 S, S = C @2 A
          let lhs = testTernaryTernarySharedS.bind(undefined, '<?', 'rhs', 'lhs');    // R = S @1 B, S = A @2 C and R = B @1 S, S = A @2 C
          let rhs = testTernaryTernarySharedS.bind(undefined, '<?', 'rhs', 'rhs');    // R = S @1 B, S = C @2 A and R = B @1 S, S = C @2 A

          // R = A & B, S = A &? C
          both('&?', 'isall,islt', [0, 1], [0, 1], [0, 1]);
          both('&?', 'isall,islt', [0, 2], [0, 1], [0, 2]);
          both('&?', 'isall,islt', [0, 2], [0, 2], [0, 2]);
          both('&?', 'isall,islt', [0, 1], [0, 2], [0, 2]);
          both('&?', 'isall,islt', [0, 1], [0, 1], [0, 10]);
          both('&?', 'isall,islt', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('&?', 'isall,islt', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('&?', 'isall,islt', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('==?', 'islt,issame', [0, 1], [0, 1], [0, 1]);
          both('==?', 'islt,issame', [0, 2], [0, 1], [0, 2]);
          both('==?', 'islt,issame', [0, 2], [0, 2], [0, 2]);
          both('==?', 'islt,issame', [0, 1], [0, 2], [0, 2]);
          both('==?', 'islt,issame', [0, 1], [0, 1], [0, 10]);
          both('==?', 'islt,issame', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('==?', 'islt,issame', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('==?', 'islt,issame', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!=?', 'isdiff,islt', [0, 1], [0, 1], [0, 1]);
          both('!=?', 'isdiff,islt', [0, 2], [0, 1], [0, 2]);
          both('!=?', 'isdiff,islt', [0, 2], [0, 2], [0, 2]);
          both('!=?', 'isdiff,islt', [0, 1], [0, 2], [0, 2]);
          both('!=?', 'isdiff,islt', [0, 1], [0, 1], [0, 10]);
          both('!=?', 'isdiff,islt', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('!=?', 'isdiff,islt', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!=?', 'isdiff,islt', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<?', 'islt,islt', [0, 1], [0, 1], [0, 1]);
          lhs('<?', 'islt,islt', [0, 2], [0, 1], [0, 2]);
          lhs('<?', 'islt,islt', [0, 2], [0, 2], [0, 2]);
          lhs('<?', 'islt,islt', [0, 1], [0, 2], [0, 2]);
          lhs('<?', 'islt,islt', [0, 1], [0, 1], [0, 10]);
          lhs('<?', 'islt,islt', [0, 1], [0, 1], [0, 0, 9, 9]);
          lhs('<?', 'islt,islt', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<?', 'islt,islt', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<?', 'islt,islt', [0, 1], [0, 1], [0, 1]);
          rhs('<?', 'islt,islt', [0, 2], [0, 1], [0, 2]);
          rhs('<?', 'islt,islt', [0, 2], [0, 2], [0, 2]);
          rhs('<?', 'islt,islt', [0, 1], [0, 2], [0, 2]);
          rhs('<?', 'islt,islt', [0, 1], [0, 1], [0, 10]);
          rhs('<?', 'islt,islt', [0, 1], [0, 1], [0, 0, 9, 9]);
          rhs('<?', 'islt,islt', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<?', 'islt,islt', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<=?', 'islt,islte', [0, 1], [0, 1], [0, 1]);
          lhs('<=?', 'islt,islte', [0, 2], [0, 1], [0, 2]);
          lhs('<=?', 'islt,islte', [0, 2], [0, 2], [0, 2]);
          lhs('<=?', 'islt,islte', [0, 1], [0, 2], [0, 2]);
          lhs('<=?', 'islt,islte', [0, 1], [0, 1], [0, 10]);
          lhs('<=?', 'islt,islte', [0, 1], [0, 1], [0, 0, 9, 9]);
          lhs('<=?', 'islt,islte', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<=?', 'islt,islte', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<=?', 'islt,islte', [0, 1], [0, 1], [0, 1]);
          rhs('<=?', 'islt,islte', [0, 2], [0, 1], [0, 2]);
          rhs('<=?', 'islt,islte', [0, 2], [0, 2], [0, 2]);
          rhs('<=?', 'islt,islte', [0, 1], [0, 2], [0, 2]);
          rhs('<=?', 'islt,islte', [0, 1], [0, 1], [0, 10]);
          rhs('<=?', 'islt,islte', [0, 1], [0, 1], [0, 0, 9, 9]);
          rhs('<=?', 'islt,islte', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<=?', 'islt,islte', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!&?', 'islt,isnall', [0, 1], [0, 1], [0, 1]);
          both('!&?', 'islt,isnall', [0, 2], [0, 1], [0, 2]);
          both('!&?', 'islt,isnall', [0, 2], [0, 2], [0, 2]);
          both('!&?', 'islt,isnall', [0, 1], [0, 2], [0, 2]);
          both('!&?', 'islt,isnall', [0, 1], [0, 1], [0, 10]);
          both('!&?', 'islt,isnall', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('!&?', 'islt,isnall', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!&?', 'islt,isnall', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('|?', 'islt,issome', [0, 1], [0, 1], [0, 1]);
          both('|?', 'islt,issome', [0, 2], [0, 1], [0, 2]);
          both('|?', 'islt,issome', [0, 2], [0, 2], [0, 2]);
          both('|?', 'islt,issome', [0, 1], [0, 2], [0, 2]);
          both('|?', 'islt,issome', [0, 1], [0, 1], [0, 10]);
          both('|?', 'islt,issome', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('|?', 'islt,issome', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('|?', 'islt,issome', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!|?', 'islt,isnone', [0, 1], [0, 1], [0, 1]);
          both('!|?', 'islt,isnone', [0, 2], [0, 1], [0, 2]);
          both('!|?', 'islt,isnone', [0, 2], [0, 2], [0, 2]);
          both('!|?', 'islt,isnone', [0, 1], [0, 2], [0, 2]);
          both('!|?', 'islt,isnone', [0, 1], [0, 1], [0, 10]);
          both('!|?', 'islt,isnone', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('!|?', 'islt,isnone', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!|?', 'islt,isnone', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('+', 'islt,sum', [0, 1], [0, 20], [0, 1]);
          both('+', 'islt,sum', [0, 2], [0, 1], [0, 2]);
          both('+', 'islt,sum', [0, 2], [0, 2], [0, 2]);
          both('+', 'islt,sum', [0, 1], [0, 2], [0, 2]);
          both('+', 'islt,sum', [0, 1], [0, 20], [0, 10]);
          both('+', 'islt,sum', [0, 1], [0, 20], [0, 0, 9, 9]);
          both('+', 'islt,sum', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('+', 'islt,sum', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('-', 'islt,minus', [0, 1], [0, 20], [0, 1]);
          lhs('-', 'islt,minus', [0, 2], [0, 1], [0, 2]);
          lhs('-', 'islt,minus', [0, 2], [0, 2], [0, 2]);
          lhs('-', 'islt,minus', [0, 1], [0, 2], [0, 2]);
          lhs('-', 'islt,minus', [0, 1], [0, 20], [0, 10]);
          lhs('-', 'islt,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
          lhs('-', 'islt', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('-', 'islt,minus', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('-', 'islt,minus', [0, 1], [0, 20], [0, 1]);
          rhs('-', 'islt,minus', [0, 2], [0, 1], [0, 2]);
          rhs('-', 'islt,minus', [0, 2], [0, 2], [0, 2]);
          rhs('-', 'islt,minus', [0, 1], [0, 2], [0, 2]);
          rhs('-', 'islt,minus', [0, 1], [0, 20], [0, 10]);
          rhs('-', 'islt,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
          rhs('-', 'islt,minus', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('-', 'islt', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('*', 'islt,product', [0, 1], [0, 100], [0, 1]);
          both('*', 'islt,product', [0, 2], [0, 1], [0, 2]);
          both('*', 'islt,product', [0, 2], [0, 2], [0, 2]);
          both('*', 'islt,product', [0, 1], [0, 2], [0, 2]);
          both('*', 'islt,product', [0, 1], [0, 100], [0, 10]);
          both('*', 'islt,product', [0, 1], [0, 100], [0, 0, 9, 9]);
          both('*', 'islt,product', [0, 1], [0, 100], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('*', 'islt,product', [0, 1], [0, 100], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('/', 'div,islt', [0, 1], [0, 20], [0, 1]);
          lhs('/', 'div,islt', [0, 2], [0, 1], [0, 2]);
          lhs('/', 'div,islt', [0, 2], [0, 2], [0, 2]);
          lhs('/', 'div,islt', [0, 1], [0, 2], [0, 2]);
          lhs('/', 'div,islt', [0, 1], [0, 20], [0, 10]);
          lhs('/', 'div,islt', [0, 1], [0, 20], [0, 0, 9, 9]);
          lhs('/', 'div', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('/', 'div,islt', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('/', 'div,islt', [0, 1], [0, 20], [0, 1]);
          rhs('/', 'div,islt', [0, 2], [0, 1], [0, 2]);
          rhs('/', 'div,islt', [0, 2], [0, 2], [0, 2]);
          rhs('/', 'div,islt', [0, 1], [0, 2], [0, 2]);
          rhs('/', 'div,islt', [0, 1], [0, 20], [0, 10]);
          rhs('/', 'div,islt', [0, 1], [0, 20], [0, 0, 9, 9]);
          rhs('/', 'div,islt', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('/', 'div', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
        });

        describe('ternary with shared results', function() {

          let both = testTernaryTernarySharedResults.bind(undefined, '<?', 'rhs', '');          // R = S @1 B, S = R @2 C and R = S @1 B, S = C @2 R and R = S @1 B, S = R @2 C and R = S @1 B, S = C @2 R
          let lhs = testTernaryTernarySharedResults.bind(undefined, '<?', 'rhs', 'lhs');    // R = S @1 B, S = R @2 C and R = B @1 S, S = R @2 C
          let rhs = testTernaryTernarySharedResults.bind(undefined, '<?', 'rhs', 'rhs');    // R = S @1 B, S = C @2 R and R = B @1 S, S = C @2 R

          // R = A & B, S = A &? C
          both('&?', 'isall,islt', [0, 1], [0, 1], [0, 1]);
          both('&?', 'isall,islt', [0, 2], [0, 1], [0, 2]);
          both('&?', 'isall,islt', [0, 2], [0, 2], [0, 2]);
          both('&?', 'isall,islt', [0, 1], [0, 2], [0, 2]);
          both('&?', 'isall,islt', [0, 1], [0, 1], [0, 10]);
          both('&?', 'isall,islt', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('&?', 'isall,islt', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('&?', 'isall,islt', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('==?', 'islt,issame', [0, 1], [0, 1], [0, 1]);
          both('==?', 'islt,issame', [0, 2], [0, 1], [0, 2]);
          both('==?', 'islt,issame', [0, 2], [0, 2], [0, 2]);
          both('==?', 'islt,issame', [0, 1], [0, 2], [0, 2]);
          both('==?', 'islt,issame', [0, 1], [0, 1], [0, 10]);
          both('==?', 'islt,issame', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('==?', 'islt,issame', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('==?', 'islt,issame', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!=?', 'isdiff,islt', [0, 1], [0, 1], [0, 1]);
          both('!=?', 'isdiff,islt', [0, 2], [0, 1], [0, 2]);
          both('!=?', 'isdiff,islt', [0, 2], [0, 2], [0, 2]);
          both('!=?', 'isdiff,islt', [0, 1], [0, 2], [0, 2]);
          both('!=?', 'isdiff,islt', [0, 1], [0, 1], [0, 10]);
          both('!=?', 'isdiff,islt', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('!=?', 'isdiff,islt', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!=?', 'isdiff,islt', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<?', 'islt,islt', [0, 1], [0, 1], [0, 1]);
          lhs('<?', 'islt,islt', [0, 2], [0, 1], [0, 2]);
          lhs('<?', 'islt,islt', [0, 2], [0, 2], [0, 2]);
          lhs('<?', 'islt,islt', [0, 1], [0, 2], [0, 2]);
          lhs('<?', 'islt,islt', [0, 1], [0, 1], [0, 10]);
          lhs('<?', 'islt,islt', [0, 1], [0, 1], [0, 0, 9, 9]);
          lhs('<?', 'islt,islt', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<?', 'islt,islt', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<?', 'islt,islt', [0, 1], [0, 1], [0, 1]);
          rhs('<?', 'islt,islt', [0, 2], [0, 1], [0, 2]);
          rhs('<?', 'islt,islt', [0, 2], [0, 2], [0, 2]);
          rhs('<?', 'islt,islt', [0, 1], [0, 2], [0, 2]);
          rhs('<?', 'islt,islt', [0, 1], [0, 1], [0, 10]);
          rhs('<?', 'islt,islt', [0, 1], [0, 1], [0, 0, 9, 9]);
          rhs('<?', 'islt,islt', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<?', 'islt,islt', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<=?', 'islt,islte', [0, 1], [0, 1], [0, 1]);
          lhs('<=?', 'islt,islte', [0, 2], [0, 1], [0, 2]);
          lhs('<=?', 'islt,islte', [0, 2], [0, 2], [0, 2]);
          lhs('<=?', 'islt,islte', [0, 1], [0, 2], [0, 2]);
          lhs('<=?', 'islt,islte', [0, 1], [0, 1], [0, 10]);
          lhs('<=?', 'islt,islte', [0, 1], [0, 1], [0, 0, 9, 9]);
          lhs('<=?', 'islt,islte', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<=?', 'islt,islte', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<=?', 'islt,islte', [0, 1], [0, 1], [0, 1]);
          rhs('<=?', 'islt,islte', [0, 2], [0, 1], [0, 2]);
          rhs('<=?', 'islt,islte', [0, 2], [0, 2], [0, 2]);
          rhs('<=?', 'islt,islte', [0, 1], [0, 2], [0, 2]);
          rhs('<=?', 'islt,islte', [0, 1], [0, 1], [0, 10]);
          rhs('<=?', 'islt,islte', [0, 1], [0, 1], [0, 0, 9, 9]);
          rhs('<=?', 'islt,islte', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<=?', 'islt,islte', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!&?', 'islt,isnall', [0, 1], [0, 1], [0, 1]);
          both('!&?', 'islt,isnall', [0, 2], [0, 1], [0, 2]);
          both('!&?', 'islt,isnall', [0, 2], [0, 2], [0, 2]);
          both('!&?', 'islt,isnall', [0, 1], [0, 2], [0, 2]);
          both('!&?', 'islt,isnall', [0, 1], [0, 1], [0, 10]);
          both('!&?', 'islt,isnall', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('!&?', 'islt,isnall', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!&?', 'islt,isnall', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('|?', 'islt,issome', [0, 1], [0, 1], [0, 1]);
          both('|?', 'islt,issome', [0, 2], [0, 1], [0, 2]);
          both('|?', 'islt,issome', [0, 2], [0, 2], [0, 2]);
          both('|?', 'islt,issome', [0, 1], [0, 2], [0, 2]);
          both('|?', 'islt,issome', [0, 1], [0, 1], [0, 10]);
          both('|?', 'islt,issome', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('|?', 'islt,issome', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('|?', 'islt,issome', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!|?', 'islt,isnone', [0, 1], [0, 1], [0, 1]);
          both('!|?', 'islt,isnone', [0, 2], [0, 1], [0, 2]);
          both('!|?', 'islt,isnone', [0, 2], [0, 2], [0, 2]);
          both('!|?', 'islt,isnone', [0, 1], [0, 2], [0, 2]);
          both('!|?', 'islt,isnone', [0, 1], [0, 1], [0, 10]);
          both('!|?', 'islt,isnone', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('!|?', 'islt,isnone', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!|?', 'islt,isnone', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('+', 'islt,sum', [0, 1], [0, 20], [0, 1]);
          both('+', 'islt,issome', [0, 2], [0, 1], [0, 2]);
          both('+', 'islt,sum', [0, 2], [0, 2], [0, 2]);
          both('+', 'islt,sum', [0, 1], [0, 2], [0, 2]);
          both('+', 'islt,sum', [0, 1], [0, 20], [0, 10]);
          both('+', 'islt,sum', [0, 1], [0, 20], [0, 0, 9, 9]);
          both('+', 'lte', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('+', 'lte', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('-', 'islt,minus', [0, 1], [0, 20], [0, 1]);
          lhs('-', 'islt,minus', [0, 2], [0, 1], [0, 2]);
          lhs('-', 'islt,minus', [0, 2], [0, 2], [0, 2]);
          lhs('-', 'islt,minus', [0, 1], [0, 2], [0, 2]);
          lhs('-', 'islt,minus', [0, 1], [0, 20], [0, 10]);
          lhs('-', 'islt,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
          lhs('-', 'lte', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('-', 'lte', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('-', 'islt,minus', [0, 1], [0, 20], [0, 1]);
          rhs('-', 'islt,minus', [0, 2], [0, 1], [0, 2]);
          rhs('-', 'islt,minus', [0, 2], [0, 2], [0, 2]);
          rhs('-', 'islt,minus', [0, 1], [0, 2], [0, 2]);
          rhs('-', 'islt,minus', [0, 1], [0, 20], [0, 10]);
          rhs('-', 'islt,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
          rhs('-', 'lte', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('-', 'lte', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('*', 'islt,product', [0, 1], [0, 100], [0, 1]);
          both('*', 'islt,product', [0, 2], [0, 1], [0, 2]);
          both('*', 'islt,product', [0, 2], [0, 2], [0, 2]);
          both('*', 'islt,product', [0, 1], [0, 2], [0, 2]);
          both('*', 'islt,product', [0, 1], [0, 100], [0, 10]);
          both('*', 'islt,product', [0, 1], [0, 100], [0, 0, 9, 9]);
          both('*', 'lte,nall', [0, 1], [0, 100], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('*', 'lte,nall', [0, 1], [0, 100], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('/', 'div,islt', [0, 1], [0, 20], [0, 1]);
          lhs('/', 'div,islt', [0, 2], [0, 1], [0, 2]);
          lhs('/', 'div,islt', [0, 2], [0, 2], [0, 2]);
          lhs('/', 'div,islt', [0, 1], [0, 2], [0, 2]);
          lhs('/', 'div,islt', [0, 1], [0, 20], [0, 10]);
          lhs('/', 'div,islt', [0, 1], [0, 20], [0, 0, 9, 9]);
          lhs('/', 'div,lte', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('/', 'div,lte', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('/', 'div,islt', [0, 1], [0, 20], [0, 1]);
          rhs('/', 'div,islt', [0, 2], [0, 1], [0, 2]);
          rhs('/', 'div,islt', [0, 2], [0, 2], [0, 2]);
          rhs('/', 'div,islt', [0, 1], [0, 2], [0, 2]);
          rhs('/', 'div,islt', [0, 1], [0, 20], [0, 10]);
          rhs('/', 'div,islt', [0, 1], [0, 20], [0, 0, 9, 9]);
          rhs('/', 'div,islt', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('/', 'div,lte', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
        });
      });
    });

    describe('ISLTE', function() {

      describe('ISLTE LHS', function() {

        describe('binary with shared arg', function() {

          let both = testTernaryBinarySharedArgs.bind(undefined, '<=?', 'lhs', ''); // R = A @1 B, A @2 C  and  R = A @1 B, C @2 A and R = B @1 A, A @2 C  and  R = B @1 A, C @2 A
          let lhs = testTernaryBinarySharedArgs.bind(undefined, '<=?', 'lhs', 'lhs'); // R = A @1 B, A @2 C and R = B @1 A, A @2 C
          let rhs = testTernaryBinarySharedArgs.bind(undefined, '<=?', 'lhs', 'rhs'); // R = A @1 B, C @2 A and R = A @1 B, C @2 A

          both('&', [0, 1], [0, 1]);
          both('&', 'islte', [0, 2], [0, 1]);
          both('&', 'islte', [0, 2], [0, 2]);
          both('&', 'islte', [0, 1], [0, 10]);
          both('&', 'islte', [0, 1], [0, 0, 9, 9]);
          both('&', 'islte', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('&', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!=', 'islte,xor', [0, 1], [0, 1]);
          both('!=', 'islte,xor', [0, 2], [0, 1]);
          both('!=', 'diff,islte', [0, 2], [0, 2]);
          both('!=', 'diff,islte', [0, 1], [0, 10]);
          both('!=', 'islte,xor', [0, 1], [0, 0, 9, 9]);
          both('!=', 'diff,islte', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!=', 'diff,islte', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('->', 'imp,islte', [0, 1], [0, 1]);
          lhs('->', 'imp,islte', [0, 2], [0, 1]);
          lhs('->', 'imp,islte', [0, 2], [0, 1]);
          lhs('->', 'imp,islte', [0, 1], [0, 10]);
          lhs('->', 'imp,islte', [0, 1], [0, 0, 9, 9]);
          lhs('->', 'imp,islte', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('->', 'imp,islte', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('->', 'imp,islte', [0, 1], [0, 1]);
          rhs('->', 'imp,islte', [0, 2], [0, 1]);
          rhs('->', 'imp,islte', [0, 2], [0, 2]);
          rhs('->', 'imp,islte', [0, 1], [0, 10]);
          rhs('->', 'imp,islte', [0, 1], [0, 0, 9, 9]);
          rhs('->', 'imp,islte', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('->', 'imp,islte', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<', [0, 1], [0, 1]);
          lhs('<', [0, 2], [0, 1]);
          lhs('<', 'islte,lt', [0, 2], [0, 2]);
          lhs('<', 'islte,lt', [0, 1], [0, 10]);
          lhs('<', [0, 1], [0, 0, 9, 9]);
          lhs('<', 'islte', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<', [0, 1], [0, 1]);
          rhs('<', 'islte', [0, 2], [0, 1]);
          rhs('<', 'islte,lt', [0, 2], [0, 2]);
          rhs('<', 'islte,lt', [0, 1], [0, 10]);
          rhs('<', 'islte', [0, 1], [0, 0, 9, 9]);
          rhs('<', 'islte', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<=', 'imp,islte', [0, 1], [0, 1]);
          lhs('<=', 'imp,islte', [0, 2], [0, 1]);
          lhs('<=', 'islte,lte', [0, 2], [0, 2]);
          lhs('<=', 'islte,lte', [0, 1], [0, 10]);
          lhs('<=', 'imp,islte', [0, 1], [0, 0, 9, 9]);
          lhs('<=', 'imp,islte', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<=', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<=', 'imp,islte', [0, 1], [0, 1]);
          rhs('<=', 'imp,islte', [0, 2], [0, 1]);
          rhs('<=', 'islte,lte', [0, 2], [0, 2]);
          rhs('<=', 'islte,lte', [0, 1], [0, 10]);
          rhs('<=', 'imp,islte', [0, 1], [0, 0, 9, 9]);
          rhs('<=', 'islte', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<=', 'imp,islte', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!&', 'islte,nall', [0, 1], [0, 1]);
          both('!&', 'islte,nall', [0, 2], [0, 1]);
          both('!&', 'islte,nall', [0, 2], [0, 2]);
          both('!&', 'islte,nall', [0, 1], [0, 10]);
          both('!&', 'islte,nall', [0, 1], [0, 0, 9, 9]);
          both('!&', 'islte,nall', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!&', 'islte,nall', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('!->', [0, 1], [0, 1]);
          lhs('!->', 'islte', [0, 2], [0, 1]);
          lhs('!->', 'islte', [0, 2], [0, 2]);
          lhs('!->', 'islte', [0, 1], [0, 10]);
          lhs('!->', 'islte', [0, 1], [0, 0, 9, 9]);
          lhs('!->', 'islte', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('!->', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('!->', [0, 1], [0, 1]);
          rhs('!->', [0, 2], [0, 1]);
          rhs('!->', [0, 2], [0, 2]);
          rhs('!->', [0, 1], [0, 10]);
          rhs('!->', [0, 1], [0, 0, 9, 9]);
          rhs('!->', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('!->', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!|', [0, 1], [0, 1]);
          both('!|', [0, 2], [0, 1]);
          both('!|', [0, 2], [0, 2]);
          both('!|', [0, 1], [0, 10]);
          both('!|', [0, 1], [0, 0, 9, 9]);
          both('!|', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!|', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('==', 'islte', [0, 1], [0, 1]);
          both('==', 'islte', [0, 2], [0, 1]);
          both('==', 'islte', [0, 2], [0, 2]);
          both('==', 'islte', [0, 1], [0, 10]);
          both('==', 'islte', [0, 1], [0, 0, 9, 9]);
          both('==', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('==', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!^', 'islte', [0, 1], [0, 1]);
          both('!^', 'islte', [0, 2], [0, 1]);
          both('!^', 'islte', [0, 2], [0, 2]);
          both('!^', 'islte', [0, 1], [0, 10]);
          both('!^', 'islte', [0, 1], [0, 0, 9, 9]);
          both('!^', 'islte', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!^', 'islte', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('^', 'islte,xor', [0, 1], [0, 1]);
          both('^', 'islte,xor', [0, 2], [0, 1]);
          both('^', 'islte,xor', [0, 2], [0, 2]);
          both('^', 'islte,xor', [0, 1], [0, 10]);
          both('^', 'islte,xor', [0, 1], [0, 0, 9, 9]);
          both('^', 'islte,xor', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('^', 'islte,xor', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
        });

        describe('binary with shared result', function() {

          let both = testTernaryBinarySharedResult.bind(undefined, '<=?', 'lhs', ''); // R = A @1 B, R @2 C  and  R = A @1 B, C @2 R and R = B @1 A, R @2 C  and  R = B @1 A, C @2 R
          let lhs = testTernaryBinarySharedResult.bind(undefined, '<=?', 'lhs', 'lhs'); // R = A @1 B, R @2 C and R = B @1 A, R @2 C
          let rhs = testTernaryBinarySharedResult.bind(undefined, '<=?', 'lhs', 'rhs'); // R = A @1 B, C @2 R and R = B @1 A, C @2 R

          both('&', 'imp', [0, 1], [0, 1]);
          both('&', 'imp', [0, 2], [0, 1]);
          both('&', 'lte', [0, 2], [0, 2]);
          both('&', 'lte', [0, 1], [0, 10]);
          both('&', 'imp', [0, 1], [0, 0, 9, 9]);
          both('&', 'imp', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('&', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!=', 'islte,xor', [0, 1], [0, 1]);
          both('!=', 'diff,islte', [0, 2], [0, 1]);
          both('!=', 'diff,islte', [0, 2], [0, 2]);
          both('!=', 'diff,islte', [0, 1], [0, 10]);
          both('!=', 'diff,islte', [0, 1], [0, 0, 9, 9]);
          both('!=', 'diff,islte', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!=', 'diff,islte', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('->', 'imp,islte', [0, 1], [0, 1]);
          lhs('->', 'imp,islte', [0, 2], [0, 1]);
          lhs('->', 'imp,islte', [0, 2], [0, 1]);
          lhs('->', 'imp,islte', [0, 1], [0, 10]);
          lhs('->', 'imp,islte', [0, 1], [0, 0, 9, 9]);
          lhs('->', 'imp,islte', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('->', 'imp,islte', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('->', 'imp,islte', [0, 1], [0, 1]);
          rhs('->', 'imp,islte', [0, 2], [0, 1]);
          rhs('->', 'imp,islte', [0, 2], [0, 2]);
          rhs('->', 'imp,islte', [0, 1], [0, 10]);
          rhs('->', 'imp,islte', [0, 1], [0, 0, 9, 9]);
          rhs('->', 'imp,islte', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('->', 'imp,islte', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<', [0, 1], [0, 1]);
          lhs('<', [0, 2], [0, 1]);
          lhs('<', 'islte,lt', [0, 2], [0, 2]);
          lhs('<', 'islte,lt', [0, 1], [0, 10]);
          lhs('<', [0, 1], [0, 0, 9, 9]);
          lhs('<', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<', 'imp', [0, 1], [0, 1]);
          rhs('<', 'imp', [0, 2], [0, 1]);
          rhs('<', 'lte', [0, 2], [0, 2]);
          rhs('<', 'lte', [0, 1], [0, 10]);
          rhs('<', 'imp', [0, 1], [0, 0, 9, 9]);
          rhs('<', 'imp', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<=', 'imp,islte', [0, 1], [0, 1]);
          lhs('<=', 'imp,islte', [0, 2], [0, 1]);
          lhs('<=', 'islte,lte', [0, 2], [0, 2]);
          lhs('<=', 'islte,lte', [0, 1], [0, 10]);
          lhs('<=', 'imp,islte', [0, 1], [0, 0, 9, 9]);
          lhs('<=', 'imp,islte', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<=', 'imp,islte', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<=', 'imp,islte', [0, 1], [0, 1]);
          rhs('<=', 'islte,lte', [0, 2], [0, 1]);
          rhs('<=', 'islte,lte', [0, 2], [0, 2]);
          rhs('<=', 'imp,islte', [0, 1], [0, 10]);
          rhs('<=', [0, 1], [0, 0, 9, 9]);
          rhs('<=', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<=', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!&', 'islte,nall', [0, 1], [0, 1]);
          both('!&', 'islte,nall', [0, 2], [0, 1]);
          both('!&', 'islte,nall', [0, 2], [0, 2]);
          both('!&', 'islte,nall', [0, 1], [0, 10]);
          both('!&', 'islte,nall', [0, 1], [0, 0, 9, 9]);
          both('!&', 'islte,nall', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!&', 'islte,nall', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('!->', 'imp', [0, 1], [0, 1]);
          lhs('!->', 'imp', [0, 2], [0, 1]);
          lhs('!->', 'lte', [0, 2], [0, 2]);
          lhs('!->', 'lte', [0, 1], [0, 10]);
          lhs('!->', 'imp', [0, 1], [0, 0, 9, 9]);
          lhs('!->', 'imp', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('!->', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('!->', [0, 1], [0, 1]);
          rhs('!->', [0, 2], [0, 1]);
          rhs('!->', 'lt', [0, 2], [0, 2]);
          rhs('!->', 'lt', [0, 1], [0, 10]);
          rhs('!->', [0, 1], [0, 0, 9, 9]);
          rhs('!->', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('!->', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!|', [0, 1], [0, 1]);
          both('!|', [0, 2], [0, 1]);
          both('!|', 'lt', [0, 2], [0, 2]);
          both('!|', 'lt', [0, 1], [0, 10]);
          both('!|', [0, 1], [0, 0, 9, 9]);
          both('!|', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!|', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('==', 'islte', [0, 1], [0, 1]);
          both('==', 'islte', [0, 2], [0, 1]);
          both('==', 'islte', [0, 2], [0, 2]);
          both('==', 'islte', [0, 1], [0, 10]);
          both('==', [0, 1], [0, 0, 9, 9]);
          both('==', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('==', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!^', 'islte', [0, 1], [0, 1]);
          both('!^', 'islte', [0, 2], [0, 1]);
          both('!^', 'islte', [0, 2], [0, 2]);
          both('!^', 'islte', [0, 1], [0, 10]);
          both('!^', 'islte', [0, 1], [0, 0, 9, 9]);
          both('!^', 'islte', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!^', 'islte', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('^', 'islte,xor', [0, 1], [0, 1]);
          both('^', 'islte,xor', [0, 2], [0, 1]);
          both('^', 'islte,xor', [0, 2], [0, 2]);
          both('^', 'islte,xor', [0, 1], [0, 10]);
          both('^', 'islte,xor', [0, 1], [0, 0, 9, 9]);
          both('^', 'islte,xor', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('^', 'islte,xor', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
        });

        describe('ternary with shared args', function() {

          let both = testTernaryTernarySharedArgs.bind(undefined, '<=?', 'lhs', '');          // R = A @1 B, S = A @2 C and R = A @1 B, S = C @2 A and R = B @1 A, S = A @2 C and R = B @1 A, S = C @2 A
          let lhs = testTernaryTernarySharedArgs.bind(undefined, '<=?', 'lhs', 'lhs');    // R = A @1 B, S = A @2 C and R = B @1 A, S = A @2 C
          let rhs = testTernaryTernarySharedArgs.bind(undefined, '<=?', 'lhs', 'rhs');    // R = A @1 B, S = C @2 A and R = B @1 A, S = C @2 A

          // R = A & B, S = A &? C
          both('&?', 'isall,islte', [0, 1], [0, 1], [0, 1]);
          both('&?', 'isall,islte', [0, 2], [0, 1], [0, 2]);
          both('&?', 'isall,islte', [0, 2], [0, 2], [0, 2]);
          both('&?', 'isall,islte', [0, 1], [0, 2], [0, 2]);
          both('&?', 'isall,islte', [0, 1], [0, 1], [0, 10]);
          both('&?', 'isall,islte', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('&?', 'isall,islte', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('&?', 'isall,islte', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('==?', 'islte,issame', [0, 1], [0, 1], [0, 1]);
          both('==?', 'islte,issame', [0, 2], [0, 1], [0, 2]);
          both('==?', 'islte,issame', [0, 2], [0, 2], [0, 2]);
          both('==?', 'islte,issame', [0, 1], [0, 2], [0, 2]);
          both('==?', 'islte,issame', [0, 1], [0, 1], [0, 10]);
          both('==?', 'islte,issame', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('==?', 'islte,issame', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('==?', 'islte,issame', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!=?', 'isdiff,islte', [0, 1], [0, 1], [0, 1]);
          both('!=?', 'isdiff,islte', [0, 2], [0, 1], [0, 2]);
          both('!=?', 'isdiff,islte', [0, 2], [0, 2], [0, 2]);
          both('!=?', 'isdiff,islte', [0, 1], [0, 2], [0, 2]);
          both('!=?', 'isdiff,islte', [0, 1], [0, 1], [0, 10]);
          both('!=?', 'isdiff,islte', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('!=?', 'isdiff,islte', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!=?', 'isdiff,islte', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<?', 'islt,islte', [0, 1], [0, 1], [0, 1]);
          lhs('<?', 'islt,islte', [0, 2], [0, 1], [0, 2]);
          lhs('<?', 'islt,islte', [0, 2], [0, 2], [0, 2]);
          lhs('<?', 'islt,islte', [0, 1], [0, 2], [0, 2]);
          lhs('<?', 'islt,islte', [0, 1], [0, 1], [0, 10]);
          lhs('<?', 'islt,islte', [0, 1], [0, 1], [0, 0, 9, 9]);
          lhs('<?', 'islt,islte', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<?', 'islt,islte', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<?', 'islt,islte', [0, 1], [0, 1], [0, 1]);
          rhs('<?', 'islt,islte', [0, 2], [0, 1], [0, 2]);
          rhs('<?', 'islt,islte', [0, 2], [0, 2], [0, 2]);
          rhs('<?', 'islt,islte', [0, 1], [0, 2], [0, 2]);
          rhs('<?', 'islt,islte', [0, 1], [0, 1], [0, 10]);
          rhs('<?', 'islt,islte', [0, 1], [0, 1], [0, 0, 9, 9]);
          rhs('<?', 'islt,islte', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<?', 'islt,islte', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<=?', 'islte,islte', [0, 1], [0, 1], [0, 1]);
          lhs('<=?', 'islte,islte', [0, 2], [0, 1], [0, 2]);
          lhs('<=?', 'islte,islte', [0, 2], [0, 2], [0, 2]);
          lhs('<=?', 'islte,islte', [0, 1], [0, 2], [0, 2]);
          lhs('<=?', 'islte,islte', [0, 1], [0, 1], [0, 10]);
          lhs('<=?', 'islte,islte', [0, 1], [0, 1], [0, 0, 9, 9]);
          lhs('<=?', 'islte,islte', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<=?', 'islte,islte', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<=?', 'islte,islte', [0, 1], [0, 1], [0, 1]);
          rhs('<=?', 'islte,islte', [0, 2], [0, 1], [0, 2]);
          rhs('<=?', 'islte,islte', [0, 2], [0, 2], [0, 2]);
          rhs('<=?', 'islte,islte', [0, 1], [0, 2], [0, 2]);
          rhs('<=?', 'islte,islte', [0, 1], [0, 1], [0, 10]);
          rhs('<=?', 'islte,islte', [0, 1], [0, 1], [0, 0, 9, 9]);
          rhs('<=?', 'islte,islte', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<=?', 'islte,islte', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!&?', 'islte,isnall', [0, 1], [0, 1], [0, 1]);
          both('!&?', 'islte,isnall', [0, 2], [0, 1], [0, 2]);
          both('!&?', 'islte,isnall', [0, 2], [0, 2], [0, 2]);
          both('!&?', 'islte,isnall', [0, 1], [0, 2], [0, 2]);
          both('!&?', 'islte,isnall', [0, 1], [0, 1], [0, 10]);
          both('!&?', 'islte,isnall', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('!&?', 'islte,isnall', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!&?', 'islte,isnall', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('|?', 'islte,issome', [0, 1], [0, 1], [0, 1]);
          both('|?', 'islte,issome', [0, 2], [0, 1], [0, 2]);
          both('|?', 'islte,issome', [0, 2], [0, 2], [0, 2]);
          both('|?', 'islte,issome', [0, 1], [0, 2], [0, 2]);
          both('|?', 'islte,issome', [0, 1], [0, 1], [0, 10]);
          both('|?', 'islte,issome', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('|?', 'islte,issome', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('|?', 'islte,issome', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!|?', 'islte,isnone', [0, 1], [0, 1], [0, 1]);
          both('!|?', 'islte,isnone', [0, 2], [0, 1], [0, 2]);
          both('!|?', 'islte,isnone', [0, 2], [0, 2], [0, 2]);
          both('!|?', 'islte,isnone', [0, 1], [0, 2], [0, 2]);
          both('!|?', 'islte,isnone', [0, 1], [0, 1], [0, 10]);
          both('!|?', 'islte,isnone', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('!|?', 'islte,isnone', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!|?', 'islte,isnone', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('+', 'islte,issome', [0, 1], [0, 20], [0, 1]);
          both('+', 'islte,sum', [0, 2], [0, 1], [0, 2]);
          both('+', 'islte,sum', [0, 2], [0, 2], [0, 2]);
          both('+', 'islte,sum', [0, 1], [0, 2], [0, 2]);
          both('+', 'islte,issome', [0, 1], [0, 20], [0, 10]);
          both('+', 'islte,issome', [0, 1], [0, 20], [0, 0, 9, 9]);
          both('+', 'islte,issome', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('+', 'islte,issome', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('-', 'islte,minus', [0, 1], [0, 20], [0, 1]);
          lhs('-', 'islte,minus', [0, 2], [0, 1], [0, 2]);
          lhs('-', 'islte,minus', [0, 2], [0, 2], [0, 2]);
          lhs('-', 'islte,minus', [0, 1], [0, 2], [0, 2]);
          lhs('-', 'islte,minus', [0, 1], [0, 20], [0, 10]);
          lhs('-', 'islte,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
          lhs('-', 'islte', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('-', 'islte,minus', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('-', 'islte,minus', [0, 1], [0, 20], [0, 1]);
          rhs('-', 'islte,minus', [0, 2], [0, 1], [0, 2]);
          rhs('-', 'islte,minus', [0, 2], [0, 2], [0, 2]);
          rhs('-', 'islte,minus', [0, 1], [0, 2], [0, 2]);
          rhs('-', 'islte,minus', [0, 1], [0, 20], [0, 10]);
          rhs('-', 'islte,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
          rhs('-', 'islte,minus', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('-', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('*', 'islte,product', [0, 1], [0, 100], [0, 1]);
          both('*', 'islte,product', [0, 2], [0, 1], [0, 2]);
          both('*', 'islte,product', [0, 2], [0, 2], [0, 2]);
          both('*', 'islte,product', [0, 1], [0, 2], [0, 2]);
          both('*', 'islte,product', [0, 1], [0, 100], [0, 10]);
          both('*', 'islte,product', [0, 1], [0, 100], [0, 0, 9, 9]);
          both('*', 'islte,product', [0, 1], [0, 100], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('*', 'islte,product', [0, 1], [0, 100], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('/', 'div,islte', [0, 1], [0, 20], [0, 1]);
          lhs('/', 'div,islte', [0, 2], [0, 1], [0, 2]);
          lhs('/', 'div,islte', [0, 2], [0, 2], [0, 2]);
          lhs('/', 'div,islte', [0, 1], [0, 2], [0, 2]);
          lhs('/', 'div,islte', [0, 1], [0, 20], [0, 10]);
          lhs('/', 'div,islte', [0, 1], [0, 20], [0, 0, 9, 9]);
          lhs('/', 'div,islte', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('/', 'div,islte', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('/', 'div,islte', [0, 1], [0, 20], [0, 1]);
          rhs('/', 'div,islte', [0, 2], [0, 1], [0, 2]);
          rhs('/', 'div,islte', [0, 2], [0, 2], [0, 2]);
          rhs('/', 'div,islte', [0, 1], [0, 2], [0, 2]);
          rhs('/', 'div,islte', [0, 1], [0, 20], [0, 10]);
          rhs('/', 'div,islte', [0, 1], [0, 20], [0, 0, 9, 9]);
          rhs('/', 'div,islte', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('/', 'div,islte', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
        });

        describe('ternary with shared R', function() {

          let both = testTernaryTernarySharedR.bind(undefined, '<=?', 'lhs', '');          // R = A @1 B, S = R @2 C and R = A @1 B, S = C @2 R and R = B @1 A, S = R @2 C and R = B @1 A, S = C @2 R
          let lhs = testTernaryTernarySharedR.bind(undefined, '<=?', 'lhs', 'lhs');    // R = A @1 B, S = R @2 C and R = B @1 A, S = R @2 C
          let rhs = testTernaryTernarySharedR.bind(undefined, '<=?', 'lhs', 'rhs');    // R = A @1 B, S = C @2 R and R = B @1 A, S = C @2 R

          // R = A & B, S = A &? C
          both('&?', 'isall,islte', [0, 1], [0, 1], [0, 1]);
          both('&?', 'isall,islte', [0, 2], [0, 1], [0, 2]);
          both('&?', 'isall,islte', [0, 2], [0, 2], [0, 2]);
          both('&?', 'isall,islte', [0, 1], [0, 2], [0, 2]);
          both('&?', 'isall,islte', [0, 1], [0, 1], [0, 10]);
          both('&?', 'isall,islte', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('&?', 'isall,islte', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('&?', 'isall,islte', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('==?', 'islte,issame', [0, 1], [0, 1], [0, 1]);
          both('==?', 'islte,issame', [0, 2], [0, 1], [0, 2]);
          both('==?', 'islte,issame', [0, 2], [0, 2], [0, 2]);
          both('==?', 'islte,issame', [0, 1], [0, 2], [0, 2]);
          both('==?', 'islte,issame', [0, 1], [0, 1], [0, 10]);
          both('==?', 'islte,issame', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('==?', 'islte,issame', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('==?', 'islte,issame', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!=?', 'isdiff,islte', [0, 1], [0, 1], [0, 1]);
          both('!=?', 'isdiff,islte', [0, 2], [0, 1], [0, 2]);
          both('!=?', 'isdiff,islte', [0, 2], [0, 2], [0, 2]);
          both('!=?', 'isdiff,islte', [0, 1], [0, 2], [0, 2]);
          both('!=?', 'isdiff,islte', [0, 1], [0, 1], [0, 10]);
          both('!=?', 'isdiff,islte', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('!=?', 'isdiff,islte', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!=?', 'isdiff,islte', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<?', 'islt,islte', [0, 1], [0, 1], [0, 1]);
          lhs('<?', 'islt,islte', [0, 2], [0, 1], [0, 2]);
          lhs('<?', 'islt,islte', [0, 2], [0, 2], [0, 2]);
          lhs('<?', 'islt,islte', [0, 1], [0, 2], [0, 2]);
          lhs('<?', 'islt,islte', [0, 1], [0, 1], [0, 10]);
          lhs('<?', 'islt,islte', [0, 1], [0, 1], [0, 0, 9, 9]);
          lhs('<?', 'islt,islte', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<?', 'islt,islte', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<?', 'islt,islte', [0, 1], [0, 1], [0, 1]);
          rhs('<?', 'islt,islte', [0, 2], [0, 1], [0, 2]);
          rhs('<?', 'islt,islte', [0, 2], [0, 2], [0, 2]);
          rhs('<?', 'islt,islte', [0, 1], [0, 2], [0, 2]);
          rhs('<?', 'islt,islte', [0, 1], [0, 1], [0, 10]);
          rhs('<?', 'islt,islte', [0, 1], [0, 1], [0, 0, 9, 9]);
          rhs('<?', 'islt,islte', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<?', 'islt,islte', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<=?', 'islte,islte', [0, 1], [0, 1], [0, 1]);
          lhs('<=?', 'islte,islte', [0, 2], [0, 1], [0, 2]);
          lhs('<=?', 'islte,islte', [0, 2], [0, 2], [0, 2]);
          lhs('<=?', 'islte,islte', [0, 1], [0, 2], [0, 2]);
          lhs('<=?', 'islte,islte', [0, 1], [0, 1], [0, 10]);
          lhs('<=?', 'islte,islte', [0, 1], [0, 1], [0, 0, 9, 9]);
          lhs('<=?', 'islte,islte', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<=?', 'islte,islte', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<=?', 'islte,islte', [0, 1], [0, 1], [0, 1]);
          rhs('<=?', 'islte,islte', [0, 2], [0, 1], [0, 2]);
          rhs('<=?', 'islte,islte', [0, 2], [0, 2], [0, 2]);
          rhs('<=?', 'islte,islte', [0, 1], [0, 2], [0, 2]);
          rhs('<=?', 'islte,islte', [0, 1], [0, 1], [0, 10]);
          rhs('<=?', 'islte,islte', [0, 1], [0, 1], [0, 0, 9, 9]);
          rhs('<=?', 'islte,islte', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<=?', 'islte,islte', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!&?', 'islte,isnall', [0, 1], [0, 1], [0, 1]);
          both('!&?', 'islte,isnall', [0, 2], [0, 1], [0, 2]);
          both('!&?', 'islte,isnall', [0, 2], [0, 2], [0, 2]);
          both('!&?', 'islte,isnall', [0, 1], [0, 2], [0, 2]);
          both('!&?', 'islte,isnall', [0, 1], [0, 1], [0, 10]);
          both('!&?', 'islte,isnall', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('!&?', 'islte,isnall', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!&?', 'islte,isnall', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('|?', 'islte,issome', [0, 1], [0, 1], [0, 1]);
          both('|?', 'islte,issome', [0, 2], [0, 1], [0, 2]);
          both('|?', 'islte,issome', [0, 2], [0, 2], [0, 2]);
          both('|?', 'islte,issome', [0, 1], [0, 2], [0, 2]);
          both('|?', 'islte,issome', [0, 1], [0, 1], [0, 10]);
          both('|?', 'islte,issome', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('|?', 'islte,issome', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('|?', 'islte,issome', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!|?', 'islte,isnone', [0, 1], [0, 1], [0, 1]);
          both('!|?', 'islte,isnone', [0, 2], [0, 1], [0, 2]);
          both('!|?', 'islte,isnone', [0, 2], [0, 2], [0, 2]);
          both('!|?', 'islte,isnone', [0, 1], [0, 2], [0, 2]);
          both('!|?', 'islte,isnone', [0, 1], [0, 1], [0, 10]);
          both('!|?', 'islte,isnone', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('!|?', 'islte,isnone', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!|?', 'islte,isnone', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('+', 'islte,sum', [0, 1], [0, 20], [0, 1]);
          both('+', 'islte,issome', [0, 2], [0, 1], [0, 2]);
          both('+', 'islte,sum', [0, 2], [0, 2], [0, 2]);
          both('+', 'islte,sum', [0, 1], [0, 2], [0, 2]);
          both('+', 'islte,sum', [0, 1], [0, 20], [0, 10]);
          both('+', 'islte,sum', [0, 1], [0, 20], [0, 0, 9, 9]);
          both('+', 'lt', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('+', 'lt', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('-', 'islte,minus', [0, 1], [0, 20], [0, 1]);
          lhs('-', 'islte,minus', [0, 2], [0, 1], [0, 2]);
          lhs('-', 'islte,minus', [0, 2], [0, 2], [0, 2]);
          lhs('-', 'islte,minus', [0, 1], [0, 2], [0, 2]);
          lhs('-', 'islte,minus', [0, 1], [0, 20], [0, 10]);
          lhs('-', 'islte,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
          lhs('-', 'lt', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('-', 'lt', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('-', 'islte,minus', [0, 1], [0, 20], [0, 1]);
          rhs('-', 'islte,minus', [0, 2], [0, 1], [0, 2]);
          rhs('-', 'islte,minus', [0, 2], [0, 2], [0, 2]);
          rhs('-', 'islte,minus', [0, 1], [0, 2], [0, 2]);
          rhs('-', 'islte,minus', [0, 1], [0, 20], [0, 10]);
          rhs('-', 'islte,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
          rhs('-', 'lt', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('-', 'lt', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('*', 'islte,product', [0, 1], [0, 100], [0, 1]);
          both('*', 'islte,product', [0, 2], [0, 1], [0, 2]);
          both('*', 'islte,product', [0, 2], [0, 2], [0, 2]);
          both('*', 'islte,product', [0, 1], [0, 2], [0, 2]);
          both('*', 'islte,product', [0, 1], [0, 100], [0, 10]);
          both('*', 'islte,product', [0, 1], [0, 100], [0, 0, 9, 9]);
          both('*', 'islte,nall', [0, 1], [0, 100], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('*', 'islte,nall', [0, 1], [0, 100], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('/', 'div,islte', [0, 1], [0, 20], [0, 1]);
          lhs('/', 'div,islte', [0, 2], [0, 1], [0, 2]);
          lhs('/', 'div,islte', [0, 2], [0, 2], [0, 2]);
          lhs('/', 'div,islte', [0, 1], [0, 2], [0, 2]);
          lhs('/', 'div,islte', [0, 1], [0, 20], [0, 10]);
          lhs('/', 'div,islte', [0, 1], [0, 20], [0, 0, 9, 9]);
          lhs('/', 'div,islte', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('/', 'div,islte', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('/', 'div,islte', [0, 1], [0, 20], [0, 1]);
          rhs('/', 'div,islte', [0, 2], [0, 1], [0, 2]);
          rhs('/', 'div,islte', [0, 2], [0, 2], [0, 2]);
          rhs('/', 'div,islte', [0, 1], [0, 2], [0, 2]);
          rhs('/', 'div,islte', [0, 1], [0, 20], [0, 10]);
          rhs('/', 'div,islte', [0, 1], [0, 20], [0, 0, 9, 9]);
          rhs('/', 'div,islte', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('/', 'div,islte', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
        });

        describe('ternary with shared S', function() {

          let both = testTernaryTernarySharedS.bind(undefined, '<=?', 'lhs', '');          // R = S @1 B, S = A @2 C and R = S @1 B, S = C @2 A and R = B @1 S, S = A @2 C and R = B @1 S, S = C @2 A
          let lhs = testTernaryTernarySharedS.bind(undefined, '<=?', 'lhs', 'lhs');    // R = S @1 B, S = A @2 C and R = B @1 S, S = A @2 C
          let rhs = testTernaryTernarySharedS.bind(undefined, '<=?', 'lhs', 'rhs');    // R = S @1 B, S = C @2 A and R = B @1 S, S = C @2 A

          // R = A & B, S = A &? C
          both('&?', 'isall,islte', [0, 1], [0, 1], [0, 1]);
          both('&?', 'isall,islte', [0, 2], [0, 1], [0, 2]);
          both('&?', 'isall,islte', [0, 2], [0, 2], [0, 2]);
          both('&?', 'isall,islte', [0, 1], [0, 2], [0, 2]);
          both('&?', 'isall,islte', [0, 1], [0, 1], [0, 10]);
          both('&?', 'isall,islte', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('&?', 'isall,islte', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('&?', 'isall,islte', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('==?', 'islte,issame', [0, 1], [0, 1], [0, 1]);
          both('==?', 'islte,issame', [0, 2], [0, 1], [0, 2]);
          both('==?', 'islte,issame', [0, 2], [0, 2], [0, 2]);
          both('==?', 'islte,issame', [0, 1], [0, 2], [0, 2]);
          both('==?', 'islte,issame', [0, 1], [0, 1], [0, 10]);
          both('==?', 'islte,issame', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('==?', 'islte,issame', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('==?', 'islte,issame', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!=?', 'isdiff,islte', [0, 1], [0, 1], [0, 1]);
          both('!=?', 'isdiff,islte', [0, 2], [0, 1], [0, 2]);
          both('!=?', 'isdiff,islte', [0, 2], [0, 2], [0, 2]);
          both('!=?', 'isdiff,islte', [0, 1], [0, 2], [0, 2]);
          both('!=?', 'isdiff,islte', [0, 1], [0, 1], [0, 10]);
          both('!=?', 'isdiff,islte', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('!=?', 'isdiff,islte', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!=?', 'isdiff,islte', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<?', 'islt,islte', [0, 1], [0, 1], [0, 1]);
          lhs('<?', 'islt,islte', [0, 2], [0, 1], [0, 2]);
          lhs('<?', 'islt,islte', [0, 2], [0, 2], [0, 2]);
          lhs('<?', 'islt,islte', [0, 1], [0, 2], [0, 2]);
          lhs('<?', 'islt,islte', [0, 1], [0, 1], [0, 10]);
          lhs('<?', 'islt,islte', [0, 1], [0, 1], [0, 0, 9, 9]);
          lhs('<?', 'islt,islte', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<?', 'islt,islte', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<?', 'islt,islte', [0, 1], [0, 1], [0, 1]);
          rhs('<?', 'islt,islte', [0, 2], [0, 1], [0, 2]);
          rhs('<?', 'islt,islte', [0, 2], [0, 2], [0, 2]);
          rhs('<?', 'islt,islte', [0, 1], [0, 2], [0, 2]);
          rhs('<?', 'islt,islte', [0, 1], [0, 1], [0, 10]);
          rhs('<?', 'islt,islte', [0, 1], [0, 1], [0, 0, 9, 9]);
          rhs('<?', 'islt,islte', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<?', 'islt,islte', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<=?', 'islte,islte', [0, 1], [0, 1], [0, 1]);
          lhs('<=?', 'islte,islte', [0, 2], [0, 1], [0, 2]);
          lhs('<=?', 'islte,islte', [0, 2], [0, 2], [0, 2]);
          lhs('<=?', 'islte,islte', [0, 1], [0, 2], [0, 2]);
          lhs('<=?', 'islte,islte', [0, 1], [0, 1], [0, 10]);
          lhs('<=?', 'islte,islte', [0, 1], [0, 1], [0, 0, 9, 9]);
          lhs('<=?', 'islte,islte', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<=?', 'islte,islte', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<=?', 'islte,islte', [0, 1], [0, 1], [0, 1]);
          rhs('<=?', 'islte,islte', [0, 2], [0, 1], [0, 2]);
          rhs('<=?', 'islte,islte', [0, 2], [0, 2], [0, 2]);
          rhs('<=?', 'islte,islte', [0, 1], [0, 2], [0, 2]);
          rhs('<=?', 'islte,islte', [0, 1], [0, 1], [0, 10]);
          rhs('<=?', 'islte,islte', [0, 1], [0, 1], [0, 0, 9, 9]);
          rhs('<=?', 'islte,islte', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<=?', 'islte,islte', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!&?', 'islte,isnall', [0, 1], [0, 1], [0, 1]);
          both('!&?', 'islte,isnall', [0, 2], [0, 1], [0, 2]);
          both('!&?', 'islte,isnall', [0, 2], [0, 2], [0, 2]);
          both('!&?', 'islte,isnall', [0, 1], [0, 2], [0, 2]);
          both('!&?', 'islte,isnall', [0, 1], [0, 1], [0, 10]);
          both('!&?', 'islte,isnall', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('!&?', 'islte,isnall', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!&?', 'islte,isnall', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('|?', 'islte,issome', [0, 1], [0, 1], [0, 1]);
          both('|?', 'islte,issome', [0, 2], [0, 1], [0, 2]);
          both('|?', 'islte,issome', [0, 2], [0, 2], [0, 2]);
          both('|?', 'islte,issome', [0, 1], [0, 2], [0, 2]);
          both('|?', 'islte,issome', [0, 1], [0, 1], [0, 10]);
          both('|?', 'islte,issome', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('|?', 'islte,issome', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('|?', 'islte,issome', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!|?', 'islte,isnone', [0, 1], [0, 1], [0, 1]);
          both('!|?', 'islte,isnone', [0, 2], [0, 1], [0, 2]);
          both('!|?', 'islte,isnone', [0, 2], [0, 2], [0, 2]);
          both('!|?', 'islte,isnone', [0, 1], [0, 2], [0, 2]);
          both('!|?', 'islte,isnone', [0, 1], [0, 1], [0, 10]);
          both('!|?', 'islte,isnone', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('!|?', 'islte,isnone', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!|?', 'islte,isnone', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('+', 'islte,sum', [0, 1], [0, 20], [0, 1]);
          both('+', 'islte,sum', [0, 2], [0, 1], [0, 2]);
          both('+', 'islte,sum', [0, 2], [0, 2], [0, 2]);
          both('+', 'islte,sum', [0, 1], [0, 2], [0, 2]);
          both('+', 'islte,sum', [0, 1], [0, 20], [0, 10]);
          both('+', 'islte,sum', [0, 1], [0, 20], [0, 0, 9, 9]);
          both('+', 'islte,sum', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('+', 'islte,sum', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('-', 'islte,minus', [0, 1], [0, 20], [0, 1]);
          lhs('-', 'islte,minus', [0, 2], [0, 1], [0, 2]);
          lhs('-', 'islte,minus', [0, 2], [0, 2], [0, 2]);
          lhs('-', 'islte,minus', [0, 1], [0, 2], [0, 2]);
          lhs('-', 'islte,minus', [0, 1], [0, 20], [0, 10]);
          lhs('-', 'islte,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
          lhs('-', 'islte', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('-', 'islte,minus', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('-', 'islte,minus', [0, 1], [0, 20], [0, 1]);
          rhs('-', 'islte,minus', [0, 2], [0, 1], [0, 2]);
          rhs('-', 'islte,minus', [0, 2], [0, 2], [0, 2]);
          rhs('-', 'islte,minus', [0, 1], [0, 2], [0, 2]);
          rhs('-', 'islte,minus', [0, 1], [0, 20], [0, 10]);
          rhs('-', 'islte,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
          rhs('-', 'islte,minus', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('-', 'islte', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('*', 'islte,product', [0, 1], [0, 100], [0, 1]);
          both('*', 'islte,product', [0, 2], [0, 1], [0, 2]);
          both('*', 'islte,product', [0, 2], [0, 2], [0, 2]);
          both('*', 'islte,product', [0, 1], [0, 2], [0, 2]);
          both('*', 'islte,product', [0, 1], [0, 100], [0, 10]);
          both('*', 'islte,product', [0, 1], [0, 100], [0, 0, 9, 9]);
          both('*', 'islte,product', [0, 1], [0, 100], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('*', 'islte,product', [0, 1], [0, 100], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('/', 'div,islte', [0, 1], [0, 20], [0, 1]);
          lhs('/', 'div,islte', [0, 2], [0, 1], [0, 2]);
          lhs('/', 'div,islte', [0, 2], [0, 2], [0, 2]);
          lhs('/', 'div,islte', [0, 1], [0, 2], [0, 2]);
          lhs('/', 'div,islte', [0, 1], [0, 20], [0, 10]);
          lhs('/', 'div,islte', [0, 1], [0, 20], [0, 0, 9, 9]);
          lhs('/', 'div', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('/', 'div,islte', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('/', 'div,islte', [0, 1], [0, 20], [0, 1]);
          rhs('/', 'div,islte', [0, 2], [0, 1], [0, 2]);
          rhs('/', 'div,islte', [0, 2], [0, 2], [0, 2]);
          rhs('/', 'div,islte', [0, 1], [0, 2], [0, 2]);
          rhs('/', 'div,islte', [0, 1], [0, 20], [0, 10]);
          rhs('/', 'div,islte', [0, 1], [0, 20], [0, 0, 9, 9]);
          rhs('/', 'div,islte', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('/', 'div', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
        });

        describe('ternary with shared results', function() {

          let both = testTernaryTernarySharedResults.bind(undefined, '<=?', 'lhs', '');          // R = S @1 B, S = R @2 C and R = S @1 B, S = C @2 R and R = S @1 B, S = R @2 C and R = S @1 B, S = C @2 R
          let lhs = testTernaryTernarySharedResults.bind(undefined, '<=?', 'lhs', 'lhs');    // R = S @1 B, S = R @2 C and R = B @1 S, S = R @2 C
          let rhs = testTernaryTernarySharedResults.bind(undefined, '<=?', 'lhs', 'rhs');    // R = S @1 B, S = C @2 R and R = B @1 S, S = C @2 R

          // R = A & B, S = A &? C
          both('&?', 'isall,islte', [0, 1], [0, 1], [0, 1]);
          both('&?', 'isall,islte', [0, 2], [0, 1], [0, 2]);
          both('&?', 'isall,islte', [0, 2], [0, 2], [0, 2]);
          both('&?', 'isall,islte', [0, 1], [0, 2], [0, 2]);
          both('&?', 'isall,islte', [0, 1], [0, 1], [0, 10]);
          both('&?', 'isall,islte', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('&?', 'isall,islte', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('&?', 'isall,islte', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('==?', 'islte,issame', [0, 1], [0, 1], [0, 1]);
          both('==?', 'islte,issame', [0, 2], [0, 1], [0, 2]);
          both('==?', 'islte,issame', [0, 2], [0, 2], [0, 2]);
          both('==?', 'islte,issame', [0, 1], [0, 2], [0, 2]);
          both('==?', 'islte,issame', [0, 1], [0, 1], [0, 10]);
          both('==?', 'islte,issame', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('==?', 'islte,issame', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('==?', 'islte,issame', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!=?', 'isdiff,islte', [0, 1], [0, 1], [0, 1]);
          both('!=?', 'isdiff,islte', [0, 2], [0, 1], [0, 2]);
          both('!=?', 'isdiff,islte', [0, 2], [0, 2], [0, 2]);
          both('!=?', 'isdiff,islte', [0, 1], [0, 2], [0, 2]);
          both('!=?', 'isdiff,islte', [0, 1], [0, 1], [0, 10]);
          both('!=?', 'isdiff,islte', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('!=?', 'isdiff,islte', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!=?', 'isdiff,islte', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<?', 'islt,islte', [0, 1], [0, 1], [0, 1]);
          lhs('<?', 'islt,islte', [0, 2], [0, 1], [0, 2]);
          lhs('<?', 'islt,islte', [0, 2], [0, 2], [0, 2]);
          lhs('<?', 'islt,islte', [0, 1], [0, 2], [0, 2]);
          lhs('<?', 'islt,islte', [0, 1], [0, 1], [0, 10]);
          lhs('<?', 'islt,islte', [0, 1], [0, 1], [0, 0, 9, 9]);
          lhs('<?', 'islt,islte', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<?', 'islt,islte', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<?', 'islt,islte', [0, 1], [0, 1], [0, 1]);
          rhs('<?', 'islt,islte', [0, 2], [0, 1], [0, 2]);
          rhs('<?', 'islt,islte', [0, 2], [0, 2], [0, 2]);
          rhs('<?', 'islt,islte', [0, 1], [0, 2], [0, 2]);
          rhs('<?', 'islt,islte', [0, 1], [0, 1], [0, 10]);
          rhs('<?', 'islt,islte', [0, 1], [0, 1], [0, 0, 9, 9]);
          rhs('<?', 'islt,islte', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<?', 'islt,islte', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<=?', 'islte,islte', [0, 1], [0, 1], [0, 1]);
          lhs('<=?', 'islte,islte', [0, 2], [0, 1], [0, 2]);
          lhs('<=?', 'islte,islte', [0, 2], [0, 2], [0, 2]);
          lhs('<=?', 'islte,islte', [0, 1], [0, 2], [0, 2]);
          lhs('<=?', 'islte,islte', [0, 1], [0, 1], [0, 10]);
          lhs('<=?', 'islte,islte', [0, 1], [0, 1], [0, 0, 9, 9]);
          lhs('<=?', 'islte,islte', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<=?', 'islte,islte', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<=?', 'islte,islte', [0, 1], [0, 1], [0, 1]);
          rhs('<=?', 'islte,islte', [0, 2], [0, 1], [0, 2]);
          rhs('<=?', 'islte,islte', [0, 2], [0, 2], [0, 2]);
          rhs('<=?', 'islte,islte', [0, 1], [0, 2], [0, 2]);
          rhs('<=?', 'islte,islte', [0, 1], [0, 1], [0, 10]);
          rhs('<=?', 'islte,islte', [0, 1], [0, 1], [0, 0, 9, 9]);
          rhs('<=?', 'islte,islte', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<=?', 'islte,islte', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!&?', 'islte,isnall', [0, 1], [0, 1], [0, 1]);
          both('!&?', 'islte,isnall', [0, 2], [0, 1], [0, 2]);
          both('!&?', 'islte,isnall', [0, 2], [0, 2], [0, 2]);
          both('!&?', 'islte,isnall', [0, 1], [0, 2], [0, 2]);
          both('!&?', 'islte,isnall', [0, 1], [0, 1], [0, 10]);
          both('!&?', 'islte,isnall', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('!&?', 'islte,isnall', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!&?', 'islte,isnall', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('|?', 'islte,issome', [0, 1], [0, 1], [0, 1]);
          both('|?', 'islte,issome', [0, 2], [0, 1], [0, 2]);
          both('|?', 'islte,issome', [0, 2], [0, 2], [0, 2]);
          both('|?', 'islte,issome', [0, 1], [0, 2], [0, 2]);
          both('|?', 'islte,issome', [0, 1], [0, 1], [0, 10]);
          both('|?', 'islte,issome', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('|?', 'islte,issome', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('|?', 'islte,issome', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!|?', 'islte,isnone', [0, 1], [0, 1], [0, 1]);
          both('!|?', 'islte,isnone', [0, 2], [0, 1], [0, 2]);
          both('!|?', 'islte,isnone', [0, 2], [0, 2], [0, 2]);
          both('!|?', 'islte,isnone', [0, 1], [0, 2], [0, 2]);
          both('!|?', 'islte,isnone', [0, 1], [0, 1], [0, 10]);
          both('!|?', 'islte,isnone', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('!|?', 'islte,isnone', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!|?', 'islte,isnone', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('+', 'islte,sum', [0, 1], [0, 20], [0, 1]);
          both('+', 'islte,issome', [0, 2], [0, 1], [0, 2]);
          both('+', 'islte,sum', [0, 2], [0, 2], [0, 2]);
          both('+', 'islte,sum', [0, 1], [0, 2], [0, 2]);
          both('+', 'islte,sum', [0, 1], [0, 20], [0, 10]);
          both('+', 'islte,sum', [0, 1], [0, 20], [0, 0, 9, 9]);
          both('+', 'lt', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('+', 'lt', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('-', 'islte,minus', [0, 1], [0, 20], [0, 1]);
          lhs('-', 'islte,minus', [0, 2], [0, 1], [0, 2]);
          lhs('-', 'islte,minus', [0, 2], [0, 2], [0, 2]);
          lhs('-', 'islte,minus', [0, 1], [0, 2], [0, 2]);
          lhs('-', 'islte,minus', [0, 1], [0, 20], [0, 10]);
          lhs('-', 'islte,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
          lhs('-', 'lt', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('-', 'lt', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('-', 'islte,minus', [0, 1], [0, 20], [0, 1]);
          rhs('-', 'islte,minus', [0, 2], [0, 1], [0, 2]);
          rhs('-', 'islte,minus', [0, 2], [0, 2], [0, 2]);
          rhs('-', 'islte,minus', [0, 1], [0, 2], [0, 2]);
          rhs('-', 'islte,minus', [0, 1], [0, 20], [0, 10]);
          rhs('-', 'islte,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
          rhs('-', 'lt', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('-', 'lt', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('*', 'islte,product', [0, 1], [0, 100], [0, 1]);
          both('*', 'islte,product', [0, 2], [0, 1], [0, 2]);
          both('*', 'islte,product', [0, 2], [0, 2], [0, 2]);
          both('*', 'islte,product', [0, 1], [0, 2], [0, 2]);
          both('*', 'islte,product', [0, 1], [0, 100], [0, 10]);
          both('*', 'islte,product', [0, 1], [0, 100], [0, 0, 9, 9]);
          both('*', 'lt,nall', [0, 1], [0, 100], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('*', 'lt,nall', [0, 1], [0, 100], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('/', 'div,islte', [0, 1], [0, 20], [0, 1]);
          lhs('/', 'div,islte', [0, 2], [0, 1], [0, 2]);
          lhs('/', 'div,islte', [0, 2], [0, 2], [0, 2]);
          lhs('/', 'div,islte', [0, 1], [0, 2], [0, 2]);
          lhs('/', 'div,islte', [0, 1], [0, 20], [0, 10]);
          lhs('/', 'div,islte', [0, 1], [0, 20], [0, 0, 9, 9]);
          lhs('/', 'div,lt', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('/', 'div,lt', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('/', 'div,islte', [0, 1], [0, 20], [0, 1]);
          rhs('/', 'div,islte', [0, 2], [0, 1], [0, 2]);
          rhs('/', 'div,islte', [0, 2], [0, 2], [0, 2]);
          rhs('/', 'div,islte', [0, 1], [0, 2], [0, 2]);
          rhs('/', 'div,islte', [0, 1], [0, 20], [0, 10]);
          rhs('/', 'div,islte', [0, 1], [0, 20], [0, 0, 9, 9]);
          rhs('/', 'div,islte', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('/', 'div,lt', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
        });
      });

      describe('ISLTE RHS', function() {

        describe('binary with shared arg', function() {

          let both = testTernaryBinarySharedArgs.bind(undefined, '<=?', 'rhs', ''); // R = A @1 B, A @2 C  and  R = A @1 B, C @2 A and R = B @1 A, A @2 C  and  R = B @1 A, C @2 A
          let lhs = testTernaryBinarySharedArgs.bind(undefined, '<=?', 'rhs', 'lhs'); // R = A @1 B, A @2 C and R = B @1 A, A @2 C
          let rhs = testTernaryBinarySharedArgs.bind(undefined, '<=?', 'rhs', 'rhs'); // R = A @1 B, C @2 A and R = A @1 B, C @2 A

          both('&', [0, 1], [0, 1]);
          both('&', [0, 2], [0, 1]);
          both('&', 'islte', [0, 2], [0, 2]);
          both('&', 'islte', [0, 1], [0, 10]);
          both('&', [0, 1], [0, 0, 9, 9]);
          both('&', 'islte', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('&', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!=', 'islte,xor', [0, 1], [0, 1]);
          both('!=', 'islte,xor', [0, 2], [0, 1]);
          both('!=', 'diff,islte', [0, 2], [0, 2]);
          both('!=', 'diff,islte', [0, 1], [0, 10]);
          both('!=', 'islte,xor', [0, 1], [0, 0, 9, 9]);
          both('!=', 'diff,islte', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!=', 'diff,islte', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('->', 'imp,islte', [0, 1], [0, 1]);
          lhs('->', 'imp,islte', [0, 2], [0, 1]);
          lhs('->', 'imp,islte', [0, 2], [0, 1]);
          lhs('->', 'imp,islte', [0, 1], [0, 10]);
          lhs('->', 'imp,islte', [0, 1], [0, 0, 9, 9]);
          lhs('->', 'imp,islte', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('->', 'imp,islte', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('->', 'imp,islte', [0, 1], [0, 1]);
          rhs('->', 'imp,islte', [0, 2], [0, 1]);
          rhs('->', 'imp,islte', [0, 2], [0, 2]);
          rhs('->', 'imp,islte', [0, 1], [0, 10]);
          rhs('->', 'imp,islte', [0, 1], [0, 0, 9, 9]);
          rhs('->', 'imp,islte', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('->', 'imp,islte', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<', 'xor', [0, 1], [0, 1]);
          lhs('<', 'islte', [0, 2], [0, 1]);
          lhs('<', 'islte,lt', [0, 2], [0, 2]);
          lhs('<', 'islte,lt', [0, 1], [0, 10]);
          lhs('<', 'islte', [0, 1], [0, 0, 9, 9]);
          lhs('<', 'islte', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<', 'islte', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<', [0, 1], [0, 1]);
          rhs('<', [0, 2], [0, 1]);
          rhs('<', 'islte,lt', [0, 2], [0, 2]);
          rhs('<', 'islte,lt', [0, 1], [0, 10]);
          rhs('<', [0, 1], [0, 0, 9, 9]);
          rhs('<', 'islte', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<=', 'imp,islte', [0, 1], [0, 1]);
          lhs('<=', 'imp,islte', [0, 2], [0, 1]);
          lhs('<=', 'islte,lte', [0, 2], [0, 2]);
          lhs('<=', 'islte,lte', [0, 1], [0, 10]);
          lhs('<=', 'imp,islte', [0, 1], [0, 0, 9, 9]);
          lhs('<=', 'imp,islte', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<=', 'islte', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<=', 'imp,islte', [0, 1], [0, 1]);
          rhs('<=', 'imp,islte', [0, 2], [0, 1]);
          rhs('<=', 'islte,lte', [0, 2], [0, 2]);
          rhs('<=', 'islte,lte', [0, 1], [0, 10]);
          rhs('<=', 'imp,islte', [0, 1], [0, 0, 9, 9]);
          rhs('<=', 'islte', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<=', 'imp,islte', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!&', 'islte,nall', [0, 1], [0, 1]);
          both('!&', 'islte,nall', [0, 2], [0, 1]);
          both('!&', 'islte,nall', [0, 2], [0, 2]);
          both('!&', 'islte,nall', [0, 1], [0, 10]);
          both('!&', 'islte,nall', [0, 1], [0, 0, 9, 9]);
          both('!&', 'islte,nall', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!&', 'islte,nall', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('!->', [0, 1], [0, 1]);
          lhs('!->', [0, 2], [0, 1]);
          lhs('!->', 'islte', [0, 2], [0, 2]);
          lhs('!->', 'islte', [0, 1], [0, 10]);
          lhs('!->', [0, 1], [0, 0, 9, 9]);
          lhs('!->', 'islte', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('!->', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('!->', 'xor', [0, 1], [0, 1]);
          rhs('!->', 'islte', [0, 2], [0, 1]);
          rhs('!->', 'islte', [0, 2], [0, 2]);
          rhs('!->', 'islte', [0, 1], [0, 10]);
          rhs('!->', 'islte', [0, 1], [0, 0, 9, 9]);
          rhs('!->', 'islte', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('!->', 'islte', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!|', 'xor', [0, 1], [0, 1]);
          both('!|', 'islte', [0, 2], [0, 1]);
          both('!|', 'islte', [0, 2], [0, 2]);
          both('!|', 'islte', [0, 1], [0, 10]);
          both('!|', 'islte', [0, 1], [0, 0, 9, 9]);
          both('!|', 'islte', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!|', 'islte', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('==', 'islte', [0, 1], [0, 1]);
          both('==', 'islte', [0, 2], [0, 1]);
          both('==', 'islte', [0, 2], [0, 2]);
          both('==', 'islte', [0, 1], [0, 10]);
          both('==', 'islte', [0, 1], [0, 0, 9, 9]);
          both('==', 'islte', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('==', 'islte', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!^', 'islte', [0, 1], [0, 1]);
          both('!^', 'islte', [0, 2], [0, 1]);
          both('!^', 'islte', [0, 2], [0, 2]);
          both('!^', 'islte', [0, 1], [0, 10]);
          both('!^', 'islte', [0, 1], [0, 0, 9, 9]);
          both('!^', 'islte', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!^', 'islte', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('^', 'islte,xor', [0, 1], [0, 1]);
          both('^', 'islte,xor', [0, 2], [0, 1]);
          both('^', 'islte,xor', [0, 2], [0, 2]);
          both('^', 'islte,xor', [0, 1], [0, 10]);
          both('^', 'islte,xor', [0, 1], [0, 0, 9, 9]);
          both('^', 'islte,xor', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('^', 'islte,xor', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
        });

        describe('binary with shared result', function() {

          let both = testTernaryBinarySharedResult.bind(undefined, '<=?', 'rhs', ''); // R = A @1 B, R @2 C  and  R = A @1 B, C @2 R and R = B @1 A, R @2 C  and  R = B @1 A, C @2 R
          let lhs = testTernaryBinarySharedResult.bind(undefined, '<=?', 'rhs', 'lhs'); // R = A @1 B, R @2 C and R = B @1 A, R @2 C
          let rhs = testTernaryBinarySharedResult.bind(undefined, '<=?', 'rhs', 'rhs'); // R = A @1 B, C @2 R and R = B @1 A, C @2 R

          both('&', 'imp', [0, 1], [0, 1]);
          both('&', 'imp', [0, 2], [0, 1]);
          both('&', 'lte', [0, 2], [0, 2]);
          both('&', 'lte', [0, 1], [0, 10]);
          both('&', 'imp', [0, 1], [0, 0, 9, 9]);
          both('&', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('&', 'imp', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!=', 'islte,xor', [0, 1], [0, 1]);
          both('!=', 'diff,islte', [0, 2], [0, 1]);
          both('!=', 'diff,islte', [0, 2], [0, 2]);
          both('!=', 'diff,islte', [0, 1], [0, 10]);
          both('!=', 'diff,islte', [0, 1], [0, 0, 9, 9]);
          both('!=', 'diff,islte', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!=', 'diff,islte', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('->', 'imp,islte', [0, 1], [0, 1]);
          lhs('->', 'imp,islte', [0, 2], [0, 1]);
          lhs('->', 'imp,islte', [0, 2], [0, 1]);
          lhs('->', 'imp,islte', [0, 1], [0, 10]);
          lhs('->', 'imp,islte', [0, 1], [0, 0, 9, 9]);
          lhs('->', 'imp,islte', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('->', 'imp,islte', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('->', 'imp,islte', [0, 1], [0, 1]);
          rhs('->', 'imp,islte', [0, 2], [0, 1]);
          rhs('->', 'imp,islte', [0, 2], [0, 2]);
          rhs('->', 'imp,islte', [0, 1], [0, 10]);
          rhs('->', 'imp,islte', [0, 1], [0, 0, 9, 9]);
          rhs('->', 'imp,islte', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('->', 'imp,islte', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<', [0, 1], [0, 1]);
          lhs('<', [0, 2], [0, 1]);
          lhs('<', 'islte,lt', [0, 2], [0, 2]);
          lhs('<', 'islte,lt', [0, 1], [0, 10]);
          lhs('<', [0, 1], [0, 0, 9, 9]);
          lhs('<', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<', 'imp', [0, 1], [0, 1]);
          rhs('<', 'imp', [0, 2], [0, 1]);
          rhs('<', 'lte', [0, 2], [0, 2]);
          rhs('<', 'lte', [0, 1], [0, 10]);
          rhs('<', 'imp', [0, 1], [0, 0, 9, 9]);
          rhs('<', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<', 'imp', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<=', 'imp,islte', [0, 1], [0, 1]);
          lhs('<=', 'imp,islte', [0, 2], [0, 1]);
          lhs('<=', 'islte,lte', [0, 2], [0, 2]);
          lhs('<=', 'islte,lte', [0, 1], [0, 10]);
          lhs('<=', 'imp,islte', [0, 1], [0, 0, 9, 9]);
          lhs('<=', 'imp,islte', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<=', 'imp,islte', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<=', 'imp,islte', [0, 1], [0, 1]);
          rhs('<=', 'islte,lte', [0, 2], [0, 1]);
          rhs('<=', 'islte,lte', [0, 2], [0, 2]);
          rhs('<=', 'imp,islte', [0, 1], [0, 10]);
          rhs('<=', [0, 1], [0, 0, 9, 9]);
          rhs('<=', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<=', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!&', 'islte,nall', [0, 1], [0, 1]);
          both('!&', 'islte,nall', [0, 2], [0, 1]);
          both('!&', 'islte,nall', [0, 2], [0, 2]);
          both('!&', 'islte,nall', [0, 1], [0, 10]);
          both('!&', 'islte,nall', [0, 1], [0, 0, 9, 9]);
          both('!&', 'islte,nall', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!&', 'islte,nall', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('!->', 'imp', [0, 1], [0, 1]);
          lhs('!->', 'imp', [0, 2], [0, 1]);
          lhs('!->', 'lte', [0, 2], [0, 2]);
          lhs('!->', 'lte', [0, 1], [0, 10]);
          lhs('!->', 'imp', [0, 1], [0, 0, 9, 9]);
          lhs('!->', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('!->', 'imp', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('!->', [0, 1], [0, 1]);
          rhs('!->', [0, 2], [0, 1]);
          rhs('!->', 'lt', [0, 2], [0, 2]);
          rhs('!->', 'lt', [0, 1], [0, 10]);
          rhs('!->', [0, 1], [0, 0, 9, 9]);
          rhs('!->', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('!->', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!|', [0, 1], [0, 1]);
          both('!|', [0, 2], [0, 1]);
          both('!|', 'lt', [0, 2], [0, 2]);
          both('!|', 'lt', [0, 1], [0, 10]);
          both('!|', [0, 1], [0, 0, 9, 9]);
          both('!|', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!|', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('==', 'islte', [0, 1], [0, 1]);
          both('==', 'islte', [0, 2], [0, 1]);
          both('==', 'islte', [0, 2], [0, 2]);
          both('==', 'islte', [0, 1], [0, 10]);
          both('==', [0, 1], [0, 0, 9, 9]);
          both('==', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('==', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!^', 'islte', [0, 1], [0, 1]);
          both('!^', 'islte', [0, 2], [0, 1]);
          both('!^', 'islte', [0, 2], [0, 2]);
          both('!^', 'islte', [0, 1], [0, 10]);
          both('!^', 'islte', [0, 1], [0, 0, 9, 9]);
          both('!^', 'islte', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!^', 'islte', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('^', 'islte,xor', [0, 1], [0, 1]);
          both('^', 'islte,xor', [0, 2], [0, 1]);
          both('^', 'islte,xor', [0, 2], [0, 2]);
          both('^', 'islte,xor', [0, 1], [0, 10]);
          both('^', 'islte,xor', [0, 1], [0, 0, 9, 9]);
          both('^', 'islte,xor', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('^', 'islte,xor', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
        });

        describe('ternary with shared args', function() {

          let both = testTernaryTernarySharedArgs.bind(undefined, '<=?', 'rhs', '');          // R = A @1 B, S = A @2 C and R = A @1 B, S = C @2 A and R = B @1 A, S = A @2 C and R = B @1 A, S = C @2 A
          let lhs = testTernaryTernarySharedArgs.bind(undefined, '<=?', 'rhs', 'lhs');    // R = A @1 B, S = A @2 C and R = B @1 A, S = A @2 C
          let rhs = testTernaryTernarySharedArgs.bind(undefined, '<=?', 'rhs', 'rhs');    // R = A @1 B, S = C @2 A and R = B @1 A, S = C @2 A

          // R = A & B, S = A &? C
          both('&?', 'isall,islte', [0, 1], [0, 1], [0, 1]);
          both('&?', 'isall,islte', [0, 2], [0, 1], [0, 2]);
          both('&?', 'isall,islte', [0, 2], [0, 2], [0, 2]);
          both('&?', 'isall,islte', [0, 1], [0, 2], [0, 2]);
          both('&?', 'isall,islte', [0, 1], [0, 1], [0, 10]);
          both('&?', 'isall,islte', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('&?', 'isall,islte', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('&?', 'isall,islte', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('==?', 'islte,issame', [0, 1], [0, 1], [0, 1]);
          both('==?', 'islte,issame', [0, 2], [0, 1], [0, 2]);
          both('==?', 'islte,issame', [0, 2], [0, 2], [0, 2]);
          both('==?', 'islte,issame', [0, 1], [0, 2], [0, 2]);
          both('==?', 'islte,issame', [0, 1], [0, 1], [0, 10]);
          both('==?', 'islte,issame', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('==?', 'islte,issame', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('==?', 'islte,issame', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!=?', 'isdiff,islte', [0, 1], [0, 1], [0, 1]);
          both('!=?', 'isdiff,islte', [0, 2], [0, 1], [0, 2]);
          both('!=?', 'isdiff,islte', [0, 2], [0, 2], [0, 2]);
          both('!=?', 'isdiff,islte', [0, 1], [0, 2], [0, 2]);
          both('!=?', 'isdiff,islte', [0, 1], [0, 1], [0, 10]);
          both('!=?', 'isdiff,islte', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('!=?', 'isdiff,islte', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!=?', 'isdiff,islte', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<?', 'islt,islte', [0, 1], [0, 1], [0, 1]);
          lhs('<?', 'islt,islte', [0, 2], [0, 1], [0, 2]);
          lhs('<?', 'islt,islte', [0, 2], [0, 2], [0, 2]);
          lhs('<?', 'islt,islte', [0, 1], [0, 2], [0, 2]);
          lhs('<?', 'islt,islte', [0, 1], [0, 1], [0, 10]);
          lhs('<?', 'islt,islte', [0, 1], [0, 1], [0, 0, 9, 9]);
          lhs('<?', 'islt,islte', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<?', 'islt,islte', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<?', 'islt,islte', [0, 1], [0, 1], [0, 1]);
          rhs('<?', 'islt,islte', [0, 2], [0, 1], [0, 2]);
          rhs('<?', 'islt,islte', [0, 2], [0, 2], [0, 2]);
          rhs('<?', 'islt,islte', [0, 1], [0, 2], [0, 2]);
          rhs('<?', 'islt,islte', [0, 1], [0, 1], [0, 10]);
          rhs('<?', 'islt,islte', [0, 1], [0, 1], [0, 0, 9, 9]);
          rhs('<?', 'islt,islte', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<?', 'islt,islte', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<=?', 'islte,islte', [0, 1], [0, 1], [0, 1]);
          lhs('<=?', 'islte,islte', [0, 2], [0, 1], [0, 2]);
          lhs('<=?', 'islte,islte', [0, 2], [0, 2], [0, 2]);
          lhs('<=?', 'islte,islte', [0, 1], [0, 2], [0, 2]);
          lhs('<=?', 'islte,islte', [0, 1], [0, 1], [0, 10]);
          lhs('<=?', 'islte,islte', [0, 1], [0, 1], [0, 0, 9, 9]);
          lhs('<=?', 'islte,islte', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<=?', 'islte,islte', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<=?', 'islte,islte', [0, 1], [0, 1], [0, 1]);
          rhs('<=?', 'islte,islte', [0, 2], [0, 1], [0, 2]);
          rhs('<=?', 'islte,islte', [0, 2], [0, 2], [0, 2]);
          rhs('<=?', 'islte,islte', [0, 1], [0, 2], [0, 2]);
          rhs('<=?', 'islte,islte', [0, 1], [0, 1], [0, 10]);
          rhs('<=?', 'islte,islte', [0, 1], [0, 1], [0, 0, 9, 9]);
          rhs('<=?', 'islte,islte', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<=?', 'islte,islte', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!&?', 'islte,isnall', [0, 1], [0, 1], [0, 1]);
          both('!&?', 'islte,isnall', [0, 2], [0, 1], [0, 2]);
          both('!&?', 'islte,isnall', [0, 2], [0, 2], [0, 2]);
          both('!&?', 'islte,isnall', [0, 1], [0, 2], [0, 2]);
          both('!&?', 'islte,isnall', [0, 1], [0, 1], [0, 10]);
          both('!&?', 'islte,isnall', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('!&?', 'islte,isnall', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!&?', 'islte,isnall', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('|?', 'islte,issome', [0, 1], [0, 1], [0, 1]);
          both('|?', 'islte,issome', [0, 2], [0, 1], [0, 2]);
          both('|?', 'islte,issome', [0, 2], [0, 2], [0, 2]);
          both('|?', 'islte,issome', [0, 1], [0, 2], [0, 2]);
          both('|?', 'islte,issome', [0, 1], [0, 1], [0, 10]);
          both('|?', 'islte,issome', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('|?', 'islte,issome', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('|?', 'islte,issome', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!|?', 'islte,isnone', [0, 1], [0, 1], [0, 1]);
          both('!|?', 'islte,isnone', [0, 2], [0, 1], [0, 2]);
          both('!|?', 'islte,isnone', [0, 2], [0, 2], [0, 2]);
          both('!|?', 'islte,isnone', [0, 1], [0, 2], [0, 2]);
          both('!|?', 'islte,isnone', [0, 1], [0, 1], [0, 10]);
          both('!|?', 'islte,isnone', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('!|?', 'islte,isnone', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!|?', 'islte,isnone', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('+', 'islte,issome', [0, 1], [0, 20], [0, 1]);
          both('+', 'islte,sum', [0, 2], [0, 1], [0, 2]);
          both('+', 'islte,sum', [0, 2], [0, 2], [0, 2]);
          both('+', 'islte,sum', [0, 1], [0, 2], [0, 2]);
          both('+', 'islte,issome', [0, 1], [0, 20], [0, 10]);
          both('+', 'islte,issome', [0, 1], [0, 20], [0, 0, 9, 9]);
          both('+', 'islte,issome', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('+', 'islte,issome', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('-', 'islte,minus', [0, 1], [0, 20], [0, 1]);
          lhs('-', 'islte,minus', [0, 2], [0, 1], [0, 2]);
          lhs('-', 'islte,minus', [0, 2], [0, 2], [0, 2]);
          lhs('-', 'islte,minus', [0, 1], [0, 2], [0, 2]);
          lhs('-', 'islte,minus', [0, 1], [0, 20], [0, 10]);
          lhs('-', 'islte,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
          lhs('-', 'islte', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('-', 'islte,minus', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('-', 'islte,minus', [0, 1], [0, 20], [0, 1]);
          rhs('-', 'islte,minus', [0, 2], [0, 1], [0, 2]);
          rhs('-', 'islte,minus', [0, 2], [0, 2], [0, 2]);
          rhs('-', 'islte,minus', [0, 1], [0, 2], [0, 2]);
          rhs('-', 'islte,minus', [0, 1], [0, 20], [0, 10]);
          rhs('-', 'islte,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
          rhs('-', 'islte,minus', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('-', 'islte', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('*', 'islte,product', [0, 1], [0, 100], [0, 1]);
          both('*', 'islte,product', [0, 2], [0, 1], [0, 2]);
          both('*', 'islte,product', [0, 2], [0, 2], [0, 2]);
          both('*', 'islte,product', [0, 1], [0, 2], [0, 2]);
          both('*', 'islte,product', [0, 1], [0, 100], [0, 10]);
          both('*', 'islte,product', [0, 1], [0, 100], [0, 0, 9, 9]);
          both('*', 'islte,product', [0, 1], [0, 100], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('*', 'islte,product', [0, 1], [0, 100], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('/', 'div,islte', [0, 1], [0, 20], [0, 1]);
          lhs('/', 'div,islte', [0, 2], [0, 1], [0, 2]);
          lhs('/', 'div,islte', [0, 2], [0, 2], [0, 2]);
          lhs('/', 'div,islte', [0, 1], [0, 2], [0, 2]);
          lhs('/', 'div,islte', [0, 1], [0, 20], [0, 10]);
          lhs('/', 'div,islte', [0, 1], [0, 20], [0, 0, 9, 9]);
          lhs('/', 'div,islte', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('/', 'div,islte', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('/', 'div,islte', [0, 1], [0, 20], [0, 1]);
          rhs('/', 'div,islte', [0, 2], [0, 1], [0, 2]);
          rhs('/', 'div,islte', [0, 2], [0, 2], [0, 2]);
          rhs('/', 'div,islte', [0, 1], [0, 2], [0, 2]);
          rhs('/', 'div,islte', [0, 1], [0, 20], [0, 10]);
          rhs('/', 'div,islte', [0, 1], [0, 20], [0, 0, 9, 9]);
          rhs('/', 'div,islte', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('/', 'div,islte', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
        });

        describe('ternary with shared R', function() {

          let both = testTernaryTernarySharedR.bind(undefined, '<=?', 'rhs', '');          // R = A @1 B, S = R @2 C and R = A @1 B, S = C @2 R and R = B @1 A, S = R @2 C and R = B @1 A, S = C @2 R
          let lhs = testTernaryTernarySharedR.bind(undefined, '<=?', 'rhs', 'lhs');    // R = A @1 B, S = R @2 C and R = B @1 A, S = R @2 C
          let rhs = testTernaryTernarySharedR.bind(undefined, '<=?', 'rhs', 'rhs');    // R = A @1 B, S = C @2 R and R = B @1 A, S = C @2 R

          // R = A & B, S = A &? C
          both('&?', 'isall,islte', [0, 1], [0, 1], [0, 1]);
          both('&?', 'isall,islte', [0, 2], [0, 1], [0, 2]);
          both('&?', 'isall,islte', [0, 2], [0, 2], [0, 2]);
          both('&?', 'isall,islte', [0, 1], [0, 2], [0, 2]);
          both('&?', 'isall,islte', [0, 1], [0, 1], [0, 10]);
          both('&?', 'isall,islte', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('&?', 'isall,islte', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('&?', 'isall,islte', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('==?', 'islte,issame', [0, 1], [0, 1], [0, 1]);
          both('==?', 'islte,issame', [0, 2], [0, 1], [0, 2]);
          both('==?', 'islte,issame', [0, 2], [0, 2], [0, 2]);
          both('==?', 'islte,issame', [0, 1], [0, 2], [0, 2]);
          both('==?', 'islte,issame', [0, 1], [0, 1], [0, 10]);
          both('==?', 'islte,issame', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('==?', 'islte,issame', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('==?', 'islte,issame', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!=?', 'isdiff,islte', [0, 1], [0, 1], [0, 1]);
          both('!=?', 'isdiff,islte', [0, 2], [0, 1], [0, 2]);
          both('!=?', 'isdiff,islte', [0, 2], [0, 2], [0, 2]);
          both('!=?', 'isdiff,islte', [0, 1], [0, 2], [0, 2]);
          both('!=?', 'isdiff,islte', [0, 1], [0, 1], [0, 10]);
          both('!=?', 'isdiff,islte', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('!=?', 'isdiff,islte', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!=?', 'isdiff,islte', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<?', 'islt,islte', [0, 1], [0, 1], [0, 1]);
          lhs('<?', 'islt,islte', [0, 2], [0, 1], [0, 2]);
          lhs('<?', 'islt,islte', [0, 2], [0, 2], [0, 2]);
          lhs('<?', 'islt,islte', [0, 1], [0, 2], [0, 2]);
          lhs('<?', 'islt,islte', [0, 1], [0, 1], [0, 10]);
          lhs('<?', 'islt,islte', [0, 1], [0, 1], [0, 0, 9, 9]);
          lhs('<?', 'islt,islte', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<?', 'islt,islte', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<?', 'islt,islte', [0, 1], [0, 1], [0, 1]);
          rhs('<?', 'islt,islte', [0, 2], [0, 1], [0, 2]);
          rhs('<?', 'islt,islte', [0, 2], [0, 2], [0, 2]);
          rhs('<?', 'islt,islte', [0, 1], [0, 2], [0, 2]);
          rhs('<?', 'islt,islte', [0, 1], [0, 1], [0, 10]);
          rhs('<?', 'islt,islte', [0, 1], [0, 1], [0, 0, 9, 9]);
          rhs('<?', 'islt,islte', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<?', 'islt,islte', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<=?', 'islte,islte', [0, 1], [0, 1], [0, 1]);
          lhs('<=?', 'islte,islte', [0, 2], [0, 1], [0, 2]);
          lhs('<=?', 'islte,islte', [0, 2], [0, 2], [0, 2]);
          lhs('<=?', 'islte,islte', [0, 1], [0, 2], [0, 2]);
          lhs('<=?', 'islte,islte', [0, 1], [0, 1], [0, 10]);
          lhs('<=?', 'islte,islte', [0, 1], [0, 1], [0, 0, 9, 9]);
          lhs('<=?', 'islte,islte', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<=?', 'islte,islte', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<=?', 'islte,islte', [0, 1], [0, 1], [0, 1]);
          rhs('<=?', 'islte,islte', [0, 2], [0, 1], [0, 2]);
          rhs('<=?', 'islte,islte', [0, 2], [0, 2], [0, 2]);
          rhs('<=?', 'islte,islte', [0, 1], [0, 2], [0, 2]);
          rhs('<=?', 'islte,islte', [0, 1], [0, 1], [0, 10]);
          rhs('<=?', 'islte,islte', [0, 1], [0, 1], [0, 0, 9, 9]);
          rhs('<=?', 'islte,islte', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<=?', 'islte,islte', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!&?', 'islte,isnall', [0, 1], [0, 1], [0, 1]);
          both('!&?', 'islte,isnall', [0, 2], [0, 1], [0, 2]);
          both('!&?', 'islte,isnall', [0, 2], [0, 2], [0, 2]);
          both('!&?', 'islte,isnall', [0, 1], [0, 2], [0, 2]);
          both('!&?', 'islte,isnall', [0, 1], [0, 1], [0, 10]);
          both('!&?', 'islte,isnall', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('!&?', 'islte,isnall', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!&?', 'islte,isnall', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('|?', 'islte,issome', [0, 1], [0, 1], [0, 1]);
          both('|?', 'islte,issome', [0, 2], [0, 1], [0, 2]);
          both('|?', 'islte,issome', [0, 2], [0, 2], [0, 2]);
          both('|?', 'islte,issome', [0, 1], [0, 2], [0, 2]);
          both('|?', 'islte,issome', [0, 1], [0, 1], [0, 10]);
          both('|?', 'islte,issome', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('|?', 'islte,issome', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('|?', 'islte,issome', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!|?', 'islte,isnone', [0, 1], [0, 1], [0, 1]);
          both('!|?', 'islte,isnone', [0, 2], [0, 1], [0, 2]);
          both('!|?', 'islte,isnone', [0, 2], [0, 2], [0, 2]);
          both('!|?', 'islte,isnone', [0, 1], [0, 2], [0, 2]);
          both('!|?', 'islte,isnone', [0, 1], [0, 1], [0, 10]);
          both('!|?', 'islte,isnone', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('!|?', 'islte,isnone', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!|?', 'islte,isnone', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('+', 'islte,sum', [0, 1], [0, 20], [0, 1]);
          both('+', 'islte,issome', [0, 2], [0, 1], [0, 2]);
          both('+', 'islte,sum', [0, 2], [0, 2], [0, 2]);
          both('+', 'islte,sum', [0, 1], [0, 2], [0, 2]);
          both('+', 'islte,sum', [0, 1], [0, 20], [0, 10]);
          both('+', 'islte,sum', [0, 1], [0, 20], [0, 0, 9, 9]);
          both('+', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('+', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('-', 'islte,minus', [0, 1], [0, 20], [0, 1]);
          lhs('-', 'islte,minus', [0, 2], [0, 1], [0, 2]);
          lhs('-', 'islte,minus', [0, 2], [0, 2], [0, 2]);
          lhs('-', 'islte,minus', [0, 1], [0, 2], [0, 2]);
          lhs('-', 'islte,minus', [0, 1], [0, 20], [0, 10]);
          lhs('-', 'islte,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
          lhs('-', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('-', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('-', 'islte,minus', [0, 1], [0, 20], [0, 1]);
          rhs('-', 'islte,minus', [0, 2], [0, 1], [0, 2]);
          rhs('-', 'islte,minus', [0, 2], [0, 2], [0, 2]);
          rhs('-', 'islte,minus', [0, 1], [0, 2], [0, 2]);
          rhs('-', 'islte,minus', [0, 1], [0, 20], [0, 10]);
          rhs('-', 'islte,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
          rhs('-', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('-', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('*', 'islte,product', [0, 1], [0, 100], [0, 1]);
          both('*', 'islte,product', [0, 2], [0, 1], [0, 2]);
          both('*', 'islte,product', [0, 2], [0, 2], [0, 2]);
          both('*', 'islte,product', [0, 1], [0, 2], [0, 2]);
          both('*', 'islte,product', [0, 1], [0, 100], [0, 10]);
          both('*', 'islte,product', [0, 1], [0, 100], [0, 0, 9, 9]);
          both('*', 'islte,nall', [0, 1], [0, 100], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('*', 'islte,nall', [0, 1], [0, 100], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('/', 'div,islte', [0, 1], [0, 20], [0, 1]);
          lhs('/', 'div,islte', [0, 2], [0, 1], [0, 2]);
          lhs('/', 'div,islte', [0, 2], [0, 2], [0, 2]);
          lhs('/', 'div,islte', [0, 1], [0, 2], [0, 2]);
          lhs('/', 'div,islte', [0, 1], [0, 20], [0, 10]);
          lhs('/', 'div,islte', [0, 1], [0, 20], [0, 0, 9, 9]);
          lhs('/', 'div,islte', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('/', 'div,islte', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('/', 'div,islte', [0, 1], [0, 20], [0, 1]);
          rhs('/', 'div,islte', [0, 2], [0, 1], [0, 2]);
          rhs('/', 'div,islte', [0, 2], [0, 2], [0, 2]);
          rhs('/', 'div,islte', [0, 1], [0, 2], [0, 2]);
          rhs('/', 'div,islte', [0, 1], [0, 20], [0, 10]);
          rhs('/', 'div,islte', [0, 1], [0, 20], [0, 0, 9, 9]);
          rhs('/', 'div,islte', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('/', 'div,islte', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
        });

        describe('ternary with shared S', function() {

          let both = testTernaryTernarySharedS.bind(undefined, '<=?', 'rhs', '');          // R = S @1 B, S = A @2 C and R = S @1 B, S = C @2 A and R = B @1 S, S = A @2 C and R = B @1 S, S = C @2 A
          let lhs = testTernaryTernarySharedS.bind(undefined, '<=?', 'rhs', 'lhs');    // R = S @1 B, S = A @2 C and R = B @1 S, S = A @2 C
          let rhs = testTernaryTernarySharedS.bind(undefined, '<=?', 'rhs', 'rhs');    // R = S @1 B, S = C @2 A and R = B @1 S, S = C @2 A

          // R = A & B, S = A &? C
          both('&?', 'isall,islte', [0, 1], [0, 1], [0, 1]);
          both('&?', 'isall,islte', [0, 2], [0, 1], [0, 2]);
          both('&?', 'isall,islte', [0, 2], [0, 2], [0, 2]);
          both('&?', 'isall,islte', [0, 1], [0, 2], [0, 2]);
          both('&?', 'isall,islte', [0, 1], [0, 1], [0, 10]);
          both('&?', 'isall,islte', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('&?', 'isall,islte', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('&?', 'isall,islte', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('==?', 'islte,issame', [0, 1], [0, 1], [0, 1]);
          both('==?', 'islte,issame', [0, 2], [0, 1], [0, 2]);
          both('==?', 'islte,issame', [0, 2], [0, 2], [0, 2]);
          both('==?', 'islte,issame', [0, 1], [0, 2], [0, 2]);
          both('==?', 'islte,issame', [0, 1], [0, 1], [0, 10]);
          both('==?', 'islte,issame', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('==?', 'islte,issame', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('==?', 'islte,issame', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!=?', 'isdiff,islte', [0, 1], [0, 1], [0, 1]);
          both('!=?', 'isdiff,islte', [0, 2], [0, 1], [0, 2]);
          both('!=?', 'isdiff,islte', [0, 2], [0, 2], [0, 2]);
          both('!=?', 'isdiff,islte', [0, 1], [0, 2], [0, 2]);
          both('!=?', 'isdiff,islte', [0, 1], [0, 1], [0, 10]);
          both('!=?', 'isdiff,islte', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('!=?', 'isdiff,islte', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!=?', 'isdiff,islte', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<?', 'islt,islte', [0, 1], [0, 1], [0, 1]);
          lhs('<?', 'islt,islte', [0, 2], [0, 1], [0, 2]);
          lhs('<?', 'islt,islte', [0, 2], [0, 2], [0, 2]);
          lhs('<?', 'islt,islte', [0, 1], [0, 2], [0, 2]);
          lhs('<?', 'islt,islte', [0, 1], [0, 1], [0, 10]);
          lhs('<?', 'islt,islte', [0, 1], [0, 1], [0, 0, 9, 9]);
          lhs('<?', 'islt,islte', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<?', 'islt,islte', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<?', 'islt,islte', [0, 1], [0, 1], [0, 1]);
          rhs('<?', 'islt,islte', [0, 2], [0, 1], [0, 2]);
          rhs('<?', 'islt,islte', [0, 2], [0, 2], [0, 2]);
          rhs('<?', 'islt,islte', [0, 1], [0, 2], [0, 2]);
          rhs('<?', 'islt,islte', [0, 1], [0, 1], [0, 10]);
          rhs('<?', 'islt,islte', [0, 1], [0, 1], [0, 0, 9, 9]);
          rhs('<?', 'islt,islte', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<?', 'islt,islte', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<=?', 'islte,islte', [0, 1], [0, 1], [0, 1]);
          lhs('<=?', 'islte,islte', [0, 2], [0, 1], [0, 2]);
          lhs('<=?', 'islte,islte', [0, 2], [0, 2], [0, 2]);
          lhs('<=?', 'islte,islte', [0, 1], [0, 2], [0, 2]);
          lhs('<=?', 'islte,islte', [0, 1], [0, 1], [0, 10]);
          lhs('<=?', 'islte,islte', [0, 1], [0, 1], [0, 0, 9, 9]);
          lhs('<=?', 'islte,islte', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<=?', 'islte,islte', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<=?', 'islte,islte', [0, 1], [0, 1], [0, 1]);
          rhs('<=?', 'islte,islte', [0, 2], [0, 1], [0, 2]);
          rhs('<=?', 'islte,islte', [0, 2], [0, 2], [0, 2]);
          rhs('<=?', 'islte,islte', [0, 1], [0, 2], [0, 2]);
          rhs('<=?', 'islte,islte', [0, 1], [0, 1], [0, 10]);
          rhs('<=?', 'islte,islte', [0, 1], [0, 1], [0, 0, 9, 9]);
          rhs('<=?', 'islte,islte', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<=?', 'islte,islte', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!&?', 'islte,isnall', [0, 1], [0, 1], [0, 1]);
          both('!&?', 'islte,isnall', [0, 2], [0, 1], [0, 2]);
          both('!&?', 'islte,isnall', [0, 2], [0, 2], [0, 2]);
          both('!&?', 'islte,isnall', [0, 1], [0, 2], [0, 2]);
          both('!&?', 'islte,isnall', [0, 1], [0, 1], [0, 10]);
          both('!&?', 'islte,isnall', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('!&?', 'islte,isnall', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!&?', 'islte,isnall', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('|?', 'islte,issome', [0, 1], [0, 1], [0, 1]);
          both('|?', 'islte,issome', [0, 2], [0, 1], [0, 2]);
          both('|?', 'islte,issome', [0, 2], [0, 2], [0, 2]);
          both('|?', 'islte,issome', [0, 1], [0, 2], [0, 2]);
          both('|?', 'islte,issome', [0, 1], [0, 1], [0, 10]);
          both('|?', 'islte,issome', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('|?', 'islte,issome', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('|?', 'islte,issome', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!|?', 'islte,isnone', [0, 1], [0, 1], [0, 1]);
          both('!|?', 'islte,isnone', [0, 2], [0, 1], [0, 2]);
          both('!|?', 'islte,isnone', [0, 2], [0, 2], [0, 2]);
          both('!|?', 'islte,isnone', [0, 1], [0, 2], [0, 2]);
          both('!|?', 'islte,isnone', [0, 1], [0, 1], [0, 10]);
          both('!|?', 'islte,isnone', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('!|?', 'islte,isnone', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!|?', 'islte,isnone', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('+', 'islte,sum', [0, 1], [0, 20], [0, 1]);
          both('+', 'islte,sum', [0, 2], [0, 1], [0, 2]);
          both('+', 'islte,sum', [0, 2], [0, 2], [0, 2]);
          both('+', 'islte,sum', [0, 1], [0, 2], [0, 2]);
          both('+', 'islte,sum', [0, 1], [0, 20], [0, 10]);
          both('+', 'islte,sum', [0, 1], [0, 20], [0, 0, 9, 9]);
          both('+', 'islte,sum', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('+', 'islte,sum', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('-', 'islte,minus', [0, 1], [0, 20], [0, 1]);
          lhs('-', 'islte,minus', [0, 2], [0, 1], [0, 2]);
          lhs('-', 'islte,minus', [0, 2], [0, 2], [0, 2]);
          lhs('-', 'islte,minus', [0, 1], [0, 2], [0, 2]);
          lhs('-', 'islte,minus', [0, 1], [0, 20], [0, 10]);
          lhs('-', 'islte,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
          lhs('-', 'islte', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('-', 'islte,minus', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('-', 'islte,minus', [0, 1], [0, 20], [0, 1]);
          rhs('-', 'islte,minus', [0, 2], [0, 1], [0, 2]);
          rhs('-', 'islte,minus', [0, 2], [0, 2], [0, 2]);
          rhs('-', 'islte,minus', [0, 1], [0, 2], [0, 2]);
          rhs('-', 'islte,minus', [0, 1], [0, 20], [0, 10]);
          rhs('-', 'islte,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
          rhs('-', 'islte,minus', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('-', 'islte', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('*', 'islte,product', [0, 1], [0, 100], [0, 1]);
          both('*', 'islte,product', [0, 2], [0, 1], [0, 2]);
          both('*', 'islte,product', [0, 2], [0, 2], [0, 2]);
          both('*', 'islte,product', [0, 1], [0, 2], [0, 2]);
          both('*', 'islte,product', [0, 1], [0, 100], [0, 10]);
          both('*', 'islte,product', [0, 1], [0, 100], [0, 0, 9, 9]);
          both('*', 'islte,product', [0, 1], [0, 100], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('*', 'islte,product', [0, 1], [0, 100], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('/', 'div,islte', [0, 1], [0, 20], [0, 1]);
          lhs('/', 'div,islte', [0, 2], [0, 1], [0, 2]);
          lhs('/', 'div,islte', [0, 2], [0, 2], [0, 2]);
          lhs('/', 'div,islte', [0, 1], [0, 2], [0, 2]);
          lhs('/', 'div,islte', [0, 1], [0, 20], [0, 10]);
          lhs('/', 'div,islte', [0, 1], [0, 20], [0, 0, 9, 9]);
          lhs('/', 'div,islte', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('/', 'div,islte', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('/', 'div,islte', [0, 1], [0, 20], [0, 1]);
          rhs('/', 'div,islte', [0, 2], [0, 1], [0, 2]);
          rhs('/', 'div,islte', [0, 2], [0, 2], [0, 2]);
          rhs('/', 'div,islte', [0, 1], [0, 2], [0, 2]);
          rhs('/', 'div,islte', [0, 1], [0, 20], [0, 10]);
          rhs('/', 'div,islte', [0, 1], [0, 20], [0, 0, 9, 9]);
          rhs('/', 'div,islte', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('/', 'div,islte', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
        });

        describe('ternary with shared results', function() {

          let both = testTernaryTernarySharedResults.bind(undefined, '<=?', 'rhs', '');          // R = S @1 B, S = R @2 C and R = S @1 B, S = C @2 R and R = S @1 B, S = R @2 C and R = S @1 B, S = C @2 R
          let lhs = testTernaryTernarySharedResults.bind(undefined, '<=?', 'rhs', 'lhs');    // R = S @1 B, S = R @2 C and R = B @1 S, S = R @2 C
          let rhs = testTernaryTernarySharedResults.bind(undefined, '<=?', 'rhs', 'rhs');    // R = S @1 B, S = C @2 R and R = B @1 S, S = C @2 R

          // R = A & B, S = A &? C
          both('&?', 'isall,islte', [0, 1], [0, 1], [0, 1]);
          both('&?', 'isall,islte', [0, 2], [0, 1], [0, 2]);
          both('&?', 'isall,islte', [0, 2], [0, 2], [0, 2]);
          both('&?', 'isall,islte', [0, 1], [0, 2], [0, 2]);
          both('&?', 'isall,islte', [0, 1], [0, 1], [0, 10]);
          both('&?', 'isall,islte', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('&?', 'isall,islte', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('&?', 'isall,islte', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('==?', 'islte,issame', [0, 1], [0, 1], [0, 1]);
          both('==?', 'islte,issame', [0, 2], [0, 1], [0, 2]);
          both('==?', 'islte,issame', [0, 2], [0, 2], [0, 2]);
          both('==?', 'islte,issame', [0, 1], [0, 2], [0, 2]);
          both('==?', 'islte,issame', [0, 1], [0, 1], [0, 10]);
          both('==?', 'islte,issame', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('==?', 'islte,issame', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('==?', 'islte,issame', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!=?', 'isdiff,islte', [0, 1], [0, 1], [0, 1]);
          both('!=?', 'isdiff,islte', [0, 2], [0, 1], [0, 2]);
          both('!=?', 'isdiff,islte', [0, 2], [0, 2], [0, 2]);
          both('!=?', 'isdiff,islte', [0, 1], [0, 2], [0, 2]);
          both('!=?', 'isdiff,islte', [0, 1], [0, 1], [0, 10]);
          both('!=?', 'isdiff,islte', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('!=?', 'isdiff,islte', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!=?', 'isdiff,islte', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<?', 'islt,islte', [0, 1], [0, 1], [0, 1]);
          lhs('<?', 'islt,islte', [0, 2], [0, 1], [0, 2]);
          lhs('<?', 'islt,islte', [0, 2], [0, 2], [0, 2]);
          lhs('<?', 'islt,islte', [0, 1], [0, 2], [0, 2]);
          lhs('<?', 'islt,islte', [0, 1], [0, 1], [0, 10]);
          lhs('<?', 'islt,islte', [0, 1], [0, 1], [0, 0, 9, 9]);
          lhs('<?', 'islt,islte', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<?', 'islt,islte', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<?', 'islt,islte', [0, 1], [0, 1], [0, 1]);
          rhs('<?', 'islt,islte', [0, 2], [0, 1], [0, 2]);
          rhs('<?', 'islt,islte', [0, 2], [0, 2], [0, 2]);
          rhs('<?', 'islt,islte', [0, 1], [0, 2], [0, 2]);
          rhs('<?', 'islt,islte', [0, 1], [0, 1], [0, 10]);
          rhs('<?', 'islt,islte', [0, 1], [0, 1], [0, 0, 9, 9]);
          rhs('<?', 'islt,islte', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<?', 'islt,islte', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<=?', 'islte,islte', [0, 1], [0, 1], [0, 1]);
          lhs('<=?', 'islte,islte', [0, 2], [0, 1], [0, 2]);
          lhs('<=?', 'islte,islte', [0, 2], [0, 2], [0, 2]);
          lhs('<=?', 'islte,islte', [0, 1], [0, 2], [0, 2]);
          lhs('<=?', 'islte,islte', [0, 1], [0, 1], [0, 10]);
          lhs('<=?', 'islte,islte', [0, 1], [0, 1], [0, 0, 9, 9]);
          lhs('<=?', 'islte,islte', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<=?', 'islte,islte', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<=?', 'islte,islte', [0, 1], [0, 1], [0, 1]);
          rhs('<=?', 'islte,islte', [0, 2], [0, 1], [0, 2]);
          rhs('<=?', 'islte,islte', [0, 2], [0, 2], [0, 2]);
          rhs('<=?', 'islte,islte', [0, 1], [0, 2], [0, 2]);
          rhs('<=?', 'islte,islte', [0, 1], [0, 1], [0, 10]);
          rhs('<=?', 'islte,islte', [0, 1], [0, 1], [0, 0, 9, 9]);
          rhs('<=?', 'islte,islte', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<=?', 'islte,islte', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!&?', 'islte,isnall', [0, 1], [0, 1], [0, 1]);
          both('!&?', 'islte,isnall', [0, 2], [0, 1], [0, 2]);
          both('!&?', 'islte,isnall', [0, 2], [0, 2], [0, 2]);
          both('!&?', 'islte,isnall', [0, 1], [0, 2], [0, 2]);
          both('!&?', 'islte,isnall', [0, 1], [0, 1], [0, 10]);
          both('!&?', 'islte,isnall', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('!&?', 'islte,isnall', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!&?', 'islte,isnall', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('|?', 'islte,issome', [0, 1], [0, 1], [0, 1]);
          both('|?', 'islte,issome', [0, 2], [0, 1], [0, 2]);
          both('|?', 'islte,issome', [0, 2], [0, 2], [0, 2]);
          both('|?', 'islte,issome', [0, 1], [0, 2], [0, 2]);
          both('|?', 'islte,issome', [0, 1], [0, 1], [0, 10]);
          both('|?', 'islte,issome', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('|?', 'islte,issome', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('|?', 'islte,issome', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!|?', 'islte,isnone', [0, 1], [0, 1], [0, 1]);
          both('!|?', 'islte,isnone', [0, 2], [0, 1], [0, 2]);
          both('!|?', 'islte,isnone', [0, 2], [0, 2], [0, 2]);
          both('!|?', 'islte,isnone', [0, 1], [0, 2], [0, 2]);
          both('!|?', 'islte,isnone', [0, 1], [0, 1], [0, 10]);
          both('!|?', 'islte,isnone', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('!|?', 'islte,isnone', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!|?', 'islte,isnone', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('+', 'islte,sum', [0, 1], [0, 20], [0, 1]);
          both('+', 'islte,issome', [0, 2], [0, 1], [0, 2]);
          both('+', 'islte,sum', [0, 2], [0, 2], [0, 2]);
          both('+', 'islte,sum', [0, 1], [0, 2], [0, 2]);
          both('+', 'islte,sum', [0, 1], [0, 20], [0, 10]);
          both('+', 'islte,sum', [0, 1], [0, 20], [0, 0, 9, 9]);
          both('+', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('+', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('-', 'islte,minus', [0, 1], [0, 20], [0, 1]);
          lhs('-', 'islte,minus', [0, 2], [0, 1], [0, 2]);
          lhs('-', 'islte,minus', [0, 2], [0, 2], [0, 2]);
          lhs('-', 'islte,minus', [0, 1], [0, 2], [0, 2]);
          lhs('-', 'islte,minus', [0, 1], [0, 20], [0, 10]);
          lhs('-', 'islte,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
          lhs('-', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('-', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('-', 'islte,minus', [0, 1], [0, 20], [0, 1]);
          rhs('-', 'islte,minus', [0, 2], [0, 1], [0, 2]);
          rhs('-', 'islte,minus', [0, 2], [0, 2], [0, 2]);
          rhs('-', 'islte,minus', [0, 1], [0, 2], [0, 2]);
          rhs('-', 'islte,minus', [0, 1], [0, 20], [0, 10]);
          rhs('-', 'islte,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
          rhs('-', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('-', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('*', 'islte,product', [0, 1], [0, 100], [0, 1]);
          both('*', 'islte,product', [0, 2], [0, 1], [0, 2]);
          both('*', 'islte,product', [0, 2], [0, 2], [0, 2]);
          both('*', 'islte,product', [0, 1], [0, 2], [0, 2]);
          both('*', 'islte,product', [0, 1], [0, 100], [0, 10]);
          both('*', 'islte,product', [0, 1], [0, 100], [0, 0, 9, 9]);
          both('*', 'nall', [0, 1], [0, 100], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('*', 'nall', [0, 1], [0, 100], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('/', 'div,islte', [0, 1], [0, 20], [0, 1]);
          lhs('/', 'div,islte', [0, 2], [0, 1], [0, 2]);
          lhs('/', 'div,islte', [0, 2], [0, 2], [0, 2]);
          lhs('/', 'div,islte', [0, 1], [0, 2], [0, 2]);
          lhs('/', 'div,islte', [0, 1], [0, 20], [0, 10]);
          lhs('/', 'div,islte', [0, 1], [0, 20], [0, 0, 9, 9]);
          lhs('/', 'div', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('/', 'div', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('/', 'div,islte', [0, 1], [0, 20], [0, 1]);
          rhs('/', 'div,islte', [0, 2], [0, 1], [0, 2]);
          rhs('/', 'div,islte', [0, 2], [0, 2], [0, 2]);
          rhs('/', 'div,islte', [0, 1], [0, 2], [0, 2]);
          rhs('/', 'div,islte', [0, 1], [0, 20], [0, 10]);
          rhs('/', 'div,islte', [0, 1], [0, 20], [0, 0, 9, 9]);
          rhs('/', 'div,islte', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('/', 'div', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
        });
      });
    });

    describe('ISNALL', function() {

      describe('binary with shared arg', function() {

        let both = testTernaryBinarySharedArgs.bind(undefined, '!&?', '', ''); // R = A @1 B, A @2 C  and  R = A @1 B, C @2 A
        let lhs = testTernaryBinarySharedArgs.bind(undefined, '!&?', '', 'lhs'); // R = A @1 B, A @2 C
        let rhs = testTernaryBinarySharedArgs.bind(undefined, '!&?', '', 'rhs'); // R = A @1 B, C @2 A

        both('&', 'isnall', [0, 1], [0, 1]);
        both('&', 'isnall', [0, 2], [0, 1]);
        both('&', 'isnall', [0, 2], [0, 2]);
        both('&', 'isnall', [0, 1], [0, 10]);
        both('&', 'isnall', [0, 1], [0, 0, 9, 9]);
        both('&', 'isnall', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('&', 'isnall', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!=', 'isnall,xor', [0, 1], [0, 1]);
        both('!=', 'isnall,xor', [0, 2], [0, 1]);
        both('!=', 'diff,isnall', [0, 2], [0, 2]);
        both('!=', 'diff,isnall', [0, 1], [0, 10]);
        both('!=', 'isnall,xor', [0, 1], [0, 0, 9, 9]);
        both('!=', 'diff,isnall', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!=', 'diff,isnall', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('->', 'imp,isnall', [0, 1], [0, 1]);
        lhs('->', 'imp,isnall', [0, 2], [0, 1]);
        lhs('->', 'imp,isnall', [0, 2], [0, 1]);
        lhs('->', 'imp,isnall', [0, 1], [0, 10]);
        lhs('->', 'imp,isnall', [0, 1], [0, 0, 9, 9]);
        lhs('->', 'imp,isnall', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('->', 'imp,isnall', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('->', 'imp,isnall', [0, 1], [0, 1]);
        rhs('->', 'imp,isnall', [0, 2], [0, 1]);
        rhs('->', 'imp,isnall', [0, 2], [0, 2]);
        rhs('->', 'imp,isnall', [0, 1], [0, 10]);
        rhs('->', 'imp,isnall', [0, 1], [0, 0, 9, 9]);
        rhs('->', 'imp,isnall', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('->', 'imp,isnall', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<', [0, 1], [0, 1]);
        lhs('<', [0, 2], [0, 1]);
        lhs('<', 'isnall,lt', [0, 2], [0, 2]);
        lhs('<', 'isnall,lt', [0, 1], [0, 10]);
        lhs('<', [0, 1], [0, 0, 9, 9]);
        lhs('<', 'isnall', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<', 'isnall', [0, 1], [0, 1]);
        rhs('<', 'isnall', [0, 2], [0, 1]);
        rhs('<', 'isnall,lt', [0, 2], [0, 2]);
        rhs('<', 'isnall,lt', [0, 1], [0, 10]);
        rhs('<', 'isnall', [0, 1], [0, 0, 9, 9]);
        rhs('<', 'isnall', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<', 'isnall', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<=', 'imp,isnall', [0, 1], [0, 1]);
        lhs('<=', 'imp,isnall', [0, 2], [0, 1]);
        lhs('<=', 'isnall,lte', [0, 2], [0, 2]);
        lhs('<=', 'isnall,lte', [0, 1], [0, 10]);
        lhs('<=', 'imp,isnall', [0, 1], [0, 0, 9, 9]);
        lhs('<=', 'imp,isnall', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<=', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<=', 'imp,isnall', [0, 1], [0, 1]);
        rhs('<=', 'imp,isnall', [0, 2], [0, 1]);
        rhs('<=', 'isnall,lte', [0, 2], [0, 2]);
        rhs('<=', 'isnall,lte', [0, 1], [0, 10]);
        rhs('<=', 'imp,isnall', [0, 1], [0, 0, 9, 9]);
        rhs('<=', 'isnall', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<=', 'imp,isnall', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!&', 'isnall,nall', [0, 1], [0, 1]);
        both('!&', 'isnall,nall', [0, 2], [0, 1]);
        both('!&', 'isnall,nall', [0, 2], [0, 2]);
        both('!&', 'isnall,nall', [0, 1], [0, 10]);
        both('!&', 'isnall,nall', [0, 1], [0, 0, 9, 9]);
        both('!&', 'isnall,nall', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!&', 'isnall,nall', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('!->', 'isnall', [0, 1], [0, 1]);
        lhs('!->', 'isnall', [0, 2], [0, 1]);
        lhs('!->', 'isnall', [0, 2], [0, 2]);
        lhs('!->', 'isnall', [0, 1], [0, 10]);
        lhs('!->', 'isnall', [0, 1], [0, 0, 9, 9]);
        lhs('!->', 'isnall', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('!->', 'isnall', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('!->', [0, 1], [0, 1]);
        rhs('!->', [0, 2], [0, 1]);
        rhs('!->', [0, 2], [0, 2]);
        rhs('!->', [0, 1], [0, 10]);
        rhs('!->', [0, 1], [0, 0, 9, 9]);
        rhs('!->', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('!->', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!|', [0, 1], [0, 1]);
        both('!|', [0, 2], [0, 1]);
        both('!|', [0, 2], [0, 2]);
        both('!|', [0, 1], [0, 10]);
        both('!|', [0, 1], [0, 0, 9, 9]);
        both('!|', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!|', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('==', 'isnall', [0, 1], [0, 1]);
        both('==', 'isnall', [0, 2], [0, 1]);
        both('==', 'isnall', [0, 2], [0, 2]);
        both('==', 'isnall', [0, 1], [0, 10]);
        both('==', 'isnall', [0, 1], [0, 0, 9, 9]);
        both('==', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('==', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!^', 'isnall', [0, 1], [0, 1]);
        both('!^', 'isnall', [0, 2], [0, 1]);
        both('!^', 'isnall', [0, 2], [0, 2]);
        both('!^', 'isnall', [0, 1], [0, 10]);
        both('!^', 'isnall', [0, 1], [0, 0, 9, 9]);
        both('!^', 'isnall', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!^', 'isnall', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('^', 'isnall,xor', [0, 1], [0, 1]);
        both('^', 'isnall,xor', [0, 2], [0, 1]);
        both('^', 'isnall,xor', [0, 2], [0, 2]);
        both('^', 'isnall,xor', [0, 1], [0, 10]);
        both('^', 'isnall,xor', [0, 1], [0, 0, 9, 9]);
        both('^', 'isnall,xor', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('^', 'isnall,xor', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
      });

      describe('binary with shared result', function() {

        let both = testTernaryBinarySharedArgs.bind(undefined, '!&?', '', ''); // R = A @1 B, A @2 C  and  R = A @1 B, C @2 A
        let lhs = testTernaryBinarySharedArgs.bind(undefined, '!&?', '', 'lhs'); // R = A @1 B, A @2 C
        let rhs = testTernaryBinarySharedArgs.bind(undefined, '!&?', '', 'rhs'); // R = A @1 B, C @2 A

        both('&', 'isnall', [0, 1], [0, 1]);
        both('&', 'isnall', [0, 2], [0, 1]);
        both('&', 'isnall', [0, 2], [0, 2]);
        both('&', 'isnall', [0, 1], [0, 10]);
        both('&', 'isnall', [0, 1], [0, 0, 9, 9]);
        both('&', 'isnall', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('&', 'isnall', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!=', 'isnall,xor', [0, 1], [0, 1]);
        both('!=', 'isnall,xor', [0, 2], [0, 1]);
        both('!=', 'diff,isnall', [0, 2], [0, 2]);
        both('!=', 'diff,isnall', [0, 1], [0, 10]);
        both('!=', 'isnall,xor', [0, 1], [0, 0, 9, 9]);
        both('!=', 'diff,isnall', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!=', 'diff,isnall', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('->', 'imp,isnall', [0, 1], [0, 1]);
        lhs('->', 'imp,isnall', [0, 2], [0, 1]);
        lhs('->', 'imp,isnall', [0, 2], [0, 1]);
        lhs('->', 'imp,isnall', [0, 1], [0, 10]);
        lhs('->', 'imp,isnall', [0, 1], [0, 0, 9, 9]);
        lhs('->', 'imp,isnall', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('->', 'imp,isnall', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('->', 'imp,isnall', [0, 1], [0, 1]);
        rhs('->', 'imp,isnall', [0, 2], [0, 1]);
        rhs('->', 'imp,isnall', [0, 2], [0, 2]);
        rhs('->', 'imp,isnall', [0, 1], [0, 10]);
        rhs('->', 'imp,isnall', [0, 1], [0, 0, 9, 9]);
        rhs('->', 'imp,isnall', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('->', 'imp,isnall', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<', [0, 1], [0, 1]);
        lhs('<', [0, 2], [0, 1]);
        lhs('<', 'isnall,lt', [0, 2], [0, 2]);
        lhs('<', 'isnall,lt', [0, 1], [0, 10]);
        lhs('<', [0, 1], [0, 0, 9, 9]);
        lhs('<', 'isnall', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<', 'isnall', [0, 1], [0, 1]);
        rhs('<', 'isnall', [0, 2], [0, 1]);
        rhs('<', 'isnall,lt', [0, 2], [0, 2]);
        rhs('<', 'isnall,lt', [0, 1], [0, 10]);
        rhs('<', 'isnall', [0, 1], [0, 0, 9, 9]);
        rhs('<', 'isnall', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<', 'isnall', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<=', 'imp,isnall', [0, 1], [0, 1]);
        lhs('<=', 'imp,isnall', [0, 2], [0, 1]);
        lhs('<=', 'isnall,lte', [0, 2], [0, 2]);
        lhs('<=', 'isnall,lte', [0, 1], [0, 10]);
        lhs('<=', 'imp,isnall', [0, 1], [0, 0, 9, 9]);
        lhs('<=', 'imp,isnall', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<=', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<=', 'imp,isnall', [0, 1], [0, 1]);
        rhs('<=', 'imp,isnall', [0, 2], [0, 1]);
        rhs('<=', 'isnall,lte', [0, 2], [0, 2]);
        rhs('<=', 'isnall,lte', [0, 1], [0, 10]);
        rhs('<=', 'imp,isnall', [0, 1], [0, 0, 9, 9]);
        rhs('<=', 'isnall', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<=', 'imp,isnall', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!&', 'isnall,nall', [0, 1], [0, 1]);
        both('!&', 'isnall,nall', [0, 2], [0, 1]);
        both('!&', 'isnall,nall', [0, 2], [0, 2]);
        both('!&', 'isnall,nall', [0, 1], [0, 10]);
        both('!&', 'isnall,nall', [0, 1], [0, 0, 9, 9]);
        both('!&', 'isnall,nall', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!&', 'isnall,nall', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('!->', 'isnall', [0, 1], [0, 1]);
        lhs('!->', 'isnall', [0, 2], [0, 1]);
        lhs('!->', 'isnall', [0, 2], [0, 2]);
        lhs('!->', 'isnall', [0, 1], [0, 10]);
        lhs('!->', 'isnall', [0, 1], [0, 0, 9, 9]);
        lhs('!->', 'isnall', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('!->', 'isnall', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('!->', [0, 1], [0, 1]);
        rhs('!->', [0, 2], [0, 1]);
        rhs('!->', [0, 2], [0, 2]);
        rhs('!->', [0, 1], [0, 10]);
        rhs('!->', [0, 1], [0, 0, 9, 9]);
        rhs('!->', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('!->', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!|', [0, 1], [0, 1]);
        both('!|', [0, 2], [0, 1]);
        both('!|', [0, 2], [0, 2]);
        both('!|', [0, 1], [0, 10]);
        both('!|', [0, 1], [0, 0, 9, 9]);
        both('!|', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!|', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('==', 'isnall', [0, 1], [0, 1]);
        both('==', 'isnall', [0, 2], [0, 1]);
        both('==', 'isnall', [0, 2], [0, 2]);
        both('==', 'isnall', [0, 1], [0, 10]);
        both('==', 'isnall', [0, 1], [0, 0, 9, 9]);
        both('==', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('==', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!^', 'isnall', [0, 1], [0, 1]);
        both('!^', 'isnall', [0, 2], [0, 1]);
        both('!^', 'isnall', [0, 2], [0, 2]);
        both('!^', 'isnall', [0, 1], [0, 10]);
        both('!^', 'isnall', [0, 1], [0, 0, 9, 9]);
        both('!^', 'isnall', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!^', 'isnall', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('^', 'isnall,xor', [0, 1], [0, 1]);
        both('^', 'isnall,xor', [0, 2], [0, 1]);
        both('^', 'isnall,xor', [0, 2], [0, 2]);
        both('^', 'isnall,xor', [0, 1], [0, 10]);
        both('^', 'isnall,xor', [0, 1], [0, 0, 9, 9]);
        both('^', 'isnall,xor', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('^', 'isnall,xor', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
      });

      describe('ternary with shared args', function() {

        let both = testTernaryTernarySharedArgs.bind(undefined, '!&?', '', '');          // R = A @1 B, S = A @2 C  and  R = A @1 B, S = C @2 A
        let lhs = testTernaryTernarySharedArgs.bind(undefined, '!&?', '', 'lhs');    // R = A @1 B, S = A @2 C
        let rhs = testTernaryTernarySharedArgs.bind(undefined, '!&?', '', 'rhs');    // R = A @1 B, S = C @2 A

        // R = A & B, S = A &? C
        both('&?', 'isall,isnall', [0, 1], [0, 1], [0, 1]);
        both('&?', 'isall,isnall', [0, 2], [0, 1], [0, 2]);
        both('&?', 'isall,isnall', [0, 2], [0, 2], [0, 2]);
        both('&?', 'isall,isnall', [0, 1], [0, 2], [0, 2]);
        both('&?', 'isall,isnall', [0, 1], [0, 1], [0, 10]);
        both('&?', 'isall,isnall', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('&?', 'isall,isnall', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('&?', 'isall,isnall', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('==?', 'isnall,issame', [0, 1], [0, 1], [0, 1]);
        both('==?', 'isnall,issame', [0, 2], [0, 1], [0, 2]);
        both('==?', 'isnall,issame', [0, 2], [0, 2], [0, 2]);
        both('==?', 'isnall,issame', [0, 1], [0, 2], [0, 2]);
        both('==?', 'isnall,issame', [0, 1], [0, 1], [0, 10]);
        both('==?', 'isnall,issame', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('==?', 'isnall,issame', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('==?', 'isnall,issame', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!=?', 'isdiff,isnall', [0, 1], [0, 1], [0, 1]);
        both('!=?', 'isdiff,isnall', [0, 2], [0, 1], [0, 2]);
        both('!=?', 'isdiff,isnall', [0, 2], [0, 2], [0, 2]);
        both('!=?', 'isdiff,isnall', [0, 1], [0, 2], [0, 2]);
        both('!=?', 'isdiff,isnall', [0, 1], [0, 1], [0, 10]);
        both('!=?', 'isdiff,isnall', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('!=?', 'isdiff,isnall', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!=?', 'isdiff,isnall', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<?', 'islt,isnall', [0, 1], [0, 1], [0, 1]);
        lhs('<?', 'islt,isnall', [0, 2], [0, 1], [0, 2]);
        lhs('<?', 'islt,isnall', [0, 2], [0, 2], [0, 2]);
        lhs('<?', 'islt,isnall', [0, 1], [0, 2], [0, 2]);
        lhs('<?', 'islt,isnall', [0, 1], [0, 1], [0, 10]);
        lhs('<?', 'islt,isnall', [0, 1], [0, 1], [0, 0, 9, 9]);
        lhs('<?', 'islt,isnall', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<?', 'islt,isnall', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<?', 'islt,isnall', [0, 1], [0, 1], [0, 1]);
        rhs('<?', 'islt,isnall', [0, 2], [0, 1], [0, 2]);
        rhs('<?', 'islt,isnall', [0, 2], [0, 2], [0, 2]);
        rhs('<?', 'islt,isnall', [0, 1], [0, 2], [0, 2]);
        rhs('<?', 'islt,isnall', [0, 1], [0, 1], [0, 10]);
        rhs('<?', 'islt,isnall', [0, 1], [0, 1], [0, 0, 9, 9]);
        rhs('<?', 'islt,isnall', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<?', 'islt,isnall', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<=?', 'islte,isnall', [0, 1], [0, 1], [0, 1]);
        lhs('<=?', 'islte,isnall', [0, 2], [0, 1], [0, 2]);
        lhs('<=?', 'islte,isnall', [0, 2], [0, 2], [0, 2]);
        lhs('<=?', 'islte,isnall', [0, 1], [0, 2], [0, 2]);
        lhs('<=?', 'islte,isnall', [0, 1], [0, 1], [0, 10]);
        lhs('<=?', 'islte,isnall', [0, 1], [0, 1], [0, 0, 9, 9]);
        lhs('<=?', 'islte,isnall', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<=?', 'islte,isnall', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<=?', 'islte,isnall', [0, 1], [0, 1], [0, 1]);
        rhs('<=?', 'islte,isnall', [0, 2], [0, 1], [0, 2]);
        rhs('<=?', 'islte,isnall', [0, 2], [0, 2], [0, 2]);
        rhs('<=?', 'islte,isnall', [0, 1], [0, 2], [0, 2]);
        rhs('<=?', 'islte,isnall', [0, 1], [0, 1], [0, 10]);
        rhs('<=?', 'islte,isnall', [0, 1], [0, 1], [0, 0, 9, 9]);
        rhs('<=?', 'islte,isnall', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<=?', 'islte,isnall', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!&?', 'isnall,isnall', [0, 1], [0, 1], [0, 1]);
        both('!&?', 'isnall,isnall', [0, 2], [0, 1], [0, 2]);
        both('!&?', 'isnall,isnall', [0, 2], [0, 2], [0, 2]);
        both('!&?', 'isnall,isnall', [0, 1], [0, 2], [0, 2]);
        both('!&?', 'isnall,isnall', [0, 1], [0, 1], [0, 10]);
        both('!&?', 'isnall,isnall', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('!&?', 'isnall,isnall', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!&?', 'isnall,isnall', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('|?', 'isnall,issome', [0, 1], [0, 1], [0, 1]);
        both('|?', 'isnall,issome', [0, 2], [0, 1], [0, 2]);
        both('|?', 'isnall,issome', [0, 2], [0, 2], [0, 2]);
        both('|?', 'isnall,issome', [0, 1], [0, 2], [0, 2]);
        both('|?', 'isnall,issome', [0, 1], [0, 1], [0, 10]);
        both('|?', 'isnall,issome', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('|?', 'isnall,issome', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('|?', 'isnall,issome', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!|?', 'isnall,isnone', [0, 1], [0, 1], [0, 1]);
        both('!|?', 'isnall,isnone', [0, 2], [0, 1], [0, 2]);
        both('!|?', 'isnall,isnone', [0, 2], [0, 2], [0, 2]);
        both('!|?', 'isnall,isnone', [0, 1], [0, 2], [0, 2]);
        both('!|?', 'isnall,isnone', [0, 1], [0, 1], [0, 10]);
        both('!|?', 'isnall,isnone', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('!|?', 'isnall,isnone', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!|?', 'isnall,isnone', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('+', 'isnall,issome', [0, 1], [0, 20], [0, 1]);
        both('+', 'isnall,sum', [0, 2], [0, 1], [0, 2]);
        both('+', 'isnall,sum', [0, 2], [0, 2], [0, 2]);
        both('+', 'isnall,sum', [0, 1], [0, 2], [0, 2]);
        both('+', 'isnall,issome', [0, 1], [0, 20], [0, 10]);
        both('+', 'isnall,issome', [0, 1], [0, 20], [0, 0, 9, 9]);
        both('+', 'isnall,issome', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('+', 'isnall,issome', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('-', 'isnall,minus', [0, 1], [0, 20], [0, 1]);
        lhs('-', 'isnall,minus', [0, 2], [0, 1], [0, 2]);
        lhs('-', 'isnall,minus', [0, 2], [0, 2], [0, 2]);
        lhs('-', 'isnall,minus', [0, 1], [0, 2], [0, 2]);
        lhs('-', 'isnall,minus', [0, 1], [0, 20], [0, 10]);
        lhs('-', 'isnall,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
        lhs('-', 'isnall', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('-', 'isnall,minus', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('-', 'isnall,minus', [0, 1], [0, 20], [0, 1]);
        rhs('-', 'isnall,minus', [0, 2], [0, 1], [0, 2]);
        rhs('-', 'isnall,minus', [0, 2], [0, 2], [0, 2]);
        rhs('-', 'isnall,minus', [0, 1], [0, 2], [0, 2]);
        rhs('-', 'isnall,minus', [0, 1], [0, 20], [0, 10]);
        rhs('-', 'isnall,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
        rhs('-', 'isnall,minus', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('-', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('*', 'isnall,product', [0, 1], [0, 100], [0, 1]);
        both('*', 'isnall,product', [0, 2], [0, 1], [0, 2]);
        both('*', 'isnall,product', [0, 2], [0, 2], [0, 2]);
        both('*', 'isnall,product', [0, 1], [0, 2], [0, 2]);
        both('*', 'isnall,product', [0, 1], [0, 100], [0, 10]);
        both('*', 'isnall,product', [0, 1], [0, 100], [0, 0, 9, 9]);
        both('*', 'isnall,product', [0, 1], [0, 100], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('*', 'isnall,product', [0, 1], [0, 100], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('/', 'div,isnall', [0, 1], [0, 20], [0, 1]);
        lhs('/', 'div,isnall', [0, 2], [0, 1], [0, 2]);
        lhs('/', 'div,isnall', [0, 2], [0, 2], [0, 2]);
        lhs('/', 'div,isnall', [0, 1], [0, 2], [0, 2]);
        lhs('/', 'div,isnall', [0, 1], [0, 20], [0, 10]);
        lhs('/', 'div,isnall', [0, 1], [0, 20], [0, 0, 9, 9]);
        lhs('/', 'div,isnall', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('/', 'div,isnall', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('/', 'div,isnall', [0, 1], [0, 20], [0, 1]);
        rhs('/', 'div,isnall', [0, 2], [0, 1], [0, 2]);
        rhs('/', 'div,isnall', [0, 2], [0, 2], [0, 2]);
        rhs('/', 'div,isnall', [0, 1], [0, 2], [0, 2]);
        rhs('/', 'div,isnall', [0, 1], [0, 20], [0, 10]);
        rhs('/', 'div,isnall', [0, 1], [0, 20], [0, 0, 9, 9]);
        rhs('/', 'div,isnall', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('/', 'div,isnall', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
      });

      describe('ternary with shared R', function() {

        let both = testTernaryTernarySharedArgs.bind(undefined, '!&?', '', '');          // R = A @1 B, S = A @2 C  and  R = A @1 B, S = C @2 A
        let lhs = testTernaryTernarySharedArgs.bind(undefined, '!&?', '', 'lhs');    // R = A @1 B, S = A @2 C
        let rhs = testTernaryTernarySharedArgs.bind(undefined, '!&?', '', 'rhs');    // R = A @1 B, S = C @2 A

        // R = A & B, S = A &? C
        both('&?', 'isall,isnall', [0, 1], [0, 1], [0, 1]);
        both('&?', 'isall,isnall', [0, 2], [0, 1], [0, 2]);
        both('&?', 'isall,isnall', [0, 2], [0, 2], [0, 2]);
        both('&?', 'isall,isnall', [0, 1], [0, 2], [0, 2]);
        both('&?', 'isall,isnall', [0, 1], [0, 1], [0, 10]);
        both('&?', 'isall,isnall', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('&?', 'isall,isnall', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('&?', 'isall,isnall', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('==?', 'isnall,issame', [0, 1], [0, 1], [0, 1]);
        both('==?', 'isnall,issame', [0, 2], [0, 1], [0, 2]);
        both('==?', 'isnall,issame', [0, 2], [0, 2], [0, 2]);
        both('==?', 'isnall,issame', [0, 1], [0, 2], [0, 2]);
        both('==?', 'isnall,issame', [0, 1], [0, 1], [0, 10]);
        both('==?', 'isnall,issame', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('==?', 'isnall,issame', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('==?', 'isnall,issame', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!=?', 'isdiff,isnall', [0, 1], [0, 1], [0, 1]);
        both('!=?', 'isdiff,isnall', [0, 2], [0, 1], [0, 2]);
        both('!=?', 'isdiff,isnall', [0, 2], [0, 2], [0, 2]);
        both('!=?', 'isdiff,isnall', [0, 1], [0, 2], [0, 2]);
        both('!=?', 'isdiff,isnall', [0, 1], [0, 1], [0, 10]);
        both('!=?', 'isdiff,isnall', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('!=?', 'isdiff,isnall', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!=?', 'isdiff,isnall', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<?', 'islt,isnall', [0, 1], [0, 1], [0, 1]);
        lhs('<?', 'islt,isnall', [0, 2], [0, 1], [0, 2]);
        lhs('<?', 'islt,isnall', [0, 2], [0, 2], [0, 2]);
        lhs('<?', 'islt,isnall', [0, 1], [0, 2], [0, 2]);
        lhs('<?', 'islt,isnall', [0, 1], [0, 1], [0, 10]);
        lhs('<?', 'islt,isnall', [0, 1], [0, 1], [0, 0, 9, 9]);
        lhs('<?', 'islt,isnall', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<?', 'islt,isnall', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<?', 'islt,isnall', [0, 1], [0, 1], [0, 1]);
        rhs('<?', 'islt,isnall', [0, 2], [0, 1], [0, 2]);
        rhs('<?', 'islt,isnall', [0, 2], [0, 2], [0, 2]);
        rhs('<?', 'islt,isnall', [0, 1], [0, 2], [0, 2]);
        rhs('<?', 'islt,isnall', [0, 1], [0, 1], [0, 10]);
        rhs('<?', 'islt,isnall', [0, 1], [0, 1], [0, 0, 9, 9]);
        rhs('<?', 'islt,isnall', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<?', 'islt,isnall', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<=?', 'islte,isnall', [0, 1], [0, 1], [0, 1]);
        lhs('<=?', 'islte,isnall', [0, 2], [0, 1], [0, 2]);
        lhs('<=?', 'islte,isnall', [0, 2], [0, 2], [0, 2]);
        lhs('<=?', 'islte,isnall', [0, 1], [0, 2], [0, 2]);
        lhs('<=?', 'islte,isnall', [0, 1], [0, 1], [0, 10]);
        lhs('<=?', 'islte,isnall', [0, 1], [0, 1], [0, 0, 9, 9]);
        lhs('<=?', 'islte,isnall', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<=?', 'islte,isnall', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<=?', 'islte,isnall', [0, 1], [0, 1], [0, 1]);
        rhs('<=?', 'islte,isnall', [0, 2], [0, 1], [0, 2]);
        rhs('<=?', 'islte,isnall', [0, 2], [0, 2], [0, 2]);
        rhs('<=?', 'islte,isnall', [0, 1], [0, 2], [0, 2]);
        rhs('<=?', 'islte,isnall', [0, 1], [0, 1], [0, 10]);
        rhs('<=?', 'islte,isnall', [0, 1], [0, 1], [0, 0, 9, 9]);
        rhs('<=?', 'islte,isnall', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<=?', 'islte,isnall', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!&?', 'isnall,isnall', [0, 1], [0, 1], [0, 1]);
        both('!&?', 'isnall,isnall', [0, 2], [0, 1], [0, 2]);
        both('!&?', 'isnall,isnall', [0, 2], [0, 2], [0, 2]);
        both('!&?', 'isnall,isnall', [0, 1], [0, 2], [0, 2]);
        both('!&?', 'isnall,isnall', [0, 1], [0, 1], [0, 10]);
        both('!&?', 'isnall,isnall', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('!&?', 'isnall,isnall', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!&?', 'isnall,isnall', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('|?', 'isnall,issome', [0, 1], [0, 1], [0, 1]);
        both('|?', 'isnall,issome', [0, 2], [0, 1], [0, 2]);
        both('|?', 'isnall,issome', [0, 2], [0, 2], [0, 2]);
        both('|?', 'isnall,issome', [0, 1], [0, 2], [0, 2]);
        both('|?', 'isnall,issome', [0, 1], [0, 1], [0, 10]);
        both('|?', 'isnall,issome', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('|?', 'isnall,issome', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('|?', 'isnall,issome', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!|?', 'isnall,isnone', [0, 1], [0, 1], [0, 1]);
        both('!|?', 'isnall,isnone', [0, 2], [0, 1], [0, 2]);
        both('!|?', 'isnall,isnone', [0, 2], [0, 2], [0, 2]);
        both('!|?', 'isnall,isnone', [0, 1], [0, 2], [0, 2]);
        both('!|?', 'isnall,isnone', [0, 1], [0, 1], [0, 10]);
        both('!|?', 'isnall,isnone', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('!|?', 'isnall,isnone', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!|?', 'isnall,isnone', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('+', 'isnall,issome', [0, 1], [0, 20], [0, 1]);
        both('+', 'isnall,sum', [0, 2], [0, 1], [0, 2]);
        both('+', 'isnall,sum', [0, 2], [0, 2], [0, 2]);
        both('+', 'isnall,sum', [0, 1], [0, 2], [0, 2]);
        both('+', 'isnall,issome', [0, 1], [0, 20], [0, 10]);
        both('+', 'isnall,issome', [0, 1], [0, 20], [0, 0, 9, 9]);
        both('+', 'isnall,issome', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('+', 'isnall,issome', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('-', 'isnall,minus', [0, 1], [0, 20], [0, 1]);
        lhs('-', 'isnall,minus', [0, 2], [0, 1], [0, 2]);
        lhs('-', 'isnall,minus', [0, 2], [0, 2], [0, 2]);
        lhs('-', 'isnall,minus', [0, 1], [0, 2], [0, 2]);
        lhs('-', 'isnall,minus', [0, 1], [0, 20], [0, 10]);
        lhs('-', 'isnall,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
        lhs('-', 'isnall', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('-', 'isnall,minus', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('-', 'isnall,minus', [0, 1], [0, 20], [0, 1]);
        rhs('-', 'isnall,minus', [0, 2], [0, 1], [0, 2]);
        rhs('-', 'isnall,minus', [0, 2], [0, 2], [0, 2]);
        rhs('-', 'isnall,minus', [0, 1], [0, 2], [0, 2]);
        rhs('-', 'isnall,minus', [0, 1], [0, 20], [0, 10]);
        rhs('-', 'isnall,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
        rhs('-', 'isnall,minus', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('-', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('*', 'isnall,product', [0, 1], [0, 100], [0, 1]);
        both('*', 'isnall,product', [0, 2], [0, 1], [0, 2]);
        both('*', 'isnall,product', [0, 2], [0, 2], [0, 2]);
        both('*', 'isnall,product', [0, 1], [0, 2], [0, 2]);
        both('*', 'isnall,product', [0, 1], [0, 100], [0, 10]);
        both('*', 'isnall,product', [0, 1], [0, 100], [0, 0, 9, 9]);
        both('*', 'isnall,product', [0, 1], [0, 100], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('*', 'isnall,product', [0, 1], [0, 100], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('/', 'div,isnall', [0, 1], [0, 20], [0, 1]);
        lhs('/', 'div,isnall', [0, 2], [0, 1], [0, 2]);
        lhs('/', 'div,isnall', [0, 2], [0, 2], [0, 2]);
        lhs('/', 'div,isnall', [0, 1], [0, 2], [0, 2]);
        lhs('/', 'div,isnall', [0, 1], [0, 20], [0, 10]);
        lhs('/', 'div,isnall', [0, 1], [0, 20], [0, 0, 9, 9]);
        lhs('/', 'div,isnall', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('/', 'div,isnall', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('/', 'div,isnall', [0, 1], [0, 20], [0, 1]);
        rhs('/', 'div,isnall', [0, 2], [0, 1], [0, 2]);
        rhs('/', 'div,isnall', [0, 2], [0, 2], [0, 2]);
        rhs('/', 'div,isnall', [0, 1], [0, 2], [0, 2]);
        rhs('/', 'div,isnall', [0, 1], [0, 20], [0, 10]);
        rhs('/', 'div,isnall', [0, 1], [0, 20], [0, 0, 9, 9]);
        rhs('/', 'div,isnall', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('/', 'div,isnall', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
      });

      describe('ternary with shared S', function() {

        let both = testTernaryTernarySharedArgs.bind(undefined, '!&?', '', '');          // R = A @1 B, S = A @2 C  and  R = A @1 B, S = C @2 A
        let lhs = testTernaryTernarySharedArgs.bind(undefined, '!&?', '', 'lhs');    // R = A @1 B, S = A @2 C
        let rhs = testTernaryTernarySharedArgs.bind(undefined, '!&?', '', 'rhs');    // R = A @1 B, S = C @2 A

        // R = A & B, S = A &? C
        both('&?', 'isall,isnall', [0, 1], [0, 1], [0, 1]);
        both('&?', 'isall,isnall', [0, 2], [0, 1], [0, 2]);
        both('&?', 'isall,isnall', [0, 2], [0, 2], [0, 2]);
        both('&?', 'isall,isnall', [0, 1], [0, 2], [0, 2]);
        both('&?', 'isall,isnall', [0, 1], [0, 1], [0, 10]);
        both('&?', 'isall,isnall', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('&?', 'isall,isnall', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('&?', 'isall,isnall', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('==?', 'isnall,issame', [0, 1], [0, 1], [0, 1]);
        both('==?', 'isnall,issame', [0, 2], [0, 1], [0, 2]);
        both('==?', 'isnall,issame', [0, 2], [0, 2], [0, 2]);
        both('==?', 'isnall,issame', [0, 1], [0, 2], [0, 2]);
        both('==?', 'isnall,issame', [0, 1], [0, 1], [0, 10]);
        both('==?', 'isnall,issame', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('==?', 'isnall,issame', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('==?', 'isnall,issame', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!=?', 'isdiff,isnall', [0, 1], [0, 1], [0, 1]);
        both('!=?', 'isdiff,isnall', [0, 2], [0, 1], [0, 2]);
        both('!=?', 'isdiff,isnall', [0, 2], [0, 2], [0, 2]);
        both('!=?', 'isdiff,isnall', [0, 1], [0, 2], [0, 2]);
        both('!=?', 'isdiff,isnall', [0, 1], [0, 1], [0, 10]);
        both('!=?', 'isdiff,isnall', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('!=?', 'isdiff,isnall', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!=?', 'isdiff,isnall', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<?', 'islt,isnall', [0, 1], [0, 1], [0, 1]);
        lhs('<?', 'islt,isnall', [0, 2], [0, 1], [0, 2]);
        lhs('<?', 'islt,isnall', [0, 2], [0, 2], [0, 2]);
        lhs('<?', 'islt,isnall', [0, 1], [0, 2], [0, 2]);
        lhs('<?', 'islt,isnall', [0, 1], [0, 1], [0, 10]);
        lhs('<?', 'islt,isnall', [0, 1], [0, 1], [0, 0, 9, 9]);
        lhs('<?', 'islt,isnall', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<?', 'islt,isnall', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<?', 'islt,isnall', [0, 1], [0, 1], [0, 1]);
        rhs('<?', 'islt,isnall', [0, 2], [0, 1], [0, 2]);
        rhs('<?', 'islt,isnall', [0, 2], [0, 2], [0, 2]);
        rhs('<?', 'islt,isnall', [0, 1], [0, 2], [0, 2]);
        rhs('<?', 'islt,isnall', [0, 1], [0, 1], [0, 10]);
        rhs('<?', 'islt,isnall', [0, 1], [0, 1], [0, 0, 9, 9]);
        rhs('<?', 'islt,isnall', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<?', 'islt,isnall', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<=?', 'islte,isnall', [0, 1], [0, 1], [0, 1]);
        lhs('<=?', 'islte,isnall', [0, 2], [0, 1], [0, 2]);
        lhs('<=?', 'islte,isnall', [0, 2], [0, 2], [0, 2]);
        lhs('<=?', 'islte,isnall', [0, 1], [0, 2], [0, 2]);
        lhs('<=?', 'islte,isnall', [0, 1], [0, 1], [0, 10]);
        lhs('<=?', 'islte,isnall', [0, 1], [0, 1], [0, 0, 9, 9]);
        lhs('<=?', 'islte,isnall', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<=?', 'islte,isnall', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<=?', 'islte,isnall', [0, 1], [0, 1], [0, 1]);
        rhs('<=?', 'islte,isnall', [0, 2], [0, 1], [0, 2]);
        rhs('<=?', 'islte,isnall', [0, 2], [0, 2], [0, 2]);
        rhs('<=?', 'islte,isnall', [0, 1], [0, 2], [0, 2]);
        rhs('<=?', 'islte,isnall', [0, 1], [0, 1], [0, 10]);
        rhs('<=?', 'islte,isnall', [0, 1], [0, 1], [0, 0, 9, 9]);
        rhs('<=?', 'islte,isnall', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<=?', 'islte,isnall', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!&?', 'isnall,isnall', [0, 1], [0, 1], [0, 1]);
        both('!&?', 'isnall,isnall', [0, 2], [0, 1], [0, 2]);
        both('!&?', 'isnall,isnall', [0, 2], [0, 2], [0, 2]);
        both('!&?', 'isnall,isnall', [0, 1], [0, 2], [0, 2]);
        both('!&?', 'isnall,isnall', [0, 1], [0, 1], [0, 10]);
        both('!&?', 'isnall,isnall', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('!&?', 'isnall,isnall', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!&?', 'isnall,isnall', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('|?', 'isnall,issome', [0, 1], [0, 1], [0, 1]);
        both('|?', 'isnall,issome', [0, 2], [0, 1], [0, 2]);
        both('|?', 'isnall,issome', [0, 2], [0, 2], [0, 2]);
        both('|?', 'isnall,issome', [0, 1], [0, 2], [0, 2]);
        both('|?', 'isnall,issome', [0, 1], [0, 1], [0, 10]);
        both('|?', 'isnall,issome', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('|?', 'isnall,issome', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('|?', 'isnall,issome', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!|?', 'isnall,isnone', [0, 1], [0, 1], [0, 1]);
        both('!|?', 'isnall,isnone', [0, 2], [0, 1], [0, 2]);
        both('!|?', 'isnall,isnone', [0, 2], [0, 2], [0, 2]);
        both('!|?', 'isnall,isnone', [0, 1], [0, 2], [0, 2]);
        both('!|?', 'isnall,isnone', [0, 1], [0, 1], [0, 10]);
        both('!|?', 'isnall,isnone', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('!|?', 'isnall,isnone', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!|?', 'isnall,isnone', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('+', 'isnall,issome', [0, 1], [0, 20], [0, 1]);
        both('+', 'isnall,sum', [0, 2], [0, 1], [0, 2]);
        both('+', 'isnall,sum', [0, 2], [0, 2], [0, 2]);
        both('+', 'isnall,sum', [0, 1], [0, 2], [0, 2]);
        both('+', 'isnall,issome', [0, 1], [0, 20], [0, 10]);
        both('+', 'isnall,issome', [0, 1], [0, 20], [0, 0, 9, 9]);
        both('+', 'isnall,issome', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('+', 'isnall,issome', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('-', 'isnall,minus', [0, 1], [0, 20], [0, 1]);
        lhs('-', 'isnall,minus', [0, 2], [0, 1], [0, 2]);
        lhs('-', 'isnall,minus', [0, 2], [0, 2], [0, 2]);
        lhs('-', 'isnall,minus', [0, 1], [0, 2], [0, 2]);
        lhs('-', 'isnall,minus', [0, 1], [0, 20], [0, 10]);
        lhs('-', 'isnall,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
        lhs('-', 'isnall', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('-', 'isnall,minus', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('-', 'isnall,minus', [0, 1], [0, 20], [0, 1]);
        rhs('-', 'isnall,minus', [0, 2], [0, 1], [0, 2]);
        rhs('-', 'isnall,minus', [0, 2], [0, 2], [0, 2]);
        rhs('-', 'isnall,minus', [0, 1], [0, 2], [0, 2]);
        rhs('-', 'isnall,minus', [0, 1], [0, 20], [0, 10]);
        rhs('-', 'isnall,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
        rhs('-', 'isnall,minus', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('-', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('*', 'isnall,product', [0, 1], [0, 100], [0, 1]);
        both('*', 'isnall,product', [0, 2], [0, 1], [0, 2]);
        both('*', 'isnall,product', [0, 2], [0, 2], [0, 2]);
        both('*', 'isnall,product', [0, 1], [0, 2], [0, 2]);
        both('*', 'isnall,product', [0, 1], [0, 100], [0, 10]);
        both('*', 'isnall,product', [0, 1], [0, 100], [0, 0, 9, 9]);
        both('*', 'isnall,product', [0, 1], [0, 100], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('*', 'isnall,product', [0, 1], [0, 100], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('/', 'div,isnall', [0, 1], [0, 20], [0, 1]);
        lhs('/', 'div,isnall', [0, 2], [0, 1], [0, 2]);
        lhs('/', 'div,isnall', [0, 2], [0, 2], [0, 2]);
        lhs('/', 'div,isnall', [0, 1], [0, 2], [0, 2]);
        lhs('/', 'div,isnall', [0, 1], [0, 20], [0, 10]);
        lhs('/', 'div,isnall', [0, 1], [0, 20], [0, 0, 9, 9]);
        lhs('/', 'div,isnall', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('/', 'div,isnall', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('/', 'div,isnall', [0, 1], [0, 20], [0, 1]);
        rhs('/', 'div,isnall', [0, 2], [0, 1], [0, 2]);
        rhs('/', 'div,isnall', [0, 2], [0, 2], [0, 2]);
        rhs('/', 'div,isnall', [0, 1], [0, 2], [0, 2]);
        rhs('/', 'div,isnall', [0, 1], [0, 20], [0, 10]);
        rhs('/', 'div,isnall', [0, 1], [0, 20], [0, 0, 9, 9]);
        rhs('/', 'div,isnall', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('/', 'div,isnall', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
      });

      describe('ternary with shared results', function() {

        let both = testTernaryTernarySharedArgs.bind(undefined, '!&?', '', '');          // R = A @1 B, S = A @2 C  and  R = A @1 B, S = C @2 A
        let lhs = testTernaryTernarySharedArgs.bind(undefined, '!&?', '', 'lhs');    // R = A @1 B, S = A @2 C
        let rhs = testTernaryTernarySharedArgs.bind(undefined, '!&?', '', 'rhs');    // R = A @1 B, S = C @2 A

        // R = A & B, S = A &? C
        both('&?', 'isall,isnall', [0, 1], [0, 1], [0, 1]);
        both('&?', 'isall,isnall', [0, 2], [0, 1], [0, 2]);
        both('&?', 'isall,isnall', [0, 2], [0, 2], [0, 2]);
        both('&?', 'isall,isnall', [0, 1], [0, 2], [0, 2]);
        both('&?', 'isall,isnall', [0, 1], [0, 1], [0, 10]);
        both('&?', 'isall,isnall', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('&?', 'isall,isnall', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('&?', 'isall,isnall', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('==?', 'isnall,issame', [0, 1], [0, 1], [0, 1]);
        both('==?', 'isnall,issame', [0, 2], [0, 1], [0, 2]);
        both('==?', 'isnall,issame', [0, 2], [0, 2], [0, 2]);
        both('==?', 'isnall,issame', [0, 1], [0, 2], [0, 2]);
        both('==?', 'isnall,issame', [0, 1], [0, 1], [0, 10]);
        both('==?', 'isnall,issame', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('==?', 'isnall,issame', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('==?', 'isnall,issame', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!=?', 'isdiff,isnall', [0, 1], [0, 1], [0, 1]);
        both('!=?', 'isdiff,isnall', [0, 2], [0, 1], [0, 2]);
        both('!=?', 'isdiff,isnall', [0, 2], [0, 2], [0, 2]);
        both('!=?', 'isdiff,isnall', [0, 1], [0, 2], [0, 2]);
        both('!=?', 'isdiff,isnall', [0, 1], [0, 1], [0, 10]);
        both('!=?', 'isdiff,isnall', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('!=?', 'isdiff,isnall', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!=?', 'isdiff,isnall', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<?', 'islt,isnall', [0, 1], [0, 1], [0, 1]);
        lhs('<?', 'islt,isnall', [0, 2], [0, 1], [0, 2]);
        lhs('<?', 'islt,isnall', [0, 2], [0, 2], [0, 2]);
        lhs('<?', 'islt,isnall', [0, 1], [0, 2], [0, 2]);
        lhs('<?', 'islt,isnall', [0, 1], [0, 1], [0, 10]);
        lhs('<?', 'islt,isnall', [0, 1], [0, 1], [0, 0, 9, 9]);
        lhs('<?', 'islt,isnall', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<?', 'islt,isnall', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<?', 'islt,isnall', [0, 1], [0, 1], [0, 1]);
        rhs('<?', 'islt,isnall', [0, 2], [0, 1], [0, 2]);
        rhs('<?', 'islt,isnall', [0, 2], [0, 2], [0, 2]);
        rhs('<?', 'islt,isnall', [0, 1], [0, 2], [0, 2]);
        rhs('<?', 'islt,isnall', [0, 1], [0, 1], [0, 10]);
        rhs('<?', 'islt,isnall', [0, 1], [0, 1], [0, 0, 9, 9]);
        rhs('<?', 'islt,isnall', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<?', 'islt,isnall', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<=?', 'islte,isnall', [0, 1], [0, 1], [0, 1]);
        lhs('<=?', 'islte,isnall', [0, 2], [0, 1], [0, 2]);
        lhs('<=?', 'islte,isnall', [0, 2], [0, 2], [0, 2]);
        lhs('<=?', 'islte,isnall', [0, 1], [0, 2], [0, 2]);
        lhs('<=?', 'islte,isnall', [0, 1], [0, 1], [0, 10]);
        lhs('<=?', 'islte,isnall', [0, 1], [0, 1], [0, 0, 9, 9]);
        lhs('<=?', 'islte,isnall', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<=?', 'islte,isnall', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<=?', 'islte,isnall', [0, 1], [0, 1], [0, 1]);
        rhs('<=?', 'islte,isnall', [0, 2], [0, 1], [0, 2]);
        rhs('<=?', 'islte,isnall', [0, 2], [0, 2], [0, 2]);
        rhs('<=?', 'islte,isnall', [0, 1], [0, 2], [0, 2]);
        rhs('<=?', 'islte,isnall', [0, 1], [0, 1], [0, 10]);
        rhs('<=?', 'islte,isnall', [0, 1], [0, 1], [0, 0, 9, 9]);
        rhs('<=?', 'islte,isnall', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<=?', 'islte,isnall', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!&?', 'isnall,isnall', [0, 1], [0, 1], [0, 1]);
        both('!&?', 'isnall,isnall', [0, 2], [0, 1], [0, 2]);
        both('!&?', 'isnall,isnall', [0, 2], [0, 2], [0, 2]);
        both('!&?', 'isnall,isnall', [0, 1], [0, 2], [0, 2]);
        both('!&?', 'isnall,isnall', [0, 1], [0, 1], [0, 10]);
        both('!&?', 'isnall,isnall', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('!&?', 'isnall,isnall', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!&?', 'isnall,isnall', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('|?', 'isnall,issome', [0, 1], [0, 1], [0, 1]);
        both('|?', 'isnall,issome', [0, 2], [0, 1], [0, 2]);
        both('|?', 'isnall,issome', [0, 2], [0, 2], [0, 2]);
        both('|?', 'isnall,issome', [0, 1], [0, 2], [0, 2]);
        both('|?', 'isnall,issome', [0, 1], [0, 1], [0, 10]);
        both('|?', 'isnall,issome', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('|?', 'isnall,issome', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('|?', 'isnall,issome', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!|?', 'isnall,isnone', [0, 1], [0, 1], [0, 1]);
        both('!|?', 'isnall,isnone', [0, 2], [0, 1], [0, 2]);
        both('!|?', 'isnall,isnone', [0, 2], [0, 2], [0, 2]);
        both('!|?', 'isnall,isnone', [0, 1], [0, 2], [0, 2]);
        both('!|?', 'isnall,isnone', [0, 1], [0, 1], [0, 10]);
        both('!|?', 'isnall,isnone', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('!|?', 'isnall,isnone', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!|?', 'isnall,isnone', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('+', 'isnall,issome', [0, 1], [0, 20], [0, 1]);
        both('+', 'isnall,sum', [0, 2], [0, 1], [0, 2]);
        both('+', 'isnall,sum', [0, 2], [0, 2], [0, 2]);
        both('+', 'isnall,sum', [0, 1], [0, 2], [0, 2]);
        both('+', 'isnall,issome', [0, 1], [0, 20], [0, 10]);
        both('+', 'isnall,issome', [0, 1], [0, 20], [0, 0, 9, 9]);
        both('+', 'isnall,issome', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('+', 'isnall,issome', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('-', 'isnall,minus', [0, 1], [0, 20], [0, 1]);
        lhs('-', 'isnall,minus', [0, 2], [0, 1], [0, 2]);
        lhs('-', 'isnall,minus', [0, 2], [0, 2], [0, 2]);
        lhs('-', 'isnall,minus', [0, 1], [0, 2], [0, 2]);
        lhs('-', 'isnall,minus', [0, 1], [0, 20], [0, 10]);
        lhs('-', 'isnall,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
        lhs('-', 'isnall', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('-', 'isnall,minus', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('-', 'isnall,minus', [0, 1], [0, 20], [0, 1]);
        rhs('-', 'isnall,minus', [0, 2], [0, 1], [0, 2]);
        rhs('-', 'isnall,minus', [0, 2], [0, 2], [0, 2]);
        rhs('-', 'isnall,minus', [0, 1], [0, 2], [0, 2]);
        rhs('-', 'isnall,minus', [0, 1], [0, 20], [0, 10]);
        rhs('-', 'isnall,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
        rhs('-', 'isnall,minus', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('-', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('*', 'isnall,product', [0, 1], [0, 100], [0, 1]);
        both('*', 'isnall,product', [0, 2], [0, 1], [0, 2]);
        both('*', 'isnall,product', [0, 2], [0, 2], [0, 2]);
        both('*', 'isnall,product', [0, 1], [0, 2], [0, 2]);
        both('*', 'isnall,product', [0, 1], [0, 100], [0, 10]);
        both('*', 'isnall,product', [0, 1], [0, 100], [0, 0, 9, 9]);
        both('*', 'isnall,product', [0, 1], [0, 100], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('*', 'isnall,product', [0, 1], [0, 100], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('/', 'div,isnall', [0, 1], [0, 20], [0, 1]);
        lhs('/', 'div,isnall', [0, 2], [0, 1], [0, 2]);
        lhs('/', 'div,isnall', [0, 2], [0, 2], [0, 2]);
        lhs('/', 'div,isnall', [0, 1], [0, 2], [0, 2]);
        lhs('/', 'div,isnall', [0, 1], [0, 20], [0, 10]);
        lhs('/', 'div,isnall', [0, 1], [0, 20], [0, 0, 9, 9]);
        lhs('/', 'div,isnall', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('/', 'div,isnall', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('/', 'div,isnall', [0, 1], [0, 20], [0, 1]);
        rhs('/', 'div,isnall', [0, 2], [0, 1], [0, 2]);
        rhs('/', 'div,isnall', [0, 2], [0, 2], [0, 2]);
        rhs('/', 'div,isnall', [0, 1], [0, 2], [0, 2]);
        rhs('/', 'div,isnall', [0, 1], [0, 20], [0, 10]);
        rhs('/', 'div,isnall', [0, 1], [0, 20], [0, 0, 9, 9]);
        rhs('/', 'div,isnall', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('/', 'div,isnall', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
      });
    });

    describe('ISNONE', function() {

      describe('binary with shared arg', function() {

        let both = testTernaryBinarySharedArgs.bind(undefined, '!|?', '', ''); // R = A @1 B, A @2 C  and  R = A @1 B, C @2 A
        let lhs = testTernaryBinarySharedArgs.bind(undefined, '!|?', '', 'lhs'); // R = A @1 B, A @2 C
        let rhs = testTernaryBinarySharedArgs.bind(undefined, '!|?', '', 'rhs'); // R = A @1 B, C @2 A

        both('&', [0, 1], [0, 1]);
        both('&', [0, 2], [0, 1]);
        both('&', [0, 2], [0, 2]);
        both('&', [0, 1], [0, 10]);
        both('&', [0, 1], [0, 0, 9, 9]);
        both('&', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('&', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!=', 'isnone,xor', [0, 1], [0, 1]);
        both('!=', 'isnone,xor', [0, 2], [0, 1]);
        both('!=', 'diff,isnone', [0, 2], [0, 2]);
        both('!=', 'diff,isnone', [0, 1], [0, 10]);
        both('!=', 'isnone,xor', [0, 1], [0, 0, 9, 9]);
        both('!=', 'diff,isnone', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!=', 'diff,isnone', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('->', 'imp,isnone', [0, 1], [0, 1]);
        lhs('->', 'imp,isnone', [0, 2], [0, 1]);
        lhs('->', 'imp,isnone', [0, 2], [0, 1]);
        lhs('->', 'imp,isnone', [0, 1], [0, 10]);
        lhs('->', 'imp,isnone', [0, 1], [0, 0, 9, 9]);
        lhs('->', 'imp,isnone', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('->', 'imp,isnone', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('->', 'imp,isnone', [0, 1], [0, 1]);
        rhs('->', 'imp,isnone', [0, 2], [0, 1]);
        rhs('->', 'imp,isnone', [0, 2], [0, 2]);
        rhs('->', 'imp,isnone', [0, 1], [0, 10]);
        rhs('->', 'imp,isnone', [0, 1], [0, 0, 9, 9]);
        rhs('->', 'imp,isnone', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('->', 'imp,isnone', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<', 'isnone', [0, 1], [0, 1]);
        lhs('<', 'isnone', [0, 2], [0, 1]);
        lhs('<', 'isnone,lt', [0, 2], [0, 2]);
        lhs('<', 'isnone,lt', [0, 1], [0, 10]);
        lhs('<', 'isnone', [0, 1], [0, 0, 9, 9]);
        lhs('<', 'isnone', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<', 'isnone', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<', [0, 1], [0, 1]);
        rhs('<', [0, 2], [0, 1]);
        rhs('<', [0, 2], [0, 2]);
        rhs('<', [0, 1], [0, 10]);
        rhs('<', [0, 1], [0, 0, 9, 9]);
        rhs('<', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<=', 'imp,isnone', [0, 1], [0, 1]);
        lhs('<=', 'imp,isnone', [0, 2], [0, 1]);
        lhs('<=', 'isnone,lte', [0, 2], [0, 2]);
        lhs('<=', 'isnone,lte', [0, 1], [0, 10]);
        lhs('<=', 'imp,isnone', [0, 1], [0, 0, 9, 9]);
        lhs('<=', 'imp,isnone', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<=', 'isnone', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<=', 'imp,isnone', [0, 1], [0, 1]);
        rhs('<=', 'imp,isnone', [0, 2], [0, 1]);
        rhs('<=', 'isnone,lte', [0, 2], [0, 2]);
        rhs('<=', 'isnone,lte', [0, 1], [0, 10]);
        rhs('<=', 'imp,isnone', [0, 1], [0, 0, 9, 9]);
        rhs('<=', 'isnone', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<=', 'imp,isnone', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!&', 'isnone,nall', [0, 1], [0, 1]);
        both('!&', 'isnone,nall', [0, 2], [0, 1]);
        both('!&', 'isnone,nall', [0, 2], [0, 2]);
        both('!&', 'isnone,nall', [0, 1], [0, 10]);
        both('!&', 'isnone,nall', [0, 1], [0, 0, 9, 9]);
        both('!&', 'isnone,nall', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!&', 'isnone,nall', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('!->', [0, 1], [0, 1]);
        lhs('!->', [0, 2], [0, 1]);
        lhs('!->', [0, 2], [0, 2]);
        lhs('!->', [0, 1], [0, 10]);
        lhs('!->', [0, 1], [0, 0, 9, 9]);
        lhs('!->', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('!->', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('!->', 'isnone', [0, 1], [0, 1]);
        rhs('!->', 'isnone', [0, 2], [0, 1]);
        rhs('!->', 'isnone', [0, 2], [0, 2]);
        rhs('!->', 'isnone', [0, 1], [0, 10]);
        rhs('!->', 'isnone', [0, 1], [0, 0, 9, 9]);
        rhs('!->', 'isnone', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('!->', 'isnone', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!|', 'isnone', [0, 1], [0, 1]);
        both('!|', 'isnone', [0, 2], [0, 1]);
        both('!|', 'isnone', [0, 2], [0, 2]);
        both('!|', 'isnone', [0, 1], [0, 10]);
        both('!|', 'isnone', [0, 1], [0, 0, 9, 9]);
        both('!|', 'isnone', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!|', 'isnone', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('==', 'isnone', [0, 1], [0, 1]);
        both('==', 'isnone', [0, 2], [0, 1]);
        both('==', 'isnone', [0, 2], [0, 2]);
        both('==', 'isnone', [0, 1], [0, 10]);
        both('==', 'isnone', [0, 1], [0, 0, 9, 9]);
        both('==', 'isnone', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('==', 'isnone', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!^', 'isnone', [0, 1], [0, 1]);
        both('!^', 'isnone', [0, 2], [0, 1]);
        both('!^', 'isnone', [0, 2], [0, 2]);
        both('!^', 'isnone', [0, 1], [0, 10]);
        both('!^', 'isnone', [0, 1], [0, 0, 9, 9]);
        both('!^', 'isnone', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!^', 'isnone', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('^', 'isnone,xor', [0, 1], [0, 1]);
        both('^', 'isnone,xor', [0, 2], [0, 1]);
        both('^', 'isnone,xor', [0, 2], [0, 2]);
        both('^', 'isnone,xor', [0, 1], [0, 10]);
        both('^', 'isnone,xor', [0, 1], [0, 0, 9, 9]);
        both('^', 'isnone,xor', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('^', 'isnone,xor', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
      });

      describe('binary with shared result', function() {

        let both = testTernaryBinarySharedArgs.bind(undefined, '!|?', '', ''); // R = A @1 B, A @2 C  and  R = A @1 B, C @2 A
        let lhs = testTernaryBinarySharedArgs.bind(undefined, '!|?', '', 'lhs'); // R = A @1 B, A @2 C
        let rhs = testTernaryBinarySharedArgs.bind(undefined, '!|?', '', 'rhs'); // R = A @1 B, C @2 A

        both('&', [0, 1], [0, 1]);
        both('&', [0, 2], [0, 1]);
        both('&', [0, 2], [0, 2]);
        both('&', [0, 1], [0, 10]);
        both('&', [0, 1], [0, 0, 9, 9]);
        both('&', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('&', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!=', 'isnone,xor', [0, 1], [0, 1]);
        both('!=', 'isnone,xor', [0, 2], [0, 1]);
        both('!=', 'diff,isnone', [0, 2], [0, 2]);
        both('!=', 'diff,isnone', [0, 1], [0, 10]);
        both('!=', 'isnone,xor', [0, 1], [0, 0, 9, 9]);
        both('!=', 'diff,isnone', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!=', 'diff,isnone', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('->', 'imp,isnone', [0, 1], [0, 1]);
        lhs('->', 'imp,isnone', [0, 2], [0, 1]);
        lhs('->', 'imp,isnone', [0, 2], [0, 1]);
        lhs('->', 'imp,isnone', [0, 1], [0, 10]);
        lhs('->', 'imp,isnone', [0, 1], [0, 0, 9, 9]);
        lhs('->', 'imp,isnone', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('->', 'imp,isnone', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('->', 'imp,isnone', [0, 1], [0, 1]);
        rhs('->', 'imp,isnone', [0, 2], [0, 1]);
        rhs('->', 'imp,isnone', [0, 2], [0, 2]);
        rhs('->', 'imp,isnone', [0, 1], [0, 10]);
        rhs('->', 'imp,isnone', [0, 1], [0, 0, 9, 9]);
        rhs('->', 'imp,isnone', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('->', 'imp,isnone', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<', 'isnone', [0, 1], [0, 1]);
        lhs('<', 'isnone', [0, 2], [0, 1]);
        lhs('<', 'isnone,lt', [0, 2], [0, 2]);
        lhs('<', 'isnone,lt', [0, 1], [0, 10]);
        lhs('<', 'isnone', [0, 1], [0, 0, 9, 9]);
        lhs('<', 'isnone', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<', 'isnone', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<', [0, 1], [0, 1]);
        rhs('<', [0, 2], [0, 1]);
        rhs('<', [0, 2], [0, 2]);
        rhs('<', [0, 1], [0, 10]);
        rhs('<', [0, 1], [0, 0, 9, 9]);
        rhs('<', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<=', 'imp,isnone', [0, 1], [0, 1]);
        lhs('<=', 'imp,isnone', [0, 2], [0, 1]);
        lhs('<=', 'isnone,lte', [0, 2], [0, 2]);
        lhs('<=', 'isnone,lte', [0, 1], [0, 10]);
        lhs('<=', 'imp,isnone', [0, 1], [0, 0, 9, 9]);
        lhs('<=', 'imp,isnone', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<=', 'isnone', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<=', 'imp,isnone', [0, 1], [0, 1]);
        rhs('<=', 'imp,isnone', [0, 2], [0, 1]);
        rhs('<=', 'isnone,lte', [0, 2], [0, 2]);
        rhs('<=', 'isnone,lte', [0, 1], [0, 10]);
        rhs('<=', 'imp,isnone', [0, 1], [0, 0, 9, 9]);
        rhs('<=', 'isnone', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<=', 'imp,isnone', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!&', 'isnone,nall', [0, 1], [0, 1]);
        both('!&', 'isnone,nall', [0, 2], [0, 1]);
        both('!&', 'isnone,nall', [0, 2], [0, 2]);
        both('!&', 'isnone,nall', [0, 1], [0, 10]);
        both('!&', 'isnone,nall', [0, 1], [0, 0, 9, 9]);
        both('!&', 'isnone,nall', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!&', 'isnone,nall', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('!->', [0, 1], [0, 1]);
        lhs('!->', [0, 2], [0, 1]);
        lhs('!->', [0, 2], [0, 2]);
        lhs('!->', [0, 1], [0, 10]);
        lhs('!->', [0, 1], [0, 0, 9, 9]);
        lhs('!->', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('!->', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('!->', 'isnone', [0, 1], [0, 1]);
        rhs('!->', 'isnone', [0, 2], [0, 1]);
        rhs('!->', 'isnone', [0, 2], [0, 2]);
        rhs('!->', 'isnone', [0, 1], [0, 10]);
        rhs('!->', 'isnone', [0, 1], [0, 0, 9, 9]);
        rhs('!->', 'isnone', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('!->', 'isnone', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!|', 'isnone', [0, 1], [0, 1]);
        both('!|', 'isnone', [0, 2], [0, 1]);
        both('!|', 'isnone', [0, 2], [0, 2]);
        both('!|', 'isnone', [0, 1], [0, 10]);
        both('!|', 'isnone', [0, 1], [0, 0, 9, 9]);
        both('!|', 'isnone', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!|', 'isnone', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('==', 'isnone', [0, 1], [0, 1]);
        both('==', 'isnone', [0, 2], [0, 1]);
        both('==', 'isnone', [0, 2], [0, 2]);
        both('==', 'isnone', [0, 1], [0, 10]);
        both('==', 'isnone', [0, 1], [0, 0, 9, 9]);
        both('==', 'isnone', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('==', 'isnone', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!^', 'isnone', [0, 1], [0, 1]);
        both('!^', 'isnone', [0, 2], [0, 1]);
        both('!^', 'isnone', [0, 2], [0, 2]);
        both('!^', 'isnone', [0, 1], [0, 10]);
        both('!^', 'isnone', [0, 1], [0, 0, 9, 9]);
        both('!^', 'isnone', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!^', 'isnone', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('^', 'isnone,xor', [0, 1], [0, 1]);
        both('^', 'isnone,xor', [0, 2], [0, 1]);
        both('^', 'isnone,xor', [0, 2], [0, 2]);
        both('^', 'isnone,xor', [0, 1], [0, 10]);
        both('^', 'isnone,xor', [0, 1], [0, 0, 9, 9]);
        both('^', 'isnone,xor', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('^', 'isnone,xor', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
      });

      describe('ternary with shared args', function() {

        let both = testTernaryTernarySharedArgs.bind(undefined, '!|?', '', '');          // R = A @1 B, S = A @2 C  and  R = A @1 B, S = C @2 A
        let lhs = testTernaryTernarySharedArgs.bind(undefined, '!|?', '', 'lhs');    // R = A @1 B, S = A @2 C
        let rhs = testTernaryTernarySharedArgs.bind(undefined, '!|?', '', 'rhs');    // R = A @1 B, S = C @2 A

        // R = A & B, S = A &? C
        both('&?', 'isall,isnone', [0, 1], [0, 1], [0, 1]);
        both('&?', 'isall,isnone', [0, 2], [0, 1], [0, 2]);
        both('&?', 'isall,isnone', [0, 2], [0, 2], [0, 2]);
        both('&?', 'isall,isnone', [0, 1], [0, 2], [0, 2]);
        both('&?', 'isall,isnone', [0, 1], [0, 1], [0, 10]);
        both('&?', 'isall,isnone', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('&?', 'isall,isnone', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('&?', 'isall,isnone', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('==?', 'isnone,issame', [0, 1], [0, 1], [0, 1]);
        both('==?', 'isnone,issame', [0, 2], [0, 1], [0, 2]);
        both('==?', 'isnone,issame', [0, 2], [0, 2], [0, 2]);
        both('==?', 'isnone,issame', [0, 1], [0, 2], [0, 2]);
        both('==?', 'isnone,issame', [0, 1], [0, 1], [0, 10]);
        both('==?', 'isnone,issame', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('==?', 'isnone,issame', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('==?', 'isnone,issame', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!=?', 'isdiff,isnone', [0, 1], [0, 1], [0, 1]);
        both('!=?', 'isdiff,isnone', [0, 2], [0, 1], [0, 2]);
        both('!=?', 'isdiff,isnone', [0, 2], [0, 2], [0, 2]);
        both('!=?', 'isdiff,isnone', [0, 1], [0, 2], [0, 2]);
        both('!=?', 'isdiff,isnone', [0, 1], [0, 1], [0, 10]);
        both('!=?', 'isdiff,isnone', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('!=?', 'isdiff,isnone', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!=?', 'isdiff,isnone', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<?', 'islt,isnone', [0, 1], [0, 1], [0, 1]);
        lhs('<?', 'islt,isnone', [0, 2], [0, 1], [0, 2]);
        lhs('<?', 'islt,isnone', [0, 2], [0, 2], [0, 2]);
        lhs('<?', 'islt,isnone', [0, 1], [0, 2], [0, 2]);
        lhs('<?', 'islt,isnone', [0, 1], [0, 1], [0, 10]);
        lhs('<?', 'islt,isnone', [0, 1], [0, 1], [0, 0, 9, 9]);
        lhs('<?', 'islt,isnone', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<?', 'islt,isnone', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<?', 'islt,isnone', [0, 1], [0, 1], [0, 1]);
        rhs('<?', 'islt,isnone', [0, 2], [0, 1], [0, 2]);
        rhs('<?', 'islt,isnone', [0, 2], [0, 2], [0, 2]);
        rhs('<?', 'islt,isnone', [0, 1], [0, 2], [0, 2]);
        rhs('<?', 'islt,isnone', [0, 1], [0, 1], [0, 10]);
        rhs('<?', 'islt,isnone', [0, 1], [0, 1], [0, 0, 9, 9]);
        rhs('<?', 'islt,isnone', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<?', 'islt,isnone', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<=?', 'islte,isnone', [0, 1], [0, 1], [0, 1]);
        lhs('<=?', 'islte,isnone', [0, 2], [0, 1], [0, 2]);
        lhs('<=?', 'islte,isnone', [0, 2], [0, 2], [0, 2]);
        lhs('<=?', 'islte,isnone', [0, 1], [0, 2], [0, 2]);
        lhs('<=?', 'islte,isnone', [0, 1], [0, 1], [0, 10]);
        lhs('<=?', 'islte,isnone', [0, 1], [0, 1], [0, 0, 9, 9]);
        lhs('<=?', 'islte,isnone', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<=?', 'islte,isnone', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<=?', 'islte,isnone', [0, 1], [0, 1], [0, 1]);
        rhs('<=?', 'islte,isnone', [0, 2], [0, 1], [0, 2]);
        rhs('<=?', 'islte,isnone', [0, 2], [0, 2], [0, 2]);
        rhs('<=?', 'islte,isnone', [0, 1], [0, 2], [0, 2]);
        rhs('<=?', 'islte,isnone', [0, 1], [0, 1], [0, 10]);
        rhs('<=?', 'islte,isnone', [0, 1], [0, 1], [0, 0, 9, 9]);
        rhs('<=?', 'islte,isnone', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<=?', 'islte,isnone', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!&?', 'isnall,isnone', [0, 1], [0, 1], [0, 1]);
        both('!&?', 'isnall,isnone', [0, 2], [0, 1], [0, 2]);
        both('!&?', 'isnall,isnone', [0, 2], [0, 2], [0, 2]);
        both('!&?', 'isnall,isnone', [0, 1], [0, 2], [0, 2]);
        both('!&?', 'isnall,isnone', [0, 1], [0, 1], [0, 10]);
        both('!&?', 'isnall,isnone', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('!&?', 'isnall,isnone', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!&?', 'isnall,isnone', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('|?', 'isnone,issome', [0, 1], [0, 1], [0, 1]);
        both('|?', 'isnone,issome', [0, 2], [0, 1], [0, 2]);
        both('|?', 'isnone,issome', [0, 2], [0, 2], [0, 2]);
        both('|?', 'isnone,issome', [0, 1], [0, 2], [0, 2]);
        both('|?', 'isnone,issome', [0, 1], [0, 1], [0, 10]);
        both('|?', 'isnone,issome', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('|?', 'isnone,issome', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('|?', 'isnone,issome', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!|?', 'isnone,isnone', [0, 1], [0, 1], [0, 1]);
        both('!|?', 'isnone,isnone', [0, 2], [0, 1], [0, 2]);
        both('!|?', 'isnone,isnone', [0, 2], [0, 2], [0, 2]);
        both('!|?', 'isnone,isnone', [0, 1], [0, 2], [0, 2]);
        both('!|?', 'isnone,isnone', [0, 1], [0, 1], [0, 10]);
        both('!|?', 'isnone,isnone', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('!|?', 'isnone,isnone', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!|?', 'isnone,isnone', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('+', 'isnone,issome', [0, 1], [0, 20], [0, 1]);
        both('+', 'isnone,sum', [0, 2], [0, 1], [0, 2]);
        both('+', 'isnone,sum', [0, 2], [0, 2], [0, 2]);
        both('+', 'isnone,sum', [0, 1], [0, 2], [0, 2]);
        both('+', 'isnone,issome', [0, 1], [0, 20], [0, 10]);
        both('+', 'isnone,issome', [0, 1], [0, 20], [0, 0, 9, 9]);
        both('+', 'isnone,issome', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('+', 'isnone,issome', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('-', 'isnone,minus', [0, 1], [0, 20], [0, 1]);
        lhs('-', 'isnone,minus', [0, 2], [0, 1], [0, 2]);
        lhs('-', 'isnone,minus', [0, 2], [0, 2], [0, 2]);
        lhs('-', 'isnone,minus', [0, 1], [0, 2], [0, 2]);
        lhs('-', 'isnone,minus', [0, 1], [0, 20], [0, 10]);
        lhs('-', 'isnone,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
        lhs('-', 'isnone', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('-', 'isnone,minus', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('-', 'isnone,minus', [0, 1], [0, 20], [0, 1]);
        rhs('-', 'isnone,minus', [0, 2], [0, 1], [0, 2]);
        rhs('-', 'isnone,minus', [0, 2], [0, 2], [0, 2]);
        rhs('-', 'isnone,minus', [0, 1], [0, 2], [0, 2]);
        rhs('-', 'isnone,minus', [0, 1], [0, 20], [0, 10]);
        rhs('-', 'isnone,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
        rhs('-', 'isnone,minus', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('-', 'isnone', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('*', 'isnone,product', [0, 1], [0, 100], [0, 1]);
        both('*', 'isnone,product', [0, 2], [0, 1], [0, 2]);
        both('*', 'isnone,product', [0, 2], [0, 2], [0, 2]);
        both('*', 'isnone,product', [0, 1], [0, 2], [0, 2]);
        both('*', 'isnone,product', [0, 1], [0, 100], [0, 10]);
        both('*', 'isnone,product', [0, 1], [0, 100], [0, 0, 9, 9]);
        both('*', 'isnone,product', [0, 1], [0, 100], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('*', 'isnone,product', [0, 1], [0, 100], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('/', 'div,isnone', [0, 1], [0, 20], [0, 1]);
        lhs('/', 'div,isnone', [0, 2], [0, 1], [0, 2]);
        lhs('/', 'div,isnone', [0, 2], [0, 2], [0, 2]);
        lhs('/', 'div,isnone', [0, 1], [0, 2], [0, 2]);
        lhs('/', 'div,isnone', [0, 1], [0, 20], [0, 10]);
        lhs('/', 'div,isnone', [0, 1], [0, 20], [0, 0, 9, 9]);
        lhs('/', 'div,isnone', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('/', 'div,isnone', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('/', 'div,isnone', [0, 1], [0, 20], [0, 1]);
        rhs('/', 'div,isnone', [0, 2], [0, 1], [0, 2]);
        rhs('/', 'div,isnone', [0, 2], [0, 2], [0, 2]);
        rhs('/', 'div,isnone', [0, 1], [0, 2], [0, 2]);
        rhs('/', 'div,isnone', [0, 1], [0, 20], [0, 10]);
        rhs('/', 'div,isnone', [0, 1], [0, 20], [0, 0, 9, 9]);
        rhs('/', 'div,isnone', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('/', 'div,isnone', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
      });

      describe('ternary with shared R', function() {

        let both = testTernaryTernarySharedArgs.bind(undefined, '!|?', '', '');          // R = A @1 B, S = A @2 C  and  R = A @1 B, S = C @2 A
        let lhs = testTernaryTernarySharedArgs.bind(undefined, '!|?', '', 'lhs');    // R = A @1 B, S = A @2 C
        let rhs = testTernaryTernarySharedArgs.bind(undefined, '!|?', '', 'rhs');    // R = A @1 B, S = C @2 A

        // R = A & B, S = A &? C
        both('&?', 'isall,isnone', [0, 1], [0, 1], [0, 1]);
        both('&?', 'isall,isnone', [0, 2], [0, 1], [0, 2]);
        both('&?', 'isall,isnone', [0, 2], [0, 2], [0, 2]);
        both('&?', 'isall,isnone', [0, 1], [0, 2], [0, 2]);
        both('&?', 'isall,isnone', [0, 1], [0, 1], [0, 10]);
        both('&?', 'isall,isnone', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('&?', 'isall,isnone', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('&?', 'isall,isnone', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('==?', 'isnone,issame', [0, 1], [0, 1], [0, 1]);
        both('==?', 'isnone,issame', [0, 2], [0, 1], [0, 2]);
        both('==?', 'isnone,issame', [0, 2], [0, 2], [0, 2]);
        both('==?', 'isnone,issame', [0, 1], [0, 2], [0, 2]);
        both('==?', 'isnone,issame', [0, 1], [0, 1], [0, 10]);
        both('==?', 'isnone,issame', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('==?', 'isnone,issame', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('==?', 'isnone,issame', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!=?', 'isdiff,isnone', [0, 1], [0, 1], [0, 1]);
        both('!=?', 'isdiff,isnone', [0, 2], [0, 1], [0, 2]);
        both('!=?', 'isdiff,isnone', [0, 2], [0, 2], [0, 2]);
        both('!=?', 'isdiff,isnone', [0, 1], [0, 2], [0, 2]);
        both('!=?', 'isdiff,isnone', [0, 1], [0, 1], [0, 10]);
        both('!=?', 'isdiff,isnone', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('!=?', 'isdiff,isnone', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!=?', 'isdiff,isnone', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<?', 'islt,isnone', [0, 1], [0, 1], [0, 1]);
        lhs('<?', 'islt,isnone', [0, 2], [0, 1], [0, 2]);
        lhs('<?', 'islt,isnone', [0, 2], [0, 2], [0, 2]);
        lhs('<?', 'islt,isnone', [0, 1], [0, 2], [0, 2]);
        lhs('<?', 'islt,isnone', [0, 1], [0, 1], [0, 10]);
        lhs('<?', 'islt,isnone', [0, 1], [0, 1], [0, 0, 9, 9]);
        lhs('<?', 'islt,isnone', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<?', 'islt,isnone', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<?', 'islt,isnone', [0, 1], [0, 1], [0, 1]);
        rhs('<?', 'islt,isnone', [0, 2], [0, 1], [0, 2]);
        rhs('<?', 'islt,isnone', [0, 2], [0, 2], [0, 2]);
        rhs('<?', 'islt,isnone', [0, 1], [0, 2], [0, 2]);
        rhs('<?', 'islt,isnone', [0, 1], [0, 1], [0, 10]);
        rhs('<?', 'islt,isnone', [0, 1], [0, 1], [0, 0, 9, 9]);
        rhs('<?', 'islt,isnone', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<?', 'islt,isnone', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<=?', 'islte,isnone', [0, 1], [0, 1], [0, 1]);
        lhs('<=?', 'islte,isnone', [0, 2], [0, 1], [0, 2]);
        lhs('<=?', 'islte,isnone', [0, 2], [0, 2], [0, 2]);
        lhs('<=?', 'islte,isnone', [0, 1], [0, 2], [0, 2]);
        lhs('<=?', 'islte,isnone', [0, 1], [0, 1], [0, 10]);
        lhs('<=?', 'islte,isnone', [0, 1], [0, 1], [0, 0, 9, 9]);
        lhs('<=?', 'islte,isnone', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<=?', 'islte,isnone', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<=?', 'islte,isnone', [0, 1], [0, 1], [0, 1]);
        rhs('<=?', 'islte,isnone', [0, 2], [0, 1], [0, 2]);
        rhs('<=?', 'islte,isnone', [0, 2], [0, 2], [0, 2]);
        rhs('<=?', 'islte,isnone', [0, 1], [0, 2], [0, 2]);
        rhs('<=?', 'islte,isnone', [0, 1], [0, 1], [0, 10]);
        rhs('<=?', 'islte,isnone', [0, 1], [0, 1], [0, 0, 9, 9]);
        rhs('<=?', 'islte,isnone', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<=?', 'islte,isnone', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!&?', 'isnall,isnone', [0, 1], [0, 1], [0, 1]);
        both('!&?', 'isnall,isnone', [0, 2], [0, 1], [0, 2]);
        both('!&?', 'isnall,isnone', [0, 2], [0, 2], [0, 2]);
        both('!&?', 'isnall,isnone', [0, 1], [0, 2], [0, 2]);
        both('!&?', 'isnall,isnone', [0, 1], [0, 1], [0, 10]);
        both('!&?', 'isnall,isnone', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('!&?', 'isnall,isnone', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!&?', 'isnall,isnone', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('|?', 'isnone,issome', [0, 1], [0, 1], [0, 1]);
        both('|?', 'isnone,issome', [0, 2], [0, 1], [0, 2]);
        both('|?', 'isnone,issome', [0, 2], [0, 2], [0, 2]);
        both('|?', 'isnone,issome', [0, 1], [0, 2], [0, 2]);
        both('|?', 'isnone,issome', [0, 1], [0, 1], [0, 10]);
        both('|?', 'isnone,issome', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('|?', 'isnone,issome', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('|?', 'isnone,issome', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!|?', 'isnone,isnone', [0, 1], [0, 1], [0, 1]);
        both('!|?', 'isnone,isnone', [0, 2], [0, 1], [0, 2]);
        both('!|?', 'isnone,isnone', [0, 2], [0, 2], [0, 2]);
        both('!|?', 'isnone,isnone', [0, 1], [0, 2], [0, 2]);
        both('!|?', 'isnone,isnone', [0, 1], [0, 1], [0, 10]);
        both('!|?', 'isnone,isnone', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('!|?', 'isnone,isnone', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!|?', 'isnone,isnone', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('+', 'isnone,issome', [0, 1], [0, 20], [0, 1]);
        both('+', 'isnone,sum', [0, 2], [0, 1], [0, 2]);
        both('+', 'isnone,sum', [0, 2], [0, 2], [0, 2]);
        both('+', 'isnone,sum', [0, 1], [0, 2], [0, 2]);
        both('+', 'isnone,issome', [0, 1], [0, 20], [0, 10]);
        both('+', 'isnone,issome', [0, 1], [0, 20], [0, 0, 9, 9]);
        both('+', 'isnone,issome', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('+', 'isnone,issome', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('-', 'isnone,minus', [0, 1], [0, 20], [0, 1]);
        lhs('-', 'isnone,minus', [0, 2], [0, 1], [0, 2]);
        lhs('-', 'isnone,minus', [0, 2], [0, 2], [0, 2]);
        lhs('-', 'isnone,minus', [0, 1], [0, 2], [0, 2]);
        lhs('-', 'isnone,minus', [0, 1], [0, 20], [0, 10]);
        lhs('-', 'isnone,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
        lhs('-', 'isnone', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('-', 'isnone,minus', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('-', 'isnone,minus', [0, 1], [0, 20], [0, 1]);
        rhs('-', 'isnone,minus', [0, 2], [0, 1], [0, 2]);
        rhs('-', 'isnone,minus', [0, 2], [0, 2], [0, 2]);
        rhs('-', 'isnone,minus', [0, 1], [0, 2], [0, 2]);
        rhs('-', 'isnone,minus', [0, 1], [0, 20], [0, 10]);
        rhs('-', 'isnone,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
        rhs('-', 'isnone,minus', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('-', 'isnone', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('*', 'isnone,product', [0, 1], [0, 100], [0, 1]);
        both('*', 'isnone,product', [0, 2], [0, 1], [0, 2]);
        both('*', 'isnone,product', [0, 2], [0, 2], [0, 2]);
        both('*', 'isnone,product', [0, 1], [0, 2], [0, 2]);
        both('*', 'isnone,product', [0, 1], [0, 100], [0, 10]);
        both('*', 'isnone,product', [0, 1], [0, 100], [0, 0, 9, 9]);
        both('*', 'isnone,product', [0, 1], [0, 100], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('*', 'isnone,product', [0, 1], [0, 100], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('/', 'div,isnone', [0, 1], [0, 20], [0, 1]);
        lhs('/', 'div,isnone', [0, 2], [0, 1], [0, 2]);
        lhs('/', 'div,isnone', [0, 2], [0, 2], [0, 2]);
        lhs('/', 'div,isnone', [0, 1], [0, 2], [0, 2]);
        lhs('/', 'div,isnone', [0, 1], [0, 20], [0, 10]);
        lhs('/', 'div,isnone', [0, 1], [0, 20], [0, 0, 9, 9]);
        lhs('/', 'div,isnone', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('/', 'div,isnone', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('/', 'div,isnone', [0, 1], [0, 20], [0, 1]);
        rhs('/', 'div,isnone', [0, 2], [0, 1], [0, 2]);
        rhs('/', 'div,isnone', [0, 2], [0, 2], [0, 2]);
        rhs('/', 'div,isnone', [0, 1], [0, 2], [0, 2]);
        rhs('/', 'div,isnone', [0, 1], [0, 20], [0, 10]);
        rhs('/', 'div,isnone', [0, 1], [0, 20], [0, 0, 9, 9]);
        rhs('/', 'div,isnone', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('/', 'div,isnone', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
      });

      describe('ternary with shared S', function() {

        let both = testTernaryTernarySharedArgs.bind(undefined, '!|?', '', '');          // R = A @1 B, S = A @2 C  and  R = A @1 B, S = C @2 A
        let lhs = testTernaryTernarySharedArgs.bind(undefined, '!|?', '', 'lhs');    // R = A @1 B, S = A @2 C
        let rhs = testTernaryTernarySharedArgs.bind(undefined, '!|?', '', 'rhs');    // R = A @1 B, S = C @2 A

        // R = A & B, S = A &? C
        both('&?', 'isall,isnone', [0, 1], [0, 1], [0, 1]);
        both('&?', 'isall,isnone', [0, 2], [0, 1], [0, 2]);
        both('&?', 'isall,isnone', [0, 2], [0, 2], [0, 2]);
        both('&?', 'isall,isnone', [0, 1], [0, 2], [0, 2]);
        both('&?', 'isall,isnone', [0, 1], [0, 1], [0, 10]);
        both('&?', 'isall,isnone', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('&?', 'isall,isnone', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('&?', 'isall,isnone', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('==?', 'isnone,issame', [0, 1], [0, 1], [0, 1]);
        both('==?', 'isnone,issame', [0, 2], [0, 1], [0, 2]);
        both('==?', 'isnone,issame', [0, 2], [0, 2], [0, 2]);
        both('==?', 'isnone,issame', [0, 1], [0, 2], [0, 2]);
        both('==?', 'isnone,issame', [0, 1], [0, 1], [0, 10]);
        both('==?', 'isnone,issame', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('==?', 'isnone,issame', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('==?', 'isnone,issame', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!=?', 'isdiff,isnone', [0, 1], [0, 1], [0, 1]);
        both('!=?', 'isdiff,isnone', [0, 2], [0, 1], [0, 2]);
        both('!=?', 'isdiff,isnone', [0, 2], [0, 2], [0, 2]);
        both('!=?', 'isdiff,isnone', [0, 1], [0, 2], [0, 2]);
        both('!=?', 'isdiff,isnone', [0, 1], [0, 1], [0, 10]);
        both('!=?', 'isdiff,isnone', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('!=?', 'isdiff,isnone', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!=?', 'isdiff,isnone', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<?', 'islt,isnone', [0, 1], [0, 1], [0, 1]);
        lhs('<?', 'islt,isnone', [0, 2], [0, 1], [0, 2]);
        lhs('<?', 'islt,isnone', [0, 2], [0, 2], [0, 2]);
        lhs('<?', 'islt,isnone', [0, 1], [0, 2], [0, 2]);
        lhs('<?', 'islt,isnone', [0, 1], [0, 1], [0, 10]);
        lhs('<?', 'islt,isnone', [0, 1], [0, 1], [0, 0, 9, 9]);
        lhs('<?', 'islt,isnone', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<?', 'islt,isnone', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<?', 'islt,isnone', [0, 1], [0, 1], [0, 1]);
        rhs('<?', 'islt,isnone', [0, 2], [0, 1], [0, 2]);
        rhs('<?', 'islt,isnone', [0, 2], [0, 2], [0, 2]);
        rhs('<?', 'islt,isnone', [0, 1], [0, 2], [0, 2]);
        rhs('<?', 'islt,isnone', [0, 1], [0, 1], [0, 10]);
        rhs('<?', 'islt,isnone', [0, 1], [0, 1], [0, 0, 9, 9]);
        rhs('<?', 'islt,isnone', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<?', 'islt,isnone', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<=?', 'islte,isnone', [0, 1], [0, 1], [0, 1]);
        lhs('<=?', 'islte,isnone', [0, 2], [0, 1], [0, 2]);
        lhs('<=?', 'islte,isnone', [0, 2], [0, 2], [0, 2]);
        lhs('<=?', 'islte,isnone', [0, 1], [0, 2], [0, 2]);
        lhs('<=?', 'islte,isnone', [0, 1], [0, 1], [0, 10]);
        lhs('<=?', 'islte,isnone', [0, 1], [0, 1], [0, 0, 9, 9]);
        lhs('<=?', 'islte,isnone', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<=?', 'islte,isnone', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<=?', 'islte,isnone', [0, 1], [0, 1], [0, 1]);
        rhs('<=?', 'islte,isnone', [0, 2], [0, 1], [0, 2]);
        rhs('<=?', 'islte,isnone', [0, 2], [0, 2], [0, 2]);
        rhs('<=?', 'islte,isnone', [0, 1], [0, 2], [0, 2]);
        rhs('<=?', 'islte,isnone', [0, 1], [0, 1], [0, 10]);
        rhs('<=?', 'islte,isnone', [0, 1], [0, 1], [0, 0, 9, 9]);
        rhs('<=?', 'islte,isnone', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<=?', 'islte,isnone', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!&?', 'isnall,isnone', [0, 1], [0, 1], [0, 1]);
        both('!&?', 'isnall,isnone', [0, 2], [0, 1], [0, 2]);
        both('!&?', 'isnall,isnone', [0, 2], [0, 2], [0, 2]);
        both('!&?', 'isnall,isnone', [0, 1], [0, 2], [0, 2]);
        both('!&?', 'isnall,isnone', [0, 1], [0, 1], [0, 10]);
        both('!&?', 'isnall,isnone', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('!&?', 'isnall,isnone', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!&?', 'isnall,isnone', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('|?', 'isnone,issome', [0, 1], [0, 1], [0, 1]);
        both('|?', 'isnone,issome', [0, 2], [0, 1], [0, 2]);
        both('|?', 'isnone,issome', [0, 2], [0, 2], [0, 2]);
        both('|?', 'isnone,issome', [0, 1], [0, 2], [0, 2]);
        both('|?', 'isnone,issome', [0, 1], [0, 1], [0, 10]);
        both('|?', 'isnone,issome', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('|?', 'isnone,issome', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('|?', 'isnone,issome', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!|?', 'isnone,isnone', [0, 1], [0, 1], [0, 1]);
        both('!|?', 'isnone,isnone', [0, 2], [0, 1], [0, 2]);
        both('!|?', 'isnone,isnone', [0, 2], [0, 2], [0, 2]);
        both('!|?', 'isnone,isnone', [0, 1], [0, 2], [0, 2]);
        both('!|?', 'isnone,isnone', [0, 1], [0, 1], [0, 10]);
        both('!|?', 'isnone,isnone', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('!|?', 'isnone,isnone', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!|?', 'isnone,isnone', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('+', 'isnone,issome', [0, 1], [0, 20], [0, 1]);
        both('+', 'isnone,sum', [0, 2], [0, 1], [0, 2]);
        both('+', 'isnone,sum', [0, 2], [0, 2], [0, 2]);
        both('+', 'isnone,sum', [0, 1], [0, 2], [0, 2]);
        both('+', 'isnone,issome', [0, 1], [0, 20], [0, 10]);
        both('+', 'isnone,issome', [0, 1], [0, 20], [0, 0, 9, 9]);
        both('+', 'isnone,issome', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('+', 'isnone,issome', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('-', 'isnone,minus', [0, 1], [0, 20], [0, 1]);
        lhs('-', 'isnone,minus', [0, 2], [0, 1], [0, 2]);
        lhs('-', 'isnone,minus', [0, 2], [0, 2], [0, 2]);
        lhs('-', 'isnone,minus', [0, 1], [0, 2], [0, 2]);
        lhs('-', 'isnone,minus', [0, 1], [0, 20], [0, 10]);
        lhs('-', 'isnone,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
        lhs('-', 'isnone', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('-', 'isnone,minus', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('-', 'isnone,minus', [0, 1], [0, 20], [0, 1]);
        rhs('-', 'isnone,minus', [0, 2], [0, 1], [0, 2]);
        rhs('-', 'isnone,minus', [0, 2], [0, 2], [0, 2]);
        rhs('-', 'isnone,minus', [0, 1], [0, 2], [0, 2]);
        rhs('-', 'isnone,minus', [0, 1], [0, 20], [0, 10]);
        rhs('-', 'isnone,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
        rhs('-', 'isnone,minus', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('-', 'isnone', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('*', 'isnone,product', [0, 1], [0, 100], [0, 1]);
        both('*', 'isnone,product', [0, 2], [0, 1], [0, 2]);
        both('*', 'isnone,product', [0, 2], [0, 2], [0, 2]);
        both('*', 'isnone,product', [0, 1], [0, 2], [0, 2]);
        both('*', 'isnone,product', [0, 1], [0, 100], [0, 10]);
        both('*', 'isnone,product', [0, 1], [0, 100], [0, 0, 9, 9]);
        both('*', 'isnone,product', [0, 1], [0, 100], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('*', 'isnone,product', [0, 1], [0, 100], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('/', 'div,isnone', [0, 1], [0, 20], [0, 1]);
        lhs('/', 'div,isnone', [0, 2], [0, 1], [0, 2]);
        lhs('/', 'div,isnone', [0, 2], [0, 2], [0, 2]);
        lhs('/', 'div,isnone', [0, 1], [0, 2], [0, 2]);
        lhs('/', 'div,isnone', [0, 1], [0, 20], [0, 10]);
        lhs('/', 'div,isnone', [0, 1], [0, 20], [0, 0, 9, 9]);
        lhs('/', 'div,isnone', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('/', 'div,isnone', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('/', 'div,isnone', [0, 1], [0, 20], [0, 1]);
        rhs('/', 'div,isnone', [0, 2], [0, 1], [0, 2]);
        rhs('/', 'div,isnone', [0, 2], [0, 2], [0, 2]);
        rhs('/', 'div,isnone', [0, 1], [0, 2], [0, 2]);
        rhs('/', 'div,isnone', [0, 1], [0, 20], [0, 10]);
        rhs('/', 'div,isnone', [0, 1], [0, 20], [0, 0, 9, 9]);
        rhs('/', 'div,isnone', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('/', 'div,isnone', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
      });

      describe('ternary with shared results', function() {

        let both = testTernaryTernarySharedArgs.bind(undefined, '!|?', '', '');          // R = A @1 B, S = A @2 C  and  R = A @1 B, S = C @2 A
        let lhs = testTernaryTernarySharedArgs.bind(undefined, '!|?', '', 'lhs');    // R = A @1 B, S = A @2 C
        let rhs = testTernaryTernarySharedArgs.bind(undefined, '!|?', '', 'rhs');    // R = A @1 B, S = C @2 A

        // R = A & B, S = A &? C
        both('&?', 'isall,isnone', [0, 1], [0, 1], [0, 1]);
        both('&?', 'isall,isnone', [0, 2], [0, 1], [0, 2]);
        both('&?', 'isall,isnone', [0, 2], [0, 2], [0, 2]);
        both('&?', 'isall,isnone', [0, 1], [0, 2], [0, 2]);
        both('&?', 'isall,isnone', [0, 1], [0, 1], [0, 10]);
        both('&?', 'isall,isnone', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('&?', 'isall,isnone', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('&?', 'isall,isnone', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('==?', 'isnone,issame', [0, 1], [0, 1], [0, 1]);
        both('==?', 'isnone,issame', [0, 2], [0, 1], [0, 2]);
        both('==?', 'isnone,issame', [0, 2], [0, 2], [0, 2]);
        both('==?', 'isnone,issame', [0, 1], [0, 2], [0, 2]);
        both('==?', 'isnone,issame', [0, 1], [0, 1], [0, 10]);
        both('==?', 'isnone,issame', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('==?', 'isnone,issame', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('==?', 'isnone,issame', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!=?', 'isdiff,isnone', [0, 1], [0, 1], [0, 1]);
        both('!=?', 'isdiff,isnone', [0, 2], [0, 1], [0, 2]);
        both('!=?', 'isdiff,isnone', [0, 2], [0, 2], [0, 2]);
        both('!=?', 'isdiff,isnone', [0, 1], [0, 2], [0, 2]);
        both('!=?', 'isdiff,isnone', [0, 1], [0, 1], [0, 10]);
        both('!=?', 'isdiff,isnone', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('!=?', 'isdiff,isnone', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!=?', 'isdiff,isnone', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<?', 'islt,isnone', [0, 1], [0, 1], [0, 1]);
        lhs('<?', 'islt,isnone', [0, 2], [0, 1], [0, 2]);
        lhs('<?', 'islt,isnone', [0, 2], [0, 2], [0, 2]);
        lhs('<?', 'islt,isnone', [0, 1], [0, 2], [0, 2]);
        lhs('<?', 'islt,isnone', [0, 1], [0, 1], [0, 10]);
        lhs('<?', 'islt,isnone', [0, 1], [0, 1], [0, 0, 9, 9]);
        lhs('<?', 'islt,isnone', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<?', 'islt,isnone', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<?', 'islt,isnone', [0, 1], [0, 1], [0, 1]);
        rhs('<?', 'islt,isnone', [0, 2], [0, 1], [0, 2]);
        rhs('<?', 'islt,isnone', [0, 2], [0, 2], [0, 2]);
        rhs('<?', 'islt,isnone', [0, 1], [0, 2], [0, 2]);
        rhs('<?', 'islt,isnone', [0, 1], [0, 1], [0, 10]);
        rhs('<?', 'islt,isnone', [0, 1], [0, 1], [0, 0, 9, 9]);
        rhs('<?', 'islt,isnone', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<?', 'islt,isnone', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<=?', 'islte,isnone', [0, 1], [0, 1], [0, 1]);
        lhs('<=?', 'islte,isnone', [0, 2], [0, 1], [0, 2]);
        lhs('<=?', 'islte,isnone', [0, 2], [0, 2], [0, 2]);
        lhs('<=?', 'islte,isnone', [0, 1], [0, 2], [0, 2]);
        lhs('<=?', 'islte,isnone', [0, 1], [0, 1], [0, 10]);
        lhs('<=?', 'islte,isnone', [0, 1], [0, 1], [0, 0, 9, 9]);
        lhs('<=?', 'islte,isnone', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<=?', 'islte,isnone', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<=?', 'islte,isnone', [0, 1], [0, 1], [0, 1]);
        rhs('<=?', 'islte,isnone', [0, 2], [0, 1], [0, 2]);
        rhs('<=?', 'islte,isnone', [0, 2], [0, 2], [0, 2]);
        rhs('<=?', 'islte,isnone', [0, 1], [0, 2], [0, 2]);
        rhs('<=?', 'islte,isnone', [0, 1], [0, 1], [0, 10]);
        rhs('<=?', 'islte,isnone', [0, 1], [0, 1], [0, 0, 9, 9]);
        rhs('<=?', 'islte,isnone', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<=?', 'islte,isnone', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!&?', 'isnall,isnone', [0, 1], [0, 1], [0, 1]);
        both('!&?', 'isnall,isnone', [0, 2], [0, 1], [0, 2]);
        both('!&?', 'isnall,isnone', [0, 2], [0, 2], [0, 2]);
        both('!&?', 'isnall,isnone', [0, 1], [0, 2], [0, 2]);
        both('!&?', 'isnall,isnone', [0, 1], [0, 1], [0, 10]);
        both('!&?', 'isnall,isnone', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('!&?', 'isnall,isnone', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!&?', 'isnall,isnone', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('|?', 'isnone,issome', [0, 1], [0, 1], [0, 1]);
        both('|?', 'isnone,issome', [0, 2], [0, 1], [0, 2]);
        both('|?', 'isnone,issome', [0, 2], [0, 2], [0, 2]);
        both('|?', 'isnone,issome', [0, 1], [0, 2], [0, 2]);
        both('|?', 'isnone,issome', [0, 1], [0, 1], [0, 10]);
        both('|?', 'isnone,issome', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('|?', 'isnone,issome', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('|?', 'isnone,issome', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!|?', 'isnone,isnone', [0, 1], [0, 1], [0, 1]);
        both('!|?', 'isnone,isnone', [0, 2], [0, 1], [0, 2]);
        both('!|?', 'isnone,isnone', [0, 2], [0, 2], [0, 2]);
        both('!|?', 'isnone,isnone', [0, 1], [0, 2], [0, 2]);
        both('!|?', 'isnone,isnone', [0, 1], [0, 1], [0, 10]);
        both('!|?', 'isnone,isnone', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('!|?', 'isnone,isnone', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!|?', 'isnone,isnone', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('+', 'isnone,issome', [0, 1], [0, 20], [0, 1]);
        both('+', 'isnone,sum', [0, 2], [0, 1], [0, 2]);
        both('+', 'isnone,sum', [0, 2], [0, 2], [0, 2]);
        both('+', 'isnone,sum', [0, 1], [0, 2], [0, 2]);
        both('+', 'isnone,issome', [0, 1], [0, 20], [0, 10]);
        both('+', 'isnone,issome', [0, 1], [0, 20], [0, 0, 9, 9]);
        both('+', 'isnone,issome', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('+', 'isnone,issome', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('-', 'isnone,minus', [0, 1], [0, 20], [0, 1]);
        lhs('-', 'isnone,minus', [0, 2], [0, 1], [0, 2]);
        lhs('-', 'isnone,minus', [0, 2], [0, 2], [0, 2]);
        lhs('-', 'isnone,minus', [0, 1], [0, 2], [0, 2]);
        lhs('-', 'isnone,minus', [0, 1], [0, 20], [0, 10]);
        lhs('-', 'isnone,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
        lhs('-', 'isnone', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('-', 'isnone,minus', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('-', 'isnone,minus', [0, 1], [0, 20], [0, 1]);
        rhs('-', 'isnone,minus', [0, 2], [0, 1], [0, 2]);
        rhs('-', 'isnone,minus', [0, 2], [0, 2], [0, 2]);
        rhs('-', 'isnone,minus', [0, 1], [0, 2], [0, 2]);
        rhs('-', 'isnone,minus', [0, 1], [0, 20], [0, 10]);
        rhs('-', 'isnone,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
        rhs('-', 'isnone,minus', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('-', 'isnone', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('*', 'isnone,product', [0, 1], [0, 100], [0, 1]);
        both('*', 'isnone,product', [0, 2], [0, 1], [0, 2]);
        both('*', 'isnone,product', [0, 2], [0, 2], [0, 2]);
        both('*', 'isnone,product', [0, 1], [0, 2], [0, 2]);
        both('*', 'isnone,product', [0, 1], [0, 100], [0, 10]);
        both('*', 'isnone,product', [0, 1], [0, 100], [0, 0, 9, 9]);
        both('*', 'isnone,product', [0, 1], [0, 100], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('*', 'isnone,product', [0, 1], [0, 100], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('/', 'div,isnone', [0, 1], [0, 20], [0, 1]);
        lhs('/', 'div,isnone', [0, 2], [0, 1], [0, 2]);
        lhs('/', 'div,isnone', [0, 2], [0, 2], [0, 2]);
        lhs('/', 'div,isnone', [0, 1], [0, 2], [0, 2]);
        lhs('/', 'div,isnone', [0, 1], [0, 20], [0, 10]);
        lhs('/', 'div,isnone', [0, 1], [0, 20], [0, 0, 9, 9]);
        lhs('/', 'div,isnone', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('/', 'div,isnone', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('/', 'div,isnone', [0, 1], [0, 20], [0, 1]);
        rhs('/', 'div,isnone', [0, 2], [0, 1], [0, 2]);
        rhs('/', 'div,isnone', [0, 2], [0, 2], [0, 2]);
        rhs('/', 'div,isnone', [0, 1], [0, 2], [0, 2]);
        rhs('/', 'div,isnone', [0, 1], [0, 20], [0, 10]);
        rhs('/', 'div,isnone', [0, 1], [0, 20], [0, 0, 9, 9]);
        rhs('/', 'div,isnone', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('/', 'div,isnone', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
      });
    });

    describe('ISSAME', function() {

      describe('binary with shared arg', function() {

        let both = testTernaryBinarySharedArgs.bind(undefined, '==?', '', ''); // R = A @1 B, A @2 C  and  R = A @1 B, C @2 A
        let lhs = testTernaryBinarySharedArgs.bind(undefined, '==?', '', 'lhs'); // R = A @1 B, A @2 C
        let rhs = testTernaryBinarySharedArgs.bind(undefined, '==?', '', 'rhs'); // R = A @1 B, C @2 A

        both('&', [0, 1], [0, 1]);
        both('&', 'issame', [0, 2], [0, 1]);
        both('&', 'issame', [0, 2], [0, 2]);
        both('&', 'issame', [0, 1], [0, 10]);
        both('&', 'issame', [0, 1], [0, 0, 9, 9]);
        both('&', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('&', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!=', 'issame,xor', [0, 1], [0, 1]);
        both('!=', 'issame,xor', [0, 2], [0, 1]);
        both('!=', 'diff,issame', [0, 2], [0, 2]);
        both('!=', 'diff,issame', [0, 1], [0, 10]);
        both('!=', 'issame,xor', [0, 1], [0, 0, 9, 9]);
        both('!=', 'diff,issame', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!=', 'diff,issame', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('->', 'imp,issame', [0, 1], [0, 1]);
        lhs('->', 'imp,issame', [0, 2], [0, 1]);
        lhs('->', 'imp,issame', [0, 2], [0, 1]);
        lhs('->', 'imp,issame', [0, 1], [0, 10]);
        lhs('->', 'imp,issame', [0, 1], [0, 0, 9, 9]);
        lhs('->', 'imp,issame', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('->', 'imp,issame', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('->', 'imp,issame', [0, 1], [0, 1]);
        rhs('->', 'imp,issame', [0, 2], [0, 1]);
        rhs('->', 'imp,issame', [0, 2], [0, 2]);
        rhs('->', 'imp,issame', [0, 1], [0, 10]);
        rhs('->', 'imp,issame', [0, 1], [0, 0, 9, 9]);
        rhs('->', 'imp,issame', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('->', 'imp,issame', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<', 'xor', [0, 1], [0, 1]);
        lhs('<', 'xor', [0, 2], [0, 1]);
        lhs('<', 'issame,lt', [0, 2], [0, 2]);
        lhs('<', 'issame,lt', [0, 1], [0, 10]);
        lhs('<', 'xor', [0, 1], [0, 0, 9, 9]);
        lhs('<', 'issame', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<', 'xor', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<', [0, 1], [0, 1]);
        rhs('<', 'issame', [0, 2], [0, 1]);
        rhs('<', 'issame,lt', [0, 2], [0, 2]);
        rhs('<', 'issame,lt', [0, 1], [0, 10]);
        rhs('<', 'issame', [0, 1], [0, 0, 9, 9]);
        rhs('<', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<=', 'imp,issame', [0, 1], [0, 1]);
        lhs('<=', 'imp,issame', [0, 2], [0, 1]);
        lhs('<=', 'issame,lte', [0, 2], [0, 2]);
        lhs('<=', 'issame,lte', [0, 1], [0, 10]);
        lhs('<=', 'imp,issame', [0, 1], [0, 0, 9, 9]);
        lhs('<=', 'imp,issame', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<=', 'xor', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<=', 'imp,issame', [0, 1], [0, 1]);
        rhs('<=', 'imp,issame', [0, 2], [0, 1]);
        rhs('<=', 'issame,lte', [0, 2], [0, 2]);
        rhs('<=', 'issame,lte', [0, 1], [0, 10]);
        rhs('<=', 'imp,issame', [0, 1], [0, 0, 9, 9]);
        rhs('<=', 'issame', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<=', 'imp,issame', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!&', 'issame,nall', [0, 1], [0, 1]);
        both('!&', 'issame,nall', [0, 2], [0, 1]);
        both('!&', 'issame,nall', [0, 2], [0, 2]);
        both('!&', 'issame,nall', [0, 1], [0, 10]);
        both('!&', 'issame,nall', [0, 1], [0, 0, 9, 9]);
        both('!&', 'issame,nall', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!&', 'issame,nall', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('!->', [0, 1], [0, 1]);
        lhs('!->', 'issame', [0, 2], [0, 1]);
        lhs('!->', 'issame', [0, 2], [0, 2]);
        lhs('!->', 'issame', [0, 1], [0, 10]);
        lhs('!->', 'issame', [0, 1], [0, 0, 9, 9]);
        lhs('!->', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('!->', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('!->', 'xor', [0, 1], [0, 1]);
        rhs('!->', 'xor', [0, 2], [0, 1]);
        rhs('!->', 'xor', [0, 2], [0, 2]);
        rhs('!->', 'xor', [0, 1], [0, 10]);
        rhs('!->', 'xor', [0, 1], [0, 0, 9, 9]);
        rhs('!->', 'xor', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('!->', 'xor', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!|', 'xor', [0, 1], [0, 1]);
        both('!|', 'xor', [0, 2], [0, 1]);
        both('!|', 'xor', [0, 2], [0, 2]);
        both('!|', 'xor', [0, 1], [0, 10]);
        both('!|', 'xor', [0, 1], [0, 0, 9, 9]);
        both('!|', 'xor', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!|', 'xor', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('==', 'issame', [0, 1], [0, 1]);
        both('==', 'issame', [0, 2], [0, 1]);
        both('==', 'issame', [0, 2], [0, 2]);
        both('==', 'issame', [0, 1], [0, 10]);
        both('==', 'issame', [0, 1], [0, 0, 9, 9]);
        both('==', 'xor', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('==', 'xor', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!^', 'issame', [0, 1], [0, 1]);
        both('!^', 'issame', [0, 2], [0, 1]);
        both('!^', 'issame', [0, 2], [0, 2]);
        both('!^', 'issame', [0, 1], [0, 10]);
        both('!^', 'issame', [0, 1], [0, 0, 9, 9]);
        both('!^', 'issame', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!^', 'issame', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('^', 'issame,xor', [0, 1], [0, 1]);
        both('^', 'issame,xor', [0, 2], [0, 1]);
        both('^', 'issame,xor', [0, 2], [0, 2]);
        both('^', 'issame,xor', [0, 1], [0, 10]);
        both('^', 'issame,xor', [0, 1], [0, 0, 9, 9]);
        both('^', 'issame,xor', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('^', 'issame,xor', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
      });

      describe('binary with shared result', function() {

        let both = testTernaryBinarySharedArgs.bind(undefined, '==?', '', ''); // R = A @1 B, A @2 C  and  R = A @1 B, C @2 A
        let lhs = testTernaryBinarySharedArgs.bind(undefined, '==?', '', 'lhs'); // R = A @1 B, A @2 C
        let rhs = testTernaryBinarySharedArgs.bind(undefined, '==?', '', 'rhs'); // R = A @1 B, C @2 A

        both('&', [0, 1], [0, 1]);
        both('&', 'issame', [0, 2], [0, 1]);
        both('&', 'issame', [0, 2], [0, 2]);
        both('&', 'issame', [0, 1], [0, 10]);
        both('&', 'issame', [0, 1], [0, 0, 9, 9]);
        both('&', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('&', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!=', 'issame,xor', [0, 1], [0, 1]);
        both('!=', 'issame,xor', [0, 2], [0, 1]);
        both('!=', 'diff,issame', [0, 2], [0, 2]);
        both('!=', 'diff,issame', [0, 1], [0, 10]);
        both('!=', 'issame,xor', [0, 1], [0, 0, 9, 9]);
        both('!=', 'diff,issame', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!=', 'diff,issame', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('->', 'imp,issame', [0, 1], [0, 1]);
        lhs('->', 'imp,issame', [0, 2], [0, 1]);
        lhs('->', 'imp,issame', [0, 2], [0, 1]);
        lhs('->', 'imp,issame', [0, 1], [0, 10]);
        lhs('->', 'imp,issame', [0, 1], [0, 0, 9, 9]);
        lhs('->', 'imp,issame', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('->', 'imp,issame', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('->', 'imp,issame', [0, 1], [0, 1]);
        rhs('->', 'imp,issame', [0, 2], [0, 1]);
        rhs('->', 'imp,issame', [0, 2], [0, 2]);
        rhs('->', 'imp,issame', [0, 1], [0, 10]);
        rhs('->', 'imp,issame', [0, 1], [0, 0, 9, 9]);
        rhs('->', 'imp,issame', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('->', 'imp,issame', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<', 'xor', [0, 1], [0, 1]);
        lhs('<', 'xor', [0, 2], [0, 1]);
        lhs('<', 'issame,lt', [0, 2], [0, 2]);
        lhs('<', 'issame,lt', [0, 1], [0, 10]);
        lhs('<', 'xor', [0, 1], [0, 0, 9, 9]);
        lhs('<', 'issame', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<', 'xor', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<', [0, 1], [0, 1]);
        rhs('<', 'issame', [0, 2], [0, 1]);
        rhs('<', 'issame,lt', [0, 2], [0, 2]);
        rhs('<', 'issame,lt', [0, 1], [0, 10]);
        rhs('<', 'issame', [0, 1], [0, 0, 9, 9]);
        rhs('<', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<=', 'imp,issame', [0, 1], [0, 1]);
        lhs('<=', 'imp,issame', [0, 2], [0, 1]);
        lhs('<=', 'issame,lte', [0, 2], [0, 2]);
        lhs('<=', 'issame,lte', [0, 1], [0, 10]);
        lhs('<=', 'imp,issame', [0, 1], [0, 0, 9, 9]);
        lhs('<=', 'imp,issame', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<=', 'xor', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<=', 'imp,issame', [0, 1], [0, 1]);
        rhs('<=', 'imp,issame', [0, 2], [0, 1]);
        rhs('<=', 'issame,lte', [0, 2], [0, 2]);
        rhs('<=', 'issame,lte', [0, 1], [0, 10]);
        rhs('<=', 'imp,issame', [0, 1], [0, 0, 9, 9]);
        rhs('<=', 'issame', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<=', 'imp,issame', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!&', 'issame,nall', [0, 1], [0, 1]);
        both('!&', 'issame,nall', [0, 2], [0, 1]);
        both('!&', 'issame,nall', [0, 2], [0, 2]);
        both('!&', 'issame,nall', [0, 1], [0, 10]);
        both('!&', 'issame,nall', [0, 1], [0, 0, 9, 9]);
        both('!&', 'issame,nall', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!&', 'issame,nall', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('!->', [0, 1], [0, 1]);
        lhs('!->', 'issame', [0, 2], [0, 1]);
        lhs('!->', 'issame', [0, 2], [0, 2]);
        lhs('!->', 'issame', [0, 1], [0, 10]);
        lhs('!->', 'issame', [0, 1], [0, 0, 9, 9]);
        lhs('!->', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('!->', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('!->', 'xor', [0, 1], [0, 1]);
        rhs('!->', 'xor', [0, 2], [0, 1]);
        rhs('!->', 'xor', [0, 2], [0, 2]);
        rhs('!->', 'xor', [0, 1], [0, 10]);
        rhs('!->', 'xor', [0, 1], [0, 0, 9, 9]);
        rhs('!->', 'xor', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('!->', 'xor', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!|', 'xor', [0, 1], [0, 1]);
        both('!|', 'xor', [0, 2], [0, 1]);
        both('!|', 'xor', [0, 2], [0, 2]);
        both('!|', 'xor', [0, 1], [0, 10]);
        both('!|', 'xor', [0, 1], [0, 0, 9, 9]);
        both('!|', 'xor', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!|', 'xor', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('==', 'issame', [0, 1], [0, 1]);
        both('==', 'issame', [0, 2], [0, 1]);
        both('==', 'issame', [0, 2], [0, 2]);
        both('==', 'issame', [0, 1], [0, 10]);
        both('==', 'issame', [0, 1], [0, 0, 9, 9]);
        both('==', 'xor', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('==', 'xor', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!^', 'issame', [0, 1], [0, 1]);
        both('!^', 'issame', [0, 2], [0, 1]);
        both('!^', 'issame', [0, 2], [0, 2]);
        both('!^', 'issame', [0, 1], [0, 10]);
        both('!^', 'issame', [0, 1], [0, 0, 9, 9]);
        both('!^', 'issame', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!^', 'issame', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('^', 'issame,xor', [0, 1], [0, 1]);
        both('^', 'issame,xor', [0, 2], [0, 1]);
        both('^', 'issame,xor', [0, 2], [0, 2]);
        both('^', 'issame,xor', [0, 1], [0, 10]);
        both('^', 'issame,xor', [0, 1], [0, 0, 9, 9]);
        both('^', 'issame,xor', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('^', 'issame,xor', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
      });

      describe('ternary with shared args', function() {

        let both = testTernaryTernarySharedArgs.bind(undefined, '==?', '', '');          // R = A @1 B, S = A @2 C  and  R = A @1 B, S = C @2 A
        let lhs = testTernaryTernarySharedArgs.bind(undefined, '==?', '', 'lhs');    // R = A @1 B, S = A @2 C
        let rhs = testTernaryTernarySharedArgs.bind(undefined, '==?', '', 'rhs');    // R = A @1 B, S = C @2 A

        // R = A & B, S = A &? C
        both('&?', 'isall,issame', [0, 1], [0, 1], [0, 1]);
        both('&?', 'isall,issame', [0, 2], [0, 1], [0, 2]);
        both('&?', 'isall,issame', [0, 2], [0, 2], [0, 2]);
        both('&?', 'isall,issame', [0, 1], [0, 2], [0, 2]);
        both('&?', 'isall,issame', [0, 1], [0, 1], [0, 10]);
        both('&?', 'isall,issame', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('&?', 'isall,issame', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('&?', 'isall,issame', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('==?', 'issame,issame', [0, 1], [0, 1], [0, 1]);
        both('==?', 'issame,issame', [0, 2], [0, 1], [0, 2]);
        both('==?', 'issame,issame', [0, 2], [0, 2], [0, 2]);
        both('==?', 'issame,issame', [0, 1], [0, 2], [0, 2]);
        both('==?', 'issame,issame', [0, 1], [0, 1], [0, 10]);
        both('==?', 'issame,issame', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('==?', 'issame,issame', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('==?', 'issame,issame', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!=?', 'isdiff,issame', [0, 1], [0, 1], [0, 1]);
        both('!=?', 'isdiff,issame', [0, 2], [0, 1], [0, 2]);
        both('!=?', 'isdiff,issame', [0, 2], [0, 2], [0, 2]);
        both('!=?', 'isdiff,issame', [0, 1], [0, 2], [0, 2]);
        both('!=?', 'isdiff,issame', [0, 1], [0, 1], [0, 10]);
        both('!=?', 'isdiff,issame', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('!=?', 'isdiff,issame', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!=?', 'isdiff,issame', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<?', 'islt,issame', [0, 1], [0, 1], [0, 1]);
        lhs('<?', 'islt,issame', [0, 2], [0, 1], [0, 2]);
        lhs('<?', 'islt,issame', [0, 2], [0, 2], [0, 2]);
        lhs('<?', 'islt,issame', [0, 1], [0, 2], [0, 2]);
        lhs('<?', 'islt,issame', [0, 1], [0, 1], [0, 10]);
        lhs('<?', 'islt,issame', [0, 1], [0, 1], [0, 0, 9, 9]);
        lhs('<?', 'islt,issame', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<?', 'islt,issame', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<?', 'islt,issame', [0, 1], [0, 1], [0, 1]);
        rhs('<?', 'islt,issame', [0, 2], [0, 1], [0, 2]);
        rhs('<?', 'islt,issame', [0, 2], [0, 2], [0, 2]);
        rhs('<?', 'islt,issame', [0, 1], [0, 2], [0, 2]);
        rhs('<?', 'islt,issame', [0, 1], [0, 1], [0, 10]);
        rhs('<?', 'islt,issame', [0, 1], [0, 1], [0, 0, 9, 9]);
        rhs('<?', 'islt,issame', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<?', 'islt,issame', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<=?', 'islte,issame', [0, 1], [0, 1], [0, 1]);
        lhs('<=?', 'islte,issame', [0, 2], [0, 1], [0, 2]);
        lhs('<=?', 'islte,issame', [0, 2], [0, 2], [0, 2]);
        lhs('<=?', 'islte,issame', [0, 1], [0, 2], [0, 2]);
        lhs('<=?', 'islte,issame', [0, 1], [0, 1], [0, 10]);
        lhs('<=?', 'islte,issame', [0, 1], [0, 1], [0, 0, 9, 9]);
        lhs('<=?', 'islte,issame', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<=?', 'islte,issame', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<=?', 'islte,issame', [0, 1], [0, 1], [0, 1]);
        rhs('<=?', 'islte,issame', [0, 2], [0, 1], [0, 2]);
        rhs('<=?', 'islte,issame', [0, 2], [0, 2], [0, 2]);
        rhs('<=?', 'islte,issame', [0, 1], [0, 2], [0, 2]);
        rhs('<=?', 'islte,issame', [0, 1], [0, 1], [0, 10]);
        rhs('<=?', 'islte,issame', [0, 1], [0, 1], [0, 0, 9, 9]);
        rhs('<=?', 'islte,issame', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<=?', 'islte,issame', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!&?', 'isnall,issame', [0, 1], [0, 1], [0, 1]);
        both('!&?', 'isnall,issame', [0, 2], [0, 1], [0, 2]);
        both('!&?', 'isnall,issame', [0, 2], [0, 2], [0, 2]);
        both('!&?', 'isnall,issame', [0, 1], [0, 2], [0, 2]);
        both('!&?', 'isnall,issame', [0, 1], [0, 1], [0, 10]);
        both('!&?', 'isnall,issame', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('!&?', 'isnall,issame', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!&?', 'isnall,issame', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('|?', 'issame,issome', [0, 1], [0, 1], [0, 1]);
        both('|?', 'issame,issome', [0, 2], [0, 1], [0, 2]);
        both('|?', 'issame,issome', [0, 2], [0, 2], [0, 2]);
        both('|?', 'issame,issome', [0, 1], [0, 2], [0, 2]);
        both('|?', 'issame,issome', [0, 1], [0, 1], [0, 10]);
        both('|?', 'issame,issome', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('|?', 'issame,issome', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('|?', 'issame,issome', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!|?', 'isnone,issame', [0, 1], [0, 1], [0, 1]);
        both('!|?', 'isnone,issame', [0, 2], [0, 1], [0, 2]);
        both('!|?', 'isnone,issame', [0, 2], [0, 2], [0, 2]);
        both('!|?', 'isnone,issame', [0, 1], [0, 2], [0, 2]);
        both('!|?', 'isnone,issame', [0, 1], [0, 1], [0, 10]);
        both('!|?', 'isnone,issame', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('!|?', 'isnone,issame', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!|?', 'isnone,issame', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('+', 'issame,issome', [0, 1], [0, 20], [0, 1]);
        both('+', 'issame,sum', [0, 2], [0, 1], [0, 2]);
        both('+', 'issame,sum', [0, 2], [0, 2], [0, 2]);
        both('+', 'issame,sum', [0, 1], [0, 2], [0, 2]);
        both('+', 'issame,issome', [0, 1], [0, 20], [0, 10]);
        both('+', 'issame,issome', [0, 1], [0, 20], [0, 0, 9, 9]);
        both('+', 'issame,issome', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('+', 'issame,issome', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('-', 'issame,minus', [0, 1], [0, 20], [0, 1]);
        lhs('-', 'issame,minus', [0, 2], [0, 1], [0, 2]);
        lhs('-', 'issame,minus', [0, 2], [0, 2], [0, 2]);
        lhs('-', 'issame,minus', [0, 1], [0, 2], [0, 2]);
        lhs('-', 'issame,minus', [0, 1], [0, 20], [0, 10]);
        lhs('-', 'issame,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
        lhs('-', 'issame', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('-', 'issame,minus', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('-', 'issame,minus', [0, 1], [0, 20], [0, 1]);
        rhs('-', 'issame,minus', [0, 2], [0, 1], [0, 2]);
        rhs('-', 'issame,minus', [0, 2], [0, 2], [0, 2]);
        rhs('-', 'issame,minus', [0, 1], [0, 2], [0, 2]);
        rhs('-', 'issame,minus', [0, 1], [0, 20], [0, 10]);
        rhs('-', 'issame,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
        rhs('-', 'issame,minus', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('-', 'xor', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('*', 'issame,product', [0, 1], [0, 100], [0, 1]);
        both('*', 'issame,product', [0, 2], [0, 1], [0, 2]);
        both('*', 'issame,product', [0, 2], [0, 2], [0, 2]);
        both('*', 'issame,product', [0, 1], [0, 2], [0, 2]);
        both('*', 'issame,product', [0, 1], [0, 100], [0, 10]);
        both('*', 'issame,product', [0, 1], [0, 100], [0, 0, 9, 9]);
        both('*', 'issame,product', [0, 1], [0, 100], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('*', 'issame,product', [0, 1], [0, 100], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('/', 'div,issame', [0, 1], [0, 20], [0, 1]);
        lhs('/', 'div,issame', [0, 2], [0, 1], [0, 2]);
        lhs('/', 'div,issame', [0, 2], [0, 2], [0, 2]);
        lhs('/', 'div,issame', [0, 1], [0, 2], [0, 2]);
        lhs('/', 'div,issame', [0, 1], [0, 20], [0, 10]);
        lhs('/', 'div,issame', [0, 1], [0, 20], [0, 0, 9, 9]);
        lhs('/', 'div,issame', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('/', 'div,issame', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('/', 'div,issame', [0, 1], [0, 20], [0, 1]);
        rhs('/', 'div,issame', [0, 2], [0, 1], [0, 2]);
        rhs('/', 'div,issame', [0, 2], [0, 2], [0, 2]);
        rhs('/', 'div,issame', [0, 1], [0, 2], [0, 2]);
        rhs('/', 'div,issame', [0, 1], [0, 20], [0, 10]);
        rhs('/', 'div,issame', [0, 1], [0, 20], [0, 0, 9, 9]);
        rhs('/', 'div,issame', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('/', 'div,issame', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
      });

      describe('ternary with shared R', function() {

        let both = testTernaryTernarySharedArgs.bind(undefined, '==?', '', '');          // R = A @1 B, S = A @2 C  and  R = A @1 B, S = C @2 A
        let lhs = testTernaryTernarySharedArgs.bind(undefined, '==?', '', 'lhs');    // R = A @1 B, S = A @2 C
        let rhs = testTernaryTernarySharedArgs.bind(undefined, '==?', '', 'rhs');    // R = A @1 B, S = C @2 A

        // R = A & B, S = A &? C
        both('&?', 'isall,issame', [0, 1], [0, 1], [0, 1]);
        both('&?', 'isall,issame', [0, 2], [0, 1], [0, 2]);
        both('&?', 'isall,issame', [0, 2], [0, 2], [0, 2]);
        both('&?', 'isall,issame', [0, 1], [0, 2], [0, 2]);
        both('&?', 'isall,issame', [0, 1], [0, 1], [0, 10]);
        both('&?', 'isall,issame', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('&?', 'isall,issame', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('&?', 'isall,issame', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('==?', 'issame,issame', [0, 1], [0, 1], [0, 1]);
        both('==?', 'issame,issame', [0, 2], [0, 1], [0, 2]);
        both('==?', 'issame,issame', [0, 2], [0, 2], [0, 2]);
        both('==?', 'issame,issame', [0, 1], [0, 2], [0, 2]);
        both('==?', 'issame,issame', [0, 1], [0, 1], [0, 10]);
        both('==?', 'issame,issame', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('==?', 'issame,issame', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('==?', 'issame,issame', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!=?', 'isdiff,issame', [0, 1], [0, 1], [0, 1]);
        both('!=?', 'isdiff,issame', [0, 2], [0, 1], [0, 2]);
        both('!=?', 'isdiff,issame', [0, 2], [0, 2], [0, 2]);
        both('!=?', 'isdiff,issame', [0, 1], [0, 2], [0, 2]);
        both('!=?', 'isdiff,issame', [0, 1], [0, 1], [0, 10]);
        both('!=?', 'isdiff,issame', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('!=?', 'isdiff,issame', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!=?', 'isdiff,issame', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<?', 'islt,issame', [0, 1], [0, 1], [0, 1]);
        lhs('<?', 'islt,issame', [0, 2], [0, 1], [0, 2]);
        lhs('<?', 'islt,issame', [0, 2], [0, 2], [0, 2]);
        lhs('<?', 'islt,issame', [0, 1], [0, 2], [0, 2]);
        lhs('<?', 'islt,issame', [0, 1], [0, 1], [0, 10]);
        lhs('<?', 'islt,issame', [0, 1], [0, 1], [0, 0, 9, 9]);
        lhs('<?', 'islt,issame', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<?', 'islt,issame', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]); // xxx

        rhs('<?', 'islt,issame', [0, 1], [0, 1], [0, 1]);
        rhs('<?', 'islt,issame', [0, 2], [0, 1], [0, 2]);
        rhs('<?', 'islt,issame', [0, 2], [0, 2], [0, 2]);
        rhs('<?', 'islt,issame', [0, 1], [0, 2], [0, 2]);
        rhs('<?', 'islt,issame', [0, 1], [0, 1], [0, 10]);
        rhs('<?', 'islt,issame', [0, 1], [0, 1], [0, 0, 9, 9]);
        rhs('<?', 'islt,issame', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<?', 'islt,issame', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<=?', 'islte,issame', [0, 1], [0, 1], [0, 1]);
        lhs('<=?', 'islte,issame', [0, 2], [0, 1], [0, 2]);
        lhs('<=?', 'islte,issame', [0, 2], [0, 2], [0, 2]);
        lhs('<=?', 'islte,issame', [0, 1], [0, 2], [0, 2]);
        lhs('<=?', 'islte,issame', [0, 1], [0, 1], [0, 10]);
        lhs('<=?', 'islte,issame', [0, 1], [0, 1], [0, 0, 9, 9]);
        lhs('<=?', 'islte,issame', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<=?', 'islte,issame', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<=?', 'islte,issame', [0, 1], [0, 1], [0, 1]);
        rhs('<=?', 'islte,issame', [0, 2], [0, 1], [0, 2]);
        rhs('<=?', 'islte,issame', [0, 2], [0, 2], [0, 2]);
        rhs('<=?', 'islte,issame', [0, 1], [0, 2], [0, 2]);
        rhs('<=?', 'islte,issame', [0, 1], [0, 1], [0, 10]);
        rhs('<=?', 'islte,issame', [0, 1], [0, 1], [0, 0, 9, 9]);
        rhs('<=?', 'islte,issame', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<=?', 'islte,issame', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!&?', 'isnall,issame', [0, 1], [0, 1], [0, 1]);
        both('!&?', 'isnall,issame', [0, 2], [0, 1], [0, 2]);
        both('!&?', 'isnall,issame', [0, 2], [0, 2], [0, 2]);
        both('!&?', 'isnall,issame', [0, 1], [0, 2], [0, 2]);
        both('!&?', 'isnall,issame', [0, 1], [0, 1], [0, 10]);
        both('!&?', 'isnall,issame', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('!&?', 'isnall,issame', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!&?', 'isnall,issame', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('|?', 'issame,issome', [0, 1], [0, 1], [0, 1]);
        both('|?', 'issame,issome', [0, 2], [0, 1], [0, 2]);
        both('|?', 'issame,issome', [0, 2], [0, 2], [0, 2]);
        both('|?', 'issame,issome', [0, 1], [0, 2], [0, 2]);
        both('|?', 'issame,issome', [0, 1], [0, 1], [0, 10]);
        both('|?', 'issame,issome', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('|?', 'issame,issome', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('|?', 'issame,issome', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!|?', 'isnone,issame', [0, 1], [0, 1], [0, 1]);
        both('!|?', 'isnone,issame', [0, 2], [0, 1], [0, 2]);
        both('!|?', 'isnone,issame', [0, 2], [0, 2], [0, 2]);
        both('!|?', 'isnone,issame', [0, 1], [0, 2], [0, 2]);
        both('!|?', 'isnone,issame', [0, 1], [0, 1], [0, 10]);
        both('!|?', 'isnone,issame', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('!|?', 'isnone,issame', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!|?', 'isnone,issame', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('+', 'issame,issome', [0, 1], [0, 20], [0, 1]);
        both('+', 'issame,sum', [0, 2], [0, 1], [0, 2]);
        both('+', 'issame,sum', [0, 2], [0, 2], [0, 2]);
        both('+', 'issame,sum', [0, 1], [0, 2], [0, 2]);
        both('+', 'issame,issome', [0, 1], [0, 20], [0, 10]);
        both('+', 'issame,issome', [0, 1], [0, 20], [0, 0, 9, 9]);
        both('+', 'issame,issome', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('+', 'issame,issome', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('-', 'issame,minus', [0, 1], [0, 20], [0, 1]);
        lhs('-', 'issame,minus', [0, 2], [0, 1], [0, 2]);
        lhs('-', 'issame,minus', [0, 2], [0, 2], [0, 2]);
        lhs('-', 'issame,minus', [0, 1], [0, 2], [0, 2]);
        lhs('-', 'issame,minus', [0, 1], [0, 20], [0, 10]);
        lhs('-', 'issame,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
        lhs('-', 'issame', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('-', 'issame,minus', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('-', 'issame,minus', [0, 1], [0, 20], [0, 1]);
        rhs('-', 'issame,minus', [0, 2], [0, 1], [0, 2]);
        rhs('-', 'issame,minus', [0, 2], [0, 2], [0, 2]);
        rhs('-', 'issame,minus', [0, 1], [0, 2], [0, 2]);
        rhs('-', 'issame,minus', [0, 1], [0, 20], [0, 10]);
        rhs('-', 'issame,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
        rhs('-', 'issame,minus', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('-', 'xor', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('*', 'issame,product', [0, 1], [0, 100], [0, 1]);
        both('*', 'issame,product', [0, 2], [0, 1], [0, 2]);
        both('*', 'issame,product', [0, 2], [0, 2], [0, 2]);
        both('*', 'issame,product', [0, 1], [0, 2], [0, 2]);
        both('*', 'issame,product', [0, 1], [0, 100], [0, 10]);
        both('*', 'issame,product', [0, 1], [0, 100], [0, 0, 9, 9]);
        both('*', 'issame,product', [0, 1], [0, 100], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('*', 'issame,product', [0, 1], [0, 100], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('/', 'div,issame', [0, 1], [0, 20], [0, 1]);
        lhs('/', 'div,issame', [0, 2], [0, 1], [0, 2]);
        lhs('/', 'div,issame', [0, 2], [0, 2], [0, 2]);
        lhs('/', 'div,issame', [0, 1], [0, 2], [0, 2]);
        lhs('/', 'div,issame', [0, 1], [0, 20], [0, 10]);
        lhs('/', 'div,issame', [0, 1], [0, 20], [0, 0, 9, 9]);
        lhs('/', 'div,issame', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('/', 'div,issame', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('/', 'div,issame', [0, 1], [0, 20], [0, 1]);
        rhs('/', 'div,issame', [0, 2], [0, 1], [0, 2]);
        rhs('/', 'div,issame', [0, 2], [0, 2], [0, 2]);
        rhs('/', 'div,issame', [0, 1], [0, 2], [0, 2]);
        rhs('/', 'div,issame', [0, 1], [0, 20], [0, 10]);
        rhs('/', 'div,issame', [0, 1], [0, 20], [0, 0, 9, 9]);
        rhs('/', 'div,issame', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('/', 'div,issame', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
      });

      describe('ternary with shared S', function() {

        let both = testTernaryTernarySharedArgs.bind(undefined, '==?', '', '');          // R = A @1 B, S = A @2 C  and  R = A @1 B, S = C @2 A
        let lhs = testTernaryTernarySharedArgs.bind(undefined, '==?', '', 'lhs');    // R = A @1 B, S = A @2 C
        let rhs = testTernaryTernarySharedArgs.bind(undefined, '==?', '', 'rhs');    // R = A @1 B, S = C @2 A

        // R = A & B, S = A &? C
        both('&?', 'isall,issame', [0, 1], [0, 1], [0, 1]);
        both('&?', 'isall,issame', [0, 2], [0, 1], [0, 2]);
        both('&?', 'isall,issame', [0, 2], [0, 2], [0, 2]);
        both('&?', 'isall,issame', [0, 1], [0, 2], [0, 2]);
        both('&?', 'isall,issame', [0, 1], [0, 1], [0, 10]);
        both('&?', 'isall,issame', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('&?', 'isall,issame', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('&?', 'isall,issame', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('==?', 'issame,issame', [0, 1], [0, 1], [0, 1]);
        both('==?', 'issame,issame', [0, 2], [0, 1], [0, 2]);
        both('==?', 'issame,issame', [0, 2], [0, 2], [0, 2]);
        both('==?', 'issame,issame', [0, 1], [0, 2], [0, 2]);
        both('==?', 'issame,issame', [0, 1], [0, 1], [0, 10]);
        both('==?', 'issame,issame', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('==?', 'issame,issame', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('==?', 'issame,issame', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!=?', 'isdiff,issame', [0, 1], [0, 1], [0, 1]);
        both('!=?', 'isdiff,issame', [0, 2], [0, 1], [0, 2]);
        both('!=?', 'isdiff,issame', [0, 2], [0, 2], [0, 2]);
        both('!=?', 'isdiff,issame', [0, 1], [0, 2], [0, 2]);
        both('!=?', 'isdiff,issame', [0, 1], [0, 1], [0, 10]);
        both('!=?', 'isdiff,issame', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('!=?', 'isdiff,issame', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!=?', 'isdiff,issame', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<?', 'islt,issame', [0, 1], [0, 1], [0, 1]);
        lhs('<?', 'islt,issame', [0, 2], [0, 1], [0, 2]);
        lhs('<?', 'islt,issame', [0, 2], [0, 2], [0, 2]);
        lhs('<?', 'islt,issame', [0, 1], [0, 2], [0, 2]);
        lhs('<?', 'islt,issame', [0, 1], [0, 1], [0, 10]);
        lhs('<?', 'islt,issame', [0, 1], [0, 1], [0, 0, 9, 9]);
        lhs('<?', 'islt,issame', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<?', 'islt,issame', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<?', 'islt,issame', [0, 1], [0, 1], [0, 1]);
        rhs('<?', 'islt,issame', [0, 2], [0, 1], [0, 2]);
        rhs('<?', 'islt,issame', [0, 2], [0, 2], [0, 2]);
        rhs('<?', 'islt,issame', [0, 1], [0, 2], [0, 2]);
        rhs('<?', 'islt,issame', [0, 1], [0, 1], [0, 10]);
        rhs('<?', 'islt,issame', [0, 1], [0, 1], [0, 0, 9, 9]);
        rhs('<?', 'islt,issame', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<?', 'islt,issame', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<=?', 'islte,issame', [0, 1], [0, 1], [0, 1]);
        lhs('<=?', 'islte,issame', [0, 2], [0, 1], [0, 2]);
        lhs('<=?', 'islte,issame', [0, 2], [0, 2], [0, 2]);
        lhs('<=?', 'islte,issame', [0, 1], [0, 2], [0, 2]);
        lhs('<=?', 'islte,issame', [0, 1], [0, 1], [0, 10]);
        lhs('<=?', 'islte,issame', [0, 1], [0, 1], [0, 0, 9, 9]);
        lhs('<=?', 'islte,issame', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<=?', 'islte,issame', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<=?', 'islte,issame', [0, 1], [0, 1], [0, 1]);
        rhs('<=?', 'islte,issame', [0, 2], [0, 1], [0, 2]);
        rhs('<=?', 'islte,issame', [0, 2], [0, 2], [0, 2]);
        rhs('<=?', 'islte,issame', [0, 1], [0, 2], [0, 2]);
        rhs('<=?', 'islte,issame', [0, 1], [0, 1], [0, 10]);
        rhs('<=?', 'islte,issame', [0, 1], [0, 1], [0, 0, 9, 9]);
        rhs('<=?', 'islte,issame', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<=?', 'islte,issame', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!&?', 'isnall,issame', [0, 1], [0, 1], [0, 1]);
        both('!&?', 'isnall,issame', [0, 2], [0, 1], [0, 2]);
        both('!&?', 'isnall,issame', [0, 2], [0, 2], [0, 2]);
        both('!&?', 'isnall,issame', [0, 1], [0, 2], [0, 2]);
        both('!&?', 'isnall,issame', [0, 1], [0, 1], [0, 10]);
        both('!&?', 'isnall,issame', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('!&?', 'isnall,issame', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!&?', 'isnall,issame', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('|?', 'issame,issome', [0, 1], [0, 1], [0, 1]);
        both('|?', 'issame,issome', [0, 2], [0, 1], [0, 2]);
        both('|?', 'issame,issome', [0, 2], [0, 2], [0, 2]);
        both('|?', 'issame,issome', [0, 1], [0, 2], [0, 2]);
        both('|?', 'issame,issome', [0, 1], [0, 1], [0, 10]);
        both('|?', 'issame,issome', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('|?', 'issame,issome', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('|?', 'issame,issome', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!|?', 'isnone,issame', [0, 1], [0, 1], [0, 1]);
        both('!|?', 'isnone,issame', [0, 2], [0, 1], [0, 2]);
        both('!|?', 'isnone,issame', [0, 2], [0, 2], [0, 2]);
        both('!|?', 'isnone,issame', [0, 1], [0, 2], [0, 2]);
        both('!|?', 'isnone,issame', [0, 1], [0, 1], [0, 10]);
        both('!|?', 'isnone,issame', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('!|?', 'isnone,issame', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!|?', 'isnone,issame', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('+', 'issame,issome', [0, 1], [0, 20], [0, 1]);
        both('+', 'issame,sum', [0, 2], [0, 1], [0, 2]);
        both('+', 'issame,sum', [0, 2], [0, 2], [0, 2]);
        both('+', 'issame,sum', [0, 1], [0, 2], [0, 2]);
        both('+', 'issame,issome', [0, 1], [0, 20], [0, 10]);
        both('+', 'issame,issome', [0, 1], [0, 20], [0, 0, 9, 9]);
        both('+', 'issame,issome', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('+', 'issame,issome', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('-', 'issame,minus', [0, 1], [0, 20], [0, 1]);
        lhs('-', 'issame,minus', [0, 2], [0, 1], [0, 2]);
        lhs('-', 'issame,minus', [0, 2], [0, 2], [0, 2]);
        lhs('-', 'issame,minus', [0, 1], [0, 2], [0, 2]);
        lhs('-', 'issame,minus', [0, 1], [0, 20], [0, 10]);
        lhs('-', 'issame,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
        lhs('-', 'issame', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('-', 'issame,minus', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('-', 'issame,minus', [0, 1], [0, 20], [0, 1]);
        rhs('-', 'issame,minus', [0, 2], [0, 1], [0, 2]);
        rhs('-', 'issame,minus', [0, 2], [0, 2], [0, 2]);
        rhs('-', 'issame,minus', [0, 1], [0, 2], [0, 2]);
        rhs('-', 'issame,minus', [0, 1], [0, 20], [0, 10]);
        rhs('-', 'issame,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
        rhs('-', 'issame,minus', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('-', 'xor', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('*', 'issame,product', [0, 1], [0, 100], [0, 1]);
        both('*', 'issame,product', [0, 2], [0, 1], [0, 2]);
        both('*', 'issame,product', [0, 2], [0, 2], [0, 2]);
        both('*', 'issame,product', [0, 1], [0, 2], [0, 2]);
        both('*', 'issame,product', [0, 1], [0, 100], [0, 10]);
        both('*', 'issame,product', [0, 1], [0, 100], [0, 0, 9, 9]);
        both('*', 'issame,product', [0, 1], [0, 100], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('*', 'issame,product', [0, 1], [0, 100], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('/', 'div,issame', [0, 1], [0, 20], [0, 1]);
        lhs('/', 'div,issame', [0, 2], [0, 1], [0, 2]);
        lhs('/', 'div,issame', [0, 2], [0, 2], [0, 2]);
        lhs('/', 'div,issame', [0, 1], [0, 2], [0, 2]);
        lhs('/', 'div,issame', [0, 1], [0, 20], [0, 10]);
        lhs('/', 'div,issame', [0, 1], [0, 20], [0, 0, 9, 9]);
        lhs('/', 'div,issame', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('/', 'div,issame', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('/', 'div,issame', [0, 1], [0, 20], [0, 1]);
        rhs('/', 'div,issame', [0, 2], [0, 1], [0, 2]);
        rhs('/', 'div,issame', [0, 2], [0, 2], [0, 2]);
        rhs('/', 'div,issame', [0, 1], [0, 2], [0, 2]);
        rhs('/', 'div,issame', [0, 1], [0, 20], [0, 10]);
        rhs('/', 'div,issame', [0, 1], [0, 20], [0, 0, 9, 9]);
        rhs('/', 'div,issame', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('/', 'div,issame', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
      });

      describe('ternary with shared results', function() {

        let both = testTernaryTernarySharedArgs.bind(undefined, '==?', '', '');          // R = A @1 B, S = A @2 C  and  R = A @1 B, S = C @2 A
        let lhs = testTernaryTernarySharedArgs.bind(undefined, '==?', '', 'lhs');    // R = A @1 B, S = A @2 C
        let rhs = testTernaryTernarySharedArgs.bind(undefined, '==?', '', 'rhs');    // R = A @1 B, S = C @2 A

        // R = A & B, S = A &? C
        both('&?', 'isall,issame', [0, 1], [0, 1], [0, 1]);
        both('&?', 'isall,issame', [0, 2], [0, 1], [0, 2]);
        both('&?', 'isall,issame', [0, 2], [0, 2], [0, 2]);
        both('&?', 'isall,issame', [0, 1], [0, 2], [0, 2]);
        both('&?', 'isall,issame', [0, 1], [0, 1], [0, 10]);
        both('&?', 'isall,issame', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('&?', 'isall,issame', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('&?', 'isall,issame', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('==?', 'issame,issame', [0, 1], [0, 1], [0, 1]);
        both('==?', 'issame,issame', [0, 2], [0, 1], [0, 2]);
        both('==?', 'issame,issame', [0, 2], [0, 2], [0, 2]);
        both('==?', 'issame,issame', [0, 1], [0, 2], [0, 2]);
        both('==?', 'issame,issame', [0, 1], [0, 1], [0, 10]);
        both('==?', 'issame,issame', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('==?', 'issame,issame', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('==?', 'issame,issame', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!=?', 'isdiff,issame', [0, 1], [0, 1], [0, 1]);
        both('!=?', 'isdiff,issame', [0, 2], [0, 1], [0, 2]);
        both('!=?', 'isdiff,issame', [0, 2], [0, 2], [0, 2]);
        both('!=?', 'isdiff,issame', [0, 1], [0, 2], [0, 2]);
        both('!=?', 'isdiff,issame', [0, 1], [0, 1], [0, 10]);
        both('!=?', 'isdiff,issame', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('!=?', 'isdiff,issame', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!=?', 'isdiff,issame', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<?', 'islt,issame', [0, 1], [0, 1], [0, 1]);
        lhs('<?', 'islt,issame', [0, 2], [0, 1], [0, 2]);
        lhs('<?', 'islt,issame', [0, 2], [0, 2], [0, 2]);
        lhs('<?', 'islt,issame', [0, 1], [0, 2], [0, 2]);
        lhs('<?', 'islt,issame', [0, 1], [0, 1], [0, 10]);
        lhs('<?', 'islt,issame', [0, 1], [0, 1], [0, 0, 9, 9]);
        lhs('<?', 'islt,issame', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<?', 'islt,issame', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<?', 'islt,issame', [0, 1], [0, 1], [0, 1]);
        rhs('<?', 'islt,issame', [0, 2], [0, 1], [0, 2]);
        rhs('<?', 'islt,issame', [0, 2], [0, 2], [0, 2]);
        rhs('<?', 'islt,issame', [0, 1], [0, 2], [0, 2]);
        rhs('<?', 'islt,issame', [0, 1], [0, 1], [0, 10]);
        rhs('<?', 'islt,issame', [0, 1], [0, 1], [0, 0, 9, 9]);
        rhs('<?', 'islt,issame', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<?', 'islt,issame', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<=?', 'islte,issame', [0, 1], [0, 1], [0, 1]);
        lhs('<=?', 'islte,issame', [0, 2], [0, 1], [0, 2]);
        lhs('<=?', 'islte,issame', [0, 2], [0, 2], [0, 2]);
        lhs('<=?', 'islte,issame', [0, 1], [0, 2], [0, 2]);
        lhs('<=?', 'islte,issame', [0, 1], [0, 1], [0, 10]);
        lhs('<=?', 'islte,issame', [0, 1], [0, 1], [0, 0, 9, 9]);
        lhs('<=?', 'islte,issame', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<=?', 'islte,issame', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<=?', 'islte,issame', [0, 1], [0, 1], [0, 1]);
        rhs('<=?', 'islte,issame', [0, 2], [0, 1], [0, 2]);
        rhs('<=?', 'islte,issame', [0, 2], [0, 2], [0, 2]);
        rhs('<=?', 'islte,issame', [0, 1], [0, 2], [0, 2]);
        rhs('<=?', 'islte,issame', [0, 1], [0, 1], [0, 10]);
        rhs('<=?', 'islte,issame', [0, 1], [0, 1], [0, 0, 9, 9]);
        rhs('<=?', 'islte,issame', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<=?', 'islte,issame', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!&?', 'isnall,issame', [0, 1], [0, 1], [0, 1]);
        both('!&?', 'isnall,issame', [0, 2], [0, 1], [0, 2]);
        both('!&?', 'isnall,issame', [0, 2], [0, 2], [0, 2]);
        both('!&?', 'isnall,issame', [0, 1], [0, 2], [0, 2]);
        both('!&?', 'isnall,issame', [0, 1], [0, 1], [0, 10]);
        both('!&?', 'isnall,issame', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('!&?', 'isnall,issame', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!&?', 'isnall,issame', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('|?', 'issame,issome', [0, 1], [0, 1], [0, 1]);
        both('|?', 'issame,issome', [0, 2], [0, 1], [0, 2]);
        both('|?', 'issame,issome', [0, 2], [0, 2], [0, 2]);
        both('|?', 'issame,issome', [0, 1], [0, 2], [0, 2]);
        both('|?', 'issame,issome', [0, 1], [0, 1], [0, 10]);
        both('|?', 'issame,issome', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('|?', 'issame,issome', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('|?', 'issame,issome', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!|?', 'isnone,issame', [0, 1], [0, 1], [0, 1]);
        both('!|?', 'isnone,issame', [0, 2], [0, 1], [0, 2]);
        both('!|?', 'isnone,issame', [0, 2], [0, 2], [0, 2]);
        both('!|?', 'isnone,issame', [0, 1], [0, 2], [0, 2]);
        both('!|?', 'isnone,issame', [0, 1], [0, 1], [0, 10]);
        both('!|?', 'isnone,issame', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('!|?', 'isnone,issame', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!|?', 'isnone,issame', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('+', 'issame,issome', [0, 1], [0, 20], [0, 1]);
        both('+', 'issame,sum', [0, 2], [0, 1], [0, 2]);
        both('+', 'issame,sum', [0, 2], [0, 2], [0, 2]);
        both('+', 'issame,sum', [0, 1], [0, 2], [0, 2]);
        both('+', 'issame,issome', [0, 1], [0, 20], [0, 10]);
        both('+', 'issame,issome', [0, 1], [0, 20], [0, 0, 9, 9]);
        both('+', 'issame,issome', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('+', 'issame,issome', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('-', 'issame,minus', [0, 1], [0, 20], [0, 1]);
        lhs('-', 'issame,minus', [0, 2], [0, 1], [0, 2]);
        lhs('-', 'issame,minus', [0, 2], [0, 2], [0, 2]);
        lhs('-', 'issame,minus', [0, 1], [0, 2], [0, 2]);
        lhs('-', 'issame,minus', [0, 1], [0, 20], [0, 10]);
        lhs('-', 'issame,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
        lhs('-', 'issame', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('-', 'issame,minus', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('-', 'issame,minus', [0, 1], [0, 20], [0, 1]);
        rhs('-', 'issame,minus', [0, 2], [0, 1], [0, 2]);
        rhs('-', 'issame,minus', [0, 2], [0, 2], [0, 2]);
        rhs('-', 'issame,minus', [0, 1], [0, 2], [0, 2]);
        rhs('-', 'issame,minus', [0, 1], [0, 20], [0, 10]);
        rhs('-', 'issame,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
        rhs('-', 'issame,minus', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('-', 'xor', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('*', 'issame,product', [0, 1], [0, 100], [0, 1]);
        both('*', 'issame,product', [0, 2], [0, 1], [0, 2]);
        both('*', 'issame,product', [0, 2], [0, 2], [0, 2]);
        both('*', 'issame,product', [0, 1], [0, 2], [0, 2]);
        both('*', 'issame,product', [0, 1], [0, 100], [0, 10]);
        both('*', 'issame,product', [0, 1], [0, 100], [0, 0, 9, 9]);
        both('*', 'issame,product', [0, 1], [0, 100], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('*', 'issame,product', [0, 1], [0, 100], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('/', 'div,issame', [0, 1], [0, 20], [0, 1]);
        lhs('/', 'div,issame', [0, 2], [0, 1], [0, 2]);
        lhs('/', 'div,issame', [0, 2], [0, 2], [0, 2]);
        lhs('/', 'div,issame', [0, 1], [0, 2], [0, 2]);
        lhs('/', 'div,issame', [0, 1], [0, 20], [0, 10]);
        lhs('/', 'div,issame', [0, 1], [0, 20], [0, 0, 9, 9]);
        lhs('/', 'div,issame', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('/', 'div,issame', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('/', 'div,issame', [0, 1], [0, 20], [0, 1]);
        rhs('/', 'div,issame', [0, 2], [0, 1], [0, 2]);
        rhs('/', 'div,issame', [0, 2], [0, 2], [0, 2]);
        rhs('/', 'div,issame', [0, 1], [0, 2], [0, 2]);
        rhs('/', 'div,issame', [0, 1], [0, 20], [0, 10]);
        rhs('/', 'div,issame', [0, 1], [0, 20], [0, 0, 9, 9]);
        rhs('/', 'div,issame', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('/', 'div,issame', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
      });
    });

    describe('ISSOME', function() {

      describe('binary with shared arg', function() {

        let both = testTernaryBinarySharedArgs.bind(undefined, '|?', '', ''); // R = A @1 B, A @2 C  and  R = A @1 B, C @2 A
        let lhs = testTernaryBinarySharedArgs.bind(undefined, '|?', '', 'lhs'); // R = A @1 B, A @2 C
        let rhs = testTernaryBinarySharedArgs.bind(undefined, '|?', '', 'rhs'); // R = A @1 B, C @2 A

        both('&', [0, 1], [0, 1]);
        both('&', [0, 2], [0, 1]);
        both('&', [0, 2], [0, 2]);
        both('&', [0, 1], [0, 10]);
        both('&', [0, 1], [0, 0, 9, 9]);
        both('&', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('&', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!=', 'issome,xor', [0, 1], [0, 1]);
        both('!=', 'issome,xor', [0, 2], [0, 1]);
        both('!=', 'diff,issome', [0, 2], [0, 2]);
        both('!=', 'diff,issome', [0, 1], [0, 10]);
        both('!=', 'issome,xor', [0, 1], [0, 0, 9, 9]);
        both('!=', 'diff,issome', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!=', 'diff,issome', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('->', 'imp,issome', [0, 1], [0, 1]);
        lhs('->', 'imp,issome', [0, 2], [0, 1]);
        lhs('->', 'imp,issome', [0, 2], [0, 1]);
        lhs('->', 'imp,issome', [0, 1], [0, 10]);
        lhs('->', 'imp,issome', [0, 1], [0, 0, 9, 9]);
        lhs('->', 'imp,issome', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('->', 'imp,issome', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('->', 'imp,issome', [0, 1], [0, 1]);
        rhs('->', 'imp,issome', [0, 2], [0, 1]);
        rhs('->', 'imp,issome', [0, 2], [0, 2]);
        rhs('->', 'imp,issome', [0, 1], [0, 10]);
        rhs('->', 'imp,issome', [0, 1], [0, 0, 9, 9]);
        rhs('->', 'imp,issome', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('->', 'imp,issome', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<', [0, 1], [0, 1]);
        lhs('<', [0, 2], [0, 1]);
        lhs('<', 'issome,lt', [0, 2], [0, 2]);
        lhs('<', 'issome,lt', [0, 1], [0, 10]);
        lhs('<', [0, 1], [0, 0, 9, 9]);
        lhs('<', 'issome', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<', [0, 1], [0, 1]);
        rhs('<', [0, 2], [0, 1]);
        rhs('<', [0, 2], [0, 2]);
        rhs('<', [0, 1], [0, 10]);
        rhs('<', [0, 1], [0, 0, 9, 9]);
        rhs('<', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<=', 'imp,issome', [0, 1], [0, 1]);
        lhs('<=', 'imp,issome', [0, 2], [0, 1]);
        lhs('<=', 'issome,lte', [0, 2], [0, 2]);
        lhs('<=', 'issome,lte', [0, 1], [0, 10]);
        lhs('<=', 'imp,issome', [0, 1], [0, 0, 9, 9]);
        lhs('<=', 'imp,issome', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<=', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<=', 'imp,issome', [0, 1], [0, 1]);
        rhs('<=', 'imp,issome', [0, 2], [0, 1]);
        rhs('<=', 'issome,lte', [0, 2], [0, 2]);
        rhs('<=', 'issome,lte', [0, 1], [0, 10]);
        rhs('<=', 'imp,issome', [0, 1], [0, 0, 9, 9]);
        rhs('<=', 'issome', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<=', 'imp,issome', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!&', 'issome,nall', [0, 1], [0, 1]);
        both('!&', 'issome,nall', [0, 2], [0, 1]);
        both('!&', 'issome,nall', [0, 2], [0, 2]);
        both('!&', 'issome,nall', [0, 1], [0, 10]);
        both('!&', 'issome,nall', [0, 1], [0, 0, 9, 9]);
        both('!&', 'issome,nall', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!&', 'issome,nall', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('!->', [0, 1], [0, 1]);
        lhs('!->', [0, 2], [0, 1]);
        lhs('!->', [0, 2], [0, 2]);
        lhs('!->', [0, 1], [0, 10]);
        lhs('!->', [0, 1], [0, 0, 9, 9]);
        lhs('!->', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('!->', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('!->', [0, 1], [0, 1]);
        rhs('!->', [0, 2], [0, 1]);
        rhs('!->', [0, 2], [0, 2]);
        rhs('!->', [0, 1], [0, 10]);
        rhs('!->', [0, 1], [0, 0, 9, 9]);
        rhs('!->', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('!->', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!|', [0, 1], [0, 1]);
        both('!|', [0, 2], [0, 1]);
        both('!|', [0, 2], [0, 2]);
        both('!|', [0, 1], [0, 10]);
        both('!|', [0, 1], [0, 0, 9, 9]);
        both('!|', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!|', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('==', 'issome', [0, 1], [0, 1]);
        both('==', 'issome', [0, 2], [0, 1]);
        both('==', 'issome', [0, 2], [0, 2]);
        both('==', 'issome', [0, 1], [0, 10]);
        both('==', 'issome', [0, 1], [0, 0, 9, 9]);
        both('==', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('==', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!^', 'issome', [0, 1], [0, 1]);
        both('!^', 'issome', [0, 2], [0, 1]);
        both('!^', 'issome', [0, 2], [0, 2]);
        both('!^', 'issome', [0, 1], [0, 10]);
        both('!^', 'issome', [0, 1], [0, 0, 9, 9]);
        both('!^', 'issome', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!^', 'issome', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('^', 'issome,xor', [0, 1], [0, 1]);
        both('^', 'issome,xor', [0, 2], [0, 1]);
        both('^', 'issome,xor', [0, 2], [0, 2]);
        both('^', 'issome,xor', [0, 1], [0, 10]);
        both('^', 'issome,xor', [0, 1], [0, 0, 9, 9]);
        both('^', 'issome,xor', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('^', 'issome,xor', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
      });

      describe('binary with shared result', function() {

        let both = testTernaryBinarySharedArgs.bind(undefined, '|?', '', ''); // R = A @1 B, A @2 C  and  R = A @1 B, C @2 A
        let lhs = testTernaryBinarySharedArgs.bind(undefined, '|?', '', 'lhs'); // R = A @1 B, A @2 C
        let rhs = testTernaryBinarySharedArgs.bind(undefined, '|?', '', 'rhs'); // R = A @1 B, C @2 A

        both('&', [0, 1], [0, 1]);
        both('&', [0, 2], [0, 1]);
        both('&', [0, 2], [0, 2]);
        both('&', [0, 1], [0, 10]);
        both('&', [0, 1], [0, 0, 9, 9]);
        both('&', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('&', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!=', 'issome,xor', [0, 1], [0, 1]);
        both('!=', 'issome,xor', [0, 2], [0, 1]);
        both('!=', 'diff,issome', [0, 2], [0, 2]);
        both('!=', 'diff,issome', [0, 1], [0, 10]);
        both('!=', 'issome,xor', [0, 1], [0, 0, 9, 9]);
        both('!=', 'diff,issome', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!=', 'diff,issome', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('->', 'imp,issome', [0, 1], [0, 1]);
        lhs('->', 'imp,issome', [0, 2], [0, 1]);
        lhs('->', 'imp,issome', [0, 2], [0, 1]);
        lhs('->', 'imp,issome', [0, 1], [0, 10]);
        lhs('->', 'imp,issome', [0, 1], [0, 0, 9, 9]);
        lhs('->', 'imp,issome', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('->', 'imp,issome', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('->', 'imp,issome', [0, 1], [0, 1]);
        rhs('->', 'imp,issome', [0, 2], [0, 1]);
        rhs('->', 'imp,issome', [0, 2], [0, 2]);
        rhs('->', 'imp,issome', [0, 1], [0, 10]);
        rhs('->', 'imp,issome', [0, 1], [0, 0, 9, 9]);
        rhs('->', 'imp,issome', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('->', 'imp,issome', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<', [0, 1], [0, 1]);
        lhs('<', [0, 2], [0, 1]);
        lhs('<', 'issome,lt', [0, 2], [0, 2]);
        lhs('<', 'issome,lt', [0, 1], [0, 10]);
        lhs('<', [0, 1], [0, 0, 9, 9]);
        lhs('<', 'issome', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<', [0, 1], [0, 1]);
        rhs('<', [0, 2], [0, 1]);
        rhs('<', [0, 2], [0, 2]);
        rhs('<', [0, 1], [0, 10]);
        rhs('<', [0, 1], [0, 0, 9, 9]);
        rhs('<', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<=', 'imp,issome', [0, 1], [0, 1]);
        lhs('<=', 'imp,issome', [0, 2], [0, 1]);
        lhs('<=', 'issome,lte', [0, 2], [0, 2]);
        lhs('<=', 'issome,lte', [0, 1], [0, 10]);
        lhs('<=', 'imp,issome', [0, 1], [0, 0, 9, 9]);
        lhs('<=', 'imp,issome', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<=', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<=', 'imp,issome', [0, 1], [0, 1]);
        rhs('<=', 'imp,issome', [0, 2], [0, 1]);
        rhs('<=', 'issome,lte', [0, 2], [0, 2]);
        rhs('<=', 'issome,lte', [0, 1], [0, 10]);
        rhs('<=', 'imp,issome', [0, 1], [0, 0, 9, 9]);
        rhs('<=', 'issome', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<=', 'imp,issome', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!&', 'issome,nall', [0, 1], [0, 1]);
        both('!&', 'issome,nall', [0, 2], [0, 1]);
        both('!&', 'issome,nall', [0, 2], [0, 2]);
        both('!&', 'issome,nall', [0, 1], [0, 10]);
        both('!&', 'issome,nall', [0, 1], [0, 0, 9, 9]);
        both('!&', 'issome,nall', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!&', 'issome,nall', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('!->', [0, 1], [0, 1]);
        lhs('!->', [0, 2], [0, 1]);
        lhs('!->', [0, 2], [0, 2]);
        lhs('!->', [0, 1], [0, 10]);
        lhs('!->', [0, 1], [0, 0, 9, 9]);
        lhs('!->', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('!->', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('!->', [0, 1], [0, 1]);
        rhs('!->', [0, 2], [0, 1]);
        rhs('!->', [0, 2], [0, 2]);
        rhs('!->', [0, 1], [0, 10]);
        rhs('!->', [0, 1], [0, 0, 9, 9]);
        rhs('!->', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('!->', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!|', [0, 1], [0, 1]);
        both('!|', [0, 2], [0, 1]);
        both('!|', [0, 2], [0, 2]);
        both('!|', [0, 1], [0, 10]);
        both('!|', [0, 1], [0, 0, 9, 9]);
        both('!|', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!|', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('==', 'issome', [0, 1], [0, 1]);
        both('==', 'issome', [0, 2], [0, 1]);
        both('==', 'issome', [0, 2], [0, 2]);
        both('==', 'issome', [0, 1], [0, 10]);
        both('==', 'issome', [0, 1], [0, 0, 9, 9]);
        both('==', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('==', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!^', 'issome', [0, 1], [0, 1]);
        both('!^', 'issome', [0, 2], [0, 1]);
        both('!^', 'issome', [0, 2], [0, 2]);
        both('!^', 'issome', [0, 1], [0, 10]);
        both('!^', 'issome', [0, 1], [0, 0, 9, 9]);
        both('!^', 'issome', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!^', 'issome', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('^', 'issome,xor', [0, 1], [0, 1]);
        both('^', 'issome,xor', [0, 2], [0, 1]);
        both('^', 'issome,xor', [0, 2], [0, 2]);
        both('^', 'issome,xor', [0, 1], [0, 10]);
        both('^', 'issome,xor', [0, 1], [0, 0, 9, 9]);
        both('^', 'issome,xor', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('^', 'issome,xor', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
      });

      describe('ternary with shared args', function() {

        let both = testTernaryTernarySharedArgs.bind(undefined, '|?', '', '');          // R = A @1 B, S = A @2 C  and  R = A @1 B, S = C @2 A
        let lhs = testTernaryTernarySharedArgs.bind(undefined, '|?', '', 'lhs');    // R = A @1 B, S = A @2 C
        let rhs = testTernaryTernarySharedArgs.bind(undefined, '|?', '', 'rhs');    // R = A @1 B, S = C @2 A

        // R = A & B, S = A &? C
        both('&?', 'isall,issome', [0, 1], [0, 1], [0, 1]);
        both('&?', 'isall,issome', [0, 2], [0, 1], [0, 2]);
        both('&?', 'isall,issome', [0, 2], [0, 2], [0, 2]);
        both('&?', 'isall,issome', [0, 1], [0, 2], [0, 2]);
        both('&?', 'isall,issome', [0, 1], [0, 1], [0, 10]);
        both('&?', 'isall,issome', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('&?', 'isall,issome', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('&?', 'isall,issome', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('==?', 'issame,issome', [0, 1], [0, 1], [0, 1]);
        both('==?', 'issame,issome', [0, 2], [0, 1], [0, 2]);
        both('==?', 'issame,issome', [0, 2], [0, 2], [0, 2]);
        both('==?', 'issame,issome', [0, 1], [0, 2], [0, 2]);
        both('==?', 'issame,issome', [0, 1], [0, 1], [0, 10]);
        both('==?', 'issame,issome', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('==?', 'issame,issome', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('==?', 'issame,issome', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!=?', 'isdiff,issome', [0, 1], [0, 1], [0, 1]);
        both('!=?', 'isdiff,issome', [0, 2], [0, 1], [0, 2]);
        both('!=?', 'isdiff,issome', [0, 2], [0, 2], [0, 2]);
        both('!=?', 'isdiff,issome', [0, 1], [0, 2], [0, 2]);
        both('!=?', 'isdiff,issome', [0, 1], [0, 1], [0, 10]);
        both('!=?', 'isdiff,issome', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('!=?', 'isdiff,issome', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!=?', 'isdiff,issome', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<?', 'islt,issome', [0, 1], [0, 1], [0, 1]);
        lhs('<?', 'islt,issome', [0, 2], [0, 1], [0, 2]);
        lhs('<?', 'islt,issome', [0, 2], [0, 2], [0, 2]);
        lhs('<?', 'islt,issome', [0, 1], [0, 2], [0, 2]);
        lhs('<?', 'islt,issome', [0, 1], [0, 1], [0, 10]);
        lhs('<?', 'islt,issome', [0, 1], [0, 1], [0, 0, 9, 9]);
        lhs('<?', 'islt,issome', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<?', 'islt,issome', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<?', 'islt,issome', [0, 1], [0, 1], [0, 1]);
        rhs('<?', 'islt,issome', [0, 2], [0, 1], [0, 2]);
        rhs('<?', 'islt,issome', [0, 2], [0, 2], [0, 2]);
        rhs('<?', 'islt,issome', [0, 1], [0, 2], [0, 2]);
        rhs('<?', 'islt,issome', [0, 1], [0, 1], [0, 10]);
        rhs('<?', 'islt,issome', [0, 1], [0, 1], [0, 0, 9, 9]);
        rhs('<?', 'islt,issome', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<?', 'islt,issome', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<=?', 'islte,issome', [0, 1], [0, 1], [0, 1]);
        lhs('<=?', 'islte,issome', [0, 2], [0, 1], [0, 2]);
        lhs('<=?', 'islte,issome', [0, 2], [0, 2], [0, 2]);
        lhs('<=?', 'islte,issome', [0, 1], [0, 2], [0, 2]);
        lhs('<=?', 'islte,issome', [0, 1], [0, 1], [0, 10]);
        lhs('<=?', 'islte,issome', [0, 1], [0, 1], [0, 0, 9, 9]);
        lhs('<=?', 'islte,issome', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<=?', 'islte,issome', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<=?', 'islte,issome', [0, 1], [0, 1], [0, 1]);
        rhs('<=?', 'islte,issome', [0, 2], [0, 1], [0, 2]);
        rhs('<=?', 'islte,issome', [0, 2], [0, 2], [0, 2]);
        rhs('<=?', 'islte,issome', [0, 1], [0, 2], [0, 2]);
        rhs('<=?', 'islte,issome', [0, 1], [0, 1], [0, 10]);
        rhs('<=?', 'islte,issome', [0, 1], [0, 1], [0, 0, 9, 9]);
        rhs('<=?', 'islte,issome', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<=?', 'islte,issome', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!&?', 'isnall,issome', [0, 1], [0, 1], [0, 1]);
        both('!&?', 'isnall,issome', [0, 2], [0, 1], [0, 2]);
        both('!&?', 'isnall,issome', [0, 2], [0, 2], [0, 2]);
        both('!&?', 'isnall,issome', [0, 1], [0, 2], [0, 2]);
        both('!&?', 'isnall,issome', [0, 1], [0, 1], [0, 10]);
        both('!&?', 'isnall,issome', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('!&?', 'isnall,issome', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!&?', 'isnall,issome', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('|?', 'issome,issome', [0, 1], [0, 1], [0, 1]);
        both('|?', 'issome,issome', [0, 2], [0, 1], [0, 2]);
        both('|?', 'issome,issome', [0, 2], [0, 2], [0, 2]);
        both('|?', 'issome,issome', [0, 1], [0, 2], [0, 2]);
        both('|?', 'issome,issome', [0, 1], [0, 1], [0, 10]);
        both('|?', 'issome,issome', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('|?', 'issome,issome', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('|?', 'issome,issome', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!|?', 'isnone,issome', [0, 1], [0, 1], [0, 1]);
        both('!|?', 'isnone,issome', [0, 2], [0, 1], [0, 2]);
        both('!|?', 'isnone,issome', [0, 2], [0, 2], [0, 2]);
        both('!|?', 'isnone,issome', [0, 1], [0, 2], [0, 2]);
        both('!|?', 'isnone,issome', [0, 1], [0, 1], [0, 10]);
        both('!|?', 'isnone,issome', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('!|?', 'isnone,issome', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!|?', 'isnone,issome', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('+', 'issome,issome', [0, 1], [0, 20], [0, 1]);
        both('+', 'issome,sum', [0, 2], [0, 1], [0, 2]);
        both('+', 'issome,sum', [0, 2], [0, 2], [0, 2]);
        both('+', 'issome,sum', [0, 1], [0, 2], [0, 2]);
        both('+', 'issome,issome', [0, 1], [0, 20], [0, 10]);
        both('+', 'issome,issome', [0, 1], [0, 20], [0, 0, 9, 9]);
        both('+', 'issome,issome', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('+', 'issome,issome', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('-', 'issome,minus', [0, 1], [0, 20], [0, 1]);
        lhs('-', 'issome,minus', [0, 2], [0, 1], [0, 2]);
        lhs('-', 'issome,minus', [0, 2], [0, 2], [0, 2]);
        lhs('-', 'issome,minus', [0, 1], [0, 2], [0, 2]);
        lhs('-', 'issome,minus', [0, 1], [0, 20], [0, 10]);
        lhs('-', 'issome,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
        lhs('-', 'issome', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('-', 'issome,minus', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('-', 'issome,minus', [0, 1], [0, 20], [0, 1]);
        rhs('-', 'issome,minus', [0, 2], [0, 1], [0, 2]);
        rhs('-', 'issome,minus', [0, 2], [0, 2], [0, 2]);
        rhs('-', 'issome,minus', [0, 1], [0, 2], [0, 2]);
        rhs('-', 'issome,minus', [0, 1], [0, 20], [0, 10]);
        rhs('-', 'issome,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
        rhs('-', 'issome,minus', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('-', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('*', 'issome,product', [0, 1], [0, 100], [0, 1]);
        both('*', 'issome,product', [0, 2], [0, 1], [0, 2]);
        both('*', 'issome,product', [0, 2], [0, 2], [0, 2]);
        both('*', 'issome,product', [0, 1], [0, 2], [0, 2]);
        both('*', 'issome,product', [0, 1], [0, 100], [0, 10]);
        both('*', 'issome,product', [0, 1], [0, 100], [0, 0, 9, 9]);
        both('*', 'issome,product', [0, 1], [0, 100], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('*', 'issome,product', [0, 1], [0, 100], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('/', 'div,issome', [0, 1], [0, 20], [0, 1]);
        lhs('/', 'div,issome', [0, 2], [0, 1], [0, 2]);
        lhs('/', 'div,issome', [0, 2], [0, 2], [0, 2]);
        lhs('/', 'div,issome', [0, 1], [0, 2], [0, 2]);
        lhs('/', 'div,issome', [0, 1], [0, 20], [0, 10]);
        lhs('/', 'div,issome', [0, 1], [0, 20], [0, 0, 9, 9]);
        lhs('/', 'div,issome', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('/', 'div,issome', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('/', 'div,issome', [0, 1], [0, 20], [0, 1]);
        rhs('/', 'div,issome', [0, 2], [0, 1], [0, 2]);
        rhs('/', 'div,issome', [0, 2], [0, 2], [0, 2]);
        rhs('/', 'div,issome', [0, 1], [0, 2], [0, 2]);
        rhs('/', 'div,issome', [0, 1], [0, 20], [0, 10]);
        rhs('/', 'div,issome', [0, 1], [0, 20], [0, 0, 9, 9]);
        rhs('/', 'div,issome', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('/', 'div,issome', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
      });

      describe('ternary with shared R', function() {

        let both = testTernaryTernarySharedArgs.bind(undefined, '|?', '', '');          // R = A @1 B, S = A @2 C  and  R = A @1 B, S = C @2 A
        let lhs = testTernaryTernarySharedArgs.bind(undefined, '|?', '', 'lhs');    // R = A @1 B, S = A @2 C
        let rhs = testTernaryTernarySharedArgs.bind(undefined, '|?', '', 'rhs');    // R = A @1 B, S = C @2 A

        // R = A & B, S = A &? C
        both('&?', 'isall,issome', [0, 1], [0, 1], [0, 1]);
        both('&?', 'isall,issome', [0, 2], [0, 1], [0, 2]);
        both('&?', 'isall,issome', [0, 2], [0, 2], [0, 2]);
        both('&?', 'isall,issome', [0, 1], [0, 2], [0, 2]);
        both('&?', 'isall,issome', [0, 1], [0, 1], [0, 10]);
        both('&?', 'isall,issome', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('&?', 'isall,issome', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('&?', 'isall,issome', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('==?', 'issame,issome', [0, 1], [0, 1], [0, 1]);
        both('==?', 'issame,issome', [0, 2], [0, 1], [0, 2]);
        both('==?', 'issame,issome', [0, 2], [0, 2], [0, 2]);
        both('==?', 'issame,issome', [0, 1], [0, 2], [0, 2]);
        both('==?', 'issame,issome', [0, 1], [0, 1], [0, 10]);
        both('==?', 'issame,issome', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('==?', 'issame,issome', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('==?', 'issame,issome', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!=?', 'isdiff,issome', [0, 1], [0, 1], [0, 1]);
        both('!=?', 'isdiff,issome', [0, 2], [0, 1], [0, 2]);
        both('!=?', 'isdiff,issome', [0, 2], [0, 2], [0, 2]);
        both('!=?', 'isdiff,issome', [0, 1], [0, 2], [0, 2]);
        both('!=?', 'isdiff,issome', [0, 1], [0, 1], [0, 10]);
        both('!=?', 'isdiff,issome', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('!=?', 'isdiff,issome', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!=?', 'isdiff,issome', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<?', 'islt,issome', [0, 1], [0, 1], [0, 1]);
        lhs('<?', 'islt,issome', [0, 2], [0, 1], [0, 2]);
        lhs('<?', 'islt,issome', [0, 2], [0, 2], [0, 2]);
        lhs('<?', 'islt,issome', [0, 1], [0, 2], [0, 2]);
        lhs('<?', 'islt,issome', [0, 1], [0, 1], [0, 10]);
        lhs('<?', 'islt,issome', [0, 1], [0, 1], [0, 0, 9, 9]);
        lhs('<?', 'islt,issome', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<?', 'islt,issome', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<?', 'islt,issome', [0, 1], [0, 1], [0, 1]);
        rhs('<?', 'islt,issome', [0, 2], [0, 1], [0, 2]);
        rhs('<?', 'islt,issome', [0, 2], [0, 2], [0, 2]);
        rhs('<?', 'islt,issome', [0, 1], [0, 2], [0, 2]);
        rhs('<?', 'islt,issome', [0, 1], [0, 1], [0, 10]);
        rhs('<?', 'islt,issome', [0, 1], [0, 1], [0, 0, 9, 9]);
        rhs('<?', 'islt,issome', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<?', 'islt,issome', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<=?', 'islte,issome', [0, 1], [0, 1], [0, 1]);
        lhs('<=?', 'islte,issome', [0, 2], [0, 1], [0, 2]);
        lhs('<=?', 'islte,issome', [0, 2], [0, 2], [0, 2]);
        lhs('<=?', 'islte,issome', [0, 1], [0, 2], [0, 2]);
        lhs('<=?', 'islte,issome', [0, 1], [0, 1], [0, 10]);
        lhs('<=?', 'islte,issome', [0, 1], [0, 1], [0, 0, 9, 9]);
        lhs('<=?', 'islte,issome', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<=?', 'islte,issome', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<=?', 'islte,issome', [0, 1], [0, 1], [0, 1]);
        rhs('<=?', 'islte,issome', [0, 2], [0, 1], [0, 2]);
        rhs('<=?', 'islte,issome', [0, 2], [0, 2], [0, 2]);
        rhs('<=?', 'islte,issome', [0, 1], [0, 2], [0, 2]);
        rhs('<=?', 'islte,issome', [0, 1], [0, 1], [0, 10]);
        rhs('<=?', 'islte,issome', [0, 1], [0, 1], [0, 0, 9, 9]);
        rhs('<=?', 'islte,issome', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<=?', 'islte,issome', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!&?', 'isnall,issome', [0, 1], [0, 1], [0, 1]);
        both('!&?', 'isnall,issome', [0, 2], [0, 1], [0, 2]);
        both('!&?', 'isnall,issome', [0, 2], [0, 2], [0, 2]);
        both('!&?', 'isnall,issome', [0, 1], [0, 2], [0, 2]);
        both('!&?', 'isnall,issome', [0, 1], [0, 1], [0, 10]);
        both('!&?', 'isnall,issome', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('!&?', 'isnall,issome', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!&?', 'isnall,issome', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('|?', 'issome,issome', [0, 1], [0, 1], [0, 1]);
        both('|?', 'issome,issome', [0, 2], [0, 1], [0, 2]);
        both('|?', 'issome,issome', [0, 2], [0, 2], [0, 2]);
        both('|?', 'issome,issome', [0, 1], [0, 2], [0, 2]);
        both('|?', 'issome,issome', [0, 1], [0, 1], [0, 10]);
        both('|?', 'issome,issome', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('|?', 'issome,issome', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('|?', 'issome,issome', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!|?', 'isnone,issome', [0, 1], [0, 1], [0, 1]);
        both('!|?', 'isnone,issome', [0, 2], [0, 1], [0, 2]);
        both('!|?', 'isnone,issome', [0, 2], [0, 2], [0, 2]);
        both('!|?', 'isnone,issome', [0, 1], [0, 2], [0, 2]);
        both('!|?', 'isnone,issome', [0, 1], [0, 1], [0, 10]);
        both('!|?', 'isnone,issome', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('!|?', 'isnone,issome', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!|?', 'isnone,issome', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('+', 'issome,issome', [0, 1], [0, 20], [0, 1]);
        both('+', 'issome,sum', [0, 2], [0, 1], [0, 2]);
        both('+', 'issome,sum', [0, 2], [0, 2], [0, 2]);
        both('+', 'issome,sum', [0, 1], [0, 2], [0, 2]);
        both('+', 'issome,issome', [0, 1], [0, 20], [0, 10]);
        both('+', 'issome,issome', [0, 1], [0, 20], [0, 0, 9, 9]);
        both('+', 'issome,issome', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('+', 'issome,issome', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('-', 'issome,minus', [0, 1], [0, 20], [0, 1]);
        lhs('-', 'issome,minus', [0, 2], [0, 1], [0, 2]);
        lhs('-', 'issome,minus', [0, 2], [0, 2], [0, 2]);
        lhs('-', 'issome,minus', [0, 1], [0, 2], [0, 2]);
        lhs('-', 'issome,minus', [0, 1], [0, 20], [0, 10]);
        lhs('-', 'issome,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
        lhs('-', 'issome', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('-', 'issome,minus', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('-', 'issome,minus', [0, 1], [0, 20], [0, 1]);
        rhs('-', 'issome,minus', [0, 2], [0, 1], [0, 2]);
        rhs('-', 'issome,minus', [0, 2], [0, 2], [0, 2]);
        rhs('-', 'issome,minus', [0, 1], [0, 2], [0, 2]);
        rhs('-', 'issome,minus', [0, 1], [0, 20], [0, 10]);
        rhs('-', 'issome,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
        rhs('-', 'issome,minus', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('-', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('*', 'issome,product', [0, 1], [0, 100], [0, 1]);
        both('*', 'issome,product', [0, 2], [0, 1], [0, 2]);
        both('*', 'issome,product', [0, 2], [0, 2], [0, 2]);
        both('*', 'issome,product', [0, 1], [0, 2], [0, 2]);
        both('*', 'issome,product', [0, 1], [0, 100], [0, 10]);
        both('*', 'issome,product', [0, 1], [0, 100], [0, 0, 9, 9]);
        both('*', 'issome,product', [0, 1], [0, 100], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('*', 'issome,product', [0, 1], [0, 100], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('/', 'div,issome', [0, 1], [0, 20], [0, 1]);
        lhs('/', 'div,issome', [0, 2], [0, 1], [0, 2]);
        lhs('/', 'div,issome', [0, 2], [0, 2], [0, 2]);
        lhs('/', 'div,issome', [0, 1], [0, 2], [0, 2]);
        lhs('/', 'div,issome', [0, 1], [0, 20], [0, 10]);
        lhs('/', 'div,issome', [0, 1], [0, 20], [0, 0, 9, 9]);
        lhs('/', 'div,issome', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('/', 'div,issome', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('/', 'div,issome', [0, 1], [0, 20], [0, 1]);
        rhs('/', 'div,issome', [0, 2], [0, 1], [0, 2]);
        rhs('/', 'div,issome', [0, 2], [0, 2], [0, 2]);
        rhs('/', 'div,issome', [0, 1], [0, 2], [0, 2]);
        rhs('/', 'div,issome', [0, 1], [0, 20], [0, 10]);
        rhs('/', 'div,issome', [0, 1], [0, 20], [0, 0, 9, 9]);
        rhs('/', 'div,issome', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('/', 'div,issome', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
      });

      describe('ternary with shared S', function() {

        let both = testTernaryTernarySharedArgs.bind(undefined, '|?', '', '');          // R = A @1 B, S = A @2 C  and  R = A @1 B, S = C @2 A
        let lhs = testTernaryTernarySharedArgs.bind(undefined, '|?', '', 'lhs');    // R = A @1 B, S = A @2 C
        let rhs = testTernaryTernarySharedArgs.bind(undefined, '|?', '', 'rhs');    // R = A @1 B, S = C @2 A

        // R = A & B, S = A &? C
        both('&?', 'isall,issome', [0, 1], [0, 1], [0, 1]);
        both('&?', 'isall,issome', [0, 2], [0, 1], [0, 2]);
        both('&?', 'isall,issome', [0, 2], [0, 2], [0, 2]);
        both('&?', 'isall,issome', [0, 1], [0, 2], [0, 2]);
        both('&?', 'isall,issome', [0, 1], [0, 1], [0, 10]);
        both('&?', 'isall,issome', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('&?', 'isall,issome', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('&?', 'isall,issome', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('==?', 'issame,issome', [0, 1], [0, 1], [0, 1]);
        both('==?', 'issame,issome', [0, 2], [0, 1], [0, 2]);
        both('==?', 'issame,issome', [0, 2], [0, 2], [0, 2]);
        both('==?', 'issame,issome', [0, 1], [0, 2], [0, 2]);
        both('==?', 'issame,issome', [0, 1], [0, 1], [0, 10]);
        both('==?', 'issame,issome', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('==?', 'issame,issome', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('==?', 'issame,issome', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!=?', 'isdiff,issome', [0, 1], [0, 1], [0, 1]);
        both('!=?', 'isdiff,issome', [0, 2], [0, 1], [0, 2]);
        both('!=?', 'isdiff,issome', [0, 2], [0, 2], [0, 2]);
        both('!=?', 'isdiff,issome', [0, 1], [0, 2], [0, 2]);
        both('!=?', 'isdiff,issome', [0, 1], [0, 1], [0, 10]);
        both('!=?', 'isdiff,issome', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('!=?', 'isdiff,issome', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!=?', 'isdiff,issome', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<?', 'islt,issome', [0, 1], [0, 1], [0, 1]);
        lhs('<?', 'islt,issome', [0, 2], [0, 1], [0, 2]);
        lhs('<?', 'islt,issome', [0, 2], [0, 2], [0, 2]);
        lhs('<?', 'islt,issome', [0, 1], [0, 2], [0, 2]);
        lhs('<?', 'islt,issome', [0, 1], [0, 1], [0, 10]);
        lhs('<?', 'islt,issome', [0, 1], [0, 1], [0, 0, 9, 9]);
        lhs('<?', 'islt,issome', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<?', 'islt,issome', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<?', 'islt,issome', [0, 1], [0, 1], [0, 1]);
        rhs('<?', 'islt,issome', [0, 2], [0, 1], [0, 2]);
        rhs('<?', 'islt,issome', [0, 2], [0, 2], [0, 2]);
        rhs('<?', 'islt,issome', [0, 1], [0, 2], [0, 2]);
        rhs('<?', 'islt,issome', [0, 1], [0, 1], [0, 10]);
        rhs('<?', 'islt,issome', [0, 1], [0, 1], [0, 0, 9, 9]);
        rhs('<?', 'islt,issome', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<?', 'islt,issome', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<=?', 'islte,issome', [0, 1], [0, 1], [0, 1]);
        lhs('<=?', 'islte,issome', [0, 2], [0, 1], [0, 2]);
        lhs('<=?', 'islte,issome', [0, 2], [0, 2], [0, 2]);
        lhs('<=?', 'islte,issome', [0, 1], [0, 2], [0, 2]);
        lhs('<=?', 'islte,issome', [0, 1], [0, 1], [0, 10]);
        lhs('<=?', 'islte,issome', [0, 1], [0, 1], [0, 0, 9, 9]);
        lhs('<=?', 'islte,issome', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<=?', 'islte,issome', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<=?', 'islte,issome', [0, 1], [0, 1], [0, 1]);
        rhs('<=?', 'islte,issome', [0, 2], [0, 1], [0, 2]);
        rhs('<=?', 'islte,issome', [0, 2], [0, 2], [0, 2]);
        rhs('<=?', 'islte,issome', [0, 1], [0, 2], [0, 2]);
        rhs('<=?', 'islte,issome', [0, 1], [0, 1], [0, 10]);
        rhs('<=?', 'islte,issome', [0, 1], [0, 1], [0, 0, 9, 9]);
        rhs('<=?', 'islte,issome', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<=?', 'islte,issome', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!&?', 'isnall,issome', [0, 1], [0, 1], [0, 1]);
        both('!&?', 'isnall,issome', [0, 2], [0, 1], [0, 2]);
        both('!&?', 'isnall,issome', [0, 2], [0, 2], [0, 2]);
        both('!&?', 'isnall,issome', [0, 1], [0, 2], [0, 2]);
        both('!&?', 'isnall,issome', [0, 1], [0, 1], [0, 10]);
        both('!&?', 'isnall,issome', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('!&?', 'isnall,issome', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!&?', 'isnall,issome', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('|?', 'issome,issome', [0, 1], [0, 1], [0, 1]);
        both('|?', 'issome,issome', [0, 2], [0, 1], [0, 2]);
        both('|?', 'issome,issome', [0, 2], [0, 2], [0, 2]);
        both('|?', 'issome,issome', [0, 1], [0, 2], [0, 2]);
        both('|?', 'issome,issome', [0, 1], [0, 1], [0, 10]);
        both('|?', 'issome,issome', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('|?', 'issome,issome', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('|?', 'issome,issome', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!|?', 'isnone,issome', [0, 1], [0, 1], [0, 1]);
        both('!|?', 'isnone,issome', [0, 2], [0, 1], [0, 2]);
        both('!|?', 'isnone,issome', [0, 2], [0, 2], [0, 2]);
        both('!|?', 'isnone,issome', [0, 1], [0, 2], [0, 2]);
        both('!|?', 'isnone,issome', [0, 1], [0, 1], [0, 10]);
        both('!|?', 'isnone,issome', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('!|?', 'isnone,issome', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!|?', 'isnone,issome', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('+', 'issome,issome', [0, 1], [0, 20], [0, 1]);
        both('+', 'issome,sum', [0, 2], [0, 1], [0, 2]);
        both('+', 'issome,sum', [0, 2], [0, 2], [0, 2]);
        both('+', 'issome,sum', [0, 1], [0, 2], [0, 2]);
        both('+', 'issome,issome', [0, 1], [0, 20], [0, 10]);
        both('+', 'issome,issome', [0, 1], [0, 20], [0, 0, 9, 9]);
        both('+', 'issome,issome', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('+', 'issome,issome', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('-', 'issome,minus', [0, 1], [0, 20], [0, 1]);
        lhs('-', 'issome,minus', [0, 2], [0, 1], [0, 2]);
        lhs('-', 'issome,minus', [0, 2], [0, 2], [0, 2]);
        lhs('-', 'issome,minus', [0, 1], [0, 2], [0, 2]);
        lhs('-', 'issome,minus', [0, 1], [0, 20], [0, 10]);
        lhs('-', 'issome,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
        lhs('-', 'issome', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('-', 'issome,minus', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('-', 'issome,minus', [0, 1], [0, 20], [0, 1]);
        rhs('-', 'issome,minus', [0, 2], [0, 1], [0, 2]);
        rhs('-', 'issome,minus', [0, 2], [0, 2], [0, 2]);
        rhs('-', 'issome,minus', [0, 1], [0, 2], [0, 2]);
        rhs('-', 'issome,minus', [0, 1], [0, 20], [0, 10]);
        rhs('-', 'issome,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
        rhs('-', 'issome,minus', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('-', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('*', 'issome,product', [0, 1], [0, 100], [0, 1]);
        both('*', 'issome,product', [0, 2], [0, 1], [0, 2]);
        both('*', 'issome,product', [0, 2], [0, 2], [0, 2]);
        both('*', 'issome,product', [0, 1], [0, 2], [0, 2]);
        both('*', 'issome,product', [0, 1], [0, 100], [0, 10]);
        both('*', 'issome,product', [0, 1], [0, 100], [0, 0, 9, 9]);
        both('*', 'issome,product', [0, 1], [0, 100], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('*', 'issome,product', [0, 1], [0, 100], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('/', 'div,issome', [0, 1], [0, 20], [0, 1]);
        lhs('/', 'div,issome', [0, 2], [0, 1], [0, 2]);
        lhs('/', 'div,issome', [0, 2], [0, 2], [0, 2]);
        lhs('/', 'div,issome', [0, 1], [0, 2], [0, 2]);
        lhs('/', 'div,issome', [0, 1], [0, 20], [0, 10]);
        lhs('/', 'div,issome', [0, 1], [0, 20], [0, 0, 9, 9]);
        lhs('/', 'div,issome', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('/', 'div,issome', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('/', 'div,issome', [0, 1], [0, 20], [0, 1]);
        rhs('/', 'div,issome', [0, 2], [0, 1], [0, 2]);
        rhs('/', 'div,issome', [0, 2], [0, 2], [0, 2]);
        rhs('/', 'div,issome', [0, 1], [0, 2], [0, 2]);
        rhs('/', 'div,issome', [0, 1], [0, 20], [0, 10]);
        rhs('/', 'div,issome', [0, 1], [0, 20], [0, 0, 9, 9]);
        rhs('/', 'div,issome', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('/', 'div,issome', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
      });

      describe('ternary with shared results', function() {

        let both = testTernaryTernarySharedArgs.bind(undefined, '|?', '', '');          // R = A @1 B, S = A @2 C  and  R = A @1 B, S = C @2 A
        let lhs = testTernaryTernarySharedArgs.bind(undefined, '|?', '', 'lhs');    // R = A @1 B, S = A @2 C
        let rhs = testTernaryTernarySharedArgs.bind(undefined, '|?', '', 'rhs');    // R = A @1 B, S = C @2 A

        // R = A & B, S = A &? C
        both('&?', 'isall,issome', [0, 1], [0, 1], [0, 1]);
        both('&?', 'isall,issome', [0, 2], [0, 1], [0, 2]);
        both('&?', 'isall,issome', [0, 2], [0, 2], [0, 2]);
        both('&?', 'isall,issome', [0, 1], [0, 2], [0, 2]);
        both('&?', 'isall,issome', [0, 1], [0, 1], [0, 10]);
        both('&?', 'isall,issome', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('&?', 'isall,issome', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('&?', 'isall,issome', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('==?', 'issame,issome', [0, 1], [0, 1], [0, 1]);
        both('==?', 'issame,issome', [0, 2], [0, 1], [0, 2]);
        both('==?', 'issame,issome', [0, 2], [0, 2], [0, 2]);
        both('==?', 'issame,issome', [0, 1], [0, 2], [0, 2]);
        both('==?', 'issame,issome', [0, 1], [0, 1], [0, 10]);
        both('==?', 'issame,issome', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('==?', 'issame,issome', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('==?', 'issame,issome', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!=?', 'isdiff,issome', [0, 1], [0, 1], [0, 1]);
        both('!=?', 'isdiff,issome', [0, 2], [0, 1], [0, 2]);
        both('!=?', 'isdiff,issome', [0, 2], [0, 2], [0, 2]);
        both('!=?', 'isdiff,issome', [0, 1], [0, 2], [0, 2]);
        both('!=?', 'isdiff,issome', [0, 1], [0, 1], [0, 10]);
        both('!=?', 'isdiff,issome', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('!=?', 'isdiff,issome', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!=?', 'isdiff,issome', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<?', 'islt,issome', [0, 1], [0, 1], [0, 1]);
        lhs('<?', 'islt,issome', [0, 2], [0, 1], [0, 2]);
        lhs('<?', 'islt,issome', [0, 2], [0, 2], [0, 2]);
        lhs('<?', 'islt,issome', [0, 1], [0, 2], [0, 2]);
        lhs('<?', 'islt,issome', [0, 1], [0, 1], [0, 10]);
        lhs('<?', 'islt,issome', [0, 1], [0, 1], [0, 0, 9, 9]);
        lhs('<?', 'islt,issome', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<?', 'islt,issome', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<?', 'islt,issome', [0, 1], [0, 1], [0, 1]);
        rhs('<?', 'islt,issome', [0, 2], [0, 1], [0, 2]);
        rhs('<?', 'islt,issome', [0, 2], [0, 2], [0, 2]);
        rhs('<?', 'islt,issome', [0, 1], [0, 2], [0, 2]);
        rhs('<?', 'islt,issome', [0, 1], [0, 1], [0, 10]);
        rhs('<?', 'islt,issome', [0, 1], [0, 1], [0, 0, 9, 9]);
        rhs('<?', 'islt,issome', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<?', 'islt,issome', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<=?', 'islte,issome', [0, 1], [0, 1], [0, 1]);
        lhs('<=?', 'islte,issome', [0, 2], [0, 1], [0, 2]);
        lhs('<=?', 'islte,issome', [0, 2], [0, 2], [0, 2]);
        lhs('<=?', 'islte,issome', [0, 1], [0, 2], [0, 2]);
        lhs('<=?', 'islte,issome', [0, 1], [0, 1], [0, 10]);
        lhs('<=?', 'islte,issome', [0, 1], [0, 1], [0, 0, 9, 9]);
        lhs('<=?', 'islte,issome', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<=?', 'islte,issome', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<=?', 'islte,issome', [0, 1], [0, 1], [0, 1]);
        rhs('<=?', 'islte,issome', [0, 2], [0, 1], [0, 2]);
        rhs('<=?', 'islte,issome', [0, 2], [0, 2], [0, 2]);
        rhs('<=?', 'islte,issome', [0, 1], [0, 2], [0, 2]);
        rhs('<=?', 'islte,issome', [0, 1], [0, 1], [0, 10]);
        rhs('<=?', 'islte,issome', [0, 1], [0, 1], [0, 0, 9, 9]);
        rhs('<=?', 'islte,issome', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<=?', 'islte,issome', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!&?', 'isnall,issome', [0, 1], [0, 1], [0, 1]);
        both('!&?', 'isnall,issome', [0, 2], [0, 1], [0, 2]);
        both('!&?', 'isnall,issome', [0, 2], [0, 2], [0, 2]);
        both('!&?', 'isnall,issome', [0, 1], [0, 2], [0, 2]);
        both('!&?', 'isnall,issome', [0, 1], [0, 1], [0, 10]);
        both('!&?', 'isnall,issome', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('!&?', 'isnall,issome', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!&?', 'isnall,issome', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('|?', 'issome,issome', [0, 1], [0, 1], [0, 1]);
        both('|?', 'issome,issome', [0, 2], [0, 1], [0, 2]);
        both('|?', 'issome,issome', [0, 2], [0, 2], [0, 2]);
        both('|?', 'issome,issome', [0, 1], [0, 2], [0, 2]);
        both('|?', 'issome,issome', [0, 1], [0, 1], [0, 10]);
        both('|?', 'issome,issome', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('|?', 'issome,issome', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('|?', 'issome,issome', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!|?', 'isnone,issome', [0, 1], [0, 1], [0, 1]);
        both('!|?', 'isnone,issome', [0, 2], [0, 1], [0, 2]);
        both('!|?', 'isnone,issome', [0, 2], [0, 2], [0, 2]);
        both('!|?', 'isnone,issome', [0, 1], [0, 2], [0, 2]);
        both('!|?', 'isnone,issome', [0, 1], [0, 1], [0, 10]);
        both('!|?', 'isnone,issome', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('!|?', 'isnone,issome', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!|?', 'isnone,issome', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('+', 'issome,issome', [0, 1], [0, 20], [0, 1]);
        both('+', 'issome,sum', [0, 2], [0, 1], [0, 2]);
        both('+', 'issome,sum', [0, 2], [0, 2], [0, 2]);
        both('+', 'issome,sum', [0, 1], [0, 2], [0, 2]);
        both('+', 'issome,issome', [0, 1], [0, 20], [0, 10]);
        both('+', 'issome,issome', [0, 1], [0, 20], [0, 0, 9, 9]);
        both('+', 'issome,issome', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('+', 'issome,issome', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('-', 'issome,minus', [0, 1], [0, 20], [0, 1]);
        lhs('-', 'issome,minus', [0, 2], [0, 1], [0, 2]);
        lhs('-', 'issome,minus', [0, 2], [0, 2], [0, 2]);
        lhs('-', 'issome,minus', [0, 1], [0, 2], [0, 2]);
        lhs('-', 'issome,minus', [0, 1], [0, 20], [0, 10]);
        lhs('-', 'issome,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
        lhs('-', 'issome', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('-', 'issome,minus', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('-', 'issome,minus', [0, 1], [0, 20], [0, 1]);
        rhs('-', 'issome,minus', [0, 2], [0, 1], [0, 2]);
        rhs('-', 'issome,minus', [0, 2], [0, 2], [0, 2]);
        rhs('-', 'issome,minus', [0, 1], [0, 2], [0, 2]);
        rhs('-', 'issome,minus', [0, 1], [0, 20], [0, 10]);
        rhs('-', 'issome,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
        rhs('-', 'issome,minus', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('-', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('*', 'issome,product', [0, 1], [0, 100], [0, 1]);
        both('*', 'issome,product', [0, 2], [0, 1], [0, 2]);
        both('*', 'issome,product', [0, 2], [0, 2], [0, 2]);
        both('*', 'issome,product', [0, 1], [0, 2], [0, 2]);
        both('*', 'issome,product', [0, 1], [0, 100], [0, 10]);
        both('*', 'issome,product', [0, 1], [0, 100], [0, 0, 9, 9]);
        both('*', 'issome,product', [0, 1], [0, 100], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('*', 'issome,product', [0, 1], [0, 100], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('/', 'div,issome', [0, 1], [0, 20], [0, 1]);
        lhs('/', 'div,issome', [0, 2], [0, 1], [0, 2]);
        lhs('/', 'div,issome', [0, 2], [0, 2], [0, 2]);
        lhs('/', 'div,issome', [0, 1], [0, 2], [0, 2]);
        lhs('/', 'div,issome', [0, 1], [0, 20], [0, 10]);
        lhs('/', 'div,issome', [0, 1], [0, 20], [0, 0, 9, 9]);
        lhs('/', 'div,issome', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('/', 'div,issome', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('/', 'div,issome', [0, 1], [0, 20], [0, 1]);
        rhs('/', 'div,issome', [0, 2], [0, 1], [0, 2]);
        rhs('/', 'div,issome', [0, 2], [0, 2], [0, 2]);
        rhs('/', 'div,issome', [0, 1], [0, 2], [0, 2]);
        rhs('/', 'div,issome', [0, 1], [0, 20], [0, 10]);
        rhs('/', 'div,issome', [0, 1], [0, 20], [0, 0, 9, 9]);
        rhs('/', 'div,issome', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('/', 'div,issome', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
      });
    });

    describe('SUM', function() {

      describe('binary with shared arg', function() {

        let both = testTernaryBinarySharedArgs.bind(undefined, '+', '', ''); // R = A @1 B, A @2 C  and  R = A @1 B, C @2 A
        let lhs = testTernaryBinarySharedArgs.bind(undefined, '+', '', 'lhs'); // R = A @1 B, A @2 C
        let rhs = testTernaryBinarySharedArgs.bind(undefined, '+', '', 'rhs'); // R = A @1 B, C @2 A

        both('&', [0, 1], [0, 1]);
        both('&', 'isdiff', [0, 2], [0, 1]);
        both('&', 'sum', [0, 2], [0, 2]);
        both('&', [0, 1], [0, 10]);
        both('&', 'reject', [0, 1], [0, 0, 9, 9]);
        both('&', 'reject', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('&', 'reject', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!=', 'sum,xor', [0, 1], [0, 1]);
        both('!=', 'issome,xor', [0, 2], [0, 1]);
        both('!=', 'diff,sum', [0, 2], [0, 2]);
        both('!=', 'diff,sum', [0, 1], [0, 10]);
        both('!=', [0, 1], [0, 0, 9, 9]);
        both('!=', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!=', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('->', 'imp,sum', [0, 1], [0, 1]);
        lhs('->', 'imp,issome', [0, 2], [0, 1]);
        lhs('->', 'imp,issome', [0, 2], [0, 1]);
        lhs('->', 'imp,sum', [0, 1], [0, 10]);
        lhs('->', [0, 1], [0, 0, 9, 9]);
        lhs('->', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('->', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('->', 'imp,sum', [0, 1], [0, 1]);
        rhs('->', 'imp,issome', [0, 2], [0, 1]);
        rhs('->', 'imp,sum', [0, 2], [0, 2]);
        rhs('->', 'imp,sum', [0, 1], [0, 10]);
        rhs('->', [0, 1], [0, 0, 9, 9]);
        rhs('->', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('->', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<', [0, 1], [0, 1]);
        lhs('<', [0, 2], [0, 1]);
        lhs('<', 'lt,sum', [0, 2], [0, 2]);
        lhs('<', 'lt,sum', [0, 1], [0, 10]);
        lhs('<', [0, 1], [0, 0, 9, 9]);
        lhs('<', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<', [0, 1], [0, 1]);
        rhs('<', 'isdiff', [0, 2], [0, 1]);
        rhs('<', 'lt,sum', [0, 2], [0, 2]);
        rhs('<', [0, 1], [0, 10]);
        rhs('<', 'reject', [0, 1], [0, 0, 9, 9]);
        rhs('<', 'reject', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<', 'reject', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<=', 'imp,sum', [0, 1], [0, 1]);
        lhs('<=', 'imp,issome', [0, 2], [0, 1]);
        lhs('<=', 'lte,sum', [0, 2], [0, 2]);
        lhs('<=', 'lte,sum', [0, 1], [0, 10]);
        lhs('<=', [0, 1], [0, 0, 9, 9]);
        lhs('<=', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<=', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<=', 'imp,sum', [0, 1], [0, 1]);
        rhs('<=', 'imp,issome', [0, 2], [0, 1]);
        rhs('<=', 'lte,sum', [0, 2], [0, 2]);
        rhs('<=', 'imp,sum', [0, 1], [0, 10]);
        rhs('<=', [0, 1], [0, 0, 9, 9]);
        rhs('<=', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<=', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!&', 'nall,sum', [0, 1], [0, 1]);
        both('!&', 'issome,nall', [0, 2], [0, 1]);
        both('!&', 'nall,sum', [0, 2], [0, 2]);
        both('!&', 'nall,sum', [0, 1], [0, 10]);
        both('!&', [0, 1], [0, 0, 9, 9]);
        both('!&', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!&', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('!->', [0, 1], [0, 1]);
        lhs('!->', 'isdiff', [0, 2], [0, 1]);
        lhs('!->', 'sum', [0, 2], [0, 2]);
        lhs('!->', [0, 1], [0, 10]);
        lhs('!->', 'reject', [0, 1], [0, 0, 9, 9]);
        lhs('!->', 'reject', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('!->', 'reject', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('!->', [0, 1], [0, 1]);
        rhs('!->', [0, 2], [0, 1]);
        rhs('!->', [0, 2], [0, 2]);
        rhs('!->', [0, 1], [0, 10]);
        rhs('!->', [0, 1], [0, 0, 9, 9]);
        rhs('!->', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('!->', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!|', [0, 1], [0, 1]);
        both('!|', [0, 2], [0, 1]);
        both('!|', [0, 2], [0, 2]);
        both('!|', [0, 1], [0, 10]);
        both('!|', [0, 1], [0, 0, 9, 9]);
        both('!|', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!|', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('==', 'sum', [0, 1], [0, 1]);
        both('==', 'issome', [0, 2], [0, 1]);
        both('==', 'sum', [0, 2], [0, 2]);
        both('==', 'sum', [0, 1], [0, 10]);
        both('==', [0, 1], [0, 0, 9, 9]);
        both('==', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('==', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!^', 'sum', [0, 1], [0, 1]);
        both('!^', 'issome', [0, 2], [0, 1]);
        both('!^', 'sum', [0, 2], [0, 2]);
        both('!^', 'sum', [0, 1], [0, 10]);
        both('!^', [0, 1], [0, 0, 9, 9]);
        both('!^', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!^', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('^', 'sum,xor', [0, 1], [0, 1]);
        both('^', 'issome,xor', [0, 2], [0, 1]);
        both('^', 'sum,xor', [0, 2], [0, 2]);
        both('^', 'sum,xor', [0, 1], [0, 10]);
        both('^', [0, 1], [0, 0, 9, 9]);
        both('^', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('^', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
      });

      describe('binary with shared result', function() {

        let both = testTernaryBinarySharedArgs.bind(undefined, '+', '', ''); // R = A @1 B, A @2 C  and  R = A @1 B, C @2 A
        let lhs = testTernaryBinarySharedArgs.bind(undefined, '+', '', 'lhs'); // R = A @1 B, A @2 C
        let rhs = testTernaryBinarySharedArgs.bind(undefined, '+', '', 'rhs'); // R = A @1 B, C @2 A

        both('&', [0, 1], [0, 1]);
        both('&', 'isdiff', [0, 2], [0, 1]);
        both('&', 'sum', [0, 2], [0, 2]);
        both('&', [0, 1], [0, 10]);
        both('&', 'reject', [0, 1], [0, 0, 9, 9]);
        both('&', 'reject', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('&', 'reject', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!=', 'sum,xor', [0, 1], [0, 1]);
        both('!=', 'issome,xor', [0, 2], [0, 1]);
        both('!=', 'diff,sum', [0, 2], [0, 2]);
        both('!=', 'diff,sum', [0, 1], [0, 10]);
        both('!=', [0, 1], [0, 0, 9, 9]);
        both('!=', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!=', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('->', 'imp,sum', [0, 1], [0, 1]);
        lhs('->', 'imp,issome', [0, 2], [0, 1]);
        lhs('->', 'imp,issome', [0, 2], [0, 1]);
        lhs('->', 'imp,sum', [0, 1], [0, 10]);
        lhs('->', [0, 1], [0, 0, 9, 9]);
        lhs('->', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('->', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('->', 'imp,sum', [0, 1], [0, 1]);
        rhs('->', 'imp,issome', [0, 2], [0, 1]);
        rhs('->', 'imp,sum', [0, 2], [0, 2]);
        rhs('->', 'imp,sum', [0, 1], [0, 10]);
        rhs('->', [0, 1], [0, 0, 9, 9]);
        rhs('->', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('->', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<', [0, 1], [0, 1]);
        lhs('<', [0, 2], [0, 1]);
        lhs('<', 'lt,sum', [0, 2], [0, 2]);
        lhs('<', 'lt,sum', [0, 1], [0, 10]);
        lhs('<', [0, 1], [0, 0, 9, 9]);
        lhs('<', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<', [0, 1], [0, 1]);
        rhs('<', 'isdiff', [0, 2], [0, 1]);
        rhs('<', 'lt,sum', [0, 2], [0, 2]);
        rhs('<', [0, 1], [0, 10]);
        rhs('<', 'reject', [0, 1], [0, 0, 9, 9]);
        rhs('<', 'reject', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<', 'reject', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<=', 'imp,sum', [0, 1], [0, 1]);
        lhs('<=', 'imp,issome', [0, 2], [0, 1]);
        lhs('<=', 'lte,sum', [0, 2], [0, 2]);
        lhs('<=', 'lte,sum', [0, 1], [0, 10]);
        lhs('<=', [0, 1], [0, 0, 9, 9]);
        lhs('<=', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<=', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<=', 'imp,sum', [0, 1], [0, 1]);
        rhs('<=', 'imp,issome', [0, 2], [0, 1]);
        rhs('<=', 'lte,sum', [0, 2], [0, 2]);
        rhs('<=', 'imp,sum', [0, 1], [0, 10]);
        rhs('<=', [0, 1], [0, 0, 9, 9]);
        rhs('<=', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<=', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!&', 'nall,sum', [0, 1], [0, 1]);
        both('!&', 'issome,nall', [0, 2], [0, 1]);
        both('!&', 'nall,sum', [0, 2], [0, 2]);
        both('!&', 'nall,sum', [0, 1], [0, 10]);
        both('!&', [0, 1], [0, 0, 9, 9]);
        both('!&', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!&', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('!->', [0, 1], [0, 1]);
        lhs('!->', 'isdiff', [0, 2], [0, 1]);
        lhs('!->', 'sum', [0, 2], [0, 2]);
        lhs('!->', [0, 1], [0, 10]);
        lhs('!->', 'reject', [0, 1], [0, 0, 9, 9]);
        lhs('!->', 'reject', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('!->', 'reject', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('!->', [0, 1], [0, 1]);
        rhs('!->', [0, 2], [0, 1]);
        rhs('!->', [0, 2], [0, 2]);
        rhs('!->', [0, 1], [0, 10]);
        rhs('!->', [0, 1], [0, 0, 9, 9]);
        rhs('!->', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('!->', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!|', [0, 1], [0, 1]);
        both('!|', [0, 2], [0, 1]);
        both('!|', [0, 2], [0, 2]);
        both('!|', [0, 1], [0, 10]);
        both('!|', [0, 1], [0, 0, 9, 9]);
        both('!|', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!|', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('==', 'sum', [0, 1], [0, 1]);
        both('==', 'issome', [0, 2], [0, 1]);
        both('==', 'sum', [0, 2], [0, 2]);
        both('==', 'sum', [0, 1], [0, 10]);
        both('==', [0, 1], [0, 0, 9, 9]);
        both('==', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('==', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!^', 'sum', [0, 1], [0, 1]);
        both('!^', 'issome', [0, 2], [0, 1]);
        both('!^', 'sum', [0, 2], [0, 2]);
        both('!^', 'sum', [0, 1], [0, 10]);
        both('!^', [0, 1], [0, 0, 9, 9]);
        both('!^', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!^', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('^', 'sum,xor', [0, 1], [0, 1]);
        both('^', 'issome,xor', [0, 2], [0, 1]);
        both('^', 'sum,xor', [0, 2], [0, 2]);
        both('^', 'sum,xor', [0, 1], [0, 10]);
        both('^', [0, 1], [0, 0, 9, 9]);
        both('^', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('^', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
      });

      describe('ternary with shared args', function() {

        let both = testTernaryTernarySharedArgs.bind(undefined, '+', '', '');          // R = A @1 B, S = A @2 C  and  R = A @1 B, S = C @2 A
        let lhs = testTernaryTernarySharedArgs.bind(undefined, '+', '', 'lhs');    // R = A @1 B, S = A @2 C
        let rhs = testTernaryTernarySharedArgs.bind(undefined, '+', '', 'rhs');    // R = A @1 B, S = C @2 A

        // R = A & B, S = A &? C
        both('&?', 'isall,sum', [0, 1], [0, 1], [0, 1]);
        both('&?', 'isall,sum', [0, 2], [0, 1], [0, 2]);
        both('&?', 'isall,sum', [0, 2], [0, 2], [0, 2]);
        both('&?', 'isall,sum', [0, 1], [0, 2], [0, 2]);
        both('&?', 'isall,sum', [0, 1], [0, 1], [0, 10]);
        both('&?', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('&?', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('&?', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('==?', 'issame,sum', [0, 1], [0, 1], [0, 1]);
        both('==?', 'issame,sum', [0, 2], [0, 1], [0, 2]);
        both('==?', 'issame,sum', [0, 2], [0, 2], [0, 2]);
        both('==?', 'issame,sum', [0, 1], [0, 2], [0, 2]);
        both('==?', 'issame,sum', [0, 1], [0, 1], [0, 10]);
        both('==?', 'xor', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('==?', 'xor', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('==?', 'xor', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!=?', 'isdiff,sum', [0, 1], [0, 1], [0, 1]);
        both('!=?', 'isdiff,sum', [0, 2], [0, 1], [0, 2]);
        both('!=?', 'isdiff,sum', [0, 2], [0, 2], [0, 2]);
        both('!=?', 'isdiff,sum', [0, 1], [0, 2], [0, 2]);
        both('!=?', 'isdiff,sum', [0, 1], [0, 1], [0, 10]);
        both('!=?', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('!=?', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!=?', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<?', 'islt,sum', [0, 1], [0, 1], [0, 1]);
        lhs('<?', 'islt,sum', [0, 2], [0, 1], [0, 2]);
        lhs('<?', 'islt,sum', [0, 2], [0, 2], [0, 2]);
        lhs('<?', 'islt,sum', [0, 1], [0, 2], [0, 2]);
        lhs('<?', 'islt,sum', [0, 1], [0, 1], [0, 10]);
        lhs('<?', [0, 1], [0, 1], [0, 0, 9, 9]);
        lhs('<?', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<?', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<?', 'islt,sum', [0, 1], [0, 1], [0, 1]);
        rhs('<?', 'islt,sum', [0, 2], [0, 1], [0, 2]);
        rhs('<?', 'islt,sum', [0, 2], [0, 2], [0, 2]);
        rhs('<?', 'islt,sum', [0, 1], [0, 2], [0, 2]);
        rhs('<?', 'islt,sum', [0, 1], [0, 1], [0, 10]);
        rhs('<?', [0, 1], [0, 1], [0, 0, 9, 9]);
        rhs('<?', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<?', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<=?', 'islte,sum', [0, 1], [0, 1], [0, 1]);
        lhs('<=?', 'islte,sum', [0, 2], [0, 1], [0, 2]);
        lhs('<=?', 'islte,sum', [0, 2], [0, 2], [0, 2]);
        lhs('<=?', 'islte,sum', [0, 1], [0, 2], [0, 2]);
        lhs('<=?', 'islte,sum', [0, 1], [0, 1], [0, 10]);
        lhs('<=?', [0, 1], [0, 1], [0, 0, 9, 9]);
        lhs('<=?', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<=?', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<=?', 'islte,sum', [0, 1], [0, 1], [0, 1]);
        rhs('<=?', 'islte,sum', [0, 2], [0, 1], [0, 2]);
        rhs('<=?', 'islte,sum', [0, 2], [0, 2], [0, 2]);
        rhs('<=?', 'islte,sum', [0, 1], [0, 2], [0, 2]);
        rhs('<=?', 'islte,sum', [0, 1], [0, 1], [0, 10]);
        rhs('<=?', 'islte', [0, 1], [0, 1], [0, 0, 9, 9]);
        rhs('<=?', 'islte', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<=?', 'islte', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!&?', 'isnall,sum', [0, 1], [0, 1], [0, 1]);
        both('!&?', 'isnall,sum', [0, 2], [0, 1], [0, 2]);
        both('!&?', 'isnall,sum', [0, 2], [0, 2], [0, 2]);
        both('!&?', 'isnall,sum', [0, 1], [0, 2], [0, 2]);
        both('!&?', 'isnall,sum', [0, 1], [0, 1], [0, 10]);
        both('!&?', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('!&?', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!&?', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('|?', 'issome,sum', [0, 1], [0, 1], [0, 1]);
        both('|?', 'issome,sum', [0, 2], [0, 1], [0, 2]);
        both('|?', 'issome,sum', [0, 2], [0, 2], [0, 2]);
        both('|?', 'issome,sum', [0, 1], [0, 2], [0, 2]);
        both('|?', 'issome,sum', [0, 1], [0, 1], [0, 10]);
        both('|?', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('|?', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('|?', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!|?', 'isnone,sum', [0, 1], [0, 1], [0, 1]);
        both('!|?', 'isnone,sum', [0, 2], [0, 1], [0, 2]);
        both('!|?', 'isnone,sum', [0, 2], [0, 2], [0, 2]);
        both('!|?', 'isnone,sum', [0, 1], [0, 2], [0, 2]);
        both('!|?', 'isnone,sum', [0, 1], [0, 1], [0, 10]);
        both('!|?', 'isnone', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('!|?', 'isnone', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!|?', 'isnone', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('+', 'issome,sum', [0, 1], [0, 20], [0, 1]);
        both('+', 'sum,sum', [0, 2], [0, 1], [0, 2]);
        both('+', 'sum,sum', [0, 2], [0, 2], [0, 2]);
        both('+', 'sum,sum', [0, 1], [0, 2], [0, 2]);
        both('+', 'issome,sum', [0, 1], [0, 20], [0, 10]);
        both('+', [0, 1], [0, 20], [0, 0, 9, 9]);
        both('+', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('+', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('-', 'minus,sum', [0, 1], [0, 20], [0, 1]);
        lhs('-', 'minus,sum', [0, 2], [0, 1], [0, 2]);
        lhs('-', 'minus,sum', [0, 2], [0, 2], [0, 2]);
        lhs('-', 'minus,sum', [0, 1], [0, 2], [0, 2]);
        lhs('-', 'minus,sum', [0, 1], [0, 20], [0, 10]);
        lhs('-', [0, 1], [0, 20], [0, 0, 9, 9]);
        lhs('-', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('-', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('-', 'minus,sum', [0, 1], [0, 20], [0, 1]);
        rhs('-', 'minus,sum', [0, 2], [0, 1], [0, 2]);
        rhs('-', 'minus,sum', [0, 2], [0, 2], [0, 2]);
        rhs('-', 'minus,sum', [0, 1], [0, 2], [0, 2]);
        rhs('-', 'minus,sum', [0, 1], [0, 20], [0, 10]);
        rhs('-', [0, 1], [0, 20], [0, 0, 9, 9]);
        rhs('-', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('-', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('*', 'product,sum', [0, 1], [0, 100], [0, 1]);
        both('*', 'product,sum', [0, 2], [0, 1], [0, 2]);
        both('*', 'product,sum', [0, 2], [0, 2], [0, 2]);
        both('*', 'product,sum', [0, 1], [0, 2], [0, 2]);
        both('*', 'product,sum', [0, 1], [0, 100], [0, 10]);
        both('*', [0, 1], [0, 100], [0, 0, 9, 9]);
        both('*', [0, 1], [0, 100], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('*', [0, 1], [0, 100], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('/', 'div,sum', [0, 1], [0, 20], [0, 1]);
        lhs('/', 'div,sum', [0, 2], [0, 1], [0, 2]);
        lhs('/', 'div,sum', [0, 2], [0, 2], [0, 2]);
        lhs('/', 'div,sum', [0, 1], [0, 2], [0, 2]);
        lhs('/', 'div,sum', [0, 1], [0, 20], [0, 10]);
        lhs('/', 'div', [0, 1], [0, 20], [0, 0, 9, 9]);
        lhs('/', 'div', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('/', 'div', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('/', 'div,sum', [0, 1], [0, 20], [0, 1]);
        rhs('/', 'div,sum', [0, 2], [0, 1], [0, 2]);
        rhs('/', 'div,sum', [0, 2], [0, 2], [0, 2]);
        rhs('/', 'div,sum', [0, 1], [0, 2], [0, 2]);
        rhs('/', 'div,sum', [0, 1], [0, 20], [0, 10]);
        rhs('/', 'reject', [0, 1], [0, 20], [0, 0, 9, 9]);
        rhs('/', 'reject', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('/', 'reject', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
      });

      describe('ternary with shared R', function() {

        let both = testTernaryTernarySharedArgs.bind(undefined, '+', '', '');          // R = A @1 B, S = A @2 C  and  R = A @1 B, S = C @2 A
        let lhs = testTernaryTernarySharedArgs.bind(undefined, '+', '', 'lhs');    // R = A @1 B, S = A @2 C
        let rhs = testTernaryTernarySharedArgs.bind(undefined, '+', '', 'rhs');    // R = A @1 B, S = C @2 A

        // R = A & B, S = A &? C
        both('&?', 'isall,sum', [0, 1], [0, 1], [0, 1]);
        both('&?', 'isall,sum', [0, 2], [0, 1], [0, 2]);
        both('&?', 'isall,sum', [0, 2], [0, 2], [0, 2]);
        both('&?', 'isall,sum', [0, 1], [0, 2], [0, 2]);
        both('&?', 'isall,sum', [0, 1], [0, 1], [0, 10]);
        both('&?', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('&?', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('&?', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('==?', 'issame,sum', [0, 1], [0, 1], [0, 1]);
        both('==?', 'issame,sum', [0, 2], [0, 1], [0, 2]);
        both('==?', 'issame,sum', [0, 2], [0, 2], [0, 2]);
        both('==?', 'issame,sum', [0, 1], [0, 2], [0, 2]);
        both('==?', 'issame,sum', [0, 1], [0, 1], [0, 10]);
        both('==?', 'xor', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('==?', 'xor', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('==?', 'xor', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!=?', 'isdiff,sum', [0, 1], [0, 1], [0, 1]);
        both('!=?', 'isdiff,sum', [0, 2], [0, 1], [0, 2]);
        both('!=?', 'isdiff,sum', [0, 2], [0, 2], [0, 2]);
        both('!=?', 'isdiff,sum', [0, 1], [0, 2], [0, 2]);
        both('!=?', 'isdiff,sum', [0, 1], [0, 1], [0, 10]);
        both('!=?', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('!=?', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!=?', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<?', 'islt,sum', [0, 1], [0, 1], [0, 1]);
        lhs('<?', 'islt,sum', [0, 2], [0, 1], [0, 2]);
        lhs('<?', 'islt,sum', [0, 2], [0, 2], [0, 2]);
        lhs('<?', 'islt,sum', [0, 1], [0, 2], [0, 2]);
        lhs('<?', 'islt,sum', [0, 1], [0, 1], [0, 10]);
        lhs('<?', [0, 1], [0, 1], [0, 0, 9, 9]);
        lhs('<?', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<?', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<?', 'islt,sum', [0, 1], [0, 1], [0, 1]);
        rhs('<?', 'islt,sum', [0, 2], [0, 1], [0, 2]);
        rhs('<?', 'islt,sum', [0, 2], [0, 2], [0, 2]);
        rhs('<?', 'islt,sum', [0, 1], [0, 2], [0, 2]);
        rhs('<?', 'islt,sum', [0, 1], [0, 1], [0, 10]);
        rhs('<?', [0, 1], [0, 1], [0, 0, 9, 9]);
        rhs('<?', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<?', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<=?', 'islte,sum', [0, 1], [0, 1], [0, 1]);
        lhs('<=?', 'islte,sum', [0, 2], [0, 1], [0, 2]);
        lhs('<=?', 'islte,sum', [0, 2], [0, 2], [0, 2]);
        lhs('<=?', 'islte,sum', [0, 1], [0, 2], [0, 2]);
        lhs('<=?', 'islte,sum', [0, 1], [0, 1], [0, 10]);
        lhs('<=?', [0, 1], [0, 1], [0, 0, 9, 9]);
        lhs('<=?', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<=?', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<=?', 'islte,sum', [0, 1], [0, 1], [0, 1]);
        rhs('<=?', 'islte,sum', [0, 2], [0, 1], [0, 2]);
        rhs('<=?', 'islte,sum', [0, 2], [0, 2], [0, 2]);
        rhs('<=?', 'islte,sum', [0, 1], [0, 2], [0, 2]);
        rhs('<=?', 'islte,sum', [0, 1], [0, 1], [0, 10]);
        rhs('<=?', 'islte', [0, 1], [0, 1], [0, 0, 9, 9]);
        rhs('<=?', 'islte', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<=?', 'islte', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!&?', 'isnall,sum', [0, 1], [0, 1], [0, 1]);
        both('!&?', 'isnall,sum', [0, 2], [0, 1], [0, 2]);
        both('!&?', 'isnall,sum', [0, 2], [0, 2], [0, 2]);
        both('!&?', 'isnall,sum', [0, 1], [0, 2], [0, 2]);
        both('!&?', 'isnall,sum', [0, 1], [0, 1], [0, 10]);
        both('!&?', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('!&?', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!&?', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('|?', 'issome,sum', [0, 1], [0, 1], [0, 1]);
        both('|?', 'issome,sum', [0, 2], [0, 1], [0, 2]);
        both('|?', 'issome,sum', [0, 2], [0, 2], [0, 2]);
        both('|?', 'issome,sum', [0, 1], [0, 2], [0, 2]);
        both('|?', 'issome,sum', [0, 1], [0, 1], [0, 10]);
        both('|?', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('|?', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('|?', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!|?', 'isnone,sum', [0, 1], [0, 1], [0, 1]);
        both('!|?', 'isnone,sum', [0, 2], [0, 1], [0, 2]);
        both('!|?', 'isnone,sum', [0, 2], [0, 2], [0, 2]);
        both('!|?', 'isnone,sum', [0, 1], [0, 2], [0, 2]);
        both('!|?', 'isnone,sum', [0, 1], [0, 1], [0, 10]);
        both('!|?', 'isnone', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('!|?', 'isnone', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!|?', 'isnone', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('+', 'issome,sum', [0, 1], [0, 20], [0, 1]);
        both('+', 'sum,sum', [0, 2], [0, 1], [0, 2]);
        both('+', 'sum,sum', [0, 2], [0, 2], [0, 2]);
        both('+', 'sum,sum', [0, 1], [0, 2], [0, 2]);
        both('+', 'issome,sum', [0, 1], [0, 20], [0, 10]);
        both('+', [0, 1], [0, 20], [0, 0, 9, 9]);
        both('+', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('+', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('-', 'minus,sum', [0, 1], [0, 20], [0, 1]);
        lhs('-', 'minus,sum', [0, 2], [0, 1], [0, 2]);
        lhs('-', 'minus,sum', [0, 2], [0, 2], [0, 2]);
        lhs('-', 'minus,sum', [0, 1], [0, 2], [0, 2]);
        lhs('-', 'minus,sum', [0, 1], [0, 20], [0, 10]);
        lhs('-', [0, 1], [0, 20], [0, 0, 9, 9]);
        lhs('-', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('-', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('-', 'minus,sum', [0, 1], [0, 20], [0, 1]);
        rhs('-', 'minus,sum', [0, 2], [0, 1], [0, 2]);
        rhs('-', 'minus,sum', [0, 2], [0, 2], [0, 2]);
        rhs('-', 'minus,sum', [0, 1], [0, 2], [0, 2]);
        rhs('-', 'minus,sum', [0, 1], [0, 20], [0, 10]);
        rhs('-', [0, 1], [0, 20], [0, 0, 9, 9]);
        rhs('-', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('-', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('*', 'product,sum', [0, 1], [0, 100], [0, 1]);
        both('*', 'product,sum', [0, 2], [0, 1], [0, 2]);
        both('*', 'product,sum', [0, 2], [0, 2], [0, 2]);
        both('*', 'product,sum', [0, 1], [0, 2], [0, 2]);
        both('*', 'product,sum', [0, 1], [0, 100], [0, 10]);
        both('*', [0, 1], [0, 100], [0, 0, 9, 9]);
        both('*', [0, 1], [0, 100], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('*', [0, 1], [0, 100], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('/', 'div,sum', [0, 1], [0, 20], [0, 1]);
        lhs('/', 'div,sum', [0, 2], [0, 1], [0, 2]);
        lhs('/', 'div,sum', [0, 2], [0, 2], [0, 2]);
        lhs('/', 'div,sum', [0, 1], [0, 2], [0, 2]);
        lhs('/', 'div,sum', [0, 1], [0, 20], [0, 10]);
        lhs('/', 'div', [0, 1], [0, 20], [0, 0, 9, 9]);
        lhs('/', 'div', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('/', 'div', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('/', 'div,sum', [0, 1], [0, 20], [0, 1]);
        rhs('/', 'div,sum', [0, 2], [0, 1], [0, 2]);
        rhs('/', 'div,sum', [0, 2], [0, 2], [0, 2]);
        rhs('/', 'div,sum', [0, 1], [0, 2], [0, 2]);
        rhs('/', 'div,sum', [0, 1], [0, 20], [0, 10]);
        rhs('/', 'reject', [0, 1], [0, 20], [0, 0, 9, 9]);
        rhs('/', 'reject', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('/', 'reject', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
      });

      describe('ternary with shared S', function() {

        let both = testTernaryTernarySharedArgs.bind(undefined, '+', '', '');          // R = A @1 B, S = A @2 C  and  R = A @1 B, S = C @2 A
        let lhs = testTernaryTernarySharedArgs.bind(undefined, '+', '', 'lhs');    // R = A @1 B, S = A @2 C
        let rhs = testTernaryTernarySharedArgs.bind(undefined, '+', '', 'rhs');    // R = A @1 B, S = C @2 A

        // R = A & B, S = A &? C
        both('&?', 'isall,sum', [0, 1], [0, 1], [0, 1]);
        both('&?', 'isall,sum', [0, 2], [0, 1], [0, 2]);
        both('&?', 'isall,sum', [0, 2], [0, 2], [0, 2]);
        both('&?', 'isall,sum', [0, 1], [0, 2], [0, 2]);
        both('&?', 'isall,sum', [0, 1], [0, 1], [0, 10]);
        both('&?', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('&?', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('&?', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('==?', 'issame,sum', [0, 1], [0, 1], [0, 1]);
        both('==?', 'issame,sum', [0, 2], [0, 1], [0, 2]);
        both('==?', 'issame,sum', [0, 2], [0, 2], [0, 2]);
        both('==?', 'issame,sum', [0, 1], [0, 2], [0, 2]);
        both('==?', 'issame,sum', [0, 1], [0, 1], [0, 10]);
        both('==?', 'xor', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('==?', 'xor', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('==?', 'xor', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!=?', 'isdiff,sum', [0, 1], [0, 1], [0, 1]);
        both('!=?', 'isdiff,sum', [0, 2], [0, 1], [0, 2]);
        both('!=?', 'isdiff,sum', [0, 2], [0, 2], [0, 2]);
        both('!=?', 'isdiff,sum', [0, 1], [0, 2], [0, 2]);
        both('!=?', 'isdiff,sum', [0, 1], [0, 1], [0, 10]);
        both('!=?', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('!=?', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!=?', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<?', 'islt,sum', [0, 1], [0, 1], [0, 1]);
        lhs('<?', 'islt,sum', [0, 2], [0, 1], [0, 2]);
        lhs('<?', 'islt,sum', [0, 2], [0, 2], [0, 2]);
        lhs('<?', 'islt,sum', [0, 1], [0, 2], [0, 2]);
        lhs('<?', 'islt,sum', [0, 1], [0, 1], [0, 10]);
        lhs('<?', [0, 1], [0, 1], [0, 0, 9, 9]);
        lhs('<?', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<?', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<?', 'islt,sum', [0, 1], [0, 1], [0, 1]);
        rhs('<?', 'islt,sum', [0, 2], [0, 1], [0, 2]);
        rhs('<?', 'islt,sum', [0, 2], [0, 2], [0, 2]);
        rhs('<?', 'islt,sum', [0, 1], [0, 2], [0, 2]);
        rhs('<?', 'islt,sum', [0, 1], [0, 1], [0, 10]);
        rhs('<?', [0, 1], [0, 1], [0, 0, 9, 9]);
        rhs('<?', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<?', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<=?', 'islte,sum', [0, 1], [0, 1], [0, 1]);
        lhs('<=?', 'islte,sum', [0, 2], [0, 1], [0, 2]);
        lhs('<=?', 'islte,sum', [0, 2], [0, 2], [0, 2]);
        lhs('<=?', 'islte,sum', [0, 1], [0, 2], [0, 2]);
        lhs('<=?', 'islte,sum', [0, 1], [0, 1], [0, 10]);
        lhs('<=?', [0, 1], [0, 1], [0, 0, 9, 9]);
        lhs('<=?', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<=?', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<=?', 'islte,sum', [0, 1], [0, 1], [0, 1]);
        rhs('<=?', 'islte,sum', [0, 2], [0, 1], [0, 2]);
        rhs('<=?', 'islte,sum', [0, 2], [0, 2], [0, 2]);
        rhs('<=?', 'islte,sum', [0, 1], [0, 2], [0, 2]);
        rhs('<=?', 'islte,sum', [0, 1], [0, 1], [0, 10]);
        rhs('<=?', 'islte', [0, 1], [0, 1], [0, 0, 9, 9]);
        rhs('<=?', 'islte', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<=?', 'islte', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!&?', 'isnall,sum', [0, 1], [0, 1], [0, 1]);
        both('!&?', 'isnall,sum', [0, 2], [0, 1], [0, 2]);
        both('!&?', 'isnall,sum', [0, 2], [0, 2], [0, 2]);
        both('!&?', 'isnall,sum', [0, 1], [0, 2], [0, 2]);
        both('!&?', 'isnall,sum', [0, 1], [0, 1], [0, 10]);
        both('!&?', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('!&?', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!&?', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('|?', 'issome,sum', [0, 1], [0, 1], [0, 1]);
        both('|?', 'issome,sum', [0, 2], [0, 1], [0, 2]);
        both('|?', 'issome,sum', [0, 2], [0, 2], [0, 2]);
        both('|?', 'issome,sum', [0, 1], [0, 2], [0, 2]);
        both('|?', 'issome,sum', [0, 1], [0, 1], [0, 10]);
        both('|?', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('|?', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('|?', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!|?', 'isnone,sum', [0, 1], [0, 1], [0, 1]);
        both('!|?', 'isnone,sum', [0, 2], [0, 1], [0, 2]);
        both('!|?', 'isnone,sum', [0, 2], [0, 2], [0, 2]);
        both('!|?', 'isnone,sum', [0, 1], [0, 2], [0, 2]);
        both('!|?', 'isnone,sum', [0, 1], [0, 1], [0, 10]);
        both('!|?', 'isnone', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('!|?', 'isnone', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!|?', 'isnone', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('+', 'issome,sum', [0, 1], [0, 20], [0, 1]);
        both('+', 'sum,sum', [0, 2], [0, 1], [0, 2]);
        both('+', 'sum,sum', [0, 2], [0, 2], [0, 2]);
        both('+', 'sum,sum', [0, 1], [0, 2], [0, 2]);
        both('+', 'issome,sum', [0, 1], [0, 20], [0, 10]);
        both('+', [0, 1], [0, 20], [0, 0, 9, 9]);
        both('+', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('+', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('-', 'minus,sum', [0, 1], [0, 20], [0, 1]);
        lhs('-', 'minus,sum', [0, 2], [0, 1], [0, 2]);
        lhs('-', 'minus,sum', [0, 2], [0, 2], [0, 2]);
        lhs('-', 'minus,sum', [0, 1], [0, 2], [0, 2]);
        lhs('-', 'minus,sum', [0, 1], [0, 20], [0, 10]);
        lhs('-', [0, 1], [0, 20], [0, 0, 9, 9]);
        lhs('-', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('-', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('-', 'minus,sum', [0, 1], [0, 20], [0, 1]);
        rhs('-', 'minus,sum', [0, 2], [0, 1], [0, 2]);
        rhs('-', 'minus,sum', [0, 2], [0, 2], [0, 2]);
        rhs('-', 'minus,sum', [0, 1], [0, 2], [0, 2]);
        rhs('-', 'minus,sum', [0, 1], [0, 20], [0, 10]);
        rhs('-', [0, 1], [0, 20], [0, 0, 9, 9]);
        rhs('-', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('-', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('*', 'product,sum', [0, 1], [0, 100], [0, 1]);
        both('*', 'product,sum', [0, 2], [0, 1], [0, 2]);
        both('*', 'product,sum', [0, 2], [0, 2], [0, 2]);
        both('*', 'product,sum', [0, 1], [0, 2], [0, 2]);
        both('*', 'product,sum', [0, 1], [0, 100], [0, 10]);
        both('*', [0, 1], [0, 100], [0, 0, 9, 9]);
        both('*', [0, 1], [0, 100], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('*', [0, 1], [0, 100], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('/', 'div,sum', [0, 1], [0, 20], [0, 1]);
        lhs('/', 'div,sum', [0, 2], [0, 1], [0, 2]);
        lhs('/', 'div,sum', [0, 2], [0, 2], [0, 2]);
        lhs('/', 'div,sum', [0, 1], [0, 2], [0, 2]);
        lhs('/', 'div,sum', [0, 1], [0, 20], [0, 10]);
        lhs('/', 'div', [0, 1], [0, 20], [0, 0, 9, 9]);
        lhs('/', 'div', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('/', 'div', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('/', 'div,sum', [0, 1], [0, 20], [0, 1]);
        rhs('/', 'div,sum', [0, 2], [0, 1], [0, 2]);
        rhs('/', 'div,sum', [0, 2], [0, 2], [0, 2]);
        rhs('/', 'div,sum', [0, 1], [0, 2], [0, 2]);
        rhs('/', 'div,sum', [0, 1], [0, 20], [0, 10]);
        rhs('/', 'reject', [0, 1], [0, 20], [0, 0, 9, 9]);
        rhs('/', 'reject', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('/', 'reject', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
      });

      describe('ternary with shared results', function() {

        let both = testTernaryTernarySharedArgs.bind(undefined, '+', '', '');          // R = A @1 B, S = A @2 C  and  R = A @1 B, S = C @2 A
        let lhs = testTernaryTernarySharedArgs.bind(undefined, '+', '', 'lhs');    // R = A @1 B, S = A @2 C
        let rhs = testTernaryTernarySharedArgs.bind(undefined, '+', '', 'rhs');    // R = A @1 B, S = C @2 A

        // R = A & B, S = A &? C
        both('&?', 'isall,sum', [0, 1], [0, 1], [0, 1]);
        both('&?', 'isall,sum', [0, 2], [0, 1], [0, 2]);
        both('&?', 'isall,sum', [0, 2], [0, 2], [0, 2]);
        both('&?', 'isall,sum', [0, 1], [0, 2], [0, 2]);
        both('&?', 'isall,sum', [0, 1], [0, 1], [0, 10]);
        both('&?', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('&?', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('&?', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('==?', 'issame,sum', [0, 1], [0, 1], [0, 1]);
        both('==?', 'issame,sum', [0, 2], [0, 1], [0, 2]);
        both('==?', 'issame,sum', [0, 2], [0, 2], [0, 2]);
        both('==?', 'issame,sum', [0, 1], [0, 2], [0, 2]);
        both('==?', 'issame,sum', [0, 1], [0, 1], [0, 10]);
        both('==?', 'xor', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('==?', 'xor', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('==?', 'xor', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!=?', 'isdiff,sum', [0, 1], [0, 1], [0, 1]);
        both('!=?', 'isdiff,sum', [0, 2], [0, 1], [0, 2]);
        both('!=?', 'isdiff,sum', [0, 2], [0, 2], [0, 2]);
        both('!=?', 'isdiff,sum', [0, 1], [0, 2], [0, 2]);
        both('!=?', 'isdiff,sum', [0, 1], [0, 1], [0, 10]);
        both('!=?', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!=?', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('!=?', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<?', 'islt,sum', [0, 1], [0, 1], [0, 1]);
        lhs('<?', 'islt,sum', [0, 2], [0, 1], [0, 2]);
        lhs('<?', 'islt,sum', [0, 2], [0, 2], [0, 2]);
        lhs('<?', 'islt,sum', [0, 1], [0, 2], [0, 2]);
        lhs('<?', 'islt,sum', [0, 1], [0, 1], [0, 10]);
        lhs('<?', [0, 1], [0, 1], [0, 0, 9, 9]);
        lhs('<?', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<?', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<?', 'islt,sum', [0, 1], [0, 1], [0, 1]);
        rhs('<?', 'islt,sum', [0, 2], [0, 1], [0, 2]);
        rhs('<?', 'islt,sum', [0, 2], [0, 2], [0, 2]);
        rhs('<?', 'islt,sum', [0, 1], [0, 2], [0, 2]);
        rhs('<?', 'islt,sum', [0, 1], [0, 1], [0, 10]);
        rhs('<?', [0, 1], [0, 1], [0, 0, 9, 9]);
        rhs('<?', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<?', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<=?', 'islte,sum', [0, 1], [0, 1], [0, 1]);
        lhs('<=?', 'islte,sum', [0, 2], [0, 1], [0, 2]);
        lhs('<=?', 'islte,sum', [0, 2], [0, 2], [0, 2]);
        lhs('<=?', 'islte,sum', [0, 1], [0, 2], [0, 2]);
        lhs('<=?', 'islte,sum', [0, 1], [0, 1], [0, 10]);
        lhs('<=?', [0, 1], [0, 1], [0, 0, 9, 9]);
        lhs('<=?', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<=?', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<=?', 'islte,sum', [0, 1], [0, 1], [0, 1]);
        rhs('<=?', 'islte,sum', [0, 2], [0, 1], [0, 2]);
        rhs('<=?', 'islte,sum', [0, 2], [0, 2], [0, 2]);
        rhs('<=?', 'islte,sum', [0, 1], [0, 2], [0, 2]);
        rhs('<=?', 'islte,sum', [0, 1], [0, 1], [0, 10]);
        rhs('<=?', 'islte', [0, 1], [0, 1], [0, 0, 9, 9]);
        rhs('<=?', 'islte', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<=?', 'islte', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!&?', 'isnall,sum', [0, 1], [0, 1], [0, 1]);
        both('!&?', 'isnall,sum', [0, 2], [0, 1], [0, 2]);
        both('!&?', 'isnall,sum', [0, 2], [0, 2], [0, 2]);
        both('!&?', 'isnall,sum', [0, 1], [0, 2], [0, 2]);
        both('!&?', 'isnall,sum', [0, 1], [0, 1], [0, 10]);
        both('!&?', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('!&?', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!&?', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('|?', 'issome,sum', [0, 1], [0, 1], [0, 1]);
        both('|?', 'issome,sum', [0, 2], [0, 1], [0, 2]);
        both('|?', 'issome,sum', [0, 2], [0, 2], [0, 2]);
        both('|?', 'issome,sum', [0, 1], [0, 2], [0, 2]);
        both('|?', 'issome,sum', [0, 1], [0, 1], [0, 10]);
        both('|?', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('|?', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('|?', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!|?', 'isnone,sum', [0, 1], [0, 1], [0, 1]);
        both('!|?', 'isnone,sum', [0, 2], [0, 1], [0, 2]);
        both('!|?', 'isnone,sum', [0, 2], [0, 2], [0, 2]);
        both('!|?', 'isnone,sum', [0, 1], [0, 2], [0, 2]);
        both('!|?', 'isnone,sum', [0, 1], [0, 1], [0, 10]);
        both('!|?', 'isnone', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('!|?', 'isnone', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!|?', 'isnone', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('+', 'issome,sum', [0, 1], [0, 20], [0, 1]);
        both('+', 'sum,sum', [0, 2], [0, 1], [0, 2]);
        both('+', 'sum,sum', [0, 2], [0, 2], [0, 2]);
        both('+', 'sum,sum', [0, 1], [0, 2], [0, 2]);
        both('+', 'issome,sum', [0, 1], [0, 20], [0, 10]);
        both('+', [0, 1], [0, 20], [0, 0, 9, 9]);
        both('+', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('+', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('-', 'minus,sum', [0, 1], [0, 20], [0, 1]);
        lhs('-', 'minus,sum', [0, 2], [0, 1], [0, 2]);
        lhs('-', 'minus,sum', [0, 2], [0, 2], [0, 2]);
        lhs('-', 'minus,sum', [0, 1], [0, 2], [0, 2]);
        lhs('-', 'minus,sum', [0, 1], [0, 20], [0, 10]);
        lhs('-', [0, 1], [0, 20], [0, 0, 9, 9]);
        lhs('-', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('-', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('-', 'minus,sum', [0, 1], [0, 20], [0, 1]);
        rhs('-', 'minus,sum', [0, 2], [0, 1], [0, 2]);
        rhs('-', 'minus,sum', [0, 2], [0, 2], [0, 2]);
        rhs('-', 'minus,sum', [0, 1], [0, 2], [0, 2]);
        rhs('-', 'minus,sum', [0, 1], [0, 20], [0, 10]);
        rhs('-', [0, 1], [0, 20], [0, 0, 9, 9]);
        rhs('-', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('-', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('*', 'product,sum', [0, 1], [0, 100], [0, 1]);
        both('*', 'product,sum', [0, 2], [0, 1], [0, 2]);
        both('*', 'product,sum', [0, 2], [0, 2], [0, 2]);
        both('*', 'product,sum', [0, 1], [0, 2], [0, 2]);
        both('*', 'product,sum', [0, 1], [0, 100], [0, 10]);
        both('*', [0, 1], [0, 100], [0, 0, 9, 9]);
        both('*', [0, 1], [0, 100], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('*', [0, 1], [0, 100], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('/', 'div,sum', [0, 1], [0, 20], [0, 1]);
        lhs('/', 'div,sum', [0, 2], [0, 1], [0, 2]);
        lhs('/', 'div,sum', [0, 2], [0, 2], [0, 2]);
        lhs('/', 'div,sum', [0, 1], [0, 2], [0, 2]);
        lhs('/', 'div,sum', [0, 1], [0, 20], [0, 10]);
        lhs('/', 'div', [0, 1], [0, 20], [0, 0, 9, 9]);
        lhs('/', 'div', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('/', 'div', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('/', 'div,sum', [0, 1], [0, 20], [0, 1]);
        rhs('/', 'div,sum', [0, 2], [0, 1], [0, 2]);
        rhs('/', 'div,sum', [0, 2], [0, 2], [0, 2]);
        rhs('/', 'div,sum', [0, 1], [0, 2], [0, 2]);
        rhs('/', 'div,sum', [0, 1], [0, 20], [0, 10]);
        rhs('/', 'reject', [0, 1], [0, 20], [0, 0, 9, 9]);
        rhs('/', 'reject', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('/', 'reject', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
      });
    });

    describe('PRODUCT', function() {

      describe('binary with shared arg', function() {

        let both = testTernaryBinarySharedArgs.bind(undefined, '*', '', ''); // R = A @1 B, A @2 C  and  R = A @1 B, C @2 A
        let lhs = testTernaryBinarySharedArgs.bind(undefined, '*', '', 'lhs'); // R = A @1 B, A @2 C
        let rhs = testTernaryBinarySharedArgs.bind(undefined, '*', '', 'rhs'); // R = A @1 B, C @2 A

        both('&', [0, 1], [0, 1]);
        both('&', [0, 2], [0, 1]);
        both('&', 'product', [0, 2], [0, 2]);
        both('&', [0, 1], [0, 10]);
        both('&', [0, 1], [0, 0, 9, 9]);
        both('&', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('&', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!=', 'product,xor', [0, 1], [0, 1]);
        both('!=', 'product,xor', [0, 2], [0, 1]);
        both('!=', 'diff,product', [0, 2], [0, 2]);
        both('!=', 'diff,product', [0, 1], [0, 10]);
        both('!=', 'imp', [0, 1], [0, 0, 9, 9]);
        both('!=', 'imp', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!=', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('->', 'imp,product', [0, 1], [0, 1]);
        lhs('->', 'imp,product', [0, 2], [0, 1]);
        lhs('->', 'imp,product', [0, 2], [0, 1]);
        lhs('->', 'imp,product', [0, 1], [0, 10]);
        lhs('->', [0, 1], [0, 0, 9, 9]);
        lhs('->', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('->', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('->', 'imp,product', [0, 1], [0, 1]);
        rhs('->', 'imp,product', [0, 2], [0, 1]);
        rhs('->', 'imp,product', [0, 2], [0, 2]);
        rhs('->', 'imp,product', [0, 1], [0, 10]);
        rhs('->', 'imp,nall', [0, 1], [0, 0, 9, 9]);
        rhs('->', 'imp,nall', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('->', 'imp,nall', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<', [0, 1], [0, 1]);
        lhs('<', [0, 2], [0, 1]);
        lhs('<', 'lt,product', [0, 2], [0, 2]);
        lhs('<', 'lt,product', [0, 1], [0, 10]);
        lhs('<', [0, 1], [0, 0, 9, 9]);
        lhs('<', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<', [0, 1], [0, 1]);
        rhs('<', [0, 2], [0, 1]);
        rhs('<', 'lt,product', [0, 2], [0, 2]);
        rhs('<', [0, 1], [0, 10]);
        rhs('<', [0, 1], [0, 0, 9, 9]);
        rhs('<', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<=', 'imp,product', [0, 1], [0, 1]);
        lhs('<=', 'imp,product', [0, 2], [0, 1]);
        lhs('<=', 'lte,product', [0, 2], [0, 2]);
        lhs('<=', 'lte,product', [0, 1], [0, 10]);
        lhs('<=', [0, 1], [0, 0, 9, 9]);
        lhs('<=', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<=', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<=', 'imp,product', [0, 1], [0, 1]);
        rhs('<=', 'imp,product', [0, 2], [0, 1]);
        rhs('<=', 'lte,product', [0, 2], [0, 2]);
        rhs('<=', 'imp,product', [0, 1], [0, 10]);
        rhs('<=', 'imp,nall', [0, 1], [0, 0, 9, 9]);
        rhs('<=', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<=', 'imp,nall', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!&', 'nall,product', [0, 1], [0, 1]);
        both('!&', 'nall,product', [0, 2], [0, 1]);
        both('!&', 'nall,product', [0, 2], [0, 2]);
        both('!&', 'nall,product', [0, 1], [0, 10]);
        both('!&', [0, 1], [0, 0, 9, 9]);
        both('!&', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!&', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('!->', [0, 1], [0, 1]);
        lhs('!->', [0, 2], [0, 1]);
        lhs('!->', 'product', [0, 2], [0, 2]);
        lhs('!->', [0, 1], [0, 10]);
        lhs('!->', [0, 1], [0, 0, 9, 9]);
        lhs('!->', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('!->', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('!->', [0, 1], [0, 1]);
        rhs('!->', [0, 2], [0, 1]);
        rhs('!->', [0, 2], [0, 2]);
        rhs('!->', [0, 1], [0, 10]);
        rhs('!->', [0, 1], [0, 0, 9, 9]);
        rhs('!->', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('!->', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!|', [0, 1], [0, 1]);
        both('!|', [0, 2], [0, 1]);
        both('!|', [0, 2], [0, 2]);
        both('!|', [0, 1], [0, 10]);
        both('!|', [0, 1], [0, 0, 9, 9]);
        both('!|', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!|', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('==', 'product', [0, 1], [0, 1]);
        both('==', 'product', [0, 2], [0, 1]);
        both('==', 'product', [0, 2], [0, 2]);
        both('==', 'product', [0, 1], [0, 10]);
        both('==', 'nall', [0, 1], [0, 0, 9, 9]);
        both('==', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('==', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!^', 'product', [0, 1], [0, 1]);
        both('!^', 'product', [0, 2], [0, 1]);
        both('!^', 'product', [0, 2], [0, 2]);
        both('!^', 'product', [0, 1], [0, 10]);
        both('!^', 'nall', [0, 1], [0, 0, 9, 9]);
        both('!^', 'nall', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!^', 'nall', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('^', 'product,xor', [0, 1], [0, 1]);
        both('^', 'product,xor', [0, 2], [0, 1]);
        both('^', 'product,xor', [0, 2], [0, 2]);
        both('^', 'product,xor', [0, 1], [0, 10]);
        both('^', 'imp', [0, 1], [0, 0, 9, 9]);
        both('^', 'imp', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('^', 'imp', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
      });

      describe('binary with shared result', function() {

        let both = testTernaryBinarySharedArgs.bind(undefined, '*', '', ''); // R = A @1 B, A @2 C  and  R = A @1 B, C @2 A
        let lhs = testTernaryBinarySharedArgs.bind(undefined, '*', '', 'lhs'); // R = A @1 B, A @2 C
        let rhs = testTernaryBinarySharedArgs.bind(undefined, '*', '', 'rhs'); // R = A @1 B, C @2 A

        both('&', [0, 1], [0, 1]);
        both('&', [0, 2], [0, 1]);
        both('&', 'product', [0, 2], [0, 2]);
        both('&', [0, 1], [0, 10]);
        both('&', [0, 1], [0, 0, 9, 9]);
        both('&', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('&', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!=', 'product,xor', [0, 1], [0, 1]);
        both('!=', 'product,xor', [0, 2], [0, 1]);
        both('!=', 'diff,product', [0, 2], [0, 2]);
        both('!=', 'diff,product', [0, 1], [0, 10]);
        both('!=', 'imp', [0, 1], [0, 0, 9, 9]);
        both('!=', 'imp', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!=', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('->', 'imp,product', [0, 1], [0, 1]);
        lhs('->', 'imp,product', [0, 2], [0, 1]);
        lhs('->', 'imp,product', [0, 2], [0, 1]);
        lhs('->', 'imp,product', [0, 1], [0, 10]);
        lhs('->', [0, 1], [0, 0, 9, 9]);
        lhs('->', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('->', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('->', 'imp,product', [0, 1], [0, 1]);
        rhs('->', 'imp,product', [0, 2], [0, 1]);
        rhs('->', 'imp,product', [0, 2], [0, 2]);
        rhs('->', 'imp,product', [0, 1], [0, 10]);
        rhs('->', 'imp,nall', [0, 1], [0, 0, 9, 9]);
        rhs('->', 'imp,nall', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('->', 'imp,nall', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<', [0, 1], [0, 1]);
        lhs('<', [0, 2], [0, 1]);
        lhs('<', 'lt,product', [0, 2], [0, 2]);
        lhs('<', 'lt,product', [0, 1], [0, 10]);
        lhs('<', [0, 1], [0, 0, 9, 9]);
        lhs('<', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<', [0, 1], [0, 1]);
        rhs('<', [0, 2], [0, 1]);
        rhs('<', 'lt,product', [0, 2], [0, 2]);
        rhs('<', [0, 1], [0, 10]);
        rhs('<', [0, 1], [0, 0, 9, 9]);
        rhs('<', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<=', 'imp,product', [0, 1], [0, 1]);
        lhs('<=', 'imp,product', [0, 2], [0, 1]);
        lhs('<=', 'lte,product', [0, 2], [0, 2]);
        lhs('<=', 'lte,product', [0, 1], [0, 10]);
        lhs('<=', [0, 1], [0, 0, 9, 9]);
        lhs('<=', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<=', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<=', 'imp,product', [0, 1], [0, 1]);
        rhs('<=', 'imp,product', [0, 2], [0, 1]);
        rhs('<=', 'lte,product', [0, 2], [0, 2]);
        rhs('<=', 'imp,product', [0, 1], [0, 10]);
        rhs('<=', 'imp,nall', [0, 1], [0, 0, 9, 9]);
        rhs('<=', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<=', 'imp,nall', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!&', 'nall,product', [0, 1], [0, 1]);
        both('!&', 'nall,product', [0, 2], [0, 1]);
        both('!&', 'nall,product', [0, 2], [0, 2]);
        both('!&', 'nall,product', [0, 1], [0, 10]);
        both('!&', [0, 1], [0, 0, 9, 9]);
        both('!&', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!&', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('!->', [0, 1], [0, 1]);
        lhs('!->', [0, 2], [0, 1]);
        lhs('!->', 'product', [0, 2], [0, 2]);
        lhs('!->', [0, 1], [0, 10]);
        lhs('!->', [0, 1], [0, 0, 9, 9]);
        lhs('!->', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('!->', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('!->', [0, 1], [0, 1]);
        rhs('!->', [0, 2], [0, 1]);
        rhs('!->', [0, 2], [0, 2]);
        rhs('!->', [0, 1], [0, 10]);
        rhs('!->', [0, 1], [0, 0, 9, 9]);
        rhs('!->', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('!->', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!|', [0, 1], [0, 1]);
        both('!|', [0, 2], [0, 1]);
        both('!|', [0, 2], [0, 2]);
        both('!|', [0, 1], [0, 10]);
        both('!|', [0, 1], [0, 0, 9, 9]);
        both('!|', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!|', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('==', 'product', [0, 1], [0, 1]);
        both('==', 'product', [0, 2], [0, 1]);
        both('==', 'product', [0, 2], [0, 2]);
        both('==', 'product', [0, 1], [0, 10]);
        both('==', 'nall', [0, 1], [0, 0, 9, 9]);
        both('==', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('==', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!^', 'product', [0, 1], [0, 1]);
        both('!^', 'product', [0, 2], [0, 1]);
        both('!^', 'product', [0, 2], [0, 2]);
        both('!^', 'product', [0, 1], [0, 10]);
        both('!^', 'nall', [0, 1], [0, 0, 9, 9]);
        both('!^', 'nall', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!^', 'nall', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('^', 'product,xor', [0, 1], [0, 1]);
        both('^', 'product,xor', [0, 2], [0, 1]);
        both('^', 'product,xor', [0, 2], [0, 2]);
        both('^', 'product,xor', [0, 1], [0, 10]);
        both('^', 'imp', [0, 1], [0, 0, 9, 9]);
        both('^', 'imp', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('^', 'imp', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
      });

      describe('ternary with shared args', function() {

        let both = testTernaryTernarySharedArgs.bind(undefined, '*', '', '');          // R = A @1 B, S = A @2 C  and  R = A @1 B, S = C @2 A
        let lhs = testTernaryTernarySharedArgs.bind(undefined, '*', '', 'lhs');    // R = A @1 B, S = A @2 C
        let rhs = testTernaryTernarySharedArgs.bind(undefined, '*', '', 'rhs');    // R = A @1 B, S = C @2 A

        // R = A & B, S = A &? C
        both('&?', 'isall,product', [0, 1], [0, 1], [0, 1]);
        both('&?', 'isall,product', [0, 2], [0, 1], [0, 2]);
        both('&?', 'isall,product', [0, 2], [0, 2], [0, 2]);
        both('&?', 'isall,product', [0, 1], [0, 2], [0, 2]);
        both('&?', 'isall,product', [0, 1], [0, 1], [0, 10]);
        both('&?', 'isall,nall', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('&?', 'isall,nall', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('&?', 'isall,nall', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('==?', 'issame,product', [0, 1], [0, 1], [0, 1]);
        both('==?', 'issame,product', [0, 2], [0, 1], [0, 2]);
        both('==?', 'issame,product', [0, 2], [0, 2], [0, 2]);
        both('==?', 'issame,product', [0, 1], [0, 2], [0, 2]);
        both('==?', 'issame,product', [0, 1], [0, 1], [0, 10]);
        both('==?', 'issame,nall', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('==?', 'issame,nall', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('==?', 'issame,nall', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!=?', 'isdiff,product', [0, 1], [0, 1], [0, 1]);
        both('!=?', 'isdiff,product', [0, 2], [0, 1], [0, 2]);
        both('!=?', 'isdiff,product', [0, 2], [0, 2], [0, 2]);
        both('!=?', 'isdiff,product', [0, 1], [0, 2], [0, 2]);
        both('!=?', 'isdiff,product', [0, 1], [0, 1], [0, 10]);
        both('!=?', 'isdiff,nall', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('!=?', 'isdiff,nall', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!=?', 'isdiff,nall', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<?', 'islt,product', [0, 1], [0, 1], [0, 1]);
        lhs('<?', 'islt,product', [0, 2], [0, 1], [0, 2]);
        lhs('<?', 'islt,product', [0, 2], [0, 2], [0, 2]);
        lhs('<?', 'islt,product', [0, 1], [0, 2], [0, 2]);
        lhs('<?', 'islt,product', [0, 1], [0, 1], [0, 10]);
        lhs('<?', 'islt,nall', [0, 1], [0, 1], [0, 0, 9, 9]);
        lhs('<?', 'islt,nall', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<?', 'islt,nall', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<?', 'islt,product', [0, 1], [0, 1], [0, 1]);
        rhs('<?', 'islt,product', [0, 2], [0, 1], [0, 2]);
        rhs('<?', 'islt,product', [0, 2], [0, 2], [0, 2]);
        rhs('<?', 'islt,product', [0, 1], [0, 2], [0, 2]);
        rhs('<?', 'islt,product', [0, 1], [0, 1], [0, 10]);
        rhs('<?', 'islt,nall', [0, 1], [0, 1], [0, 0, 9, 9]);
        rhs('<?', 'islt,nall', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<?', 'islt,nall', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<=?', 'islte,product', [0, 1], [0, 1], [0, 1]);
        lhs('<=?', 'islte,product', [0, 2], [0, 1], [0, 2]);
        lhs('<=?', 'islte,product', [0, 2], [0, 2], [0, 2]);
        lhs('<=?', 'islte,product', [0, 1], [0, 2], [0, 2]);
        lhs('<=?', 'islte,product', [0, 1], [0, 1], [0, 10]);
        lhs('<=?', 'islte,nall', [0, 1], [0, 1], [0, 0, 9, 9]);
        lhs('<=?', 'islte,nall', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<=?', 'islte,nall', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<=?', 'islte,product', [0, 1], [0, 1], [0, 1]);
        rhs('<=?', 'islte,product', [0, 2], [0, 1], [0, 2]);
        rhs('<=?', 'islte,product', [0, 2], [0, 2], [0, 2]);
        rhs('<=?', 'islte,product', [0, 1], [0, 2], [0, 2]);
        rhs('<=?', 'islte,product', [0, 1], [0, 1], [0, 10]);
        rhs('<=?', 'islte,nall', [0, 1], [0, 1], [0, 0, 9, 9]);
        rhs('<=?', 'islte,nall', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<=?', 'islte,nall', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!&?', 'isnall,product', [0, 1], [0, 1], [0, 1]);
        both('!&?', 'isnall,product', [0, 2], [0, 1], [0, 2]);
        both('!&?', 'isnall,product', [0, 2], [0, 2], [0, 2]);
        both('!&?', 'isnall,product', [0, 1], [0, 2], [0, 2]);
        both('!&?', 'isnall,product', [0, 1], [0, 1], [0, 10]);
        both('!&?', 'isnall,nall', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('!&?', 'isnall,nall', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!&?', 'isnall,nall', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('|?', 'issome,product', [0, 1], [0, 1], [0, 1]);
        both('|?', 'issome,product', [0, 2], [0, 1], [0, 2]);
        both('|?', 'issome,product', [0, 2], [0, 2], [0, 2]);
        both('|?', 'issome,product', [0, 1], [0, 2], [0, 2]);
        both('|?', 'issome,product', [0, 1], [0, 1], [0, 10]);
        both('|?', 'issome,nall', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('|?', 'issome,nall', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('|?', 'issome,nall', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!|?', 'isnone,product', [0, 1], [0, 1], [0, 1]);
        both('!|?', 'isnone,product', [0, 2], [0, 1], [0, 2]);
        both('!|?', 'isnone,product', [0, 2], [0, 2], [0, 2]);
        both('!|?', 'isnone,product', [0, 1], [0, 2], [0, 2]);
        both('!|?', 'isnone,product', [0, 1], [0, 1], [0, 10]);
        both('!|?', 'isnone,nall', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('!|?', 'isnone,nall', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!|?', 'isnone,nall', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('+', 'issome,product', [0, 1], [0, 100], [0, 1]);
        both('+', 'product,sum', [0, 2], [0, 1], [0, 2]);
        both('+', 'product,sum', [0, 2], [0, 2], [0, 2]);
        both('+', 'product,sum', [0, 1], [0, 2], [0, 2]);
        both('+', 'issome,product', [0, 1], [0, 100], [0, 10]);
        both('+', 'issome,nall', [0, 1], [0, 100], [0, 0, 9, 9]);
        both('+', 'issome,nall', [0, 1], [0, 100], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('+', 'issome,nall', [0, 1], [0, 100], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('-', 'minus,product', [0, 1], [0, 100], [0, 1]);
        lhs('-', 'minus,product', [0, 2], [0, 1], [0, 2]);
        lhs('-', 'minus,product', [0, 2], [0, 2], [0, 2]);
        lhs('-', 'minus,product', [0, 1], [0, 2], [0, 2]);
        lhs('-', 'minus,product', [0, 1], [0, 100], [0, 10]);
        lhs('-', 'minus,nall', [0, 1], [0, 100], [0, 0, 9, 9]);
        lhs('-', 'nall', [0, 1], [0, 100], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('-', 'minus,nall', [0, 1], [0, 100], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('-', 'minus,product', [0, 1], [0, 100], [0, 1]);
        rhs('-', 'minus,product', [0, 2], [0, 1], [0, 2]);
        rhs('-', 'minus,product', [0, 2], [0, 2], [0, 2]);
        rhs('-', 'minus,product', [0, 1], [0, 2], [0, 2]);
        rhs('-', 'minus,product', [0, 1], [0, 100], [0, 10]);
        rhs('-', 'minus,nall', [0, 1], [0, 100], [0, 0, 9, 9]);
        rhs('-', 'minus,nall', [0, 1], [0, 100], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('-', [0, 1], [0, 100], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('*', 'product,product', [0, 1], [0, 100], [0, 1]);
        both('*', 'product,product', [0, 2], [0, 1], [0, 2]);
        both('*', 'product,product', [0, 2], [0, 2], [0, 2]);
        both('*', 'product,product', [0, 1], [0, 2], [0, 2]);
        both('*', 'product,product', [0, 1], [0, 100], [0, 10]);
        both('*', 'nall,product', [0, 1], [0, 100], [0, 0, 9, 9]);
        both('*', 'nall,product', [0, 1], [0, 100], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('*', 'nall,product', [0, 1], [0, 100], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('/', 'div,product', [0, 1], [0, 100], [0, 1]);
        lhs('/', 'div,product', [0, 2], [0, 1], [0, 2]);
        lhs('/', 'div,product', [0, 2], [0, 2], [0, 2]);
        lhs('/', 'div,product', [0, 1], [0, 2], [0, 2]);
        lhs('/', 'div,product', [0, 1], [0, 100], [0, 10]);
        lhs('/', 'div,nall', [0, 1], [0, 100], [0, 0, 9, 9]);
        lhs('/', 'div,nall', [0, 1], [0, 100], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('/', 'div,nall', [0, 1], [0, 100], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('/', 'div,product', [0, 1], [0, 100], [0, 1]);
        rhs('/', 'div,product', [0, 2], [0, 1], [0, 2]);
        rhs('/', 'div,product', [0, 2], [0, 2], [0, 2]);
        rhs('/', 'div,product', [0, 1], [0, 2], [0, 2]);
        rhs('/', 'div,product', [0, 1], [0, 100], [0, 10]);
        rhs('/', 'div,nall', [0, 1], [0, 100], [0, 0, 9, 9]);
        rhs('/', 'div,nall', [0, 1], [0, 100], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('/', 'div,nall', [0, 1], [0, 100], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
      });

      describe('ternary with shared R', function() {

        let both = testTernaryTernarySharedArgs.bind(undefined, '*', '', '');          // R = A @1 B, S = A @2 C  and  R = A @1 B, S = C @2 A
        let lhs = testTernaryTernarySharedArgs.bind(undefined, '*', '', 'lhs');    // R = A @1 B, S = A @2 C
        let rhs = testTernaryTernarySharedArgs.bind(undefined, '*', '', 'rhs');    // R = A @1 B, S = C @2 A

        // R = A & B, S = A &? C
        both('&?', 'isall,product', [0, 1], [0, 1], [0, 1]);
        both('&?', 'isall,product', [0, 2], [0, 1], [0, 2]);
        both('&?', 'isall,product', [0, 2], [0, 2], [0, 2]);
        both('&?', 'isall,product', [0, 1], [0, 2], [0, 2]);
        both('&?', 'isall,product', [0, 1], [0, 1], [0, 10]);
        both('&?', 'isall,nall', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('&?', 'isall,nall', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('&?', 'isall,nall', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('==?', 'issame,product', [0, 1], [0, 1], [0, 1]);
        both('==?', 'issame,product', [0, 2], [0, 1], [0, 2]);
        both('==?', 'issame,product', [0, 2], [0, 2], [0, 2]);
        both('==?', 'issame,product', [0, 1], [0, 2], [0, 2]);
        both('==?', 'issame,product', [0, 1], [0, 1], [0, 10]);
        both('==?', 'issame,nall', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('==?', 'issame,nall', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('==?', 'issame,nall', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!=?', 'isdiff,product', [0, 1], [0, 1], [0, 1]);
        both('!=?', 'isdiff,product', [0, 2], [0, 1], [0, 2]);
        both('!=?', 'isdiff,product', [0, 2], [0, 2], [0, 2]);
        both('!=?', 'isdiff,product', [0, 1], [0, 2], [0, 2]);
        both('!=?', 'isdiff,product', [0, 1], [0, 1], [0, 10]);
        both('!=?', 'isdiff,nall', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('!=?', 'isdiff,nall', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!=?', 'isdiff,nall', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<?', 'islt,product', [0, 1], [0, 1], [0, 1]);
        lhs('<?', 'islt,product', [0, 2], [0, 1], [0, 2]);
        lhs('<?', 'islt,product', [0, 2], [0, 2], [0, 2]);
        lhs('<?', 'islt,product', [0, 1], [0, 2], [0, 2]);
        lhs('<?', 'islt,product', [0, 1], [0, 1], [0, 10]);
        lhs('<?', 'islt,nall', [0, 1], [0, 1], [0, 0, 9, 9]);
        lhs('<?', 'islt,nall', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<?', 'islt,nall', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<?', 'islt,product', [0, 1], [0, 1], [0, 1]);
        rhs('<?', 'islt,product', [0, 2], [0, 1], [0, 2]);
        rhs('<?', 'islt,product', [0, 2], [0, 2], [0, 2]);
        rhs('<?', 'islt,product', [0, 1], [0, 2], [0, 2]);
        rhs('<?', 'islt,product', [0, 1], [0, 1], [0, 10]);
        rhs('<?', 'islt,nall', [0, 1], [0, 1], [0, 0, 9, 9]);
        rhs('<?', 'islt,nall', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<?', 'islt,nall', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<=?', 'islte,product', [0, 1], [0, 1], [0, 1]);
        lhs('<=?', 'islte,product', [0, 2], [0, 1], [0, 2]);
        lhs('<=?', 'islte,product', [0, 2], [0, 2], [0, 2]);
        lhs('<=?', 'islte,product', [0, 1], [0, 2], [0, 2]);
        lhs('<=?', 'islte,product', [0, 1], [0, 1], [0, 10]);
        lhs('<=?', 'islte,nall', [0, 1], [0, 1], [0, 0, 9, 9]);
        lhs('<=?', 'islte,nall', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<=?', 'islte,nall', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<=?', 'islte,product', [0, 1], [0, 1], [0, 1]);
        rhs('<=?', 'islte,product', [0, 2], [0, 1], [0, 2]);
        rhs('<=?', 'islte,product', [0, 2], [0, 2], [0, 2]);
        rhs('<=?', 'islte,product', [0, 1], [0, 2], [0, 2]);
        rhs('<=?', 'islte,product', [0, 1], [0, 1], [0, 10]);
        rhs('<=?', 'islte,nall', [0, 1], [0, 1], [0, 0, 9, 9]);
        rhs('<=?', 'islte,nall', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<=?', 'islte,nall', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!&?', 'isnall,product', [0, 1], [0, 1], [0, 1]);
        both('!&?', 'isnall,product', [0, 2], [0, 1], [0, 2]);
        both('!&?', 'isnall,product', [0, 2], [0, 2], [0, 2]);
        both('!&?', 'isnall,product', [0, 1], [0, 2], [0, 2]);
        both('!&?', 'isnall,product', [0, 1], [0, 1], [0, 10]);
        both('!&?', 'isnall,nall', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('!&?', 'isnall,nall', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!&?', 'isnall,nall', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('|?', 'issome,product', [0, 1], [0, 1], [0, 1]);
        both('|?', 'issome,product', [0, 2], [0, 1], [0, 2]);
        both('|?', 'issome,product', [0, 2], [0, 2], [0, 2]);
        both('|?', 'issome,product', [0, 1], [0, 2], [0, 2]);
        both('|?', 'issome,product', [0, 1], [0, 1], [0, 10]);
        both('|?', 'issome,nall', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('|?', 'issome,nall', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('|?', 'issome,nall', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!|?', 'isnone,product', [0, 1], [0, 1], [0, 1]);
        both('!|?', 'isnone,product', [0, 2], [0, 1], [0, 2]);
        both('!|?', 'isnone,product', [0, 2], [0, 2], [0, 2]);
        both('!|?', 'isnone,product', [0, 1], [0, 2], [0, 2]);
        both('!|?', 'isnone,product', [0, 1], [0, 1], [0, 10]);
        both('!|?', 'isnone,nall', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('!|?', 'isnone,nall', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!|?', 'isnone,nall', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('+', 'issome,product', [0, 1], [0, 100], [0, 1]);
        both('+', 'product,sum', [0, 2], [0, 1], [0, 2]);
        both('+', 'product,sum', [0, 2], [0, 2], [0, 2]);
        both('+', 'product,sum', [0, 1], [0, 2], [0, 2]);
        both('+', 'issome,product', [0, 1], [0, 100], [0, 10]);
        both('+', 'issome,nall', [0, 1], [0, 100], [0, 0, 9, 9]);
        both('+', 'issome,nall', [0, 1], [0, 100], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('+', 'issome,nall', [0, 1], [0, 100], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('-', 'minus,product', [0, 1], [0, 100], [0, 1]);
        lhs('-', 'minus,product', [0, 2], [0, 1], [0, 2]);
        lhs('-', 'minus,product', [0, 2], [0, 2], [0, 2]);
        lhs('-', 'minus,product', [0, 1], [0, 2], [0, 2]);
        lhs('-', 'minus,product', [0, 1], [0, 100], [0, 10]);
        lhs('-', 'minus,nall', [0, 1], [0, 100], [0, 0, 9, 9]);
        lhs('-', 'nall', [0, 1], [0, 100], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('-', 'minus,nall', [0, 1], [0, 100], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('-', 'minus,product', [0, 1], [0, 100], [0, 1]);
        rhs('-', 'minus,product', [0, 2], [0, 1], [0, 2]);
        rhs('-', 'minus,product', [0, 2], [0, 2], [0, 2]);
        rhs('-', 'minus,product', [0, 1], [0, 2], [0, 2]);
        rhs('-', 'minus,product', [0, 1], [0, 100], [0, 10]);
        rhs('-', 'minus,nall', [0, 1], [0, 100], [0, 0, 9, 9]);
        rhs('-', 'minus,nall', [0, 1], [0, 100], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('-', [0, 1], [0, 100], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('*', 'product,product', [0, 1], [0, 100], [0, 1]);
        both('*', 'product,product', [0, 2], [0, 1], [0, 2]);
        both('*', 'product,product', [0, 2], [0, 2], [0, 2]);
        both('*', 'product,product', [0, 1], [0, 2], [0, 2]);
        both('*', 'product,product', [0, 1], [0, 100], [0, 10]);
        both('*', 'nall,product', [0, 1], [0, 100], [0, 0, 9, 9]);
        both('*', 'nall,product', [0, 1], [0, 100], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('*', 'nall,product', [0, 1], [0, 100], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('/', 'div,product', [0, 1], [0, 100], [0, 1]);
        lhs('/', 'div,product', [0, 2], [0, 1], [0, 2]);
        lhs('/', 'div,product', [0, 2], [0, 2], [0, 2]);
        lhs('/', 'div,product', [0, 1], [0, 2], [0, 2]);
        lhs('/', 'div,product', [0, 1], [0, 100], [0, 10]);
        lhs('/', 'div,nall', [0, 1], [0, 100], [0, 0, 9, 9]);
        lhs('/', 'div,nall', [0, 1], [0, 100], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('/', 'div,nall', [0, 1], [0, 100], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('/', 'div,product', [0, 1], [0, 100], [0, 1]);
        rhs('/', 'div,product', [0, 2], [0, 1], [0, 2]);
        rhs('/', 'div,product', [0, 2], [0, 2], [0, 2]);
        rhs('/', 'div,product', [0, 1], [0, 2], [0, 2]);
        rhs('/', 'div,product', [0, 1], [0, 100], [0, 10]);
        rhs('/', 'div,nall', [0, 1], [0, 100], [0, 0, 9, 9]);
        rhs('/', 'div,nall', [0, 1], [0, 100], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('/', 'div,nall', [0, 1], [0, 100], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
      });

      describe('ternary with shared S', function() {

        let both = testTernaryTernarySharedArgs.bind(undefined, '*', '', '');          // R = A @1 B, S = A @2 C  and  R = A @1 B, S = C @2 A
        let lhs = testTernaryTernarySharedArgs.bind(undefined, '*', '', 'lhs');    // R = A @1 B, S = A @2 C
        let rhs = testTernaryTernarySharedArgs.bind(undefined, '*', '', 'rhs');    // R = A @1 B, S = C @2 A

        // R = A & B, S = A &? C
        both('&?', 'isall,product', [0, 1], [0, 1], [0, 1]);
        both('&?', 'isall,product', [0, 2], [0, 1], [0, 2]);
        both('&?', 'isall,product', [0, 2], [0, 2], [0, 2]);
        both('&?', 'isall,product', [0, 1], [0, 2], [0, 2]);
        both('&?', 'isall,product', [0, 1], [0, 1], [0, 10]);
        both('&?', 'isall,nall', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('&?', 'isall,nall', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('&?', 'isall,nall', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('==?', 'issame,product', [0, 1], [0, 1], [0, 1]);
        both('==?', 'issame,product', [0, 2], [0, 1], [0, 2]);
        both('==?', 'issame,product', [0, 2], [0, 2], [0, 2]);
        both('==?', 'issame,product', [0, 1], [0, 2], [0, 2]);
        both('==?', 'issame,product', [0, 1], [0, 1], [0, 10]);
        both('==?', 'issame,nall', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('==?', 'issame,nall', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('==?', 'issame,nall', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!=?', 'isdiff,product', [0, 1], [0, 1], [0, 1]);
        both('!=?', 'isdiff,product', [0, 2], [0, 1], [0, 2]);
        both('!=?', 'isdiff,product', [0, 2], [0, 2], [0, 2]);
        both('!=?', 'isdiff,product', [0, 1], [0, 2], [0, 2]);
        both('!=?', 'isdiff,product', [0, 1], [0, 1], [0, 10]);
        both('!=?', 'isdiff,nall', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('!=?', 'isdiff,nall', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!=?', 'isdiff,nall', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<?', 'islt,product', [0, 1], [0, 1], [0, 1]);
        lhs('<?', 'islt,product', [0, 2], [0, 1], [0, 2]);
        lhs('<?', 'islt,product', [0, 2], [0, 2], [0, 2]);
        lhs('<?', 'islt,product', [0, 1], [0, 2], [0, 2]);
        lhs('<?', 'islt,product', [0, 1], [0, 1], [0, 10]);
        lhs('<?', 'islt,nall', [0, 1], [0, 1], [0, 0, 9, 9]);
        lhs('<?', 'islt,nall', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<?', 'islt,nall', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<?', 'islt,product', [0, 1], [0, 1], [0, 1]);
        rhs('<?', 'islt,product', [0, 2], [0, 1], [0, 2]);
        rhs('<?', 'islt,product', [0, 2], [0, 2], [0, 2]);
        rhs('<?', 'islt,product', [0, 1], [0, 2], [0, 2]);
        rhs('<?', 'islt,product', [0, 1], [0, 1], [0, 10]);
        rhs('<?', 'islt,nall', [0, 1], [0, 1], [0, 0, 9, 9]);
        rhs('<?', 'islt,nall', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<?', 'islt,nall', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<=?', 'islte,product', [0, 1], [0, 1], [0, 1]);
        lhs('<=?', 'islte,product', [0, 2], [0, 1], [0, 2]);
        lhs('<=?', 'islte,product', [0, 2], [0, 2], [0, 2]);
        lhs('<=?', 'islte,product', [0, 1], [0, 2], [0, 2]);
        lhs('<=?', 'islte,product', [0, 1], [0, 1], [0, 10]);
        lhs('<=?', 'islte,nall', [0, 1], [0, 1], [0, 0, 9, 9]);
        lhs('<=?', 'islte,nall', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<=?', 'islte,nall', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<=?', 'islte,product', [0, 1], [0, 1], [0, 1]);
        rhs('<=?', 'islte,product', [0, 2], [0, 1], [0, 2]);
        rhs('<=?', 'islte,product', [0, 2], [0, 2], [0, 2]);
        rhs('<=?', 'islte,product', [0, 1], [0, 2], [0, 2]);
        rhs('<=?', 'islte,product', [0, 1], [0, 1], [0, 10]);
        rhs('<=?', 'islte,nall', [0, 1], [0, 1], [0, 0, 9, 9]);
        rhs('<=?', 'islte,nall', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<=?', 'islte,nall', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!&?', 'isnall,product', [0, 1], [0, 1], [0, 1]);
        both('!&?', 'isnall,product', [0, 2], [0, 1], [0, 2]);
        both('!&?', 'isnall,product', [0, 2], [0, 2], [0, 2]);
        both('!&?', 'isnall,product', [0, 1], [0, 2], [0, 2]);
        both('!&?', 'isnall,product', [0, 1], [0, 1], [0, 10]);
        both('!&?', 'isnall,nall', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('!&?', 'isnall,nall', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!&?', 'isnall,nall', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('|?', 'issome,product', [0, 1], [0, 1], [0, 1]);
        both('|?', 'issome,product', [0, 2], [0, 1], [0, 2]);
        both('|?', 'issome,product', [0, 2], [0, 2], [0, 2]);
        both('|?', 'issome,product', [0, 1], [0, 2], [0, 2]);
        both('|?', 'issome,product', [0, 1], [0, 1], [0, 10]);
        both('|?', 'issome,nall', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('|?', 'issome,nall', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('|?', 'issome,nall', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!|?', 'isnone,product', [0, 1], [0, 1], [0, 1]);
        both('!|?', 'isnone,product', [0, 2], [0, 1], [0, 2]);
        both('!|?', 'isnone,product', [0, 2], [0, 2], [0, 2]);
        both('!|?', 'isnone,product', [0, 1], [0, 2], [0, 2]);
        both('!|?', 'isnone,product', [0, 1], [0, 1], [0, 10]);
        both('!|?', 'isnone,nall', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('!|?', 'isnone,nall', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!|?', 'isnone,nall', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('+', 'issome,product', [0, 1], [0, 100], [0, 1]);
        both('+', 'product,sum', [0, 2], [0, 1], [0, 2]);
        both('+', 'product,sum', [0, 2], [0, 2], [0, 2]);
        both('+', 'product,sum', [0, 1], [0, 2], [0, 2]);
        both('+', 'issome,product', [0, 1], [0, 100], [0, 10]);
        both('+', 'issome,nall', [0, 1], [0, 100], [0, 0, 9, 9]);
        both('+', 'issome,nall', [0, 1], [0, 100], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('+', 'issome,nall', [0, 1], [0, 100], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('-', 'minus,product', [0, 1], [0, 100], [0, 1]);
        lhs('-', 'minus,product', [0, 2], [0, 1], [0, 2]);
        lhs('-', 'minus,product', [0, 2], [0, 2], [0, 2]);
        lhs('-', 'minus,product', [0, 1], [0, 2], [0, 2]);
        lhs('-', 'minus,product', [0, 1], [0, 100], [0, 10]);
        lhs('-', 'minus,nall', [0, 1], [0, 100], [0, 0, 9, 9]);
        lhs('-', 'nall', [0, 1], [0, 100], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('-', 'minus,nall', [0, 1], [0, 100], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('-', 'minus,product', [0, 1], [0, 100], [0, 1]);
        rhs('-', 'minus,product', [0, 2], [0, 1], [0, 2]);
        rhs('-', 'minus,product', [0, 2], [0, 2], [0, 2]);
        rhs('-', 'minus,product', [0, 1], [0, 2], [0, 2]);
        rhs('-', 'minus,product', [0, 1], [0, 100], [0, 10]);
        rhs('-', 'minus,nall', [0, 1], [0, 100], [0, 0, 9, 9]);
        rhs('-', 'minus,nall', [0, 1], [0, 100], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('-', [0, 1], [0, 100], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('*', 'product,product', [0, 1], [0, 100], [0, 1]);
        both('*', 'product,product', [0, 2], [0, 1], [0, 2]);
        both('*', 'product,product', [0, 2], [0, 2], [0, 2]);
        both('*', 'product,product', [0, 1], [0, 2], [0, 2]);
        both('*', 'product,product', [0, 1], [0, 100], [0, 10]);
        both('*', 'nall,product', [0, 1], [0, 100], [0, 0, 9, 9]);
        both('*', 'nall,product', [0, 1], [0, 100], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('*', 'nall,product', [0, 1], [0, 100], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('/', 'div,product', [0, 1], [0, 100], [0, 1]);
        lhs('/', 'div,product', [0, 2], [0, 1], [0, 2]);
        lhs('/', 'div,product', [0, 2], [0, 2], [0, 2]);
        lhs('/', 'div,product', [0, 1], [0, 2], [0, 2]);
        lhs('/', 'div,product', [0, 1], [0, 100], [0, 10]);
        lhs('/', 'div,nall', [0, 1], [0, 100], [0, 0, 9, 9]);
        lhs('/', 'div,nall', [0, 1], [0, 100], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('/', 'div,nall', [0, 1], [0, 100], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('/', 'div,product', [0, 1], [0, 100], [0, 1]);
        rhs('/', 'div,product', [0, 2], [0, 1], [0, 2]);
        rhs('/', 'div,product', [0, 2], [0, 2], [0, 2]);
        rhs('/', 'div,product', [0, 1], [0, 2], [0, 2]);
        rhs('/', 'div,product', [0, 1], [0, 100], [0, 10]);
        rhs('/', 'div,nall', [0, 1], [0, 100], [0, 0, 9, 9]);
        rhs('/', 'div,nall', [0, 1], [0, 100], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('/', 'div,nall', [0, 1], [0, 100], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
      });

      describe('ternary with shared results', function() {

        let both = testTernaryTernarySharedArgs.bind(undefined, '*', '', '');          // R = A @1 B, S = A @2 C  and  R = A @1 B, S = C @2 A
        let lhs = testTernaryTernarySharedArgs.bind(undefined, '*', '', 'lhs');    // R = A @1 B, S = A @2 C
        let rhs = testTernaryTernarySharedArgs.bind(undefined, '*', '', 'rhs');    // R = A @1 B, S = C @2 A

        // R = A & B, S = A &? C
        both('&?', 'isall,product', [0, 1], [0, 1], [0, 1]);
        both('&?', 'isall,product', [0, 2], [0, 1], [0, 2]);
        both('&?', 'isall,product', [0, 2], [0, 2], [0, 2]);
        both('&?', 'isall,product', [0, 1], [0, 2], [0, 2]);
        both('&?', 'isall,product', [0, 1], [0, 1], [0, 10]);
        both('&?', 'isall,nall', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('&?', 'isall,nall', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('&?', 'isall,nall', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('==?', 'issame,product', [0, 1], [0, 1], [0, 1]);
        both('==?', 'issame,product', [0, 2], [0, 1], [0, 2]);
        both('==?', 'issame,product', [0, 2], [0, 2], [0, 2]);
        both('==?', 'issame,product', [0, 1], [0, 2], [0, 2]);
        both('==?', 'issame,product', [0, 1], [0, 1], [0, 10]);
        both('==?', 'issame,nall', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('==?', 'issame,nall', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('==?', 'issame,nall', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!=?', 'isdiff,product', [0, 1], [0, 1], [0, 1]);
        both('!=?', 'isdiff,product', [0, 2], [0, 1], [0, 2]);
        both('!=?', 'isdiff,product', [0, 2], [0, 2], [0, 2]);
        both('!=?', 'isdiff,product', [0, 1], [0, 2], [0, 2]);
        both('!=?', 'isdiff,product', [0, 1], [0, 1], [0, 10]);
        both('!=?', 'isdiff,nall', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('!=?', 'isdiff,nall', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!=?', 'isdiff,nall', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<?', 'islt,product', [0, 1], [0, 1], [0, 1]);
        lhs('<?', 'islt,product', [0, 2], [0, 1], [0, 2]);
        lhs('<?', 'islt,product', [0, 2], [0, 2], [0, 2]);
        lhs('<?', 'islt,product', [0, 1], [0, 2], [0, 2]);
        lhs('<?', 'islt,product', [0, 1], [0, 1], [0, 10]);
        lhs('<?', 'islt,nall', [0, 1], [0, 1], [0, 0, 9, 9]);
        lhs('<?', 'islt,nall', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<?', 'islt,nall', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<?', 'islt,product', [0, 1], [0, 1], [0, 1]);
        rhs('<?', 'islt,product', [0, 2], [0, 1], [0, 2]);
        rhs('<?', 'islt,product', [0, 2], [0, 2], [0, 2]);
        rhs('<?', 'islt,product', [0, 1], [0, 2], [0, 2]);
        rhs('<?', 'islt,product', [0, 1], [0, 1], [0, 10]);
        rhs('<?', 'islt,nall', [0, 1], [0, 1], [0, 0, 9, 9]);
        rhs('<?', 'islt,nall', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<?', 'islt,nall', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('<=?', 'islte,product', [0, 1], [0, 1], [0, 1]);
        lhs('<=?', 'islte,product', [0, 2], [0, 1], [0, 2]);
        lhs('<=?', 'islte,product', [0, 2], [0, 2], [0, 2]);
        lhs('<=?', 'islte,product', [0, 1], [0, 2], [0, 2]);
        lhs('<=?', 'islte,product', [0, 1], [0, 1], [0, 10]);
        lhs('<=?', 'islte,nall', [0, 1], [0, 1], [0, 0, 9, 9]);
        lhs('<=?', 'islte,nall', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('<=?', 'islte,nall', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('<=?', 'islte,product', [0, 1], [0, 1], [0, 1]);
        rhs('<=?', 'islte,product', [0, 2], [0, 1], [0, 2]);
        rhs('<=?', 'islte,product', [0, 2], [0, 2], [0, 2]);
        rhs('<=?', 'islte,product', [0, 1], [0, 2], [0, 2]);
        rhs('<=?', 'islte,product', [0, 1], [0, 1], [0, 10]);
        rhs('<=?', 'islte,nall', [0, 1], [0, 1], [0, 0, 9, 9]);
        rhs('<=?', 'islte,nall', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('<=?', 'islte,nall', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!&?', 'isnall,product', [0, 1], [0, 1], [0, 1]);
        both('!&?', 'isnall,product', [0, 2], [0, 1], [0, 2]);
        both('!&?', 'isnall,product', [0, 2], [0, 2], [0, 2]);
        both('!&?', 'isnall,product', [0, 1], [0, 2], [0, 2]);
        both('!&?', 'isnall,product', [0, 1], [0, 1], [0, 10]);
        both('!&?', 'isnall,nall', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('!&?', 'isnall,nall', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!&?', 'isnall,nall', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('|?', 'issome,product', [0, 1], [0, 1], [0, 1]);
        both('|?', 'issome,product', [0, 2], [0, 1], [0, 2]);
        both('|?', 'issome,product', [0, 2], [0, 2], [0, 2]);
        both('|?', 'issome,product', [0, 1], [0, 2], [0, 2]);
        both('|?', 'issome,product', [0, 1], [0, 1], [0, 10]);
        both('|?', 'issome,nall', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('|?', 'issome,nall', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('|?', 'issome,nall', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('!|?', 'isnone,product', [0, 1], [0, 1], [0, 1]);
        both('!|?', 'isnone,product', [0, 2], [0, 1], [0, 2]);
        both('!|?', 'isnone,product', [0, 2], [0, 2], [0, 2]);
        both('!|?', 'isnone,product', [0, 1], [0, 2], [0, 2]);
        both('!|?', 'isnone,product', [0, 1], [0, 1], [0, 10]);
        both('!|?', 'isnone,nall', [0, 1], [0, 1], [0, 0, 9, 9]);
        both('!|?', 'isnone,nall', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('!|?', 'isnone,nall', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('+', 'issome,product', [0, 1], [0, 100], [0, 1]);
        both('+', 'product,sum', [0, 2], [0, 1], [0, 2]);
        both('+', 'product,sum', [0, 2], [0, 2], [0, 2]);
        both('+', 'product,sum', [0, 1], [0, 2], [0, 2]);
        both('+', 'issome,product', [0, 1], [0, 100], [0, 10]);
        both('+', 'issome,nall', [0, 1], [0, 100], [0, 0, 9, 9]);
        both('+', 'issome,nall', [0, 1], [0, 100], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('+', 'issome,nall', [0, 1], [0, 100], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('-', 'minus,product', [0, 1], [0, 100], [0, 1]);
        lhs('-', 'minus,product', [0, 2], [0, 1], [0, 2]);
        lhs('-', 'minus,product', [0, 2], [0, 2], [0, 2]);
        lhs('-', 'minus,product', [0, 1], [0, 2], [0, 2]);
        lhs('-', 'minus,product', [0, 1], [0, 100], [0, 10]);
        lhs('-', 'minus,nall', [0, 1], [0, 100], [0, 0, 9, 9]);
        lhs('-', 'nall', [0, 1], [0, 100], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('-', 'minus,nall', [0, 1], [0, 100], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('-', 'minus,product', [0, 1], [0, 100], [0, 1]);
        rhs('-', 'minus,product', [0, 2], [0, 1], [0, 2]);
        rhs('-', 'minus,product', [0, 2], [0, 2], [0, 2]);
        rhs('-', 'minus,product', [0, 1], [0, 2], [0, 2]);
        rhs('-', 'minus,product', [0, 1], [0, 100], [0, 10]);
        rhs('-', 'minus,nall', [0, 1], [0, 100], [0, 0, 9, 9]);
        rhs('-', 'minus,nall', [0, 1], [0, 100], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('-', [0, 1], [0, 100], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        both('*', 'product,product', [0, 1], [0, 100], [0, 1]);
        both('*', 'product,product', [0, 2], [0, 1], [0, 2]);
        both('*', 'product,product', [0, 2], [0, 2], [0, 2]);
        both('*', 'product,product', [0, 1], [0, 2], [0, 2]);
        both('*', 'product,product', [0, 1], [0, 100], [0, 10]);
        both('*', 'nall,product', [0, 1], [0, 100], [0, 0, 9, 9]);
        both('*', 'nall,product', [0, 1], [0, 100], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        both('*', 'nall,product', [0, 1], [0, 100], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        lhs('/', 'div,product', [0, 1], [0, 100], [0, 1]);
        lhs('/', 'div,product', [0, 2], [0, 1], [0, 2]);
        lhs('/', 'div,product', [0, 2], [0, 2], [0, 2]);
        lhs('/', 'div,product', [0, 1], [0, 2], [0, 2]);
        lhs('/', 'div,product', [0, 1], [0, 100], [0, 10]);
        lhs('/', 'div,nall', [0, 1], [0, 100], [0, 0, 9, 9]);
        lhs('/', 'div,nall', [0, 1], [0, 100], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        lhs('/', 'div,nall', [0, 1], [0, 100], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

        rhs('/', 'div,product', [0, 1], [0, 100], [0, 1]);
        rhs('/', 'div,product', [0, 2], [0, 1], [0, 2]);
        rhs('/', 'div,product', [0, 2], [0, 2], [0, 2]);
        rhs('/', 'div,product', [0, 1], [0, 2], [0, 2]);
        rhs('/', 'div,product', [0, 1], [0, 100], [0, 10]);
        rhs('/', 'div,nall', [0, 1], [0, 100], [0, 0, 9, 9]);
        rhs('/', 'div,nall', [0, 1], [0, 100], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
        rhs('/', 'div,nall', [0, 1], [0, 100], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
      });
    });

    describe('MINUS', function() {

      describe('MINUS LHS', function() {

        describe('binary with shared arg', function() {

          let both = testTernaryBinarySharedArgs.bind(undefined, '-', 'lhs', ''); // R = A @1 B, A @2 C  and  R = A @1 B, C @2 A
          let lhs = testTernaryBinarySharedArgs.bind(undefined, '-', 'lhs', 'lhs'); // R = A @1 B, A @2 C
          let rhs = testTernaryBinarySharedArgs.bind(undefined, '-', 'lhs', 'rhs'); // R = A @1 B, C @2 A

          both('&', 'minus', [0, 1], [0, 1]);
          both('&', 'minus', [0, 2], [0, 1]);
          both('&', 'minus', [0, 2], [0, 2]);
          both('&', 'minus', [0, 1], [0, 10]);
          both('&', [0, 1], [0, 0, 9, 9]);
          both('&', 'reject', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('&', 'reject', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!=', 'minus,xor', [0, 1], [0, 1]);
          both('!=', 'minus,xor', [0, 2], [0, 1]);
          both('!=', 'diff,minus', [0, 2], [0, 2]);
          both('!=', 'diff,minus', [0, 1], [0, 10]);
          both('!=', 'minus,xor', [0, 1], [0, 0, 9, 9]);
          both('!=', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!=', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('->', 'imp,minus', [0, 1], [0, 1]);
          lhs('->', 'imp,minus', [0, 2], [0, 1]);
          lhs('->', 'imp,minus', [0, 2], [0, 1]);
          lhs('->', 'imp,minus', [0, 1], [0, 10]);
          lhs('->', 'imp,minus', [0, 1], [0, 0, 9, 9]);
          lhs('->', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('->', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('->', 'imp,minus', [0, 1], [0, 1]);
          rhs('->', 'imp,minus', [0, 2], [0, 1]);
          rhs('->', 'imp,minus', [0, 2], [0, 2]);
          rhs('->', 'imp,minus', [0, 1], [0, 10]);
          rhs('->', 'imp,minus', [0, 1], [0, 0, 9, 9]);
          rhs('->', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('->', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<', [0, 1], [0, 1]);
          lhs('<', [0, 2], [0, 1]);
          lhs('<', 'lt,minus', [0, 2], [0, 2]);
          lhs('<', 'lt,minus', [0, 1], [0, 10]);
          lhs('<', [0, 1], [0, 0, 9, 9]);
          lhs('<', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<', 'minus', [0, 1], [0, 1]);
          rhs('<', 'minus', [0, 2], [0, 1]);
          rhs('<', 'lt,minus', [0, 2], [0, 2]);
          rhs('<', 'lt,minus', [0, 1], [0, 10]);
          rhs('<', [0, 1], [0, 0, 9, 9]);
          rhs('<', 'reject', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<', 'reject', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<=', 'imp,minus', [0, 1], [0, 1]);
          lhs('<=', 'imp,minus', [0, 2], [0, 1]);
          lhs('<=', 'lte,minus', [0, 2], [0, 2]);
          lhs('<=', 'lte,minus', [0, 1], [0, 10]);
          lhs('<=', 'imp,minus', [0, 1], [0, 0, 9, 9]);
          lhs('<=', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<=', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<=', 'imp,minus', [0, 1], [0, 1]);
          rhs('<=', 'imp,minus', [0, 2], [0, 1]);
          rhs('<=', 'lte,minus', [0, 2], [0, 2]);
          rhs('<=', 'lte,minus', [0, 1], [0, 10]);
          rhs('<=', 'imp,minus', [0, 1], [0, 0, 9, 9]);
          rhs('<=', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<=', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!&', 'minus,nall', [0, 1], [0, 1]);
          both('!&', 'minus,nall', [0, 2], [0, 1]);
          both('!&', 'minus,nall', [0, 2], [0, 2]);
          both('!&', 'minus,nall', [0, 1], [0, 10]);
          both('!&', 'minus,nall', [0, 1], [0, 0, 9, 9]);
          both('!&', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!&', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('!->', 'minus', [0, 1], [0, 1]);
          lhs('!->', 'minus', [0, 2], [0, 1]);
          lhs('!->', 'minus', [0, 2], [0, 2]);
          lhs('!->', 'minus', [0, 1], [0, 10]);
          lhs('!->', [0, 1], [0, 0, 9, 9]);
          lhs('!->', 'reject', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('!->', 'reject', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('!->', [0, 1], [0, 1]);
          rhs('!->', [0, 2], [0, 1]);
          rhs('!->', [0, 2], [0, 2]);
          rhs('!->', [0, 1], [0, 10]);
          rhs('!->', [0, 1], [0, 0, 9, 9]);
          rhs('!->', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('!->', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!|', [0, 1], [0, 1]);
          both('!|', [0, 2], [0, 1]);
          both('!|', [0, 2], [0, 2]);
          both('!|', [0, 1], [0, 10]);
          both('!|', [0, 1], [0, 0, 9, 9]);
          both('!|', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!|', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('==', 'minus', [0, 1], [0, 1]);
          both('==', 'minus', [0, 2], [0, 1]);
          both('==', 'minus', [0, 2], [0, 2]);
          both('==', 'minus', [0, 1], [0, 10]);
          both('==', 'minus', [0, 1], [0, 0, 9, 9]);
          both('==', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('==', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!^', 'minus', [0, 1], [0, 1]);
          both('!^', 'minus', [0, 2], [0, 1]);
          both('!^', 'minus', [0, 2], [0, 2]);
          both('!^', 'minus', [0, 1], [0, 10]);
          both('!^', 'minus', [0, 1], [0, 0, 9, 9]);
          both('!^', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!^', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('^', 'minus,xor', [0, 1], [0, 1]);
          both('^', 'minus,xor', [0, 2], [0, 1]);
          both('^', 'minus,xor', [0, 2], [0, 2]);
          both('^', 'minus,xor', [0, 1], [0, 10]);
          both('^', 'minus,xor', [0, 1], [0, 0, 9, 9]);
          both('^', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('^', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
        });

        describe('binary with shared result', function() {

          let both = testTernaryBinarySharedArgs.bind(undefined, '-', 'lhs', ''); // R = A @1 B, A @2 C  and  R = A @1 B, C @2 A
          let lhs = testTernaryBinarySharedArgs.bind(undefined, '-', 'lhs', 'lhs'); // R = A @1 B, A @2 C
          let rhs = testTernaryBinarySharedArgs.bind(undefined, '-', 'lhs', 'rhs'); // R = A @1 B, C @2 A

          both('&', 'minus', [0, 1], [0, 1]);
          both('&', 'minus', [0, 2], [0, 1]);
          both('&', 'minus', [0, 2], [0, 2]);
          both('&', 'minus', [0, 1], [0, 10]);
          both('&', [0, 1], [0, 0, 9, 9]);
          both('&', 'reject', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('&', 'reject', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!=', 'minus,xor', [0, 1], [0, 1]);
          both('!=', 'minus,xor', [0, 2], [0, 1]);
          both('!=', 'diff,minus', [0, 2], [0, 2]);
          both('!=', 'diff,minus', [0, 1], [0, 10]);
          both('!=', 'minus,xor', [0, 1], [0, 0, 9, 9]);
          both('!=', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!=', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('->', 'imp,minus', [0, 1], [0, 1]);
          lhs('->', 'imp,minus', [0, 2], [0, 1]);
          lhs('->', 'imp,minus', [0, 2], [0, 1]);
          lhs('->', 'imp,minus', [0, 1], [0, 10]);
          lhs('->', 'imp,minus', [0, 1], [0, 0, 9, 9]);
          lhs('->', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('->', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('->', 'imp,minus', [0, 1], [0, 1]);
          rhs('->', 'imp,minus', [0, 2], [0, 1]);
          rhs('->', 'imp,minus', [0, 2], [0, 2]);
          rhs('->', 'imp,minus', [0, 1], [0, 10]);
          rhs('->', 'imp,minus', [0, 1], [0, 0, 9, 9]);
          rhs('->', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('->', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<', [0, 1], [0, 1]);
          lhs('<', [0, 2], [0, 1]);
          lhs('<', 'lt,minus', [0, 2], [0, 2]);
          lhs('<', 'lt,minus', [0, 1], [0, 10]);
          lhs('<', [0, 1], [0, 0, 9, 9]);
          lhs('<', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<', 'minus', [0, 1], [0, 1]);
          rhs('<', 'minus', [0, 2], [0, 1]);
          rhs('<', 'lt,minus', [0, 2], [0, 2]);
          rhs('<', 'lt,minus', [0, 1], [0, 10]);
          rhs('<', [0, 1], [0, 0, 9, 9]);
          rhs('<', 'reject', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<', 'reject', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<=', 'imp,minus', [0, 1], [0, 1]);
          lhs('<=', 'imp,minus', [0, 2], [0, 1]);
          lhs('<=', 'lte,minus', [0, 2], [0, 2]);
          lhs('<=', 'lte,minus', [0, 1], [0, 10]);
          lhs('<=', 'imp,minus', [0, 1], [0, 0, 9, 9]);
          lhs('<=', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<=', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<=', 'imp,minus', [0, 1], [0, 1]);
          rhs('<=', 'imp,minus', [0, 2], [0, 1]);
          rhs('<=', 'lte,minus', [0, 2], [0, 2]);
          rhs('<=', 'lte,minus', [0, 1], [0, 10]);
          rhs('<=', 'imp,minus', [0, 1], [0, 0, 9, 9]);
          rhs('<=', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<=', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!&', 'minus,nall', [0, 1], [0, 1]);
          both('!&', 'minus,nall', [0, 2], [0, 1]);
          both('!&', 'minus,nall', [0, 2], [0, 2]);
          both('!&', 'minus,nall', [0, 1], [0, 10]);
          both('!&', 'minus,nall', [0, 1], [0, 0, 9, 9]);
          both('!&', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!&', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('!->', 'minus', [0, 1], [0, 1]);
          lhs('!->', 'minus', [0, 2], [0, 1]);
          lhs('!->', 'minus', [0, 2], [0, 2]);
          lhs('!->', 'minus', [0, 1], [0, 10]);
          lhs('!->', [0, 1], [0, 0, 9, 9]);
          lhs('!->', 'reject', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('!->', 'reject', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('!->', [0, 1], [0, 1]);
          rhs('!->', [0, 2], [0, 1]);
          rhs('!->', [0, 2], [0, 2]);
          rhs('!->', [0, 1], [0, 10]);
          rhs('!->', [0, 1], [0, 0, 9, 9]);
          rhs('!->', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('!->', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!|', [0, 1], [0, 1]);
          both('!|', [0, 2], [0, 1]);
          both('!|', [0, 2], [0, 2]);
          both('!|', [0, 1], [0, 10]);
          both('!|', [0, 1], [0, 0, 9, 9]);
          both('!|', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!|', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('==', 'minus', [0, 1], [0, 1]);
          both('==', 'minus', [0, 2], [0, 1]);
          both('==', 'minus', [0, 2], [0, 2]);
          both('==', 'minus', [0, 1], [0, 10]);
          both('==', 'minus', [0, 1], [0, 0, 9, 9]);
          both('==', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('==', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!^', 'minus', [0, 1], [0, 1]);
          both('!^', 'minus', [0, 2], [0, 1]);
          both('!^', 'minus', [0, 2], [0, 2]);
          both('!^', 'minus', [0, 1], [0, 10]);
          both('!^', 'minus', [0, 1], [0, 0, 9, 9]);
          both('!^', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!^', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('^', 'minus,xor', [0, 1], [0, 1]);
          both('^', 'minus,xor', [0, 2], [0, 1]);
          both('^', 'minus,xor', [0, 2], [0, 2]);
          both('^', 'minus,xor', [0, 1], [0, 10]);
          both('^', 'minus,xor', [0, 1], [0, 0, 9, 9]);
          both('^', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('^', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
        });

        describe('ternary with shared args', function() {

          let both = testTernaryTernarySharedArgs.bind(undefined, '-', 'lhs', '');          // R = A @1 B, S = A @2 C  and  R = A @1 B, S = C @2 A
          let lhs = testTernaryTernarySharedArgs.bind(undefined, '-', 'lhs', 'lhs');    // R = A @1 B, S = A @2 C
          let rhs = testTernaryTernarySharedArgs.bind(undefined, '-', 'lhs', 'rhs');    // R = A @1 B, S = C @2 A

          // R = A & B, S = A &? C
          both('&?', 'isall,minus', [0, 1], [0, 1], [0, 1]);
          both('&?', 'isall,minus', [0, 2], [0, 1], [0, 2]);
          both('&?', 'isall,minus', [0, 2], [0, 2], [0, 2]);
          both('&?', 'isall,minus', [0, 1], [0, 2], [0, 2]);
          both('&?', 'isall,minus', [0, 1], [0, 1], [0, 10]);
          both('&?', 'isall,minus', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('&?', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('&?', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('==?', 'issame,minus', [0, 1], [0, 1], [0, 1]);
          both('==?', 'issame,minus', [0, 2], [0, 1], [0, 2]);
          both('==?', 'issame,minus', [0, 2], [0, 2], [0, 2]);
          both('==?', 'issame,minus', [0, 1], [0, 2], [0, 2]);
          both('==?', 'issame,minus', [0, 1], [0, 1], [0, 10]);
          both('==?', 'issame,minus', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('==?', 'xor', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('==?', 'xor', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!=?', 'isdiff,minus', [0, 1], [0, 1], [0, 1]);
          both('!=?', 'isdiff,minus', [0, 2], [0, 1], [0, 2]);
          both('!=?', 'isdiff,minus', [0, 2], [0, 2], [0, 2]);
          both('!=?', 'isdiff,minus', [0, 1], [0, 2], [0, 2]);
          both('!=?', 'isdiff,minus', [0, 1], [0, 1], [0, 10]);
          both('!=?', 'isdiff,minus', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('!=?', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!=?', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<?', 'islt,minus', [0, 1], [0, 1], [0, 1]);
          lhs('<?', 'islt,minus', [0, 2], [0, 1], [0, 2]);
          lhs('<?', 'islt,minus', [0, 2], [0, 2], [0, 2]);
          lhs('<?', 'islt,minus', [0, 1], [0, 2], [0, 2]);
          lhs('<?', 'islt,minus', [0, 1], [0, 1], [0, 10]);
          lhs('<?', 'islt,minus', [0, 1], [0, 1], [0, 0, 9, 9]);
          lhs('<?', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<?', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<?', 'islt,minus', [0, 1], [0, 1], [0, 1]);
          rhs('<?', 'islt,minus', [0, 2], [0, 1], [0, 2]);
          rhs('<?', 'islt,minus', [0, 2], [0, 2], [0, 2]);
          rhs('<?', 'islt,minus', [0, 1], [0, 2], [0, 2]);
          rhs('<?', 'islt,minus', [0, 1], [0, 1], [0, 10]);
          rhs('<?', 'islt,minus', [0, 1], [0, 1], [0, 0, 9, 9]);
          rhs('<?', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<?', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<=?', 'islte,minus', [0, 1], [0, 1], [0, 1]);
          lhs('<=?', 'islte,minus', [0, 2], [0, 1], [0, 2]);
          lhs('<=?', 'islte,minus', [0, 2], [0, 2], [0, 2]);
          lhs('<=?', 'islte,minus', [0, 1], [0, 2], [0, 2]);
          lhs('<=?', 'islte,minus', [0, 1], [0, 1], [0, 10]);
          lhs('<=?', 'islte,minus', [0, 1], [0, 1], [0, 0, 9, 9]);
          lhs('<=?', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<=?', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<=?', 'islte,minus', [0, 1], [0, 1], [0, 1]);
          rhs('<=?', 'islte,minus', [0, 2], [0, 1], [0, 2]);
          rhs('<=?', 'islte,minus', [0, 2], [0, 2], [0, 2]);
          rhs('<=?', 'islte,minus', [0, 1], [0, 2], [0, 2]);
          rhs('<=?', 'islte,minus', [0, 1], [0, 1], [0, 10]);
          rhs('<=?', 'islte,minus', [0, 1], [0, 1], [0, 0, 9, 9]);
          rhs('<=?', 'islte', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<=?', 'islte', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!&?', 'isnall,minus', [0, 1], [0, 1], [0, 1]);
          both('!&?', 'isnall,minus', [0, 2], [0, 1], [0, 2]);
          both('!&?', 'isnall,minus', [0, 2], [0, 2], [0, 2]);
          both('!&?', 'isnall,minus', [0, 1], [0, 2], [0, 2]);
          both('!&?', 'isnall,minus', [0, 1], [0, 1], [0, 10]);
          both('!&?', 'isnall,minus', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('!&?', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!&?', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('|?', 'issome,minus', [0, 1], [0, 1], [0, 1]);
          both('|?', 'issome,minus', [0, 2], [0, 1], [0, 2]);
          both('|?', 'issome,minus', [0, 2], [0, 2], [0, 2]);
          both('|?', 'issome,minus', [0, 1], [0, 2], [0, 2]);
          both('|?', 'issome,minus', [0, 1], [0, 1], [0, 10]);
          both('|?', 'issome,minus', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('|?', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('|?', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!|?', 'isnone,minus', [0, 1], [0, 1], [0, 1]);
          both('!|?', 'isnone,minus', [0, 2], [0, 1], [0, 2]);
          both('!|?', 'isnone,minus', [0, 2], [0, 2], [0, 2]);
          both('!|?', 'isnone,minus', [0, 1], [0, 2], [0, 2]);
          both('!|?', 'isnone,minus', [0, 1], [0, 1], [0, 10]);
          both('!|?', 'isnone,minus', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('!|?', 'isnone', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!|?', 'isnone', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('+', 'issome,minus', [0, 1], [0, 20], [0, 1]);
          both('+', 'minus,sum', [0, 2], [0, 1], [0, 2]);
          both('+', 'minus,sum', [0, 2], [0, 2], [0, 2]);
          both('+', 'minus,sum', [0, 1], [0, 2], [0, 2]);
          both('+', 'issome,minus', [0, 1], [0, 20], [0, 10]);
          both('+', 'issome,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
          both('+', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('+', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('-', 'minus,minus', [0, 1], [0, 20], [0, 1]);
          lhs('-', 'minus,minus', [0, 2], [0, 1], [0, 2]);
          lhs('-', 'minus,minus', [0, 2], [0, 2], [0, 2]);
          lhs('-', 'minus,minus', [0, 1], [0, 2], [0, 2]);
          lhs('-', 'minus,minus', [0, 1], [0, 20], [0, 10]);
          lhs('-', 'minus,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
          lhs('-', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('-', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('-', 'minus,minus', [0, 1], [0, 20], [0, 1]);
          rhs('-', 'minus,minus', [0, 2], [0, 1], [0, 2]);
          rhs('-', 'minus,minus', [0, 2], [0, 2], [0, 2]);
          rhs('-', 'minus,minus', [0, 1], [0, 2], [0, 2]);
          rhs('-', 'minus,minus', [0, 1], [0, 20], [0, 10]);
          rhs('-', 'minus,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
          rhs('-', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('-', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('*', 'minus,product', [0, 1], [0, 100], [0, 1]);
          both('*', 'minus,product', [0, 2], [0, 1], [0, 2]);
          both('*', 'minus,product', [0, 2], [0, 2], [0, 2]);
          both('*', 'minus,product', [0, 1], [0, 2], [0, 2]);
          both('*', 'minus,product', [0, 1], [0, 100], [0, 10]);
          both('*', 'minus,product', [0, 1], [0, 100], [0, 0, 9, 9]);
          both('*', [0, 1], [0, 100], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('*', [0, 1], [0, 100], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('/', 'div,minus', [0, 1], [0, 20], [0, 1]);
          lhs('/', 'div,minus', [0, 2], [0, 1], [0, 2]);
          lhs('/', 'div,minus', [0, 2], [0, 2], [0, 2]);
          lhs('/', 'div,minus', [0, 1], [0, 2], [0, 2]);
          lhs('/', 'div,minus', [0, 1], [0, 20], [0, 10]);
          lhs('/', 'div,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
          lhs('/', 'div', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('/', 'div', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('/', 'div,minus', [0, 1], [0, 20], [0, 1]);
          rhs('/', 'div,minus', [0, 2], [0, 1], [0, 2]);
          rhs('/', 'div,minus', [0, 2], [0, 2], [0, 2]);
          rhs('/', 'div,minus', [0, 1], [0, 2], [0, 2]);
          rhs('/', 'div,minus', [0, 1], [0, 20], [0, 10]);
          rhs('/', 'div,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
          rhs('/', 'reject', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('/', 'reject', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
        });

        describe('ternary with shared R', function() {

          let both = testTernaryTernarySharedArgs.bind(undefined, '-', 'lhs', '');          // R = A @1 B, S = A @2 C  and  R = A @1 B, S = C @2 A
          let lhs = testTernaryTernarySharedArgs.bind(undefined, '-', 'lhs', 'lhs');    // R = A @1 B, S = A @2 C
          let rhs = testTernaryTernarySharedArgs.bind(undefined, '-', 'lhs', 'rhs');    // R = A @1 B, S = C @2 A

          // R = A & B, S = A &? C
          both('&?', 'isall,minus', [0, 1], [0, 1], [0, 1]);
          both('&?', 'isall,minus', [0, 2], [0, 1], [0, 2]);
          both('&?', 'isall,minus', [0, 2], [0, 2], [0, 2]);
          both('&?', 'isall,minus', [0, 1], [0, 2], [0, 2]);
          both('&?', 'isall,minus', [0, 1], [0, 1], [0, 10]);
          both('&?', 'isall,minus', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('&?', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('&?', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('==?', 'issame,minus', [0, 1], [0, 1], [0, 1]);
          both('==?', 'issame,minus', [0, 2], [0, 1], [0, 2]);
          both('==?', 'issame,minus', [0, 2], [0, 2], [0, 2]);
          both('==?', 'issame,minus', [0, 1], [0, 2], [0, 2]);
          both('==?', 'issame,minus', [0, 1], [0, 1], [0, 10]);
          both('==?', 'issame,minus', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('==?', 'xor', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('==?', 'xor', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!=?', 'isdiff,minus', [0, 1], [0, 1], [0, 1]);
          both('!=?', 'isdiff,minus', [0, 2], [0, 1], [0, 2]);
          both('!=?', 'isdiff,minus', [0, 2], [0, 2], [0, 2]);
          both('!=?', 'isdiff,minus', [0, 1], [0, 2], [0, 2]);
          both('!=?', 'isdiff,minus', [0, 1], [0, 1], [0, 10]);
          both('!=?', 'isdiff,minus', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('!=?', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!=?', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<?', 'islt,minus', [0, 1], [0, 1], [0, 1]);
          lhs('<?', 'islt,minus', [0, 2], [0, 1], [0, 2]);
          lhs('<?', 'islt,minus', [0, 2], [0, 2], [0, 2]);
          lhs('<?', 'islt,minus', [0, 1], [0, 2], [0, 2]);
          lhs('<?', 'islt,minus', [0, 1], [0, 1], [0, 10]);
          lhs('<?', 'islt,minus', [0, 1], [0, 1], [0, 0, 9, 9]);
          lhs('<?', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<?', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<?', 'islt,minus', [0, 1], [0, 1], [0, 1]);
          rhs('<?', 'islt,minus', [0, 2], [0, 1], [0, 2]);
          rhs('<?', 'islt,minus', [0, 2], [0, 2], [0, 2]);
          rhs('<?', 'islt,minus', [0, 1], [0, 2], [0, 2]);
          rhs('<?', 'islt,minus', [0, 1], [0, 1], [0, 10]);
          rhs('<?', 'islt,minus', [0, 1], [0, 1], [0, 0, 9, 9]);
          rhs('<?', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<?', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<=?', 'islte,minus', [0, 1], [0, 1], [0, 1]);
          lhs('<=?', 'islte,minus', [0, 2], [0, 1], [0, 2]);
          lhs('<=?', 'islte,minus', [0, 2], [0, 2], [0, 2]);
          lhs('<=?', 'islte,minus', [0, 1], [0, 2], [0, 2]);
          lhs('<=?', 'islte,minus', [0, 1], [0, 1], [0, 10]);
          lhs('<=?', 'islte,minus', [0, 1], [0, 1], [0, 0, 9, 9]);
          lhs('<=?', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<=?', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<=?', 'islte,minus', [0, 1], [0, 1], [0, 1]);
          rhs('<=?', 'islte,minus', [0, 2], [0, 1], [0, 2]);
          rhs('<=?', 'islte,minus', [0, 2], [0, 2], [0, 2]);
          rhs('<=?', 'islte,minus', [0, 1], [0, 2], [0, 2]);
          rhs('<=?', 'islte,minus', [0, 1], [0, 1], [0, 10]);
          rhs('<=?', 'islte,minus', [0, 1], [0, 1], [0, 0, 9, 9]);
          rhs('<=?', 'islte', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<=?', 'islte', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!&?', 'isnall,minus', [0, 1], [0, 1], [0, 1]);
          both('!&?', 'isnall,minus', [0, 2], [0, 1], [0, 2]);
          both('!&?', 'isnall,minus', [0, 2], [0, 2], [0, 2]);
          both('!&?', 'isnall,minus', [0, 1], [0, 2], [0, 2]);
          both('!&?', 'isnall,minus', [0, 1], [0, 1], [0, 10]);
          both('!&?', 'isnall,minus', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('!&?', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!&?', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('|?', 'issome,minus', [0, 1], [0, 1], [0, 1]);
          both('|?', 'issome,minus', [0, 2], [0, 1], [0, 2]);
          both('|?', 'issome,minus', [0, 2], [0, 2], [0, 2]);
          both('|?', 'issome,minus', [0, 1], [0, 2], [0, 2]);
          both('|?', 'issome,minus', [0, 1], [0, 1], [0, 10]);
          both('|?', 'issome,minus', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('|?', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('|?', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!|?', 'isnone,minus', [0, 1], [0, 1], [0, 1]);
          both('!|?', 'isnone,minus', [0, 2], [0, 1], [0, 2]);
          both('!|?', 'isnone,minus', [0, 2], [0, 2], [0, 2]);
          both('!|?', 'isnone,minus', [0, 1], [0, 2], [0, 2]);
          both('!|?', 'isnone,minus', [0, 1], [0, 1], [0, 10]);
          both('!|?', 'isnone,minus', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('!|?', 'isnone', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!|?', 'isnone', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('+', 'issome,minus', [0, 1], [0, 20], [0, 1]);
          both('+', 'minus,sum', [0, 2], [0, 1], [0, 2]);
          both('+', 'minus,sum', [0, 2], [0, 2], [0, 2]);
          both('+', 'minus,sum', [0, 1], [0, 2], [0, 2]);
          both('+', 'issome,minus', [0, 1], [0, 20], [0, 10]);
          both('+', 'issome,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
          both('+', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('+', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('-', 'minus,minus', [0, 1], [0, 20], [0, 1]);
          lhs('-', 'minus,minus', [0, 2], [0, 1], [0, 2]);
          lhs('-', 'minus,minus', [0, 2], [0, 2], [0, 2]);
          lhs('-', 'minus,minus', [0, 1], [0, 2], [0, 2]);
          lhs('-', 'minus,minus', [0, 1], [0, 20], [0, 10]);
          lhs('-', 'minus,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
          lhs('-', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('-', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('-', 'minus,minus', [0, 1], [0, 20], [0, 1]);
          rhs('-', 'minus,minus', [0, 2], [0, 1], [0, 2]);
          rhs('-', 'minus,minus', [0, 2], [0, 2], [0, 2]);
          rhs('-', 'minus,minus', [0, 1], [0, 2], [0, 2]);
          rhs('-', 'minus,minus', [0, 1], [0, 20], [0, 10]);
          rhs('-', 'minus,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
          rhs('-', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('-', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('*', 'minus,product', [0, 1], [0, 100], [0, 1]);
          both('*', 'minus,product', [0, 2], [0, 1], [0, 2]);
          both('*', 'minus,product', [0, 2], [0, 2], [0, 2]);
          both('*', 'minus,product', [0, 1], [0, 2], [0, 2]);
          both('*', 'minus,product', [0, 1], [0, 100], [0, 10]);
          both('*', 'minus,product', [0, 1], [0, 100], [0, 0, 9, 9]);
          both('*', [0, 1], [0, 100], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('*', [0, 1], [0, 100], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('/', 'div,minus', [0, 1], [0, 20], [0, 1]);
          lhs('/', 'div,minus', [0, 2], [0, 1], [0, 2]);
          lhs('/', 'div,minus', [0, 2], [0, 2], [0, 2]);
          lhs('/', 'div,minus', [0, 1], [0, 2], [0, 2]);
          lhs('/', 'div,minus', [0, 1], [0, 20], [0, 10]);
          lhs('/', 'div,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
          lhs('/', 'div', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('/', 'div', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('/', 'div,minus', [0, 1], [0, 20], [0, 1]);
          rhs('/', 'div,minus', [0, 2], [0, 1], [0, 2]);
          rhs('/', 'div,minus', [0, 2], [0, 2], [0, 2]);
          rhs('/', 'div,minus', [0, 1], [0, 2], [0, 2]);
          rhs('/', 'div,minus', [0, 1], [0, 20], [0, 10]);
          rhs('/', 'div,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
          rhs('/', 'reject', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('/', 'reject', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
        });

        describe('ternary with shared S', function() {

          let both = testTernaryTernarySharedArgs.bind(undefined, '-', 'lhs', '');          // R = A @1 B, S = A @2 C  and  R = A @1 B, S = C @2 A
          let lhs = testTernaryTernarySharedArgs.bind(undefined, '-', 'lhs', 'lhs');    // R = A @1 B, S = A @2 C
          let rhs = testTernaryTernarySharedArgs.bind(undefined, '-', 'lhs', 'rhs');    // R = A @1 B, S = C @2 A

          // R = A & B, S = A &? C
          both('&?', 'isall,minus', [0, 1], [0, 1], [0, 1]);
          both('&?', 'isall,minus', [0, 2], [0, 1], [0, 2]);
          both('&?', 'isall,minus', [0, 2], [0, 2], [0, 2]);
          both('&?', 'isall,minus', [0, 1], [0, 2], [0, 2]);
          both('&?', 'isall,minus', [0, 1], [0, 1], [0, 10]);
          both('&?', 'isall,minus', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('&?', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('&?', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('==?', 'issame,minus', [0, 1], [0, 1], [0, 1]);
          both('==?', 'issame,minus', [0, 2], [0, 1], [0, 2]);
          both('==?', 'issame,minus', [0, 2], [0, 2], [0, 2]);
          both('==?', 'issame,minus', [0, 1], [0, 2], [0, 2]);
          both('==?', 'issame,minus', [0, 1], [0, 1], [0, 10]);
          both('==?', 'issame,minus', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('==?', 'xor', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('==?', 'xor', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!=?', 'isdiff,minus', [0, 1], [0, 1], [0, 1]);
          both('!=?', 'isdiff,minus', [0, 2], [0, 1], [0, 2]);
          both('!=?', 'isdiff,minus', [0, 2], [0, 2], [0, 2]);
          both('!=?', 'isdiff,minus', [0, 1], [0, 2], [0, 2]);
          both('!=?', 'isdiff,minus', [0, 1], [0, 1], [0, 10]);
          both('!=?', 'isdiff,minus', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('!=?', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!=?', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<?', 'islt,minus', [0, 1], [0, 1], [0, 1]);
          lhs('<?', 'islt,minus', [0, 2], [0, 1], [0, 2]);
          lhs('<?', 'islt,minus', [0, 2], [0, 2], [0, 2]);
          lhs('<?', 'islt,minus', [0, 1], [0, 2], [0, 2]);
          lhs('<?', 'islt,minus', [0, 1], [0, 1], [0, 10]);
          lhs('<?', 'islt,minus', [0, 1], [0, 1], [0, 0, 9, 9]);
          lhs('<?', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<?', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<?', 'islt,minus', [0, 1], [0, 1], [0, 1]);
          rhs('<?', 'islt,minus', [0, 2], [0, 1], [0, 2]);
          rhs('<?', 'islt,minus', [0, 2], [0, 2], [0, 2]);
          rhs('<?', 'islt,minus', [0, 1], [0, 2], [0, 2]);
          rhs('<?', 'islt,minus', [0, 1], [0, 1], [0, 10]);
          rhs('<?', 'islt,minus', [0, 1], [0, 1], [0, 0, 9, 9]);
          rhs('<?', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<?', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<=?', 'islte,minus', [0, 1], [0, 1], [0, 1]);
          lhs('<=?', 'islte,minus', [0, 2], [0, 1], [0, 2]);
          lhs('<=?', 'islte,minus', [0, 2], [0, 2], [0, 2]);
          lhs('<=?', 'islte,minus', [0, 1], [0, 2], [0, 2]);
          lhs('<=?', 'islte,minus', [0, 1], [0, 1], [0, 10]);
          lhs('<=?', 'islte,minus', [0, 1], [0, 1], [0, 0, 9, 9]);
          lhs('<=?', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<=?', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<=?', 'islte,minus', [0, 1], [0, 1], [0, 1]);
          rhs('<=?', 'islte,minus', [0, 2], [0, 1], [0, 2]);
          rhs('<=?', 'islte,minus', [0, 2], [0, 2], [0, 2]);
          rhs('<=?', 'islte,minus', [0, 1], [0, 2], [0, 2]);
          rhs('<=?', 'islte,minus', [0, 1], [0, 1], [0, 10]);
          rhs('<=?', 'islte,minus', [0, 1], [0, 1], [0, 0, 9, 9]);
          rhs('<=?', 'islte', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<=?', 'islte', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!&?', 'isnall,minus', [0, 1], [0, 1], [0, 1]);
          both('!&?', 'isnall,minus', [0, 2], [0, 1], [0, 2]);
          both('!&?', 'isnall,minus', [0, 2], [0, 2], [0, 2]);
          both('!&?', 'isnall,minus', [0, 1], [0, 2], [0, 2]);
          both('!&?', 'isnall,minus', [0, 1], [0, 1], [0, 10]);
          both('!&?', 'isnall,minus', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('!&?', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!&?', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('|?', 'issome,minus', [0, 1], [0, 1], [0, 1]);
          both('|?', 'issome,minus', [0, 2], [0, 1], [0, 2]);
          both('|?', 'issome,minus', [0, 2], [0, 2], [0, 2]);
          both('|?', 'issome,minus', [0, 1], [0, 2], [0, 2]);
          both('|?', 'issome,minus', [0, 1], [0, 1], [0, 10]);
          both('|?', 'issome,minus', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('|?', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('|?', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!|?', 'isnone,minus', [0, 1], [0, 1], [0, 1]);
          both('!|?', 'isnone,minus', [0, 2], [0, 1], [0, 2]);
          both('!|?', 'isnone,minus', [0, 2], [0, 2], [0, 2]);
          both('!|?', 'isnone,minus', [0, 1], [0, 2], [0, 2]);
          both('!|?', 'isnone,minus', [0, 1], [0, 1], [0, 10]);
          both('!|?', 'isnone,minus', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('!|?', 'isnone', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!|?', 'isnone', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('+', 'issome,minus', [0, 1], [0, 20], [0, 1]);
          both('+', 'minus,sum', [0, 2], [0, 1], [0, 2]);
          both('+', 'minus,sum', [0, 2], [0, 2], [0, 2]);
          both('+', 'minus,sum', [0, 1], [0, 2], [0, 2]);
          both('+', 'issome,minus', [0, 1], [0, 20], [0, 10]);
          both('+', 'issome,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
          both('+', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('+', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('-', 'minus,minus', [0, 1], [0, 20], [0, 1]);
          lhs('-', 'minus,minus', [0, 2], [0, 1], [0, 2]);
          lhs('-', 'minus,minus', [0, 2], [0, 2], [0, 2]);
          lhs('-', 'minus,minus', [0, 1], [0, 2], [0, 2]);
          lhs('-', 'minus,minus', [0, 1], [0, 20], [0, 10]);
          lhs('-', 'minus,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
          lhs('-', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('-', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('-', 'minus,minus', [0, 1], [0, 20], [0, 1]);
          rhs('-', 'minus,minus', [0, 2], [0, 1], [0, 2]);
          rhs('-', 'minus,minus', [0, 2], [0, 2], [0, 2]);
          rhs('-', 'minus,minus', [0, 1], [0, 2], [0, 2]);
          rhs('-', 'minus,minus', [0, 1], [0, 20], [0, 10]);
          rhs('-', 'minus,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
          rhs('-', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('-', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('*', 'minus,product', [0, 1], [0, 100], [0, 1]);
          both('*', 'minus,product', [0, 2], [0, 1], [0, 2]);
          both('*', 'minus,product', [0, 2], [0, 2], [0, 2]);
          both('*', 'minus,product', [0, 1], [0, 2], [0, 2]);
          both('*', 'minus,product', [0, 1], [0, 100], [0, 10]);
          both('*', 'minus,product', [0, 1], [0, 100], [0, 0, 9, 9]);
          both('*', [0, 1], [0, 100], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('*', [0, 1], [0, 100], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('/', 'div,minus', [0, 1], [0, 20], [0, 1]);
          lhs('/', 'div,minus', [0, 2], [0, 1], [0, 2]);
          lhs('/', 'div,minus', [0, 2], [0, 2], [0, 2]);
          lhs('/', 'div,minus', [0, 1], [0, 2], [0, 2]);
          lhs('/', 'div,minus', [0, 1], [0, 20], [0, 10]);
          lhs('/', 'div,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
          lhs('/', 'div', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('/', 'div', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('/', 'div,minus', [0, 1], [0, 20], [0, 1]);
          rhs('/', 'div,minus', [0, 2], [0, 1], [0, 2]);
          rhs('/', 'div,minus', [0, 2], [0, 2], [0, 2]);
          rhs('/', 'div,minus', [0, 1], [0, 2], [0, 2]);
          rhs('/', 'div,minus', [0, 1], [0, 20], [0, 10]);
          rhs('/', 'div,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
          rhs('/', 'reject', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('/', 'reject', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
        });

        describe('ternary with shared results', function() {

          let both = testTernaryTernarySharedArgs.bind(undefined, '-', 'lhs', '');          // R = A @1 B, S = A @2 C  and  R = A @1 B, S = C @2 A
          let lhs = testTernaryTernarySharedArgs.bind(undefined, '-', 'lhs', 'lhs');    // R = A @1 B, S = A @2 C
          let rhs = testTernaryTernarySharedArgs.bind(undefined, '-', 'lhs', 'rhs');    // R = A @1 B, S = C @2 A

          // R = A & B, S = A &? C
          both('&?', 'isall,minus', [0, 1], [0, 1], [0, 1]);
          both('&?', 'isall,minus', [0, 2], [0, 1], [0, 2]);
          both('&?', 'isall,minus', [0, 2], [0, 2], [0, 2]);
          both('&?', 'isall,minus', [0, 1], [0, 2], [0, 2]);
          both('&?', 'isall,minus', [0, 1], [0, 1], [0, 10]);
          both('&?', 'isall,minus', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('&?', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('&?', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('==?', 'issame,minus', [0, 1], [0, 1], [0, 1]);
          both('==?', 'issame,minus', [0, 2], [0, 1], [0, 2]);
          both('==?', 'issame,minus', [0, 2], [0, 2], [0, 2]);
          both('==?', 'issame,minus', [0, 1], [0, 2], [0, 2]);
          both('==?', 'issame,minus', [0, 1], [0, 1], [0, 10]);
          both('==?', 'issame,minus', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('==?', 'xor', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('==?', 'xor', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!=?', 'isdiff,minus', [0, 1], [0, 1], [0, 1]);
          both('!=?', 'isdiff,minus', [0, 2], [0, 1], [0, 2]);
          both('!=?', 'isdiff,minus', [0, 2], [0, 2], [0, 2]);
          both('!=?', 'isdiff,minus', [0, 1], [0, 2], [0, 2]);
          both('!=?', 'isdiff,minus', [0, 1], [0, 1], [0, 10]);
          both('!=?', 'isdiff,minus', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('!=?', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!=?', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<?', 'islt,minus', [0, 1], [0, 1], [0, 1]);
          lhs('<?', 'islt,minus', [0, 2], [0, 1], [0, 2]);
          lhs('<?', 'islt,minus', [0, 2], [0, 2], [0, 2]);
          lhs('<?', 'islt,minus', [0, 1], [0, 2], [0, 2]);
          lhs('<?', 'islt,minus', [0, 1], [0, 1], [0, 10]);
          lhs('<?', 'islt,minus', [0, 1], [0, 1], [0, 0, 9, 9]);
          lhs('<?', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<?', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<?', 'islt,minus', [0, 1], [0, 1], [0, 1]);
          rhs('<?', 'islt,minus', [0, 2], [0, 1], [0, 2]);
          rhs('<?', 'islt,minus', [0, 2], [0, 2], [0, 2]);
          rhs('<?', 'islt,minus', [0, 1], [0, 2], [0, 2]);
          rhs('<?', 'islt,minus', [0, 1], [0, 1], [0, 10]);
          rhs('<?', 'islt,minus', [0, 1], [0, 1], [0, 0, 9, 9]);
          rhs('<?', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<?', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<=?', 'islte,minus', [0, 1], [0, 1], [0, 1]);
          lhs('<=?', 'islte,minus', [0, 2], [0, 1], [0, 2]);
          lhs('<=?', 'islte,minus', [0, 2], [0, 2], [0, 2]);
          lhs('<=?', 'islte,minus', [0, 1], [0, 2], [0, 2]);
          lhs('<=?', 'islte,minus', [0, 1], [0, 1], [0, 10]);
          lhs('<=?', 'islte,minus', [0, 1], [0, 1], [0, 0, 9, 9]);
          lhs('<=?', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<=?', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<=?', 'islte,minus', [0, 1], [0, 1], [0, 1]);
          rhs('<=?', 'islte,minus', [0, 2], [0, 1], [0, 2]);
          rhs('<=?', 'islte,minus', [0, 2], [0, 2], [0, 2]);
          rhs('<=?', 'islte,minus', [0, 1], [0, 2], [0, 2]);
          rhs('<=?', 'islte,minus', [0, 1], [0, 1], [0, 10]);
          rhs('<=?', 'islte,minus', [0, 1], [0, 1], [0, 0, 9, 9]);
          rhs('<=?', 'islte', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<=?', 'islte', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!&?', 'isnall,minus', [0, 1], [0, 1], [0, 1]);
          both('!&?', 'isnall,minus', [0, 2], [0, 1], [0, 2]);
          both('!&?', 'isnall,minus', [0, 2], [0, 2], [0, 2]);
          both('!&?', 'isnall,minus', [0, 1], [0, 2], [0, 2]);
          both('!&?', 'isnall,minus', [0, 1], [0, 1], [0, 10]);
          both('!&?', 'isnall,minus', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('!&?', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!&?', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('|?', 'issome,minus', [0, 1], [0, 1], [0, 1]);
          both('|?', 'issome,minus', [0, 2], [0, 1], [0, 2]);
          both('|?', 'issome,minus', [0, 2], [0, 2], [0, 2]);
          both('|?', 'issome,minus', [0, 1], [0, 2], [0, 2]);
          both('|?', 'issome,minus', [0, 1], [0, 1], [0, 10]);
          both('|?', 'issome,minus', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('|?', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('|?', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!|?', 'isnone,minus', [0, 1], [0, 1], [0, 1]);
          both('!|?', 'isnone,minus', [0, 2], [0, 1], [0, 2]);
          both('!|?', 'isnone,minus', [0, 2], [0, 2], [0, 2]);
          both('!|?', 'isnone,minus', [0, 1], [0, 2], [0, 2]);
          both('!|?', 'isnone,minus', [0, 1], [0, 1], [0, 10]);
          both('!|?', 'isnone,minus', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('!|?', 'isnone', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!|?', 'isnone', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('+', 'issome,minus', [0, 1], [0, 20], [0, 1]);
          both('+', 'minus,sum', [0, 2], [0, 1], [0, 2]);
          both('+', 'minus,sum', [0, 2], [0, 2], [0, 2]);
          both('+', 'minus,sum', [0, 1], [0, 2], [0, 2]);
          both('+', 'issome,minus', [0, 1], [0, 20], [0, 10]);
          both('+', 'issome,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
          both('+', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('+', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('-', 'minus,minus', [0, 1], [0, 20], [0, 1]);
          lhs('-', 'minus,minus', [0, 2], [0, 1], [0, 2]);
          lhs('-', 'minus,minus', [0, 2], [0, 2], [0, 2]);
          lhs('-', 'minus,minus', [0, 1], [0, 2], [0, 2]);
          lhs('-', 'minus,minus', [0, 1], [0, 20], [0, 10]);
          lhs('-', 'minus,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
          lhs('-', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('-', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('-', 'minus,minus', [0, 1], [0, 20], [0, 1]);
          rhs('-', 'minus,minus', [0, 2], [0, 1], [0, 2]);
          rhs('-', 'minus,minus', [0, 2], [0, 2], [0, 2]);
          rhs('-', 'minus,minus', [0, 1], [0, 2], [0, 2]);
          rhs('-', 'minus,minus', [0, 1], [0, 20], [0, 10]);
          rhs('-', 'minus,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
          rhs('-', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('-', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('*', 'minus,product', [0, 1], [0, 100], [0, 1]);
          both('*', 'minus,product', [0, 2], [0, 1], [0, 2]);
          both('*', 'minus,product', [0, 2], [0, 2], [0, 2]);
          both('*', 'minus,product', [0, 1], [0, 2], [0, 2]);
          both('*', 'minus,product', [0, 1], [0, 100], [0, 10]);
          both('*', 'minus,product', [0, 1], [0, 100], [0, 0, 9, 9]);
          both('*', [0, 1], [0, 100], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('*', [0, 1], [0, 100], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('/', 'div,minus', [0, 1], [0, 20], [0, 1]);
          lhs('/', 'div,minus', [0, 2], [0, 1], [0, 2]);
          lhs('/', 'div,minus', [0, 2], [0, 2], [0, 2]);
          lhs('/', 'div,minus', [0, 1], [0, 2], [0, 2]);
          lhs('/', 'div,minus', [0, 1], [0, 20], [0, 10]);
          lhs('/', 'div,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
          lhs('/', 'div', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('/', 'div', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('/', 'div,minus', [0, 1], [0, 20], [0, 1]);
          rhs('/', 'div,minus', [0, 2], [0, 1], [0, 2]);
          rhs('/', 'div,minus', [0, 2], [0, 2], [0, 2]);
          rhs('/', 'div,minus', [0, 1], [0, 2], [0, 2]);
          rhs('/', 'div,minus', [0, 1], [0, 20], [0, 10]);
          rhs('/', 'div,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
          rhs('/', 'reject', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('/', 'reject', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
        });
      });

      describe('MINUS RHS', function() {

        describe('binary with shared arg', function() {

          let both = testTernaryBinarySharedArgs.bind(undefined, '-', 'rhs', ''); // R = A @1 B, A @2 C  and  R = A @1 B, C @2 A
          let lhs = testTernaryBinarySharedArgs.bind(undefined, '-', 'rhs', 'lhs'); // R = A @1 B, A @2 C
          let rhs = testTernaryBinarySharedArgs.bind(undefined, '-', 'rhs', 'rhs'); // R = A @1 B, C @2 A

          both('&', [0, 1], [0, 1]);
          both('&', [0, 2], [0, 1]);
          both('&', 'minus', [0, 2], [0, 2]);
          both('&', 'minus', [0, 1], [0, 10]);
          both('&', [0, 1], [0, 0, 9, 9]);
          both('&', 'reject', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('&', 'reject', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!=', 'minus,xor', [0, 1], [0, 1]);
          both('!=', 'minus,xor', [0, 2], [0, 1]);
          both('!=', 'diff,minus', [0, 2], [0, 2]);
          both('!=', 'diff,minus', [0, 1], [0, 10]);
          both('!=', 'minus,xor', [0, 1], [0, 0, 9, 9]);
          both('!=', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!=', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('->', 'imp,minus', [0, 1], [0, 1]);
          lhs('->', 'imp,minus', [0, 2], [0, 1]);
          lhs('->', 'imp,minus', [0, 2], [0, 1]);
          lhs('->', 'imp,minus', [0, 1], [0, 10]);
          lhs('->', 'imp,minus', [0, 1], [0, 0, 9, 9]);
          lhs('->', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('->', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('->', 'imp,minus', [0, 1], [0, 1]);
          rhs('->', 'imp,minus', [0, 2], [0, 1]);
          rhs('->', 'imp,minus', [0, 2], [0, 2]);
          rhs('->', 'imp,minus', [0, 1], [0, 10]);
          rhs('->', 'imp,minus', [0, 1], [0, 0, 9, 9]);
          rhs('->', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('->', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<', [0, 1], [0, 1]);
          lhs('<', [0, 2], [0, 1]);
          lhs('<', 'lt,minus', [0, 2], [0, 2]);
          lhs('<', 'lt,minus', [0, 1], [0, 10]);
          lhs('<', [0, 1], [0, 0, 9, 9]);
          lhs('<', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<', [0, 1], [0, 1]);
          rhs('<', [0, 2], [0, 1]);
          rhs('<', 'lt,minus', [0, 2], [0, 2]);
          rhs('<', 'lt,minus', [0, 1], [0, 10]);
          rhs('<', [0, 1], [0, 0, 9, 9]);
          rhs('<', 'reject', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<', 'reject', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<=', 'imp,minus', [0, 1], [0, 1]);
          lhs('<=', 'imp,minus', [0, 2], [0, 1]);
          lhs('<=', 'lte,minus', [0, 2], [0, 2]);
          lhs('<=', 'lte,minus', [0, 1], [0, 10]);
          lhs('<=', 'imp,minus', [0, 1], [0, 0, 9, 9]);
          lhs('<=', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<=', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<=', 'imp,minus', [0, 1], [0, 1]);
          rhs('<=', 'imp,minus', [0, 2], [0, 1]);
          rhs('<=', 'lte,minus', [0, 2], [0, 2]);
          rhs('<=', 'lte,minus', [0, 1], [0, 10]);
          rhs('<=', 'imp,minus', [0, 1], [0, 0, 9, 9]);
          rhs('<=', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<=', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!&', 'minus,nall', [0, 1], [0, 1]);
          both('!&', 'minus,nall', [0, 2], [0, 1]);
          both('!&', 'minus,nall', [0, 2], [0, 2]);
          both('!&', 'minus,nall', [0, 1], [0, 10]);
          both('!&', 'minus,nall', [0, 1], [0, 0, 9, 9]);
          both('!&', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!&', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('!->', [0, 1], [0, 1]);
          lhs('!->', [0, 2], [0, 1]);
          lhs('!->', 'minus', [0, 2], [0, 2]);
          lhs('!->', 'minus', [0, 1], [0, 10]);
          lhs('!->', [0, 1], [0, 0, 9, 9]);
          lhs('!->', 'reject', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('!->', 'reject', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('!->', [0, 1], [0, 1]);
          rhs('!->', [0, 2], [0, 1]);
          rhs('!->', [0, 2], [0, 2]);
          rhs('!->', [0, 1], [0, 10]);
          rhs('!->', [0, 1], [0, 0, 9, 9]);
          rhs('!->', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('!->', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!|', [0, 1], [0, 1]);
          both('!|', [0, 2], [0, 1]);
          both('!|', [0, 2], [0, 2]);
          both('!|', [0, 1], [0, 10]);
          both('!|', [0, 1], [0, 0, 9, 9]);
          both('!|', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!|', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('==', 'minus', [0, 1], [0, 1]);
          both('==', 'minus', [0, 2], [0, 1]);
          both('==', 'minus', [0, 2], [0, 2]);
          both('==', 'minus', [0, 1], [0, 10]);
          both('==', 'minus', [0, 1], [0, 0, 9, 9]);
          both('==', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('==', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!^', 'minus', [0, 1], [0, 1]);
          both('!^', 'minus', [0, 2], [0, 1]);
          both('!^', 'minus', [0, 2], [0, 2]);
          both('!^', 'minus', [0, 1], [0, 10]);
          both('!^', 'minus', [0, 1], [0, 0, 9, 9]);
          both('!^', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!^', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('^', 'minus,xor', [0, 1], [0, 1]);
          both('^', 'minus,xor', [0, 2], [0, 1]);
          both('^', 'minus,xor', [0, 2], [0, 2]);
          both('^', 'minus,xor', [0, 1], [0, 10]);
          both('^', 'minus,xor', [0, 1], [0, 0, 9, 9]);
          both('^', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('^', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
        });

        describe('binary with shared result', function() {

          let both = testTernaryBinarySharedArgs.bind(undefined, '-', 'rhs', ''); // R = A @1 B, A @2 C  and  R = A @1 B, C @2 A
          let lhs = testTernaryBinarySharedArgs.bind(undefined, '-', 'rhs', 'lhs'); // R = A @1 B, A @2 C
          let rhs = testTernaryBinarySharedArgs.bind(undefined, '-', 'rhs', 'rhs'); // R = A @1 B, C @2 A

          both('&', [0, 1], [0, 1]);
          both('&', [0, 2], [0, 1]);
          both('&', 'minus', [0, 2], [0, 2]);
          both('&', 'minus', [0, 1], [0, 10]);
          both('&', [0, 1], [0, 0, 9, 9]);
          both('&', 'reject', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('&', 'reject', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!=', 'minus,xor', [0, 1], [0, 1]);
          both('!=', 'minus,xor', [0, 2], [0, 1]);
          both('!=', 'diff,minus', [0, 2], [0, 2]);
          both('!=', 'diff,minus', [0, 1], [0, 10]);
          both('!=', 'minus,xor', [0, 1], [0, 0, 9, 9]);
          both('!=', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!=', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('->', 'imp,minus', [0, 1], [0, 1]);
          lhs('->', 'imp,minus', [0, 2], [0, 1]);
          lhs('->', 'imp,minus', [0, 2], [0, 1]);
          lhs('->', 'imp,minus', [0, 1], [0, 10]);
          lhs('->', 'imp,minus', [0, 1], [0, 0, 9, 9]);
          lhs('->', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('->', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('->', 'imp,minus', [0, 1], [0, 1]);
          rhs('->', 'imp,minus', [0, 2], [0, 1]);
          rhs('->', 'imp,minus', [0, 2], [0, 2]);
          rhs('->', 'imp,minus', [0, 1], [0, 10]);
          rhs('->', 'imp,minus', [0, 1], [0, 0, 9, 9]);
          rhs('->', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('->', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<', [0, 1], [0, 1]);
          lhs('<', [0, 2], [0, 1]);
          lhs('<', 'lt,minus', [0, 2], [0, 2]);
          lhs('<', 'lt,minus', [0, 1], [0, 10]);
          lhs('<', [0, 1], [0, 0, 9, 9]);
          lhs('<', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<', [0, 1], [0, 1]);
          rhs('<', [0, 2], [0, 1]);
          rhs('<', 'lt,minus', [0, 2], [0, 2]);
          rhs('<', 'lt,minus', [0, 1], [0, 10]);
          rhs('<', [0, 1], [0, 0, 9, 9]);
          rhs('<', 'reject', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<', 'reject', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<=', 'imp,minus', [0, 1], [0, 1]);
          lhs('<=', 'imp,minus', [0, 2], [0, 1]);
          lhs('<=', 'lte,minus', [0, 2], [0, 2]);
          lhs('<=', 'lte,minus', [0, 1], [0, 10]);
          lhs('<=', 'imp,minus', [0, 1], [0, 0, 9, 9]);
          lhs('<=', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<=', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<=', 'imp,minus', [0, 1], [0, 1]);
          rhs('<=', 'imp,minus', [0, 2], [0, 1]);
          rhs('<=', 'lte,minus', [0, 2], [0, 2]);
          rhs('<=', 'lte,minus', [0, 1], [0, 10]);
          rhs('<=', 'imp,minus', [0, 1], [0, 0, 9, 9]);
          rhs('<=', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<=', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!&', 'minus,nall', [0, 1], [0, 1]);
          both('!&', 'minus,nall', [0, 2], [0, 1]);
          both('!&', 'minus,nall', [0, 2], [0, 2]);
          both('!&', 'minus,nall', [0, 1], [0, 10]);
          both('!&', 'minus,nall', [0, 1], [0, 0, 9, 9]);
          both('!&', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!&', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('!->', [0, 1], [0, 1]);
          lhs('!->', [0, 2], [0, 1]);
          lhs('!->', 'minus', [0, 2], [0, 2]);
          lhs('!->', 'minus', [0, 1], [0, 10]);
          lhs('!->', [0, 1], [0, 0, 9, 9]);
          lhs('!->', 'reject', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('!->', 'reject', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('!->', [0, 1], [0, 1]);
          rhs('!->', [0, 2], [0, 1]);
          rhs('!->', [0, 2], [0, 2]);
          rhs('!->', [0, 1], [0, 10]);
          rhs('!->', [0, 1], [0, 0, 9, 9]);
          rhs('!->', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('!->', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!|', [0, 1], [0, 1]);
          both('!|', [0, 2], [0, 1]);
          both('!|', [0, 2], [0, 2]);
          both('!|', [0, 1], [0, 10]);
          both('!|', [0, 1], [0, 0, 9, 9]);
          both('!|', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!|', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('==', 'minus', [0, 1], [0, 1]);
          both('==', 'minus', [0, 2], [0, 1]);
          both('==', 'minus', [0, 2], [0, 2]);
          both('==', 'minus', [0, 1], [0, 10]);
          both('==', 'minus', [0, 1], [0, 0, 9, 9]);
          both('==', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('==', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!^', 'minus', [0, 1], [0, 1]);
          both('!^', 'minus', [0, 2], [0, 1]);
          both('!^', 'minus', [0, 2], [0, 2]);
          both('!^', 'minus', [0, 1], [0, 10]);
          both('!^', 'minus', [0, 1], [0, 0, 9, 9]);
          both('!^', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!^', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('^', 'minus,xor', [0, 1], [0, 1]);
          both('^', 'minus,xor', [0, 2], [0, 1]);
          both('^', 'minus,xor', [0, 2], [0, 2]);
          both('^', 'minus,xor', [0, 1], [0, 10]);
          both('^', 'minus,xor', [0, 1], [0, 0, 9, 9]);
          both('^', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('^', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
        });

        describe('ternary with shared args', function() {

          let both = testTernaryTernarySharedArgs.bind(undefined, '-', 'rhs', '');          // R = A @1 B, S = A @2 C  and  R = A @1 B, S = C @2 A
          let lhs = testTernaryTernarySharedArgs.bind(undefined, '-', 'rhs', 'lhs');    // R = A @1 B, S = A @2 C
          let rhs = testTernaryTernarySharedArgs.bind(undefined, '-', 'rhs', 'rhs');    // R = A @1 B, S = C @2 A

          // R = A & B, S = A &? C
          both('&?', 'isall,minus', [0, 1], [0, 1], [0, 1]);
          both('&?', 'isall,minus', [0, 2], [0, 1], [0, 2]);
          both('&?', 'isall,minus', [0, 2], [0, 2], [0, 2]);
          both('&?', 'isall,minus', [0, 1], [0, 2], [0, 2]);
          both('&?', 'isall,minus', [0, 1], [0, 1], [0, 10]);
          both('&?', 'isall,minus', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('&?', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('&?', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('==?', 'issame,minus', [0, 1], [0, 1], [0, 1]);
          both('==?', 'issame,minus', [0, 2], [0, 1], [0, 2]);
          both('==?', 'issame,minus', [0, 2], [0, 2], [0, 2]);
          both('==?', 'issame,minus', [0, 1], [0, 2], [0, 2]);
          both('==?', 'issame,minus', [0, 1], [0, 1], [0, 10]);
          both('==?', 'issame,minus', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('==?', 'xor', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('==?', 'xor', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!=?', 'isdiff,minus', [0, 1], [0, 1], [0, 1]);
          both('!=?', 'isdiff,minus', [0, 2], [0, 1], [0, 2]);
          both('!=?', 'isdiff,minus', [0, 2], [0, 2], [0, 2]);
          both('!=?', 'isdiff,minus', [0, 1], [0, 2], [0, 2]);
          both('!=?', 'isdiff,minus', [0, 1], [0, 1], [0, 10]);
          both('!=?', 'isdiff,minus', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('!=?', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!=?', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<?', 'islt,minus', [0, 1], [0, 1], [0, 1]);
          lhs('<?', 'islt,minus', [0, 2], [0, 1], [0, 2]);
          lhs('<?', 'islt,minus', [0, 2], [0, 2], [0, 2]);
          lhs('<?', 'islt,minus', [0, 1], [0, 2], [0, 2]);
          lhs('<?', 'islt,minus', [0, 1], [0, 1], [0, 10]);
          lhs('<?', 'islt,minus', [0, 1], [0, 1], [0, 0, 9, 9]);
          lhs('<?', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<?', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<?', 'islt,minus', [0, 1], [0, 1], [0, 1]);
          rhs('<?', 'islt,minus', [0, 2], [0, 1], [0, 2]);
          rhs('<?', 'islt,minus', [0, 2], [0, 2], [0, 2]);
          rhs('<?', 'islt,minus', [0, 1], [0, 2], [0, 2]);
          rhs('<?', 'islt,minus', [0, 1], [0, 1], [0, 10]);
          rhs('<?', 'islt,minus', [0, 1], [0, 1], [0, 0, 9, 9]);
          rhs('<?', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<?', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<=?', 'islte,minus', [0, 1], [0, 1], [0, 1]);
          lhs('<=?', 'islte,minus', [0, 2], [0, 1], [0, 2]);
          lhs('<=?', 'islte,minus', [0, 2], [0, 2], [0, 2]);
          lhs('<=?', 'islte,minus', [0, 1], [0, 2], [0, 2]);
          lhs('<=?', 'islte,minus', [0, 1], [0, 1], [0, 10]);
          lhs('<=?', 'islte,minus', [0, 1], [0, 1], [0, 0, 9, 9]);
          lhs('<=?', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<=?', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<=?', 'islte,minus', [0, 1], [0, 1], [0, 1]);
          rhs('<=?', 'islte,minus', [0, 2], [0, 1], [0, 2]);
          rhs('<=?', 'islte,minus', [0, 2], [0, 2], [0, 2]);
          rhs('<=?', 'islte,minus', [0, 1], [0, 2], [0, 2]);
          rhs('<=?', 'islte,minus', [0, 1], [0, 1], [0, 10]);
          rhs('<=?', 'islte,minus', [0, 1], [0, 1], [0, 0, 9, 9]);
          rhs('<=?', 'islte', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<=?', 'islte', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!&?', 'isnall,minus', [0, 1], [0, 1], [0, 1]);
          both('!&?', 'isnall,minus', [0, 2], [0, 1], [0, 2]);
          both('!&?', 'isnall,minus', [0, 2], [0, 2], [0, 2]);
          both('!&?', 'isnall,minus', [0, 1], [0, 2], [0, 2]);
          both('!&?', 'isnall,minus', [0, 1], [0, 1], [0, 10]);
          both('!&?', 'isnall,minus', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('!&?', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!&?', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('|?', 'issome,minus', [0, 1], [0, 1], [0, 1]);
          both('|?', 'issome,minus', [0, 2], [0, 1], [0, 2]);
          both('|?', 'issome,minus', [0, 2], [0, 2], [0, 2]);
          both('|?', 'issome,minus', [0, 1], [0, 2], [0, 2]);
          both('|?', 'issome,minus', [0, 1], [0, 1], [0, 10]);
          both('|?', 'issome,minus', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('|?', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('|?', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!|?', 'isnone,minus', [0, 1], [0, 1], [0, 1]);
          both('!|?', 'isnone,minus', [0, 2], [0, 1], [0, 2]);
          both('!|?', 'isnone,minus', [0, 2], [0, 2], [0, 2]);
          both('!|?', 'isnone,minus', [0, 1], [0, 2], [0, 2]);
          both('!|?', 'isnone,minus', [0, 1], [0, 1], [0, 10]);
          both('!|?', 'isnone,minus', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('!|?', 'isnone', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!|?', 'isnone', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('+', 'issome,minus', [0, 1], [0, 20], [0, 1]);
          both('+', 'minus,sum', [0, 2], [0, 1], [0, 2]);
          both('+', 'minus,sum', [0, 2], [0, 2], [0, 2]);
          both('+', 'minus,sum', [0, 1], [0, 2], [0, 2]);
          both('+', 'issome,minus', [0, 1], [0, 20], [0, 10]);
          both('+', 'issome,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
          both('+', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('+', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('-', 'minus,minus', [0, 1], [0, 20], [0, 1]);
          lhs('-', 'minus,minus', [0, 2], [0, 1], [0, 2]);
          lhs('-', 'minus,minus', [0, 2], [0, 2], [0, 2]);
          lhs('-', 'minus,minus', [0, 1], [0, 2], [0, 2]);
          lhs('-', 'minus,minus', [0, 1], [0, 20], [0, 10]);
          lhs('-', 'minus,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
          lhs('-', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('-', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('-', 'minus,minus', [0, 1], [0, 20], [0, 1]);
          rhs('-', 'minus,minus', [0, 2], [0, 1], [0, 2]);
          rhs('-', 'minus,minus', [0, 2], [0, 2], [0, 2]);
          rhs('-', 'minus,minus', [0, 1], [0, 2], [0, 2]);
          rhs('-', 'minus,minus', [0, 1], [0, 20], [0, 10]);
          rhs('-', 'minus,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
          rhs('-', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('-', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('*', 'minus,product', [0, 1], [0, 100], [0, 1]);
          both('*', 'minus,product', [0, 2], [0, 1], [0, 2]);
          both('*', 'minus,product', [0, 2], [0, 2], [0, 2]);
          both('*', 'minus,product', [0, 1], [0, 2], [0, 2]);
          both('*', 'minus,product', [0, 1], [0, 100], [0, 10]);
          both('*', 'minus,product', [0, 1], [0, 100], [0, 0, 9, 9]);
          both('*', [0, 1], [0, 100], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('*', [0, 1], [0, 100], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('/', 'div,minus', [0, 1], [0, 20], [0, 1]);
          lhs('/', 'div,minus', [0, 2], [0, 1], [0, 2]);
          lhs('/', 'div,minus', [0, 2], [0, 2], [0, 2]);
          lhs('/', 'div,minus', [0, 1], [0, 2], [0, 2]);
          lhs('/', 'div,minus', [0, 1], [0, 20], [0, 10]);
          lhs('/', 'div,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
          lhs('/', 'div', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('/', 'div', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('/', 'div,minus', [0, 1], [0, 20], [0, 1]);
          rhs('/', 'div,minus', [0, 2], [0, 1], [0, 2]);
          rhs('/', 'div,minus', [0, 2], [0, 2], [0, 2]);
          rhs('/', 'div,minus', [0, 1], [0, 2], [0, 2]);
          rhs('/', 'div,minus', [0, 1], [0, 20], [0, 10]);
          rhs('/', 'div,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
          rhs('/', 'reject', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('/', 'reject', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
        });

        describe('ternary with shared R', function() {

          let both = testTernaryTernarySharedArgs.bind(undefined, '-', 'rhs', '');          // R = A @1 B, S = A @2 C  and  R = A @1 B, S = C @2 A
          let lhs = testTernaryTernarySharedArgs.bind(undefined, '-', 'rhs', 'lhs');    // R = A @1 B, S = A @2 C
          let rhs = testTernaryTernarySharedArgs.bind(undefined, '-', 'rhs', 'rhs');    // R = A @1 B, S = C @2 A

          // R = A & B, S = A &? C
          both('&?', 'isall,minus', [0, 1], [0, 1], [0, 1]);
          both('&?', 'isall,minus', [0, 2], [0, 1], [0, 2]);
          both('&?', 'isall,minus', [0, 2], [0, 2], [0, 2]);
          both('&?', 'isall,minus', [0, 1], [0, 2], [0, 2]);
          both('&?', 'isall,minus', [0, 1], [0, 1], [0, 10]);
          both('&?', 'isall,minus', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('&?', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('&?', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('==?', 'issame,minus', [0, 1], [0, 1], [0, 1]);
          both('==?', 'issame,minus', [0, 2], [0, 1], [0, 2]);
          both('==?', 'issame,minus', [0, 2], [0, 2], [0, 2]);
          both('==?', 'issame,minus', [0, 1], [0, 2], [0, 2]);
          both('==?', 'issame,minus', [0, 1], [0, 1], [0, 10]);
          both('==?', 'issame,minus', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('==?', 'xor', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('==?', 'xor', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!=?', 'isdiff,minus', [0, 1], [0, 1], [0, 1]);
          both('!=?', 'isdiff,minus', [0, 2], [0, 1], [0, 2]);
          both('!=?', 'isdiff,minus', [0, 2], [0, 2], [0, 2]);
          both('!=?', 'isdiff,minus', [0, 1], [0, 2], [0, 2]);
          both('!=?', 'isdiff,minus', [0, 1], [0, 1], [0, 10]);
          both('!=?', 'isdiff,minus', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('!=?', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!=?', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<?', 'islt,minus', [0, 1], [0, 1], [0, 1]);
          lhs('<?', 'islt,minus', [0, 2], [0, 1], [0, 2]);
          lhs('<?', 'islt,minus', [0, 2], [0, 2], [0, 2]);
          lhs('<?', 'islt,minus', [0, 1], [0, 2], [0, 2]);
          lhs('<?', 'islt,minus', [0, 1], [0, 1], [0, 10]);
          lhs('<?', 'islt,minus', [0, 1], [0, 1], [0, 0, 9, 9]);
          lhs('<?', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<?', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<?', 'islt,minus', [0, 1], [0, 1], [0, 1]);
          rhs('<?', 'islt,minus', [0, 2], [0, 1], [0, 2]);
          rhs('<?', 'islt,minus', [0, 2], [0, 2], [0, 2]);
          rhs('<?', 'islt,minus', [0, 1], [0, 2], [0, 2]);
          rhs('<?', 'islt,minus', [0, 1], [0, 1], [0, 10]);
          rhs('<?', 'islt,minus', [0, 1], [0, 1], [0, 0, 9, 9]);
          rhs('<?', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<?', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<=?', 'islte,minus', [0, 1], [0, 1], [0, 1]);
          lhs('<=?', 'islte,minus', [0, 2], [0, 1], [0, 2]);
          lhs('<=?', 'islte,minus', [0, 2], [0, 2], [0, 2]);
          lhs('<=?', 'islte,minus', [0, 1], [0, 2], [0, 2]);
          lhs('<=?', 'islte,minus', [0, 1], [0, 1], [0, 10]);
          lhs('<=?', 'islte,minus', [0, 1], [0, 1], [0, 0, 9, 9]);
          lhs('<=?', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<=?', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<=?', 'islte,minus', [0, 1], [0, 1], [0, 1]);
          rhs('<=?', 'islte,minus', [0, 2], [0, 1], [0, 2]);
          rhs('<=?', 'islte,minus', [0, 2], [0, 2], [0, 2]);
          rhs('<=?', 'islte,minus', [0, 1], [0, 2], [0, 2]);
          rhs('<=?', 'islte,minus', [0, 1], [0, 1], [0, 10]);
          rhs('<=?', 'islte,minus', [0, 1], [0, 1], [0, 0, 9, 9]);
          rhs('<=?', 'islte', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<=?', 'islte', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!&?', 'isnall,minus', [0, 1], [0, 1], [0, 1]);
          both('!&?', 'isnall,minus', [0, 2], [0, 1], [0, 2]);
          both('!&?', 'isnall,minus', [0, 2], [0, 2], [0, 2]);
          both('!&?', 'isnall,minus', [0, 1], [0, 2], [0, 2]);
          both('!&?', 'isnall,minus', [0, 1], [0, 1], [0, 10]);
          both('!&?', 'isnall,minus', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('!&?', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!&?', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('|?', 'issome,minus', [0, 1], [0, 1], [0, 1]);
          both('|?', 'issome,minus', [0, 2], [0, 1], [0, 2]);
          both('|?', 'issome,minus', [0, 2], [0, 2], [0, 2]);
          both('|?', 'issome,minus', [0, 1], [0, 2], [0, 2]);
          both('|?', 'issome,minus', [0, 1], [0, 1], [0, 10]);
          both('|?', 'issome,minus', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('|?', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('|?', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!|?', 'isnone,minus', [0, 1], [0, 1], [0, 1]);
          both('!|?', 'isnone,minus', [0, 2], [0, 1], [0, 2]);
          both('!|?', 'isnone,minus', [0, 2], [0, 2], [0, 2]);
          both('!|?', 'isnone,minus', [0, 1], [0, 2], [0, 2]);
          both('!|?', 'isnone,minus', [0, 1], [0, 1], [0, 10]);
          both('!|?', 'isnone,minus', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('!|?', 'isnone', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!|?', 'isnone', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('+', 'issome,minus', [0, 1], [0, 20], [0, 1]);
          both('+', 'minus,sum', [0, 2], [0, 1], [0, 2]);
          both('+', 'minus,sum', [0, 2], [0, 2], [0, 2]);
          both('+', 'minus,sum', [0, 1], [0, 2], [0, 2]);
          both('+', 'issome,minus', [0, 1], [0, 20], [0, 10]);
          both('+', 'issome,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
          both('+', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('+', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('-', 'minus,minus', [0, 1], [0, 20], [0, 1]);
          lhs('-', 'minus,minus', [0, 2], [0, 1], [0, 2]);
          lhs('-', 'minus,minus', [0, 2], [0, 2], [0, 2]);
          lhs('-', 'minus,minus', [0, 1], [0, 2], [0, 2]);
          lhs('-', 'minus,minus', [0, 1], [0, 20], [0, 10]);
          lhs('-', 'minus,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
          lhs('-', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('-', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('-', 'minus,minus', [0, 1], [0, 20], [0, 1]);
          rhs('-', 'minus,minus', [0, 2], [0, 1], [0, 2]);
          rhs('-', 'minus,minus', [0, 2], [0, 2], [0, 2]);
          rhs('-', 'minus,minus', [0, 1], [0, 2], [0, 2]);
          rhs('-', 'minus,minus', [0, 1], [0, 20], [0, 10]);
          rhs('-', 'minus,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
          rhs('-', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('-', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('*', 'minus,product', [0, 1], [0, 100], [0, 1]);
          both('*', 'minus,product', [0, 2], [0, 1], [0, 2]);
          both('*', 'minus,product', [0, 2], [0, 2], [0, 2]);
          both('*', 'minus,product', [0, 1], [0, 2], [0, 2]);
          both('*', 'minus,product', [0, 1], [0, 100], [0, 10]);
          both('*', 'minus,product', [0, 1], [0, 100], [0, 0, 9, 9]);
          both('*', [0, 1], [0, 100], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('*', [0, 1], [0, 100], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('/', 'div,minus', [0, 1], [0, 20], [0, 1]);
          lhs('/', 'div,minus', [0, 2], [0, 1], [0, 2]);
          lhs('/', 'div,minus', [0, 2], [0, 2], [0, 2]);
          lhs('/', 'div,minus', [0, 1], [0, 2], [0, 2]);
          lhs('/', 'div,minus', [0, 1], [0, 20], [0, 10]);
          lhs('/', 'div,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
          lhs('/', 'div', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('/', 'div', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('/', 'div,minus', [0, 1], [0, 20], [0, 1]);
          rhs('/', 'div,minus', [0, 2], [0, 1], [0, 2]);
          rhs('/', 'div,minus', [0, 2], [0, 2], [0, 2]);
          rhs('/', 'div,minus', [0, 1], [0, 2], [0, 2]);
          rhs('/', 'div,minus', [0, 1], [0, 20], [0, 10]);
          rhs('/', 'div,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
          rhs('/', 'reject', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('/', 'reject', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
        });

        describe('ternary with shared S', function() {

          let both = testTernaryTernarySharedArgs.bind(undefined, '-', 'rhs', '');          // R = A @1 B, S = A @2 C  and  R = A @1 B, S = C @2 A
          let lhs = testTernaryTernarySharedArgs.bind(undefined, '-', 'rhs', 'lhs');    // R = A @1 B, S = A @2 C
          let rhs = testTernaryTernarySharedArgs.bind(undefined, '-', 'rhs', 'rhs');    // R = A @1 B, S = C @2 A

          // R = A & B, S = A &? C
          both('&?', 'isall,minus', [0, 1], [0, 1], [0, 1]);
          both('&?', 'isall,minus', [0, 2], [0, 1], [0, 2]);
          both('&?', 'isall,minus', [0, 2], [0, 2], [0, 2]);
          both('&?', 'isall,minus', [0, 1], [0, 2], [0, 2]);
          both('&?', 'isall,minus', [0, 1], [0, 1], [0, 10]);
          both('&?', 'isall,minus', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('&?', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('&?', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('==?', 'issame,minus', [0, 1], [0, 1], [0, 1]);
          both('==?', 'issame,minus', [0, 2], [0, 1], [0, 2]);
          both('==?', 'issame,minus', [0, 2], [0, 2], [0, 2]);
          both('==?', 'issame,minus', [0, 1], [0, 2], [0, 2]);
          both('==?', 'issame,minus', [0, 1], [0, 1], [0, 10]);
          both('==?', 'issame,minus', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('==?', 'xor', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('==?', 'xor', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!=?', 'isdiff,minus', [0, 1], [0, 1], [0, 1]);
          both('!=?', 'isdiff,minus', [0, 2], [0, 1], [0, 2]);
          both('!=?', 'isdiff,minus', [0, 2], [0, 2], [0, 2]);
          both('!=?', 'isdiff,minus', [0, 1], [0, 2], [0, 2]);
          both('!=?', 'isdiff,minus', [0, 1], [0, 1], [0, 10]);
          both('!=?', 'isdiff,minus', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('!=?', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!=?', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<?', 'islt,minus', [0, 1], [0, 1], [0, 1]);
          lhs('<?', 'islt,minus', [0, 2], [0, 1], [0, 2]);
          lhs('<?', 'islt,minus', [0, 2], [0, 2], [0, 2]);
          lhs('<?', 'islt,minus', [0, 1], [0, 2], [0, 2]);
          lhs('<?', 'islt,minus', [0, 1], [0, 1], [0, 10]);
          lhs('<?', 'islt,minus', [0, 1], [0, 1], [0, 0, 9, 9]);
          lhs('<?', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<?', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<?', 'islt,minus', [0, 1], [0, 1], [0, 1]);
          rhs('<?', 'islt,minus', [0, 2], [0, 1], [0, 2]);
          rhs('<?', 'islt,minus', [0, 2], [0, 2], [0, 2]);
          rhs('<?', 'islt,minus', [0, 1], [0, 2], [0, 2]);
          rhs('<?', 'islt,minus', [0, 1], [0, 1], [0, 10]);
          rhs('<?', 'islt,minus', [0, 1], [0, 1], [0, 0, 9, 9]);
          rhs('<?', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<?', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<=?', 'islte,minus', [0, 1], [0, 1], [0, 1]);
          lhs('<=?', 'islte,minus', [0, 2], [0, 1], [0, 2]);
          lhs('<=?', 'islte,minus', [0, 2], [0, 2], [0, 2]);
          lhs('<=?', 'islte,minus', [0, 1], [0, 2], [0, 2]);
          lhs('<=?', 'islte,minus', [0, 1], [0, 1], [0, 10]);
          lhs('<=?', 'islte,minus', [0, 1], [0, 1], [0, 0, 9, 9]);
          lhs('<=?', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<=?', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<=?', 'islte,minus', [0, 1], [0, 1], [0, 1]);
          rhs('<=?', 'islte,minus', [0, 2], [0, 1], [0, 2]);
          rhs('<=?', 'islte,minus', [0, 2], [0, 2], [0, 2]);
          rhs('<=?', 'islte,minus', [0, 1], [0, 2], [0, 2]);
          rhs('<=?', 'islte,minus', [0, 1], [0, 1], [0, 10]);
          rhs('<=?', 'islte,minus', [0, 1], [0, 1], [0, 0, 9, 9]);
          rhs('<=?', 'islte', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<=?', 'islte', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!&?', 'isnall,minus', [0, 1], [0, 1], [0, 1]);
          both('!&?', 'isnall,minus', [0, 2], [0, 1], [0, 2]);
          both('!&?', 'isnall,minus', [0, 2], [0, 2], [0, 2]);
          both('!&?', 'isnall,minus', [0, 1], [0, 2], [0, 2]);
          both('!&?', 'isnall,minus', [0, 1], [0, 1], [0, 10]);
          both('!&?', 'isnall,minus', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('!&?', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!&?', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('|?', 'issome,minus', [0, 1], [0, 1], [0, 1]);
          both('|?', 'issome,minus', [0, 2], [0, 1], [0, 2]);
          both('|?', 'issome,minus', [0, 2], [0, 2], [0, 2]);
          both('|?', 'issome,minus', [0, 1], [0, 2], [0, 2]);
          both('|?', 'issome,minus', [0, 1], [0, 1], [0, 10]);
          both('|?', 'issome,minus', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('|?', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('|?', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!|?', 'isnone,minus', [0, 1], [0, 1], [0, 1]);
          both('!|?', 'isnone,minus', [0, 2], [0, 1], [0, 2]);
          both('!|?', 'isnone,minus', [0, 2], [0, 2], [0, 2]);
          both('!|?', 'isnone,minus', [0, 1], [0, 2], [0, 2]);
          both('!|?', 'isnone,minus', [0, 1], [0, 1], [0, 10]);
          both('!|?', 'isnone,minus', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('!|?', 'isnone', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!|?', 'isnone', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('+', 'issome,minus', [0, 1], [0, 20], [0, 1]);
          both('+', 'minus,sum', [0, 2], [0, 1], [0, 2]);
          both('+', 'minus,sum', [0, 2], [0, 2], [0, 2]);
          both('+', 'minus,sum', [0, 1], [0, 2], [0, 2]);
          both('+', 'issome,minus', [0, 1], [0, 20], [0, 10]);
          both('+', 'issome,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
          both('+', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('+', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('-', 'minus,minus', [0, 1], [0, 20], [0, 1]);
          lhs('-', 'minus,minus', [0, 2], [0, 1], [0, 2]);
          lhs('-', 'minus,minus', [0, 2], [0, 2], [0, 2]);
          lhs('-', 'minus,minus', [0, 1], [0, 2], [0, 2]);
          lhs('-', 'minus,minus', [0, 1], [0, 20], [0, 10]);
          lhs('-', 'minus,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
          lhs('-', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('-', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('-', 'minus,minus', [0, 1], [0, 20], [0, 1]);
          rhs('-', 'minus,minus', [0, 2], [0, 1], [0, 2]);
          rhs('-', 'minus,minus', [0, 2], [0, 2], [0, 2]);
          rhs('-', 'minus,minus', [0, 1], [0, 2], [0, 2]);
          rhs('-', 'minus,minus', [0, 1], [0, 20], [0, 10]);
          rhs('-', 'minus,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
          rhs('-', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('-', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('*', 'minus,product', [0, 1], [0, 100], [0, 1]);
          both('*', 'minus,product', [0, 2], [0, 1], [0, 2]);
          both('*', 'minus,product', [0, 2], [0, 2], [0, 2]);
          both('*', 'minus,product', [0, 1], [0, 2], [0, 2]);
          both('*', 'minus,product', [0, 1], [0, 100], [0, 10]);
          both('*', 'minus,product', [0, 1], [0, 100], [0, 0, 9, 9]);
          both('*', [0, 1], [0, 100], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('*', [0, 1], [0, 100], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('/', 'div,minus', [0, 1], [0, 20], [0, 1]);
          lhs('/', 'div,minus', [0, 2], [0, 1], [0, 2]);
          lhs('/', 'div,minus', [0, 2], [0, 2], [0, 2]);
          lhs('/', 'div,minus', [0, 1], [0, 2], [0, 2]);
          lhs('/', 'div,minus', [0, 1], [0, 20], [0, 10]);
          lhs('/', 'div,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
          lhs('/', 'div', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('/', 'div', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('/', 'div,minus', [0, 1], [0, 20], [0, 1]);
          rhs('/', 'div,minus', [0, 2], [0, 1], [0, 2]);
          rhs('/', 'div,minus', [0, 2], [0, 2], [0, 2]);
          rhs('/', 'div,minus', [0, 1], [0, 2], [0, 2]);
          rhs('/', 'div,minus', [0, 1], [0, 20], [0, 10]);
          rhs('/', 'div,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
          rhs('/', 'reject', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('/', 'reject', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
        });

        describe('ternary with shared results', function() {

          let both = testTernaryTernarySharedArgs.bind(undefined, '-', 'rhs', '');          // R = A @1 B, S = A @2 C  and  R = A @1 B, S = C @2 A
          let lhs = testTernaryTernarySharedArgs.bind(undefined, '-', 'rhs', 'lhs');    // R = A @1 B, S = A @2 C
          let rhs = testTernaryTernarySharedArgs.bind(undefined, '-', 'rhs', 'rhs');    // R = A @1 B, S = C @2 A

          // R = A & B, S = A &? C
          both('&?', 'isall,minus', [0, 1], [0, 1], [0, 1]);
          both('&?', 'isall,minus', [0, 2], [0, 1], [0, 2]);
          both('&?', 'isall,minus', [0, 2], [0, 2], [0, 2]);
          both('&?', 'isall,minus', [0, 1], [0, 2], [0, 2]);
          both('&?', 'isall,minus', [0, 1], [0, 1], [0, 10]);
          both('&?', 'isall,minus', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('&?', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('&?', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('==?', 'issame,minus', [0, 1], [0, 1], [0, 1]);
          both('==?', 'issame,minus', [0, 2], [0, 1], [0, 2]);
          both('==?', 'issame,minus', [0, 2], [0, 2], [0, 2]);
          both('==?', 'issame,minus', [0, 1], [0, 2], [0, 2]);
          both('==?', 'issame,minus', [0, 1], [0, 1], [0, 10]);
          both('==?', 'issame,minus', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('==?', 'xor', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('==?', 'xor', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!=?', 'isdiff,minus', [0, 1], [0, 1], [0, 1]);
          both('!=?', 'isdiff,minus', [0, 2], [0, 1], [0, 2]);
          both('!=?', 'isdiff,minus', [0, 2], [0, 2], [0, 2]);
          both('!=?', 'isdiff,minus', [0, 1], [0, 2], [0, 2]);
          both('!=?', 'isdiff,minus', [0, 1], [0, 1], [0, 10]);
          both('!=?', 'isdiff,minus', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('!=?', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!=?', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<?', 'islt,minus', [0, 1], [0, 1], [0, 1]);
          lhs('<?', 'islt,minus', [0, 2], [0, 1], [0, 2]);
          lhs('<?', 'islt,minus', [0, 2], [0, 2], [0, 2]);
          lhs('<?', 'islt,minus', [0, 1], [0, 2], [0, 2]);
          lhs('<?', 'islt,minus', [0, 1], [0, 1], [0, 10]);
          lhs('<?', 'islt,minus', [0, 1], [0, 1], [0, 0, 9, 9]);
          lhs('<?', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<?', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<?', 'islt,minus', [0, 1], [0, 1], [0, 1]);
          rhs('<?', 'islt,minus', [0, 2], [0, 1], [0, 2]);
          rhs('<?', 'islt,minus', [0, 2], [0, 2], [0, 2]);
          rhs('<?', 'islt,minus', [0, 1], [0, 2], [0, 2]);
          rhs('<?', 'islt,minus', [0, 1], [0, 1], [0, 10]);
          rhs('<?', 'islt,minus', [0, 1], [0, 1], [0, 0, 9, 9]);
          rhs('<?', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<?', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<=?', 'islte,minus', [0, 1], [0, 1], [0, 1]);
          lhs('<=?', 'islte,minus', [0, 2], [0, 1], [0, 2]);
          lhs('<=?', 'islte,minus', [0, 2], [0, 2], [0, 2]);
          lhs('<=?', 'islte,minus', [0, 1], [0, 2], [0, 2]);
          lhs('<=?', 'islte,minus', [0, 1], [0, 1], [0, 10]);
          lhs('<=?', 'islte,minus', [0, 1], [0, 1], [0, 0, 9, 9]);
          lhs('<=?', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<=?', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<=?', 'islte,minus', [0, 1], [0, 1], [0, 1]);
          rhs('<=?', 'islte,minus', [0, 2], [0, 1], [0, 2]);
          rhs('<=?', 'islte,minus', [0, 2], [0, 2], [0, 2]);
          rhs('<=?', 'islte,minus', [0, 1], [0, 2], [0, 2]);
          rhs('<=?', 'islte,minus', [0, 1], [0, 1], [0, 10]);
          rhs('<=?', 'islte,minus', [0, 1], [0, 1], [0, 0, 9, 9]);
          rhs('<=?', 'islte', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<=?', 'islte', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!&?', 'isnall,minus', [0, 1], [0, 1], [0, 1]);
          both('!&?', 'isnall,minus', [0, 2], [0, 1], [0, 2]);
          both('!&?', 'isnall,minus', [0, 2], [0, 2], [0, 2]);
          both('!&?', 'isnall,minus', [0, 1], [0, 2], [0, 2]);
          both('!&?', 'isnall,minus', [0, 1], [0, 1], [0, 10]);
          both('!&?', 'isnall,minus', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('!&?', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!&?', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('|?', 'issome,minus', [0, 1], [0, 1], [0, 1]);
          both('|?', 'issome,minus', [0, 2], [0, 1], [0, 2]);
          both('|?', 'issome,minus', [0, 2], [0, 2], [0, 2]);
          both('|?', 'issome,minus', [0, 1], [0, 2], [0, 2]);
          both('|?', 'issome,minus', [0, 1], [0, 1], [0, 10]);
          both('|?', 'issome,minus', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('|?', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('|?', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!|?', 'isnone,minus', [0, 1], [0, 1], [0, 1]);
          both('!|?', 'isnone,minus', [0, 2], [0, 1], [0, 2]);
          both('!|?', 'isnone,minus', [0, 2], [0, 2], [0, 2]);
          both('!|?', 'isnone,minus', [0, 1], [0, 2], [0, 2]);
          both('!|?', 'isnone,minus', [0, 1], [0, 1], [0, 10]);
          both('!|?', 'isnone,minus', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('!|?', 'isnone', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!|?', 'isnone', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('+', 'issome,minus', [0, 1], [0, 20], [0, 1]);
          both('+', 'minus,sum', [0, 2], [0, 1], [0, 2]);
          both('+', 'minus,sum', [0, 2], [0, 2], [0, 2]);
          both('+', 'minus,sum', [0, 1], [0, 2], [0, 2]);
          both('+', 'issome,minus', [0, 1], [0, 20], [0, 10]);
          both('+', 'issome,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
          both('+', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('+', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('-', 'minus,minus', [0, 1], [0, 20], [0, 1]);
          lhs('-', 'minus,minus', [0, 2], [0, 1], [0, 2]);
          lhs('-', 'minus,minus', [0, 2], [0, 2], [0, 2]);
          lhs('-', 'minus,minus', [0, 1], [0, 2], [0, 2]);
          lhs('-', 'minus,minus', [0, 1], [0, 20], [0, 10]);
          lhs('-', 'minus,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
          lhs('-', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('-', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('-', 'minus,minus', [0, 1], [0, 20], [0, 1]);
          rhs('-', 'minus,minus', [0, 2], [0, 1], [0, 2]);
          rhs('-', 'minus,minus', [0, 2], [0, 2], [0, 2]);
          rhs('-', 'minus,minus', [0, 1], [0, 2], [0, 2]);
          rhs('-', 'minus,minus', [0, 1], [0, 20], [0, 10]);
          rhs('-', 'minus,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
          rhs('-', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('-', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('*', 'minus,product', [0, 1], [0, 100], [0, 1]);
          both('*', 'minus,product', [0, 2], [0, 1], [0, 2]);
          both('*', 'minus,product', [0, 2], [0, 2], [0, 2]);
          both('*', 'minus,product', [0, 1], [0, 2], [0, 2]);
          both('*', 'minus,product', [0, 1], [0, 100], [0, 10]);
          both('*', 'minus,product', [0, 1], [0, 100], [0, 0, 9, 9]);
          both('*', [0, 1], [0, 100], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('*', [0, 1], [0, 100], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('/', 'div,minus', [0, 1], [0, 20], [0, 1]);
          lhs('/', 'div,minus', [0, 2], [0, 1], [0, 2]);
          lhs('/', 'div,minus', [0, 2], [0, 2], [0, 2]);
          lhs('/', 'div,minus', [0, 1], [0, 2], [0, 2]);
          lhs('/', 'div,minus', [0, 1], [0, 20], [0, 10]);
          lhs('/', 'div,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
          lhs('/', 'div', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('/', 'div', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('/', 'div,minus', [0, 1], [0, 20], [0, 1]);
          rhs('/', 'div,minus', [0, 2], [0, 1], [0, 2]);
          rhs('/', 'div,minus', [0, 2], [0, 2], [0, 2]);
          rhs('/', 'div,minus', [0, 1], [0, 2], [0, 2]);
          rhs('/', 'div,minus', [0, 1], [0, 20], [0, 10]);
          rhs('/', 'div,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
          rhs('/', 'reject', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('/', 'reject', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
        });
      });
    });

    describe('DIV', function() {

      describe('DIV LHS', function() {

        describe('binary with shared arg', function() {

          let both = testTernaryBinarySharedArgs.bind(undefined, '/', 'lhs', ''); // R = A @1 B, A @2 C  and  R = A @1 B, C @2 A
          let lhs = testTernaryBinarySharedArgs.bind(undefined, '/', 'lhs', 'lhs'); // R = A @1 B, A @2 C
          let rhs = testTernaryBinarySharedArgs.bind(undefined, '/', 'lhs', 'rhs'); // R = A @1 B, C @2 A

          both('&', 'div', [0, 1], [0, 1]);
          both('&', 'div', [0, 2], [0, 1]);
          both('&', 'div', [0, 2], [0, 2]);
          both('&', 'div', [0, 1], [0, 10]);
          both('&', 'div', [0, 1], [0, 0, 9, 9]);
          both('&', 'div', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('&', 'div', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!=', 'div,xor', [0, 1], [0, 1]);
          both('!=', 'div,xor', [0, 2], [0, 1]);
          both('!=', 'diff,div', [0, 2], [0, 2]);
          both('!=', 'diff,div', [0, 1], [0, 10]);
          both('!=', 'div,xor', [0, 1], [0, 0, 9, 9]);
          both('!=', 'diff,div', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!=', 'diff,div', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('->', 'div,imp', [0, 1], [0, 1]);
          lhs('->', 'div,imp', [0, 2], [0, 1]);
          lhs('->', 'div,imp', [0, 2], [0, 1]);
          lhs('->', 'div,imp', [0, 1], [0, 10]);
          lhs('->', 'div,imp', [0, 1], [0, 0, 9, 9]);
          lhs('->', 'div,imp', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('->', 'div,imp', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('->', 'div,imp', [0, 1], [0, 1]);
          rhs('->', 'div,imp', [0, 2], [0, 1]);
          rhs('->', 'div,imp', [0, 2], [0, 2]);
          rhs('->', 'div,imp', [0, 1], [0, 10]);
          rhs('->', 'div,imp', [0, 1], [0, 0, 9, 9]);
          rhs('->', 'div,imp', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('->', 'div,imp', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<', 'div', [0, 1], [0, 1]);
          lhs('<', 'div', [0, 2], [0, 1]);
          lhs('<', 'div,lt', [0, 2], [0, 2]);
          lhs('<', 'div,lt', [0, 1], [0, 10]);
          lhs('<', 'div', [0, 1], [0, 0, 9, 9]);
          lhs('<', 'div', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<', 'div', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<', 'div', [0, 1], [0, 1]);
          rhs('<', 'div', [0, 2], [0, 1]);
          rhs('<', 'div,lt', [0, 2], [0, 2]);
          rhs('<', 'div,lt', [0, 1], [0, 10]);
          rhs('<', 'div', [0, 1], [0, 0, 9, 9]);
          rhs('<', 'div', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<', 'div', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<=', 'div,imp', [0, 1], [0, 1]);
          lhs('<=', 'div,imp', [0, 2], [0, 1]);
          lhs('<=', 'div,lte', [0, 2], [0, 2]);
          lhs('<=', 'div,lte', [0, 1], [0, 10]);
          lhs('<=', 'div,imp', [0, 1], [0, 0, 9, 9]);
          lhs('<=', 'div,imp', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<=', 'div', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<=', 'div,imp', [0, 1], [0, 1]);
          rhs('<=', 'div,imp', [0, 2], [0, 1]);
          rhs('<=', 'div,lte', [0, 2], [0, 2]);
          rhs('<=', 'div,lte', [0, 1], [0, 10]);
          rhs('<=', 'div,imp', [0, 1], [0, 0, 9, 9]);
          rhs('<=', 'div', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<=', 'div,imp', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!&', 'div,nall', [0, 1], [0, 1]);
          both('!&', 'div,nall', [0, 2], [0, 1]);
          both('!&', 'div,nall', [0, 2], [0, 2]);
          both('!&', 'div,nall', [0, 1], [0, 10]);
          both('!&', 'div,nall', [0, 1], [0, 0, 9, 9]);
          both('!&', 'div,nall', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!&', 'div,nall', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('!->', 'div', [0, 1], [0, 1]);
          lhs('!->', 'div', [0, 2], [0, 1]);
          lhs('!->', 'div', [0, 2], [0, 2]);
          lhs('!->', 'div', [0, 1], [0, 10]);
          lhs('!->', 'div', [0, 1], [0, 0, 9, 9]);
          lhs('!->', 'div', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('!->', 'div', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('!->', 'div', [0, 1], [0, 1]);
          rhs('!->', 'div', [0, 2], [0, 1]);
          rhs('!->', 'div', [0, 2], [0, 2]);
          rhs('!->', 'div', [0, 1], [0, 10]);
          rhs('!->', 'div', [0, 1], [0, 0, 9, 9]);
          rhs('!->', 'div', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('!->', 'div', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!|', 'div', [0, 1], [0, 1]);
          both('!|', 'div', [0, 2], [0, 1]);
          both('!|', 'div', [0, 2], [0, 2]);
          both('!|', 'div', [0, 1], [0, 10]);
          both('!|', 'div', [0, 1], [0, 0, 9, 9]);
          both('!|', 'div', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!|', 'div', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('==', 'div', [0, 1], [0, 1]);
          both('==', 'div', [0, 2], [0, 1]);
          both('==', 'div', [0, 2], [0, 2]);
          both('==', 'div', [0, 1], [0, 10]);
          both('==', 'div', [0, 1], [0, 0, 9, 9]);
          both('==', 'div', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('==', 'div', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!^', 'div', [0, 1], [0, 1]);
          both('!^', 'div', [0, 2], [0, 1]);
          both('!^', 'div', [0, 2], [0, 2]);
          both('!^', 'div', [0, 1], [0, 10]);
          both('!^', 'div', [0, 1], [0, 0, 9, 9]);
          both('!^', 'div', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!^', 'div', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('^', 'div,xor', [0, 1], [0, 1]);
          both('^', 'div,xor', [0, 2], [0, 1]);
          both('^', 'div,xor', [0, 2], [0, 2]);
          both('^', 'div,xor', [0, 1], [0, 10]);
          both('^', 'div,xor', [0, 1], [0, 0, 9, 9]);
          both('^', 'div,xor', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('^', 'div,xor', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
        });

        describe('binary with shared result', function() {

          let both = testTernaryBinarySharedArgs.bind(undefined, '/', 'lhs', ''); // R = A @1 B, A @2 C  and  R = A @1 B, C @2 A
          let lhs = testTernaryBinarySharedArgs.bind(undefined, '/', 'lhs', 'lhs'); // R = A @1 B, A @2 C
          let rhs = testTernaryBinarySharedArgs.bind(undefined, '/', 'lhs', 'rhs'); // R = A @1 B, C @2 A

          both('&', 'div', [0, 1], [0, 1]);
          both('&', 'div', [0, 2], [0, 1]);
          both('&', 'div', [0, 2], [0, 2]);
          both('&', 'div', [0, 1], [0, 10]);
          both('&', 'div', [0, 1], [0, 0, 9, 9]);
          both('&', 'div', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('&', 'div', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!=', 'div,xor', [0, 1], [0, 1]);
          both('!=', 'div,xor', [0, 2], [0, 1]);
          both('!=', 'diff,div', [0, 2], [0, 2]);
          both('!=', 'diff,div', [0, 1], [0, 10]);
          both('!=', 'div,xor', [0, 1], [0, 0, 9, 9]);
          both('!=', 'diff,div', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!=', 'diff,div', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('->', 'div,imp', [0, 1], [0, 1]);
          lhs('->', 'div,imp', [0, 2], [0, 1]);
          lhs('->', 'div,imp', [0, 2], [0, 1]);
          lhs('->', 'div,imp', [0, 1], [0, 10]);
          lhs('->', 'div,imp', [0, 1], [0, 0, 9, 9]);
          lhs('->', 'div,imp', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('->', 'div,imp', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('->', 'div,imp', [0, 1], [0, 1]);
          rhs('->', 'div,imp', [0, 2], [0, 1]);
          rhs('->', 'div,imp', [0, 2], [0, 2]);
          rhs('->', 'div,imp', [0, 1], [0, 10]);
          rhs('->', 'div,imp', [0, 1], [0, 0, 9, 9]);
          rhs('->', 'div,imp', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('->', 'div,imp', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<', 'div', [0, 1], [0, 1]);
          lhs('<', 'div', [0, 2], [0, 1]);
          lhs('<', 'div,lt', [0, 2], [0, 2]);
          lhs('<', 'div,lt', [0, 1], [0, 10]);
          lhs('<', 'div', [0, 1], [0, 0, 9, 9]);
          lhs('<', 'div', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<', 'div', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<', 'div', [0, 1], [0, 1]);
          rhs('<', 'div', [0, 2], [0, 1]);
          rhs('<', 'div,lt', [0, 2], [0, 2]);
          rhs('<', 'div,lt', [0, 1], [0, 10]);
          rhs('<', 'div', [0, 1], [0, 0, 9, 9]);
          rhs('<', 'div', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<', 'div', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<=', 'div,imp', [0, 1], [0, 1]);
          lhs('<=', 'div,imp', [0, 2], [0, 1]);
          lhs('<=', 'div,lte', [0, 2], [0, 2]);
          lhs('<=', 'div,lte', [0, 1], [0, 10]);
          lhs('<=', 'div,imp', [0, 1], [0, 0, 9, 9]);
          lhs('<=', 'div,imp', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<=', 'div', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<=', 'div,imp', [0, 1], [0, 1]);
          rhs('<=', 'div,imp', [0, 2], [0, 1]);
          rhs('<=', 'div,lte', [0, 2], [0, 2]);
          rhs('<=', 'div,lte', [0, 1], [0, 10]);
          rhs('<=', 'div,imp', [0, 1], [0, 0, 9, 9]);
          rhs('<=', 'div', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<=', 'div,imp', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!&', 'div,nall', [0, 1], [0, 1]);
          both('!&', 'div,nall', [0, 2], [0, 1]);
          both('!&', 'div,nall', [0, 2], [0, 2]);
          both('!&', 'div,nall', [0, 1], [0, 10]);
          both('!&', 'div,nall', [0, 1], [0, 0, 9, 9]);
          both('!&', 'div,nall', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!&', 'div,nall', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('!->', 'div', [0, 1], [0, 1]);
          lhs('!->', 'div', [0, 2], [0, 1]);
          lhs('!->', 'div', [0, 2], [0, 2]);
          lhs('!->', 'div', [0, 1], [0, 10]);
          lhs('!->', 'div', [0, 1], [0, 0, 9, 9]);
          lhs('!->', 'div', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('!->', 'div', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('!->', 'div', [0, 1], [0, 1]);
          rhs('!->', 'div', [0, 2], [0, 1]);
          rhs('!->', 'div', [0, 2], [0, 2]);
          rhs('!->', 'div', [0, 1], [0, 10]);
          rhs('!->', 'div', [0, 1], [0, 0, 9, 9]);
          rhs('!->', 'div', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('!->', 'div', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!|', 'div', [0, 1], [0, 1]);
          both('!|', 'div', [0, 2], [0, 1]);
          both('!|', 'div', [0, 2], [0, 2]);
          both('!|', 'div', [0, 1], [0, 10]);
          both('!|', 'div', [0, 1], [0, 0, 9, 9]);
          both('!|', 'div', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!|', 'div', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('==', 'div', [0, 1], [0, 1]);
          both('==', 'div', [0, 2], [0, 1]);
          both('==', 'div', [0, 2], [0, 2]);
          both('==', 'div', [0, 1], [0, 10]);
          both('==', 'div', [0, 1], [0, 0, 9, 9]);
          both('==', 'div', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('==', 'div', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!^', 'div', [0, 1], [0, 1]);
          both('!^', 'div', [0, 2], [0, 1]);
          both('!^', 'div', [0, 2], [0, 2]);
          both('!^', 'div', [0, 1], [0, 10]);
          both('!^', 'div', [0, 1], [0, 0, 9, 9]);
          both('!^', 'div', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!^', 'div', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('^', 'div,xor', [0, 1], [0, 1]);
          both('^', 'div,xor', [0, 2], [0, 1]);
          both('^', 'div,xor', [0, 2], [0, 2]);
          both('^', 'div,xor', [0, 1], [0, 10]);
          both('^', 'div,xor', [0, 1], [0, 0, 9, 9]);
          both('^', 'div,xor', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('^', 'div,xor', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
        });

        describe('ternary with shared args', function() {

          let both = testTernaryTernarySharedArgs.bind(undefined, '/', 'lhs', '');          // R = A @1 B, S = A @2 C  and  R = A @1 B, S = C @2 A
          let lhs = testTernaryTernarySharedArgs.bind(undefined, '/', 'lhs', 'lhs');    // R = A @1 B, S = A @2 C
          let rhs = testTernaryTernarySharedArgs.bind(undefined, '/', 'lhs', 'rhs');    // R = A @1 B, S = C @2 A

          // R = A & B, S = A &? C
          both('&?', 'div,isall', [0, 1], [0, 1], [0, 1]);
          both('&?', 'div,isall', [0, 2], [0, 1], [0, 2]);
          both('&?', 'div,isall', [0, 2], [0, 2], [0, 2]);
          both('&?', 'div,isall', [0, 1], [0, 2], [0, 2]);
          both('&?', 'div,isall', [0, 1], [0, 1], [0, 10]);
          both('&?', 'div,isall', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('&?', 'div,isall', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('&?', 'div,isall', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('==?', 'div,issame', [0, 1], [0, 1], [0, 1]);
          both('==?', 'div,issame', [0, 2], [0, 1], [0, 2]);
          both('==?', 'div,issame', [0, 2], [0, 2], [0, 2]);
          both('==?', 'div,issame', [0, 1], [0, 2], [0, 2]);
          both('==?', 'div,issame', [0, 1], [0, 1], [0, 10]);
          both('==?', 'div,issame', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('==?', 'div,issame', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('==?', 'div,issame', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!=?', 'div,isdiff', [0, 1], [0, 1], [0, 1]);
          both('!=?', 'div,isdiff', [0, 2], [0, 1], [0, 2]);
          both('!=?', 'div,isdiff', [0, 2], [0, 2], [0, 2]);
          both('!=?', 'div,isdiff', [0, 1], [0, 2], [0, 2]);
          both('!=?', 'div,isdiff', [0, 1], [0, 1], [0, 10]);
          both('!=?', 'div,isdiff', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('!=?', 'div,isdiff', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!=?', 'div,isdiff', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<?', 'div,islt', [0, 1], [0, 1], [0, 1]);
          lhs('<?', 'div,islt', [0, 2], [0, 1], [0, 2]);
          lhs('<?', 'div,islt', [0, 2], [0, 2], [0, 2]);
          lhs('<?', 'div,islt', [0, 1], [0, 2], [0, 2]);
          lhs('<?', 'div,islt', [0, 1], [0, 1], [0, 10]);
          lhs('<?', 'div,islt', [0, 1], [0, 1], [0, 0, 9, 9]);
          lhs('<?', 'div,islt', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<?', 'div,islt', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<?', 'div,islt', [0, 1], [0, 1], [0, 1]);
          rhs('<?', 'div,islt', [0, 2], [0, 1], [0, 2]);
          rhs('<?', 'div,islt', [0, 2], [0, 2], [0, 2]);
          rhs('<?', 'div,islt', [0, 1], [0, 2], [0, 2]);
          rhs('<?', 'div,islt', [0, 1], [0, 1], [0, 10]);
          rhs('<?', 'div,islt', [0, 1], [0, 1], [0, 0, 9, 9]);
          rhs('<?', 'div,islt', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<?', 'div,islt', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<=?', 'div,islte', [0, 1], [0, 1], [0, 1]);
          lhs('<=?', 'div,islte', [0, 2], [0, 1], [0, 2]);
          lhs('<=?', 'div,islte', [0, 2], [0, 2], [0, 2]);
          lhs('<=?', 'div,islte', [0, 1], [0, 2], [0, 2]);
          lhs('<=?', 'div,islte', [0, 1], [0, 1], [0, 10]);
          lhs('<=?', 'div,islte', [0, 1], [0, 1], [0, 0, 9, 9]);
          lhs('<=?', 'div,islte', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<=?', 'div,islte', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<=?', 'div,islte', [0, 1], [0, 1], [0, 1]);
          rhs('<=?', 'div,islte', [0, 2], [0, 1], [0, 2]);
          rhs('<=?', 'div,islte', [0, 2], [0, 2], [0, 2]);
          rhs('<=?', 'div,islte', [0, 1], [0, 2], [0, 2]);
          rhs('<=?', 'div,islte', [0, 1], [0, 1], [0, 10]);
          rhs('<=?', 'div,islte', [0, 1], [0, 1], [0, 0, 9, 9]);
          rhs('<=?', 'div,islte', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<=?', 'div,islte', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!&?', 'div,isnall', [0, 1], [0, 1], [0, 1]);
          both('!&?', 'div,isnall', [0, 2], [0, 1], [0, 2]);
          both('!&?', 'div,isnall', [0, 2], [0, 2], [0, 2]);
          both('!&?', 'div,isnall', [0, 1], [0, 2], [0, 2]);
          both('!&?', 'div,isnall', [0, 1], [0, 1], [0, 10]);
          both('!&?', 'div,isnall', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('!&?', 'div,isnall', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!&?', 'div,isnall', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('|?', 'div,issome', [0, 1], [0, 1], [0, 1]);
          both('|?', 'div,issome', [0, 2], [0, 1], [0, 2]);
          both('|?', 'div,issome', [0, 2], [0, 2], [0, 2]);
          both('|?', 'div,issome', [0, 1], [0, 2], [0, 2]);
          both('|?', 'div,issome', [0, 1], [0, 1], [0, 10]);
          both('|?', 'div,issome', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('|?', 'div,issome', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('|?', 'div,issome', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!|?', 'div,isnone', [0, 1], [0, 1], [0, 1]);
          both('!|?', 'div,isnone', [0, 2], [0, 1], [0, 2]);
          both('!|?', 'div,isnone', [0, 2], [0, 2], [0, 2]);
          both('!|?', 'div,isnone', [0, 1], [0, 2], [0, 2]);
          both('!|?', 'div,isnone', [0, 1], [0, 1], [0, 10]);
          both('!|?', 'div,isnone', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('!|?', 'div,isnone', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!|?', 'div,isnone', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('+', 'div,issome', [0, 1], [0, 20], [0, 1]);
          both('+', 'div,sum', [0, 2], [0, 1], [0, 2]);
          both('+', 'div,sum', [0, 2], [0, 2], [0, 2]);
          both('+', 'div,sum', [0, 1], [0, 2], [0, 2]);
          both('+', 'div,issome', [0, 1], [0, 20], [0, 10]);
          both('+', 'div,issome', [0, 1], [0, 20], [0, 0, 9, 9]);
          both('+', 'div,issome', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('+', 'div,issome', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('-', 'div,minus', [0, 1], [0, 20], [0, 1]);
          lhs('-', 'div,minus', [0, 2], [0, 1], [0, 2]);
          lhs('-', 'div,minus', [0, 2], [0, 2], [0, 2]);
          lhs('-', 'div,minus', [0, 1], [0, 2], [0, 2]);
          lhs('-', 'div,minus', [0, 1], [0, 20], [0, 10]);
          lhs('-', 'div,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
          lhs('-', 'div', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('-', 'div,minus', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('-', 'div,minus', [0, 1], [0, 20], [0, 1]);
          rhs('-', 'div,minus', [0, 2], [0, 1], [0, 2]);
          rhs('-', 'div,minus', [0, 2], [0, 2], [0, 2]);
          rhs('-', 'div,minus', [0, 1], [0, 2], [0, 2]);
          rhs('-', 'div,minus', [0, 1], [0, 20], [0, 10]);
          rhs('-', 'div,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
          rhs('-', 'div,minus', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('-', 'div', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('*', 'div,product', [0, 1], [0, 100], [0, 1]);
          both('*', 'div,product', [0, 2], [0, 1], [0, 2]);
          both('*', 'div,product', [0, 2], [0, 2], [0, 2]);
          both('*', 'div,product', [0, 1], [0, 2], [0, 2]);
          both('*', 'div,product', [0, 1], [0, 100], [0, 10]);
          both('*', 'div,product', [0, 1], [0, 100], [0, 0, 9, 9]);
          both('*', 'div,product', [0, 1], [0, 100], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('*', 'div,product', [0, 1], [0, 100], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('/', 'div,div', [0, 1], [0, 20], [0, 1]);
          lhs('/', 'div,div', [0, 2], [0, 1], [0, 2]);
          lhs('/', 'div,div', [0, 2], [0, 2], [0, 2]);
          lhs('/', 'div,div', [0, 1], [0, 2], [0, 2]);
          lhs('/', 'div,div', [0, 1], [0, 20], [0, 10]);
          lhs('/', 'div,div', [0, 1], [0, 20], [0, 0, 9, 9]);
          lhs('/', 'div,div', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('/', 'div,div', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('/', 'div,div', [0, 1], [0, 20], [0, 1]);
          rhs('/', 'div,div', [0, 2], [0, 1], [0, 2]);
          rhs('/', 'div,div', [0, 2], [0, 2], [0, 2]);
          rhs('/', 'div,div', [0, 1], [0, 2], [0, 2]);
          rhs('/', 'div,div', [0, 1], [0, 20], [0, 10]);
          rhs('/', 'div,div', [0, 1], [0, 20], [0, 0, 9, 9]);
          rhs('/', 'div,div', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('/', 'div,div', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
        });

        describe('ternary with shared R', function() {

          let both = testTernaryTernarySharedArgs.bind(undefined, '/', 'lhs', '');          // R = A @1 B, S = A @2 C  and  R = A @1 B, S = C @2 A
          let lhs = testTernaryTernarySharedArgs.bind(undefined, '/', 'lhs', 'lhs');    // R = A @1 B, S = A @2 C
          let rhs = testTernaryTernarySharedArgs.bind(undefined, '/', 'lhs', 'rhs');    // R = A @1 B, S = C @2 A

          // R = A & B, S = A &? C
          both('&?', 'div,isall', [0, 1], [0, 1], [0, 1]);
          both('&?', 'div,isall', [0, 2], [0, 1], [0, 2]);
          both('&?', 'div,isall', [0, 2], [0, 2], [0, 2]);
          both('&?', 'div,isall', [0, 1], [0, 2], [0, 2]);
          both('&?', 'div,isall', [0, 1], [0, 1], [0, 10]);
          both('&?', 'div,isall', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('&?', 'div,isall', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('&?', 'div,isall', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('==?', 'div,issame', [0, 1], [0, 1], [0, 1]);
          both('==?', 'div,issame', [0, 2], [0, 1], [0, 2]);
          both('==?', 'div,issame', [0, 2], [0, 2], [0, 2]);
          both('==?', 'div,issame', [0, 1], [0, 2], [0, 2]);
          both('==?', 'div,issame', [0, 1], [0, 1], [0, 10]);
          both('==?', 'div,issame', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('==?', 'div,issame', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('==?', 'div,issame', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!=?', 'div,isdiff', [0, 1], [0, 1], [0, 1]);
          both('!=?', 'div,isdiff', [0, 2], [0, 1], [0, 2]);
          both('!=?', 'div,isdiff', [0, 2], [0, 2], [0, 2]);
          both('!=?', 'div,isdiff', [0, 1], [0, 2], [0, 2]);
          both('!=?', 'div,isdiff', [0, 1], [0, 1], [0, 10]);
          both('!=?', 'div,isdiff', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('!=?', 'div,isdiff', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!=?', 'div,isdiff', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<?', 'div,islt', [0, 1], [0, 1], [0, 1]);
          lhs('<?', 'div,islt', [0, 2], [0, 1], [0, 2]);
          lhs('<?', 'div,islt', [0, 2], [0, 2], [0, 2]);
          lhs('<?', 'div,islt', [0, 1], [0, 2], [0, 2]);
          lhs('<?', 'div,islt', [0, 1], [0, 1], [0, 10]);
          lhs('<?', 'div,islt', [0, 1], [0, 1], [0, 0, 9, 9]);
          lhs('<?', 'div,islt', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<?', 'div,islt', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<?', 'div,islt', [0, 1], [0, 1], [0, 1]);
          rhs('<?', 'div,islt', [0, 2], [0, 1], [0, 2]);
          rhs('<?', 'div,islt', [0, 2], [0, 2], [0, 2]);
          rhs('<?', 'div,islt', [0, 1], [0, 2], [0, 2]);
          rhs('<?', 'div,islt', [0, 1], [0, 1], [0, 10]);
          rhs('<?', 'div,islt', [0, 1], [0, 1], [0, 0, 9, 9]);
          rhs('<?', 'div,islt', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<?', 'div,islt', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<=?', 'div,islte', [0, 1], [0, 1], [0, 1]);
          lhs('<=?', 'div,islte', [0, 2], [0, 1], [0, 2]);
          lhs('<=?', 'div,islte', [0, 2], [0, 2], [0, 2]);
          lhs('<=?', 'div,islte', [0, 1], [0, 2], [0, 2]);
          lhs('<=?', 'div,islte', [0, 1], [0, 1], [0, 10]);
          lhs('<=?', 'div,islte', [0, 1], [0, 1], [0, 0, 9, 9]);
          lhs('<=?', 'div,islte', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<=?', 'div,islte', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<=?', 'div,islte', [0, 1], [0, 1], [0, 1]);
          rhs('<=?', 'div,islte', [0, 2], [0, 1], [0, 2]);
          rhs('<=?', 'div,islte', [0, 2], [0, 2], [0, 2]);
          rhs('<=?', 'div,islte', [0, 1], [0, 2], [0, 2]);
          rhs('<=?', 'div,islte', [0, 1], [0, 1], [0, 10]);
          rhs('<=?', 'div,islte', [0, 1], [0, 1], [0, 0, 9, 9]);
          rhs('<=?', 'div,islte', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<=?', 'div,islte', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!&?', 'div,isnall', [0, 1], [0, 1], [0, 1]);
          both('!&?', 'div,isnall', [0, 2], [0, 1], [0, 2]);
          both('!&?', 'div,isnall', [0, 2], [0, 2], [0, 2]);
          both('!&?', 'div,isnall', [0, 1], [0, 2], [0, 2]);
          both('!&?', 'div,isnall', [0, 1], [0, 1], [0, 10]);
          both('!&?', 'div,isnall', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('!&?', 'div,isnall', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!&?', 'div,isnall', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('|?', 'div,issome', [0, 1], [0, 1], [0, 1]);
          both('|?', 'div,issome', [0, 2], [0, 1], [0, 2]);
          both('|?', 'div,issome', [0, 2], [0, 2], [0, 2]);
          both('|?', 'div,issome', [0, 1], [0, 2], [0, 2]);
          both('|?', 'div,issome', [0, 1], [0, 1], [0, 10]);
          both('|?', 'div,issome', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('|?', 'div,issome', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('|?', 'div,issome', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!|?', 'div,isnone', [0, 1], [0, 1], [0, 1]);
          both('!|?', 'div,isnone', [0, 2], [0, 1], [0, 2]);
          both('!|?', 'div,isnone', [0, 2], [0, 2], [0, 2]);
          both('!|?', 'div,isnone', [0, 1], [0, 2], [0, 2]);
          both('!|?', 'div,isnone', [0, 1], [0, 1], [0, 10]);
          both('!|?', 'div,isnone', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('!|?', 'div,isnone', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!|?', 'div,isnone', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('+', 'div,issome', [0, 1], [0, 20], [0, 1]);
          both('+', 'div,sum', [0, 2], [0, 1], [0, 2]);
          both('+', 'div,sum', [0, 2], [0, 2], [0, 2]);
          both('+', 'div,sum', [0, 1], [0, 2], [0, 2]);
          both('+', 'div,issome', [0, 1], [0, 20], [0, 10]);
          both('+', 'div,issome', [0, 1], [0, 20], [0, 0, 9, 9]);
          both('+', 'div,issome', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('+', 'div,issome', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('-', 'div,minus', [0, 1], [0, 20], [0, 1]);
          lhs('-', 'div,minus', [0, 2], [0, 1], [0, 2]);
          lhs('-', 'div,minus', [0, 2], [0, 2], [0, 2]);
          lhs('-', 'div,minus', [0, 1], [0, 2], [0, 2]);
          lhs('-', 'div,minus', [0, 1], [0, 20], [0, 10]);
          lhs('-', 'div,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
          lhs('-', 'div', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('-', 'div,minus', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('-', 'div,minus', [0, 1], [0, 20], [0, 1]);
          rhs('-', 'div,minus', [0, 2], [0, 1], [0, 2]);
          rhs('-', 'div,minus', [0, 2], [0, 2], [0, 2]);
          rhs('-', 'div,minus', [0, 1], [0, 2], [0, 2]);
          rhs('-', 'div,minus', [0, 1], [0, 20], [0, 10]);
          rhs('-', 'div,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
          rhs('-', 'div,minus', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('-', 'div', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('*', 'div,product', [0, 1], [0, 100], [0, 1]);
          both('*', 'div,product', [0, 2], [0, 1], [0, 2]);
          both('*', 'div,product', [0, 2], [0, 2], [0, 2]);
          both('*', 'div,product', [0, 1], [0, 2], [0, 2]);
          both('*', 'div,product', [0, 1], [0, 100], [0, 10]);
          both('*', 'div,product', [0, 1], [0, 100], [0, 0, 9, 9]);
          both('*', 'div,product', [0, 1], [0, 100], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('*', 'div,product', [0, 1], [0, 100], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('/', 'div,div', [0, 1], [0, 20], [0, 1]);
          lhs('/', 'div,div', [0, 2], [0, 1], [0, 2]);
          lhs('/', 'div,div', [0, 2], [0, 2], [0, 2]);
          lhs('/', 'div,div', [0, 1], [0, 2], [0, 2]);
          lhs('/', 'div,div', [0, 1], [0, 20], [0, 10]);
          lhs('/', 'div,div', [0, 1], [0, 20], [0, 0, 9, 9]);
          lhs('/', 'div,div', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('/', 'div,div', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('/', 'div,div', [0, 1], [0, 20], [0, 1]);
          rhs('/', 'div,div', [0, 2], [0, 1], [0, 2]);
          rhs('/', 'div,div', [0, 2], [0, 2], [0, 2]);
          rhs('/', 'div,div', [0, 1], [0, 2], [0, 2]);
          rhs('/', 'div,div', [0, 1], [0, 20], [0, 10]);
          rhs('/', 'div,div', [0, 1], [0, 20], [0, 0, 9, 9]);
          rhs('/', 'div,div', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('/', 'div,div', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
        });

        describe('ternary with shared S', function() {

          let both = testTernaryTernarySharedArgs.bind(undefined, '/', 'lhs', '');          // R = A @1 B, S = A @2 C  and  R = A @1 B, S = C @2 A
          let lhs = testTernaryTernarySharedArgs.bind(undefined, '/', 'lhs', 'lhs');    // R = A @1 B, S = A @2 C
          let rhs = testTernaryTernarySharedArgs.bind(undefined, '/', 'lhs', 'rhs');    // R = A @1 B, S = C @2 A

          // R = A & B, S = A &? C
          both('&?', 'div,isall', [0, 1], [0, 1], [0, 1]);
          both('&?', 'div,isall', [0, 2], [0, 1], [0, 2]);
          both('&?', 'div,isall', [0, 2], [0, 2], [0, 2]);
          both('&?', 'div,isall', [0, 1], [0, 2], [0, 2]);
          both('&?', 'div,isall', [0, 1], [0, 1], [0, 10]);
          both('&?', 'div,isall', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('&?', 'div,isall', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('&?', 'div,isall', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('==?', 'div,issame', [0, 1], [0, 1], [0, 1]);
          both('==?', 'div,issame', [0, 2], [0, 1], [0, 2]);
          both('==?', 'div,issame', [0, 2], [0, 2], [0, 2]);
          both('==?', 'div,issame', [0, 1], [0, 2], [0, 2]);
          both('==?', 'div,issame', [0, 1], [0, 1], [0, 10]);
          both('==?', 'div,issame', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('==?', 'div,issame', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('==?', 'div,issame', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!=?', 'div,isdiff', [0, 1], [0, 1], [0, 1]);
          both('!=?', 'div,isdiff', [0, 2], [0, 1], [0, 2]);
          both('!=?', 'div,isdiff', [0, 2], [0, 2], [0, 2]);
          both('!=?', 'div,isdiff', [0, 1], [0, 2], [0, 2]);
          both('!=?', 'div,isdiff', [0, 1], [0, 1], [0, 10]);
          both('!=?', 'div,isdiff', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('!=?', 'div,isdiff', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!=?', 'div,isdiff', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<?', 'div,islt', [0, 1], [0, 1], [0, 1]);
          lhs('<?', 'div,islt', [0, 2], [0, 1], [0, 2]);
          lhs('<?', 'div,islt', [0, 2], [0, 2], [0, 2]);
          lhs('<?', 'div,islt', [0, 1], [0, 2], [0, 2]);
          lhs('<?', 'div,islt', [0, 1], [0, 1], [0, 10]);
          lhs('<?', 'div,islt', [0, 1], [0, 1], [0, 0, 9, 9]);
          lhs('<?', 'div,islt', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<?', 'div,islt', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<?', 'div,islt', [0, 1], [0, 1], [0, 1]);
          rhs('<?', 'div,islt', [0, 2], [0, 1], [0, 2]);
          rhs('<?', 'div,islt', [0, 2], [0, 2], [0, 2]);
          rhs('<?', 'div,islt', [0, 1], [0, 2], [0, 2]);
          rhs('<?', 'div,islt', [0, 1], [0, 1], [0, 10]);
          rhs('<?', 'div,islt', [0, 1], [0, 1], [0, 0, 9, 9]);
          rhs('<?', 'div,islt', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<?', 'div,islt', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<=?', 'div,islte', [0, 1], [0, 1], [0, 1]);
          lhs('<=?', 'div,islte', [0, 2], [0, 1], [0, 2]);
          lhs('<=?', 'div,islte', [0, 2], [0, 2], [0, 2]);
          lhs('<=?', 'div,islte', [0, 1], [0, 2], [0, 2]);
          lhs('<=?', 'div,islte', [0, 1], [0, 1], [0, 10]);
          lhs('<=?', 'div,islte', [0, 1], [0, 1], [0, 0, 9, 9]);
          lhs('<=?', 'div,islte', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<=?', 'div,islte', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<=?', 'div,islte', [0, 1], [0, 1], [0, 1]);
          rhs('<=?', 'div,islte', [0, 2], [0, 1], [0, 2]);
          rhs('<=?', 'div,islte', [0, 2], [0, 2], [0, 2]);
          rhs('<=?', 'div,islte', [0, 1], [0, 2], [0, 2]);
          rhs('<=?', 'div,islte', [0, 1], [0, 1], [0, 10]);
          rhs('<=?', 'div,islte', [0, 1], [0, 1], [0, 0, 9, 9]);
          rhs('<=?', 'div,islte', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<=?', 'div,islte', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!&?', 'div,isnall', [0, 1], [0, 1], [0, 1]);
          both('!&?', 'div,isnall', [0, 2], [0, 1], [0, 2]);
          both('!&?', 'div,isnall', [0, 2], [0, 2], [0, 2]);
          both('!&?', 'div,isnall', [0, 1], [0, 2], [0, 2]);
          both('!&?', 'div,isnall', [0, 1], [0, 1], [0, 10]);
          both('!&?', 'div,isnall', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('!&?', 'div,isnall', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!&?', 'div,isnall', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('|?', 'div,issome', [0, 1], [0, 1], [0, 1]);
          both('|?', 'div,issome', [0, 2], [0, 1], [0, 2]);
          both('|?', 'div,issome', [0, 2], [0, 2], [0, 2]);
          both('|?', 'div,issome', [0, 1], [0, 2], [0, 2]);
          both('|?', 'div,issome', [0, 1], [0, 1], [0, 10]);
          both('|?', 'div,issome', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('|?', 'div,issome', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('|?', 'div,issome', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!|?', 'div,isnone', [0, 1], [0, 1], [0, 1]);
          both('!|?', 'div,isnone', [0, 2], [0, 1], [0, 2]);
          both('!|?', 'div,isnone', [0, 2], [0, 2], [0, 2]);
          both('!|?', 'div,isnone', [0, 1], [0, 2], [0, 2]);
          both('!|?', 'div,isnone', [0, 1], [0, 1], [0, 10]);
          both('!|?', 'div,isnone', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('!|?', 'div,isnone', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!|?', 'div,isnone', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('+', 'div,issome', [0, 1], [0, 20], [0, 1]);
          both('+', 'div,sum', [0, 2], [0, 1], [0, 2]);
          both('+', 'div,sum', [0, 2], [0, 2], [0, 2]);
          both('+', 'div,sum', [0, 1], [0, 2], [0, 2]);
          both('+', 'div,issome', [0, 1], [0, 20], [0, 10]);
          both('+', 'div,issome', [0, 1], [0, 20], [0, 0, 9, 9]);
          both('+', 'div,issome', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('+', 'div,issome', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('-', 'div,minus', [0, 1], [0, 20], [0, 1]);
          lhs('-', 'div,minus', [0, 2], [0, 1], [0, 2]);
          lhs('-', 'div,minus', [0, 2], [0, 2], [0, 2]);
          lhs('-', 'div,minus', [0, 1], [0, 2], [0, 2]);
          lhs('-', 'div,minus', [0, 1], [0, 20], [0, 10]);
          lhs('-', 'div,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
          lhs('-', 'div', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('-', 'div,minus', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('-', 'div,minus', [0, 1], [0, 20], [0, 1]);
          rhs('-', 'div,minus', [0, 2], [0, 1], [0, 2]);
          rhs('-', 'div,minus', [0, 2], [0, 2], [0, 2]);
          rhs('-', 'div,minus', [0, 1], [0, 2], [0, 2]);
          rhs('-', 'div,minus', [0, 1], [0, 20], [0, 10]);
          rhs('-', 'div,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
          rhs('-', 'div,minus', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('-', 'div', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('*', 'div,product', [0, 1], [0, 100], [0, 1]);
          both('*', 'div,product', [0, 2], [0, 1], [0, 2]);
          both('*', 'div,product', [0, 2], [0, 2], [0, 2]);
          both('*', 'div,product', [0, 1], [0, 2], [0, 2]);
          both('*', 'div,product', [0, 1], [0, 100], [0, 10]);
          both('*', 'div,product', [0, 1], [0, 100], [0, 0, 9, 9]);
          both('*', 'div,product', [0, 1], [0, 100], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('*', 'div,product', [0, 1], [0, 100], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('/', 'div,div', [0, 1], [0, 20], [0, 1]);
          lhs('/', 'div,div', [0, 2], [0, 1], [0, 2]);
          lhs('/', 'div,div', [0, 2], [0, 2], [0, 2]);
          lhs('/', 'div,div', [0, 1], [0, 2], [0, 2]);
          lhs('/', 'div,div', [0, 1], [0, 20], [0, 10]);
          lhs('/', 'div,div', [0, 1], [0, 20], [0, 0, 9, 9]);
          lhs('/', 'div,div', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('/', 'div,div', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('/', 'div,div', [0, 1], [0, 20], [0, 1]);
          rhs('/', 'div,div', [0, 2], [0, 1], [0, 2]);
          rhs('/', 'div,div', [0, 2], [0, 2], [0, 2]);
          rhs('/', 'div,div', [0, 1], [0, 2], [0, 2]);
          rhs('/', 'div,div', [0, 1], [0, 20], [0, 10]);
          rhs('/', 'div,div', [0, 1], [0, 20], [0, 0, 9, 9]);
          rhs('/', 'div,div', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('/', 'div,div', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
        });

        describe('ternary with shared results', function() {

          let both = testTernaryTernarySharedArgs.bind(undefined, '/', 'lhs', '');          // R = A @1 B, S = A @2 C  and  R = A @1 B, S = C @2 A
          let lhs = testTernaryTernarySharedArgs.bind(undefined, '/', 'lhs', 'lhs');    // R = A @1 B, S = A @2 C
          let rhs = testTernaryTernarySharedArgs.bind(undefined, '/', 'lhs', 'rhs');    // R = A @1 B, S = C @2 A

          // R = A & B, S = A &? C
          both('&?', 'div,isall', [0, 1], [0, 1], [0, 1]);
          both('&?', 'div,isall', [0, 2], [0, 1], [0, 2]);
          both('&?', 'div,isall', [0, 2], [0, 2], [0, 2]);
          both('&?', 'div,isall', [0, 1], [0, 2], [0, 2]);
          both('&?', 'div,isall', [0, 1], [0, 1], [0, 10]);
          both('&?', 'div,isall', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('&?', 'div,isall', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('&?', 'div,isall', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('==?', 'div,issame', [0, 1], [0, 1], [0, 1]);
          both('==?', 'div,issame', [0, 2], [0, 1], [0, 2]);
          both('==?', 'div,issame', [0, 2], [0, 2], [0, 2]);
          both('==?', 'div,issame', [0, 1], [0, 2], [0, 2]);
          both('==?', 'div,issame', [0, 1], [0, 1], [0, 10]);
          both('==?', 'div,issame', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('==?', 'div,issame', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('==?', 'div,issame', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!=?', 'div,isdiff', [0, 1], [0, 1], [0, 1]);
          both('!=?', 'div,isdiff', [0, 2], [0, 1], [0, 2]);
          both('!=?', 'div,isdiff', [0, 2], [0, 2], [0, 2]);
          both('!=?', 'div,isdiff', [0, 1], [0, 2], [0, 2]);
          both('!=?', 'div,isdiff', [0, 1], [0, 1], [0, 10]);
          both('!=?', 'div,isdiff', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('!=?', 'div,isdiff', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!=?', 'div,isdiff', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<?', 'div,islt', [0, 1], [0, 1], [0, 1]);
          lhs('<?', 'div,islt', [0, 2], [0, 1], [0, 2]);
          lhs('<?', 'div,islt', [0, 2], [0, 2], [0, 2]);
          lhs('<?', 'div,islt', [0, 1], [0, 2], [0, 2]);
          lhs('<?', 'div,islt', [0, 1], [0, 1], [0, 10]);
          lhs('<?', 'div,islt', [0, 1], [0, 1], [0, 0, 9, 9]);
          lhs('<?', 'div,islt', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<?', 'div,islt', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<?', 'div,islt', [0, 1], [0, 1], [0, 1]);
          rhs('<?', 'div,islt', [0, 2], [0, 1], [0, 2]);
          rhs('<?', 'div,islt', [0, 2], [0, 2], [0, 2]);
          rhs('<?', 'div,islt', [0, 1], [0, 2], [0, 2]);
          rhs('<?', 'div,islt', [0, 1], [0, 1], [0, 10]);
          rhs('<?', 'div,islt', [0, 1], [0, 1], [0, 0, 9, 9]);
          rhs('<?', 'div,islt', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<?', 'div,islt', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<=?', 'div,islte', [0, 1], [0, 1], [0, 1]);
          lhs('<=?', 'div,islte', [0, 2], [0, 1], [0, 2]);
          lhs('<=?', 'div,islte', [0, 2], [0, 2], [0, 2]);
          lhs('<=?', 'div,islte', [0, 1], [0, 2], [0, 2]);
          lhs('<=?', 'div,islte', [0, 1], [0, 1], [0, 10]);
          lhs('<=?', 'div,islte', [0, 1], [0, 1], [0, 0, 9, 9]);
          lhs('<=?', 'div,islte', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<=?', 'div,islte', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<=?', 'div,islte', [0, 1], [0, 1], [0, 1]);
          rhs('<=?', 'div,islte', [0, 2], [0, 1], [0, 2]);
          rhs('<=?', 'div,islte', [0, 2], [0, 2], [0, 2]);
          rhs('<=?', 'div,islte', [0, 1], [0, 2], [0, 2]);
          rhs('<=?', 'div,islte', [0, 1], [0, 1], [0, 10]);
          rhs('<=?', 'div,islte', [0, 1], [0, 1], [0, 0, 9, 9]);
          rhs('<=?', 'div,islte', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<=?', 'div,islte', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!&?', 'div,isnall', [0, 1], [0, 1], [0, 1]);
          both('!&?', 'div,isnall', [0, 2], [0, 1], [0, 2]);
          both('!&?', 'div,isnall', [0, 2], [0, 2], [0, 2]);
          both('!&?', 'div,isnall', [0, 1], [0, 2], [0, 2]);
          both('!&?', 'div,isnall', [0, 1], [0, 1], [0, 10]);
          both('!&?', 'div,isnall', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('!&?', 'div,isnall', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!&?', 'div,isnall', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('|?', 'div,issome', [0, 1], [0, 1], [0, 1]);
          both('|?', 'div,issome', [0, 2], [0, 1], [0, 2]);
          both('|?', 'div,issome', [0, 2], [0, 2], [0, 2]);
          both('|?', 'div,issome', [0, 1], [0, 2], [0, 2]);
          both('|?', 'div,issome', [0, 1], [0, 1], [0, 10]);
          both('|?', 'div,issome', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('|?', 'div,issome', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('|?', 'div,issome', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!|?', 'div,isnone', [0, 1], [0, 1], [0, 1]);
          both('!|?', 'div,isnone', [0, 2], [0, 1], [0, 2]);
          both('!|?', 'div,isnone', [0, 2], [0, 2], [0, 2]);
          both('!|?', 'div,isnone', [0, 1], [0, 2], [0, 2]);
          both('!|?', 'div,isnone', [0, 1], [0, 1], [0, 10]);
          both('!|?', 'div,isnone', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('!|?', 'div,isnone', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!|?', 'div,isnone', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('+', 'div,issome', [0, 1], [0, 20], [0, 1]);
          both('+', 'div,sum', [0, 2], [0, 1], [0, 2]);
          both('+', 'div,sum', [0, 2], [0, 2], [0, 2]);
          both('+', 'div,sum', [0, 1], [0, 2], [0, 2]);
          both('+', 'div,issome', [0, 1], [0, 20], [0, 10]);
          both('+', 'div,issome', [0, 1], [0, 20], [0, 0, 9, 9]);
          both('+', 'div,issome', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('+', 'div,issome', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('-', 'div,minus', [0, 1], [0, 20], [0, 1]);
          lhs('-', 'div,minus', [0, 2], [0, 1], [0, 2]);
          lhs('-', 'div,minus', [0, 2], [0, 2], [0, 2]);
          lhs('-', 'div,minus', [0, 1], [0, 2], [0, 2]);
          lhs('-', 'div,minus', [0, 1], [0, 20], [0, 10]);
          lhs('-', 'div,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
          lhs('-', 'div', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('-', 'div,minus', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('-', 'div,minus', [0, 1], [0, 20], [0, 1]);
          rhs('-', 'div,minus', [0, 2], [0, 1], [0, 2]);
          rhs('-', 'div,minus', [0, 2], [0, 2], [0, 2]);
          rhs('-', 'div,minus', [0, 1], [0, 2], [0, 2]);
          rhs('-', 'div,minus', [0, 1], [0, 20], [0, 10]);
          rhs('-', 'div,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
          rhs('-', 'div,minus', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('-', 'div', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('*', 'div,product', [0, 1], [0, 100], [0, 1]);
          both('*', 'div,product', [0, 2], [0, 1], [0, 2]);
          both('*', 'div,product', [0, 2], [0, 2], [0, 2]);
          both('*', 'div,product', [0, 1], [0, 2], [0, 2]);
          both('*', 'div,product', [0, 1], [0, 100], [0, 10]);
          both('*', 'div,product', [0, 1], [0, 100], [0, 0, 9, 9]);
          both('*', 'div,product', [0, 1], [0, 100], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('*', 'div,product', [0, 1], [0, 100], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('/', 'div,div', [0, 1], [0, 20], [0, 1]);
          lhs('/', 'div,div', [0, 2], [0, 1], [0, 2]);
          lhs('/', 'div,div', [0, 2], [0, 2], [0, 2]);
          lhs('/', 'div,div', [0, 1], [0, 2], [0, 2]);
          lhs('/', 'div,div', [0, 1], [0, 20], [0, 10]);
          lhs('/', 'div,div', [0, 1], [0, 20], [0, 0, 9, 9]);
          lhs('/', 'div,div', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('/', 'div,div', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('/', 'div,div', [0, 1], [0, 20], [0, 1]);
          rhs('/', 'div,div', [0, 2], [0, 1], [0, 2]);
          rhs('/', 'div,div', [0, 2], [0, 2], [0, 2]);
          rhs('/', 'div,div', [0, 1], [0, 2], [0, 2]);
          rhs('/', 'div,div', [0, 1], [0, 20], [0, 10]);
          rhs('/', 'div,div', [0, 1], [0, 20], [0, 0, 9, 9]);
          rhs('/', 'div,div', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('/', 'div,div', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
        });
      });

      describe('DIV RHS', function() {

        describe('binary with shared arg', function() {

          let both = testTernaryBinarySharedArgs.bind(undefined, '/', 'rhs', ''); // R = A @1 B, A @2 C  and  R = A @1 B, C @2 A
          let lhs = testTernaryBinarySharedArgs.bind(undefined, '/', 'rhs', 'lhs'); // R = A @1 B, A @2 C
          let rhs = testTernaryBinarySharedArgs.bind(undefined, '/', 'rhs', 'rhs'); // R = A @1 B, C @2 A

          both('&', 'div', [0, 1], [0, 1]);
          both('&', 'div', [0, 2], [0, 1]);
          both('&', 'div', [0, 2], [0, 2]);
          both('&', 'div', [0, 1], [0, 10]);
          both('&', 'div', [0, 1], [0, 0, 9, 9]);
          both('&', 'div', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('&', 'div', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!=', 'div,xor', [0, 1], [0, 1]);
          both('!=', 'div,xor', [0, 2], [0, 1]);
          both('!=', 'diff,div', [0, 2], [0, 2]);
          both('!=', 'diff,div', [0, 1], [0, 10]);
          both('!=', 'div,xor', [0, 1], [0, 0, 9, 9]);
          both('!=', 'diff,div', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!=', 'diff,div', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('->', 'div,imp', [0, 1], [0, 1]);
          lhs('->', 'div,imp', [0, 2], [0, 1]);
          lhs('->', 'div,imp', [0, 2], [0, 1]);
          lhs('->', 'div,imp', [0, 1], [0, 10]);
          lhs('->', 'div,imp', [0, 1], [0, 0, 9, 9]);
          lhs('->', 'div,imp', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('->', 'div,imp', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('->', 'div,imp', [0, 1], [0, 1]);
          rhs('->', 'div,imp', [0, 2], [0, 1]);
          rhs('->', 'div,imp', [0, 2], [0, 2]);
          rhs('->', 'div,imp', [0, 1], [0, 10]);
          rhs('->', 'div,imp', [0, 1], [0, 0, 9, 9]);
          rhs('->', 'div,imp', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('->', 'div,imp', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<', 'reject', [0, 1], [0, 1]);
          lhs('<', 'reject', [0, 2], [0, 1]);
          lhs('<', 'div,lt', [0, 2], [0, 2]);
          lhs('<', 'div,lt', [0, 1], [0, 10]);
          lhs('<', 'reject', [0, 1], [0, 0, 9, 9]);
          lhs('<', 'div', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<', 'reject', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<', 'div', [0, 1], [0, 1]);
          rhs('<', 'div', [0, 2], [0, 1]);
          rhs('<', 'div,lt', [0, 2], [0, 2]);
          rhs('<', 'div,lt', [0, 1], [0, 10]);
          rhs('<', 'div', [0, 1], [0, 0, 9, 9]);
          rhs('<', 'div', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<', 'div', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<=', 'div,imp', [0, 1], [0, 1]);
          lhs('<=', 'div,imp', [0, 2], [0, 1]);
          lhs('<=', 'div,lte', [0, 2], [0, 2]);
          lhs('<=', 'div,lte', [0, 1], [0, 10]);
          lhs('<=', 'div,imp', [0, 1], [0, 0, 9, 9]);
          lhs('<=', 'div,imp', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<=', 'reject', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<=', 'div,imp', [0, 1], [0, 1]);
          rhs('<=', 'div,imp', [0, 2], [0, 1]);
          rhs('<=', 'div,lte', [0, 2], [0, 2]);
          rhs('<=', 'div,lte', [0, 1], [0, 10]);
          rhs('<=', 'div,imp', [0, 1], [0, 0, 9, 9]);
          rhs('<=', 'div', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<=', 'div,imp', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!&', 'div,nall', [0, 1], [0, 1]);
          both('!&', 'div,nall', [0, 2], [0, 1]);
          both('!&', 'div,nall', [0, 2], [0, 2]);
          both('!&', 'div,nall', [0, 1], [0, 10]);
          both('!&', 'div,nall', [0, 1], [0, 0, 9, 9]);
          both('!&', 'div,nall', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!&', 'div,nall', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('!->', 'div', [0, 1], [0, 1]);
          lhs('!->', 'div', [0, 2], [0, 1]);
          lhs('!->', 'div', [0, 2], [0, 2]);
          lhs('!->', 'div', [0, 1], [0, 10]);
          lhs('!->', 'div', [0, 1], [0, 0, 9, 9]);
          lhs('!->', 'div', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('!->', 'div', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('!->', 'reject', [0, 1], [0, 1]);
          rhs('!->', 'reject', [0, 2], [0, 1]);
          rhs('!->', 'reject', [0, 2], [0, 2]);
          rhs('!->', 'reject', [0, 1], [0, 10]);
          rhs('!->', 'reject', [0, 1], [0, 0, 9, 9]);
          rhs('!->', 'reject', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('!->', 'reject', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!|', 'reject', [0, 1], [0, 1]);
          both('!|', 'reject', [0, 2], [0, 1]);
          both('!|', 'reject', [0, 2], [0, 2]);
          both('!|', 'reject', [0, 1], [0, 10]);
          both('!|', 'reject', [0, 1], [0, 0, 9, 9]);
          both('!|', 'reject', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!|', 'reject', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('==', 'div', [0, 1], [0, 1]);
          both('==', 'div', [0, 2], [0, 1]);
          both('==', 'div', [0, 2], [0, 2]);
          both('==', 'div', [0, 1], [0, 10]);
          both('==', 'div', [0, 1], [0, 0, 9, 9]);
          both('==', 'reject', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('==', 'reject', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!^', 'div', [0, 1], [0, 1]);
          both('!^', 'div', [0, 2], [0, 1]);
          both('!^', 'div', [0, 2], [0, 2]);
          both('!^', 'div', [0, 1], [0, 10]);
          both('!^', 'div', [0, 1], [0, 0, 9, 9]);
          both('!^', 'div', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!^', 'div', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('^', 'div,xor', [0, 1], [0, 1]);
          both('^', 'div,xor', [0, 2], [0, 1]);
          both('^', 'div,xor', [0, 2], [0, 2]);
          both('^', 'div,xor', [0, 1], [0, 10]);
          both('^', 'div,xor', [0, 1], [0, 0, 9, 9]);
          both('^', 'div,xor', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('^', 'div,xor', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
        });

        describe('binary with shared result', function() {

          let both = testTernaryBinarySharedArgs.bind(undefined, '/', 'rhs', ''); // R = A @1 B, A @2 C  and  R = A @1 B, C @2 A
          let lhs = testTernaryBinarySharedArgs.bind(undefined, '/', 'rhs', 'lhs'); // R = A @1 B, A @2 C
          let rhs = testTernaryBinarySharedArgs.bind(undefined, '/', 'rhs', 'rhs'); // R = A @1 B, C @2 A

          both('&', 'div', [0, 1], [0, 1]);
          both('&', 'div', [0, 2], [0, 1]);
          both('&', 'div', [0, 2], [0, 2]);
          both('&', 'div', [0, 1], [0, 10]);
          both('&', 'div', [0, 1], [0, 0, 9, 9]);
          both('&', 'div', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('&', 'div', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!=', 'div,xor', [0, 1], [0, 1]);
          both('!=', 'div,xor', [0, 2], [0, 1]);
          both('!=', 'diff,div', [0, 2], [0, 2]);
          both('!=', 'diff,div', [0, 1], [0, 10]);
          both('!=', 'div,xor', [0, 1], [0, 0, 9, 9]);
          both('!=', 'diff,div', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!=', 'diff,div', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('->', 'div,imp', [0, 1], [0, 1]);
          lhs('->', 'div,imp', [0, 2], [0, 1]);
          lhs('->', 'div,imp', [0, 2], [0, 1]);
          lhs('->', 'div,imp', [0, 1], [0, 10]);
          lhs('->', 'div,imp', [0, 1], [0, 0, 9, 9]);
          lhs('->', 'div,imp', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('->', 'div,imp', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('->', 'div,imp', [0, 1], [0, 1]);
          rhs('->', 'div,imp', [0, 2], [0, 1]);
          rhs('->', 'div,imp', [0, 2], [0, 2]);
          rhs('->', 'div,imp', [0, 1], [0, 10]);
          rhs('->', 'div,imp', [0, 1], [0, 0, 9, 9]);
          rhs('->', 'div,imp', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('->', 'div,imp', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<', 'reject', [0, 1], [0, 1]);
          lhs('<', 'reject', [0, 2], [0, 1]);
          lhs('<', 'div,lt', [0, 2], [0, 2]);
          lhs('<', 'div,lt', [0, 1], [0, 10]);
          lhs('<', 'reject', [0, 1], [0, 0, 9, 9]);
          lhs('<', 'div', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<', 'reject', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<', 'div', [0, 1], [0, 1]);
          rhs('<', 'div', [0, 2], [0, 1]);
          rhs('<', 'div,lt', [0, 2], [0, 2]);
          rhs('<', 'div,lt', [0, 1], [0, 10]);
          rhs('<', 'div', [0, 1], [0, 0, 9, 9]);
          rhs('<', 'div', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<', 'div', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<=', 'div,imp', [0, 1], [0, 1]);
          lhs('<=', 'div,imp', [0, 2], [0, 1]);
          lhs('<=', 'div,lte', [0, 2], [0, 2]);
          lhs('<=', 'div,lte', [0, 1], [0, 10]);
          lhs('<=', 'div,imp', [0, 1], [0, 0, 9, 9]);
          lhs('<=', 'div,imp', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<=', 'reject', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<=', 'div,imp', [0, 1], [0, 1]);
          rhs('<=', 'div,imp', [0, 2], [0, 1]);
          rhs('<=', 'div,lte', [0, 2], [0, 2]);
          rhs('<=', 'div,lte', [0, 1], [0, 10]);
          rhs('<=', 'div,imp', [0, 1], [0, 0, 9, 9]);
          rhs('<=', 'div', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<=', 'div,imp', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!&', 'div,nall', [0, 1], [0, 1]);
          both('!&', 'div,nall', [0, 2], [0, 1]);
          both('!&', 'div,nall', [0, 2], [0, 2]);
          both('!&', 'div,nall', [0, 1], [0, 10]);
          both('!&', 'div,nall', [0, 1], [0, 0, 9, 9]);
          both('!&', 'div,nall', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!&', 'div,nall', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('!->', 'div', [0, 1], [0, 1]);
          lhs('!->', 'div', [0, 2], [0, 1]);
          lhs('!->', 'div', [0, 2], [0, 2]);
          lhs('!->', 'div', [0, 1], [0, 10]);
          lhs('!->', 'div', [0, 1], [0, 0, 9, 9]);
          lhs('!->', 'div', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('!->', 'div', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('!->', 'reject', [0, 1], [0, 1]);
          rhs('!->', 'reject', [0, 2], [0, 1]);
          rhs('!->', 'reject', [0, 2], [0, 2]);
          rhs('!->', 'reject', [0, 1], [0, 10]);
          rhs('!->', 'reject', [0, 1], [0, 0, 9, 9]);
          rhs('!->', 'reject', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('!->', 'reject', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!|', 'reject', [0, 1], [0, 1]);
          both('!|', 'reject', [0, 2], [0, 1]);
          both('!|', 'reject', [0, 2], [0, 2]);
          both('!|', 'reject', [0, 1], [0, 10]);
          both('!|', 'reject', [0, 1], [0, 0, 9, 9]);
          both('!|', 'reject', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!|', 'reject', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('==', 'div', [0, 1], [0, 1]);
          both('==', 'div', [0, 2], [0, 1]);
          both('==', 'div', [0, 2], [0, 2]);
          both('==', 'div', [0, 1], [0, 10]);
          both('==', 'div', [0, 1], [0, 0, 9, 9]);
          both('==', 'reject', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('==', 'reject', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!^', 'div', [0, 1], [0, 1]);
          both('!^', 'div', [0, 2], [0, 1]);
          both('!^', 'div', [0, 2], [0, 2]);
          both('!^', 'div', [0, 1], [0, 10]);
          both('!^', 'div', [0, 1], [0, 0, 9, 9]);
          both('!^', 'div', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!^', 'div', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('^', 'div,xor', [0, 1], [0, 1]);
          both('^', 'div,xor', [0, 2], [0, 1]);
          both('^', 'div,xor', [0, 2], [0, 2]);
          both('^', 'div,xor', [0, 1], [0, 10]);
          both('^', 'div,xor', [0, 1], [0, 0, 9, 9]);
          both('^', 'div,xor', [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('^', 'div,xor', [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
        });

        describe('ternary with shared args', function() {

          let both = testTernaryTernarySharedArgs.bind(undefined, '/', 'rhs', '');          // R = A @1 B, S = A @2 C  and  R = A @1 B, S = C @2 A
          let lhs = testTernaryTernarySharedArgs.bind(undefined, '/', 'rhs', 'lhs');    // R = A @1 B, S = A @2 C
          let rhs = testTernaryTernarySharedArgs.bind(undefined, '/', 'rhs', 'rhs');    // R = A @1 B, S = C @2 A

          // R = A & B, S = A &? C
          both('&?', 'div,isall', [0, 1], [0, 1], [0, 1]);
          both('&?', 'div,isall', [0, 2], [0, 1], [0, 2]);
          both('&?', 'div,isall', [0, 2], [0, 2], [0, 2]);
          both('&?', 'div,isall', [0, 1], [0, 2], [0, 2]);
          both('&?', 'div,isall', [0, 1], [0, 1], [0, 10]);
          both('&?', 'div,isall', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('&?', 'div,isall', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('&?', 'div,isall', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('==?', 'div,issame', [0, 1], [0, 1], [0, 1]);
          both('==?', 'div,issame', [0, 2], [0, 1], [0, 2]);
          both('==?', 'div,issame', [0, 2], [0, 2], [0, 2]);
          both('==?', 'div,issame', [0, 1], [0, 2], [0, 2]);
          both('==?', 'div,issame', [0, 1], [0, 1], [0, 10]);
          both('==?', 'div,issame', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('==?', 'div,issame', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('==?', 'div,issame', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!=?', 'div,isdiff', [0, 1], [0, 1], [0, 1]);
          both('!=?', 'div,isdiff', [0, 2], [0, 1], [0, 2]);
          both('!=?', 'div,isdiff', [0, 2], [0, 2], [0, 2]);
          both('!=?', 'div,isdiff', [0, 1], [0, 2], [0, 2]);
          both('!=?', 'div,isdiff', [0, 1], [0, 1], [0, 10]);
          both('!=?', 'div,isdiff', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('!=?', 'div,isdiff', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!=?', 'div,isdiff', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<?', 'div,islt', [0, 1], [0, 1], [0, 1]);
          lhs('<?', 'div,islt', [0, 2], [0, 1], [0, 2]);
          lhs('<?', 'div,islt', [0, 2], [0, 2], [0, 2]);
          lhs('<?', 'div,islt', [0, 1], [0, 2], [0, 2]);
          lhs('<?', 'div,islt', [0, 1], [0, 1], [0, 10]);
          lhs('<?', 'div,islt', [0, 1], [0, 1], [0, 0, 9, 9]);
          lhs('<?', 'div,islt', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<?', 'div,islt', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<?', 'div,islt', [0, 1], [0, 1], [0, 1]);
          rhs('<?', 'div,islt', [0, 2], [0, 1], [0, 2]);
          rhs('<?', 'div,islt', [0, 2], [0, 2], [0, 2]);
          rhs('<?', 'div,islt', [0, 1], [0, 2], [0, 2]);
          rhs('<?', 'div,islt', [0, 1], [0, 1], [0, 10]);
          rhs('<?', 'div,islt', [0, 1], [0, 1], [0, 0, 9, 9]);
          rhs('<?', 'div,islt', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<?', 'div,islt', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<=?', 'div,islte', [0, 1], [0, 1], [0, 1]);
          lhs('<=?', 'div,islte', [0, 2], [0, 1], [0, 2]);
          lhs('<=?', 'div,islte', [0, 2], [0, 2], [0, 2]);
          lhs('<=?', 'div,islte', [0, 1], [0, 2], [0, 2]);
          lhs('<=?', 'div,islte', [0, 1], [0, 1], [0, 10]);
          lhs('<=?', 'div,islte', [0, 1], [0, 1], [0, 0, 9, 9]);
          lhs('<=?', 'div,islte', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<=?', 'div,islte', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<=?', 'div,islte', [0, 1], [0, 1], [0, 1]);
          rhs('<=?', 'div,islte', [0, 2], [0, 1], [0, 2]);
          rhs('<=?', 'div,islte', [0, 2], [0, 2], [0, 2]);
          rhs('<=?', 'div,islte', [0, 1], [0, 2], [0, 2]);
          rhs('<=?', 'div,islte', [0, 1], [0, 1], [0, 10]);
          rhs('<=?', 'div,islte', [0, 1], [0, 1], [0, 0, 9, 9]);
          rhs('<=?', 'div,islte', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<=?', 'div,islte', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!&?', 'div,isnall', [0, 1], [0, 1], [0, 1]);
          both('!&?', 'div,isnall', [0, 2], [0, 1], [0, 2]);
          both('!&?', 'div,isnall', [0, 2], [0, 2], [0, 2]);
          both('!&?', 'div,isnall', [0, 1], [0, 2], [0, 2]);
          both('!&?', 'div,isnall', [0, 1], [0, 1], [0, 10]);
          both('!&?', 'div,isnall', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('!&?', 'div,isnall', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!&?', 'div,isnall', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('|?', 'div,issome', [0, 1], [0, 1], [0, 1]);
          both('|?', 'div,issome', [0, 2], [0, 1], [0, 2]);
          both('|?', 'div,issome', [0, 2], [0, 2], [0, 2]);
          both('|?', 'div,issome', [0, 1], [0, 2], [0, 2]);
          both('|?', 'div,issome', [0, 1], [0, 1], [0, 10]);
          both('|?', 'div,issome', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('|?', 'div,issome', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('|?', 'div,issome', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!|?', 'div,isnone', [0, 1], [0, 1], [0, 1]);
          both('!|?', 'div,isnone', [0, 2], [0, 1], [0, 2]);
          both('!|?', 'div,isnone', [0, 2], [0, 2], [0, 2]);
          both('!|?', 'div,isnone', [0, 1], [0, 2], [0, 2]);
          both('!|?', 'div,isnone', [0, 1], [0, 1], [0, 10]);
          both('!|?', 'div,isnone', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('!|?', 'div,isnone', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!|?', 'div,isnone', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('+', 'div,issome', [0, 1], [0, 20], [0, 1]);
          both('+', 'div,sum', [0, 2], [0, 1], [0, 2]);
          both('+', 'div,sum', [0, 2], [0, 2], [0, 2]);
          both('+', 'div,sum', [0, 1], [0, 2], [0, 2]);
          both('+', 'div,issome', [0, 1], [0, 20], [0, 10]);
          both('+', 'div,issome', [0, 1], [0, 20], [0, 0, 9, 9]);
          both('+', 'div,issome', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('+', 'div,issome', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('-', 'div,minus', [0, 1], [0, 20], [0, 1]);
          lhs('-', 'div,minus', [0, 2], [0, 1], [0, 2]);
          lhs('-', 'div,minus', [0, 2], [0, 2], [0, 2]);
          lhs('-', 'div,minus', [0, 1], [0, 2], [0, 2]);
          lhs('-', 'div,minus', [0, 1], [0, 20], [0, 10]);
          lhs('-', 'div,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
          lhs('-', 'div', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('-', 'div,minus', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('-', 'div,minus', [0, 1], [0, 20], [0, 1]);
          rhs('-', 'div,minus', [0, 2], [0, 1], [0, 2]);
          rhs('-', 'div,minus', [0, 2], [0, 2], [0, 2]);
          rhs('-', 'div,minus', [0, 1], [0, 2], [0, 2]);
          rhs('-', 'div,minus', [0, 1], [0, 20], [0, 10]);
          rhs('-', 'div,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
          rhs('-', 'div,minus', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('-', 'reject', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('*', 'div,product', [0, 1], [0, 100], [0, 1]);
          both('*', 'div,product', [0, 2], [0, 1], [0, 2]);
          both('*', 'div,product', [0, 2], [0, 2], [0, 2]);
          both('*', 'div,product', [0, 1], [0, 2], [0, 2]);
          both('*', 'div,product', [0, 1], [0, 100], [0, 10]);
          both('*', 'div,product', [0, 1], [0, 100], [0, 0, 9, 9]);
          both('*', 'div,product', [0, 1], [0, 100], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('*', 'div,product', [0, 1], [0, 100], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('/', 'div,div', [0, 1], [0, 20], [0, 1]);
          lhs('/', 'div,div', [0, 2], [0, 1], [0, 2]);
          lhs('/', 'div,div', [0, 2], [0, 2], [0, 2]);
          lhs('/', 'div,div', [0, 1], [0, 2], [0, 2]);
          lhs('/', 'div,div', [0, 1], [0, 20], [0, 10]);
          lhs('/', 'div,div', [0, 1], [0, 20], [0, 0, 9, 9]);
          lhs('/', 'div,div', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('/', 'div,div', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('/', 'div,div', [0, 1], [0, 20], [0, 1]);
          rhs('/', 'div,div', [0, 2], [0, 1], [0, 2]);
          rhs('/', 'div,div', [0, 2], [0, 2], [0, 2]);
          rhs('/', 'div,div', [0, 1], [0, 2], [0, 2]);
          rhs('/', 'div,div', [0, 1], [0, 20], [0, 10]);
          rhs('/', 'div,div', [0, 1], [0, 20], [0, 0, 9, 9]);
          rhs('/', 'div,div', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('/', 'div,div', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
        });

        describe('ternary with shared R', function() {

          let both = testTernaryTernarySharedArgs.bind(undefined, '/', 'rhs', '');          // R = A @1 B, S = A @2 C  and  R = A @1 B, S = C @2 A
          let lhs = testTernaryTernarySharedArgs.bind(undefined, '/', 'rhs', 'lhs');    // R = A @1 B, S = A @2 C
          let rhs = testTernaryTernarySharedArgs.bind(undefined, '/', 'rhs', 'rhs');    // R = A @1 B, S = C @2 A

          // R = A & B, S = A &? C
          both('&?', 'div,isall', [0, 1], [0, 1], [0, 1]);
          both('&?', 'div,isall', [0, 2], [0, 1], [0, 2]);
          both('&?', 'div,isall', [0, 2], [0, 2], [0, 2]);
          both('&?', 'div,isall', [0, 1], [0, 2], [0, 2]);
          both('&?', 'div,isall', [0, 1], [0, 1], [0, 10]);
          both('&?', 'div,isall', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('&?', 'div,isall', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('&?', 'div,isall', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('==?', 'div,issame', [0, 1], [0, 1], [0, 1]);
          both('==?', 'div,issame', [0, 2], [0, 1], [0, 2]);
          both('==?', 'div,issame', [0, 2], [0, 2], [0, 2]);
          both('==?', 'div,issame', [0, 1], [0, 2], [0, 2]);
          both('==?', 'div,issame', [0, 1], [0, 1], [0, 10]);
          both('==?', 'div,issame', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('==?', 'div,issame', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('==?', 'div,issame', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!=?', 'div,isdiff', [0, 1], [0, 1], [0, 1]);
          both('!=?', 'div,isdiff', [0, 2], [0, 1], [0, 2]);
          both('!=?', 'div,isdiff', [0, 2], [0, 2], [0, 2]);
          both('!=?', 'div,isdiff', [0, 1], [0, 2], [0, 2]);
          both('!=?', 'div,isdiff', [0, 1], [0, 1], [0, 10]);
          both('!=?', 'div,isdiff', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('!=?', 'div,isdiff', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!=?', 'div,isdiff', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<?', 'div,islt', [0, 1], [0, 1], [0, 1]);
          lhs('<?', 'div,islt', [0, 2], [0, 1], [0, 2]);
          lhs('<?', 'div,islt', [0, 2], [0, 2], [0, 2]);
          lhs('<?', 'div,islt', [0, 1], [0, 2], [0, 2]);
          lhs('<?', 'div,islt', [0, 1], [0, 1], [0, 10]);
          lhs('<?', 'div,islt', [0, 1], [0, 1], [0, 0, 9, 9]);
          lhs('<?', 'div,islt', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<?', 'div,islt', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<?', 'div,islt', [0, 1], [0, 1], [0, 1]);
          rhs('<?', 'div,islt', [0, 2], [0, 1], [0, 2]);
          rhs('<?', 'div,islt', [0, 2], [0, 2], [0, 2]);
          rhs('<?', 'div,islt', [0, 1], [0, 2], [0, 2]);
          rhs('<?', 'div,islt', [0, 1], [0, 1], [0, 10]);
          rhs('<?', 'div,islt', [0, 1], [0, 1], [0, 0, 9, 9]);
          rhs('<?', 'div,islt', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<?', 'div,islt', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<=?', 'div,islte', [0, 1], [0, 1], [0, 1]);
          lhs('<=?', 'div,islte', [0, 2], [0, 1], [0, 2]);
          lhs('<=?', 'div,islte', [0, 2], [0, 2], [0, 2]);
          lhs('<=?', 'div,islte', [0, 1], [0, 2], [0, 2]);
          lhs('<=?', 'div,islte', [0, 1], [0, 1], [0, 10]);
          lhs('<=?', 'div,islte', [0, 1], [0, 1], [0, 0, 9, 9]);
          lhs('<=?', 'div,islte', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<=?', 'div,islte', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<=?', 'div,islte', [0, 1], [0, 1], [0, 1]);
          rhs('<=?', 'div,islte', [0, 2], [0, 1], [0, 2]);
          rhs('<=?', 'div,islte', [0, 2], [0, 2], [0, 2]);
          rhs('<=?', 'div,islte', [0, 1], [0, 2], [0, 2]);
          rhs('<=?', 'div,islte', [0, 1], [0, 1], [0, 10]);
          rhs('<=?', 'div,islte', [0, 1], [0, 1], [0, 0, 9, 9]);
          rhs('<=?', 'div,islte', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<=?', 'div,islte', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!&?', 'div,isnall', [0, 1], [0, 1], [0, 1]);
          both('!&?', 'div,isnall', [0, 2], [0, 1], [0, 2]);
          both('!&?', 'div,isnall', [0, 2], [0, 2], [0, 2]);
          both('!&?', 'div,isnall', [0, 1], [0, 2], [0, 2]);
          both('!&?', 'div,isnall', [0, 1], [0, 1], [0, 10]);
          both('!&?', 'div,isnall', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('!&?', 'div,isnall', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!&?', 'div,isnall', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('|?', 'div,issome', [0, 1], [0, 1], [0, 1]);
          both('|?', 'div,issome', [0, 2], [0, 1], [0, 2]);
          both('|?', 'div,issome', [0, 2], [0, 2], [0, 2]);
          both('|?', 'div,issome', [0, 1], [0, 2], [0, 2]);
          both('|?', 'div,issome', [0, 1], [0, 1], [0, 10]);
          both('|?', 'div,issome', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('|?', 'div,issome', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('|?', 'div,issome', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!|?', 'div,isnone', [0, 1], [0, 1], [0, 1]);
          both('!|?', 'div,isnone', [0, 2], [0, 1], [0, 2]);
          both('!|?', 'div,isnone', [0, 2], [0, 2], [0, 2]);
          both('!|?', 'div,isnone', [0, 1], [0, 2], [0, 2]);
          both('!|?', 'div,isnone', [0, 1], [0, 1], [0, 10]);
          both('!|?', 'div,isnone', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('!|?', 'div,isnone', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!|?', 'div,isnone', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('+', 'div,issome', [0, 1], [0, 20], [0, 1]);
          both('+', 'div,sum', [0, 2], [0, 1], [0, 2]);
          both('+', 'div,sum', [0, 2], [0, 2], [0, 2]);
          both('+', 'div,sum', [0, 1], [0, 2], [0, 2]);
          both('+', 'div,issome', [0, 1], [0, 20], [0, 10]);
          both('+', 'div,issome', [0, 1], [0, 20], [0, 0, 9, 9]);
          both('+', 'div,issome', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('+', 'div,issome', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('-', 'div,minus', [0, 1], [0, 20], [0, 1]);
          lhs('-', 'div,minus', [0, 2], [0, 1], [0, 2]);
          lhs('-', 'div,minus', [0, 2], [0, 2], [0, 2]);
          lhs('-', 'div,minus', [0, 1], [0, 2], [0, 2]);
          lhs('-', 'div,minus', [0, 1], [0, 20], [0, 10]);
          lhs('-', 'div,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
          lhs('-', 'div', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('-', 'div,minus', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('-', 'div,minus', [0, 1], [0, 20], [0, 1]);
          rhs('-', 'div,minus', [0, 2], [0, 1], [0, 2]);
          rhs('-', 'div,minus', [0, 2], [0, 2], [0, 2]);
          rhs('-', 'div,minus', [0, 1], [0, 2], [0, 2]);
          rhs('-', 'div,minus', [0, 1], [0, 20], [0, 10]);
          rhs('-', 'div,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
          rhs('-', 'div,minus', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('-', 'reject', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('*', 'div,product', [0, 1], [0, 100], [0, 1]);
          both('*', 'div,product', [0, 2], [0, 1], [0, 2]);
          both('*', 'div,product', [0, 2], [0, 2], [0, 2]);
          both('*', 'div,product', [0, 1], [0, 2], [0, 2]);
          both('*', 'div,product', [0, 1], [0, 100], [0, 10]);
          both('*', 'div,product', [0, 1], [0, 100], [0, 0, 9, 9]);
          both('*', 'div,product', [0, 1], [0, 100], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('*', 'div,product', [0, 1], [0, 100], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('/', 'div,div', [0, 1], [0, 20], [0, 1]);
          lhs('/', 'div,div', [0, 2], [0, 1], [0, 2]);
          lhs('/', 'div,div', [0, 2], [0, 2], [0, 2]);
          lhs('/', 'div,div', [0, 1], [0, 2], [0, 2]);
          lhs('/', 'div,div', [0, 1], [0, 20], [0, 10]);
          lhs('/', 'div,div', [0, 1], [0, 20], [0, 0, 9, 9]);
          lhs('/', 'div,div', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('/', 'div,div', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('/', 'div,div', [0, 1], [0, 20], [0, 1]);
          rhs('/', 'div,div', [0, 2], [0, 1], [0, 2]);
          rhs('/', 'div,div', [0, 2], [0, 2], [0, 2]);
          rhs('/', 'div,div', [0, 1], [0, 2], [0, 2]);
          rhs('/', 'div,div', [0, 1], [0, 20], [0, 10]);
          rhs('/', 'div,div', [0, 1], [0, 20], [0, 0, 9, 9]);
          rhs('/', 'div,div', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('/', 'div,div', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
        });

        describe('ternary with shared S', function() {

          let both = testTernaryTernarySharedArgs.bind(undefined, '/', 'rhs', '');          // R = A @1 B, S = A @2 C  and  R = A @1 B, S = C @2 A
          let lhs = testTernaryTernarySharedArgs.bind(undefined, '/', 'rhs', 'lhs');    // R = A @1 B, S = A @2 C
          let rhs = testTernaryTernarySharedArgs.bind(undefined, '/', 'rhs', 'rhs');    // R = A @1 B, S = C @2 A

          // R = A & B, S = A &? C
          both('&?', 'div,isall', [0, 1], [0, 1], [0, 1]);
          both('&?', 'div,isall', [0, 2], [0, 1], [0, 2]);
          both('&?', 'div,isall', [0, 2], [0, 2], [0, 2]);
          both('&?', 'div,isall', [0, 1], [0, 2], [0, 2]);
          both('&?', 'div,isall', [0, 1], [0, 1], [0, 10]);
          both('&?', 'div,isall', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('&?', 'div,isall', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('&?', 'div,isall', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('==?', 'div,issame', [0, 1], [0, 1], [0, 1]);
          both('==?', 'div,issame', [0, 2], [0, 1], [0, 2]);
          both('==?', 'div,issame', [0, 2], [0, 2], [0, 2]);
          both('==?', 'div,issame', [0, 1], [0, 2], [0, 2]);
          both('==?', 'div,issame', [0, 1], [0, 1], [0, 10]);
          both('==?', 'div,issame', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('==?', 'div,issame', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('==?', 'div,issame', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!=?', 'div,isdiff', [0, 1], [0, 1], [0, 1]);
          both('!=?', 'div,isdiff', [0, 2], [0, 1], [0, 2]);
          both('!=?', 'div,isdiff', [0, 2], [0, 2], [0, 2]);
          both('!=?', 'div,isdiff', [0, 1], [0, 2], [0, 2]);
          both('!=?', 'div,isdiff', [0, 1], [0, 1], [0, 10]);
          both('!=?', 'div,isdiff', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('!=?', 'div,isdiff', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!=?', 'div,isdiff', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<?', 'div,islt', [0, 1], [0, 1], [0, 1]);
          lhs('<?', 'div,islt', [0, 2], [0, 1], [0, 2]);
          lhs('<?', 'div,islt', [0, 2], [0, 2], [0, 2]);
          lhs('<?', 'div,islt', [0, 1], [0, 2], [0, 2]);
          lhs('<?', 'div,islt', [0, 1], [0, 1], [0, 10]);
          lhs('<?', 'div,islt', [0, 1], [0, 1], [0, 0, 9, 9]);
          lhs('<?', 'div,islt', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<?', 'div,islt', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<?', 'div,islt', [0, 1], [0, 1], [0, 1]);
          rhs('<?', 'div,islt', [0, 2], [0, 1], [0, 2]);
          rhs('<?', 'div,islt', [0, 2], [0, 2], [0, 2]);
          rhs('<?', 'div,islt', [0, 1], [0, 2], [0, 2]);
          rhs('<?', 'div,islt', [0, 1], [0, 1], [0, 10]);
          rhs('<?', 'div,islt', [0, 1], [0, 1], [0, 0, 9, 9]);
          rhs('<?', 'div,islt', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<?', 'div,islt', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<=?', 'div,islte', [0, 1], [0, 1], [0, 1]);
          lhs('<=?', 'div,islte', [0, 2], [0, 1], [0, 2]);
          lhs('<=?', 'div,islte', [0, 2], [0, 2], [0, 2]);
          lhs('<=?', 'div,islte', [0, 1], [0, 2], [0, 2]);
          lhs('<=?', 'div,islte', [0, 1], [0, 1], [0, 10]);
          lhs('<=?', 'div,islte', [0, 1], [0, 1], [0, 0, 9, 9]);
          lhs('<=?', 'div,islte', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<=?', 'div,islte', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<=?', 'div,islte', [0, 1], [0, 1], [0, 1]);
          rhs('<=?', 'div,islte', [0, 2], [0, 1], [0, 2]);
          rhs('<=?', 'div,islte', [0, 2], [0, 2], [0, 2]);
          rhs('<=?', 'div,islte', [0, 1], [0, 2], [0, 2]);
          rhs('<=?', 'div,islte', [0, 1], [0, 1], [0, 10]);
          rhs('<=?', 'div,islte', [0, 1], [0, 1], [0, 0, 9, 9]);
          rhs('<=?', 'div,islte', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<=?', 'div,islte', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!&?', 'div,isnall', [0, 1], [0, 1], [0, 1]);
          both('!&?', 'div,isnall', [0, 2], [0, 1], [0, 2]);
          both('!&?', 'div,isnall', [0, 2], [0, 2], [0, 2]);
          both('!&?', 'div,isnall', [0, 1], [0, 2], [0, 2]);
          both('!&?', 'div,isnall', [0, 1], [0, 1], [0, 10]);
          both('!&?', 'div,isnall', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('!&?', 'div,isnall', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!&?', 'div,isnall', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('|?', 'div,issome', [0, 1], [0, 1], [0, 1]);
          both('|?', 'div,issome', [0, 2], [0, 1], [0, 2]);
          both('|?', 'div,issome', [0, 2], [0, 2], [0, 2]);
          both('|?', 'div,issome', [0, 1], [0, 2], [0, 2]);
          both('|?', 'div,issome', [0, 1], [0, 1], [0, 10]);
          both('|?', 'div,issome', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('|?', 'div,issome', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('|?', 'div,issome', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!|?', 'div,isnone', [0, 1], [0, 1], [0, 1]);
          both('!|?', 'div,isnone', [0, 2], [0, 1], [0, 2]);
          both('!|?', 'div,isnone', [0, 2], [0, 2], [0, 2]);
          both('!|?', 'div,isnone', [0, 1], [0, 2], [0, 2]);
          both('!|?', 'div,isnone', [0, 1], [0, 1], [0, 10]);
          both('!|?', 'div,isnone', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('!|?', 'div,isnone', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!|?', 'div,isnone', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('+', 'div,issome', [0, 1], [0, 20], [0, 1]);
          both('+', 'div,sum', [0, 2], [0, 1], [0, 2]);
          both('+', 'div,sum', [0, 2], [0, 2], [0, 2]);
          both('+', 'div,sum', [0, 1], [0, 2], [0, 2]);
          both('+', 'div,issome', [0, 1], [0, 20], [0, 10]);
          both('+', 'div,issome', [0, 1], [0, 20], [0, 0, 9, 9]);
          both('+', 'div,issome', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('+', 'div,issome', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('-', 'div,minus', [0, 1], [0, 20], [0, 1]);
          lhs('-', 'div,minus', [0, 2], [0, 1], [0, 2]);
          lhs('-', 'div,minus', [0, 2], [0, 2], [0, 2]);
          lhs('-', 'div,minus', [0, 1], [0, 2], [0, 2]);
          lhs('-', 'div,minus', [0, 1], [0, 20], [0, 10]);
          lhs('-', 'div,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
          lhs('-', 'div', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('-', 'div,minus', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('-', 'div,minus', [0, 1], [0, 20], [0, 1]);
          rhs('-', 'div,minus', [0, 2], [0, 1], [0, 2]);
          rhs('-', 'div,minus', [0, 2], [0, 2], [0, 2]);
          rhs('-', 'div,minus', [0, 1], [0, 2], [0, 2]);
          rhs('-', 'div,minus', [0, 1], [0, 20], [0, 10]);
          rhs('-', 'div,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
          rhs('-', 'div,minus', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('-', 'reject', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('*', 'div,product', [0, 1], [0, 100], [0, 1]);
          both('*', 'div,product', [0, 2], [0, 1], [0, 2]);
          both('*', 'div,product', [0, 2], [0, 2], [0, 2]);
          both('*', 'div,product', [0, 1], [0, 2], [0, 2]);
          both('*', 'div,product', [0, 1], [0, 100], [0, 10]);
          both('*', 'div,product', [0, 1], [0, 100], [0, 0, 9, 9]);
          both('*', 'div,product', [0, 1], [0, 100], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('*', 'div,product', [0, 1], [0, 100], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('/', 'div,div', [0, 1], [0, 20], [0, 1]);
          lhs('/', 'div,div', [0, 2], [0, 1], [0, 2]);
          lhs('/', 'div,div', [0, 2], [0, 2], [0, 2]);
          lhs('/', 'div,div', [0, 1], [0, 2], [0, 2]);
          lhs('/', 'div,div', [0, 1], [0, 20], [0, 10]);
          lhs('/', 'div,div', [0, 1], [0, 20], [0, 0, 9, 9]);
          lhs('/', 'div,div', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('/', 'div,div', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('/', 'div,div', [0, 1], [0, 20], [0, 1]);
          rhs('/', 'div,div', [0, 2], [0, 1], [0, 2]);
          rhs('/', 'div,div', [0, 2], [0, 2], [0, 2]);
          rhs('/', 'div,div', [0, 1], [0, 2], [0, 2]);
          rhs('/', 'div,div', [0, 1], [0, 20], [0, 10]);
          rhs('/', 'div,div', [0, 1], [0, 20], [0, 0, 9, 9]);
          rhs('/', 'div,div', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('/', 'div,div', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
        });

        describe('ternary with shared results', function() {

          let both = testTernaryTernarySharedArgs.bind(undefined, '/', 'rhs', '');          // R = A @1 B, S = A @2 C  and  R = A @1 B, S = C @2 A
          let lhs = testTernaryTernarySharedArgs.bind(undefined, '/', 'rhs', 'lhs');    // R = A @1 B, S = A @2 C
          let rhs = testTernaryTernarySharedArgs.bind(undefined, '/', 'rhs', 'rhs');    // R = A @1 B, S = C @2 A

          // R = A & B, S = A &? C
          both('&?', 'div,isall', [0, 1], [0, 1], [0, 1]);
          both('&?', 'div,isall', [0, 2], [0, 1], [0, 2]);
          both('&?', 'div,isall', [0, 2], [0, 2], [0, 2]);
          both('&?', 'div,isall', [0, 1], [0, 2], [0, 2]);
          both('&?', 'div,isall', [0, 1], [0, 1], [0, 10]);
          both('&?', 'div,isall', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('&?', 'div,isall', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('&?', 'div,isall', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('==?', 'div,issame', [0, 1], [0, 1], [0, 1]);
          both('==?', 'div,issame', [0, 2], [0, 1], [0, 2]);
          both('==?', 'div,issame', [0, 2], [0, 2], [0, 2]);
          both('==?', 'div,issame', [0, 1], [0, 2], [0, 2]);
          both('==?', 'div,issame', [0, 1], [0, 1], [0, 10]);
          both('==?', 'div,issame', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('==?', 'div,issame', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('==?', 'div,issame', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!=?', 'div,isdiff', [0, 1], [0, 1], [0, 1]);
          both('!=?', 'div,isdiff', [0, 2], [0, 1], [0, 2]);
          both('!=?', 'div,isdiff', [0, 2], [0, 2], [0, 2]);
          both('!=?', 'div,isdiff', [0, 1], [0, 2], [0, 2]);
          both('!=?', 'div,isdiff', [0, 1], [0, 1], [0, 10]);
          both('!=?', 'div,isdiff', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('!=?', 'div,isdiff', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!=?', 'div,isdiff', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<?', 'div,islt', [0, 1], [0, 1], [0, 1]);
          lhs('<?', 'div,islt', [0, 2], [0, 1], [0, 2]);
          lhs('<?', 'div,islt', [0, 2], [0, 2], [0, 2]);
          lhs('<?', 'div,islt', [0, 1], [0, 2], [0, 2]);
          lhs('<?', 'div,islt', [0, 1], [0, 1], [0, 10]);
          lhs('<?', 'div,islt', [0, 1], [0, 1], [0, 0, 9, 9]);
          lhs('<?', 'div,islt', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<?', 'div,islt', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<?', 'div,islt', [0, 1], [0, 1], [0, 1]);
          rhs('<?', 'div,islt', [0, 2], [0, 1], [0, 2]);
          rhs('<?', 'div,islt', [0, 2], [0, 2], [0, 2]);
          rhs('<?', 'div,islt', [0, 1], [0, 2], [0, 2]);
          rhs('<?', 'div,islt', [0, 1], [0, 1], [0, 10]);
          rhs('<?', 'div,islt', [0, 1], [0, 1], [0, 0, 9, 9]);
          rhs('<?', 'div,islt', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<?', 'div,islt', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('<=?', 'div,islte', [0, 1], [0, 1], [0, 1]);
          lhs('<=?', 'div,islte', [0, 2], [0, 1], [0, 2]);
          lhs('<=?', 'div,islte', [0, 2], [0, 2], [0, 2]);
          lhs('<=?', 'div,islte', [0, 1], [0, 2], [0, 2]);
          lhs('<=?', 'div,islte', [0, 1], [0, 1], [0, 10]);
          lhs('<=?', 'div,islte', [0, 1], [0, 1], [0, 0, 9, 9]);
          lhs('<=?', 'div,islte', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('<=?', 'div,islte', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('<=?', 'div,islte', [0, 1], [0, 1], [0, 1]);
          rhs('<=?', 'div,islte', [0, 2], [0, 1], [0, 2]);
          rhs('<=?', 'div,islte', [0, 2], [0, 2], [0, 2]);
          rhs('<=?', 'div,islte', [0, 1], [0, 2], [0, 2]);
          rhs('<=?', 'div,islte', [0, 1], [0, 1], [0, 10]);
          rhs('<=?', 'div,islte', [0, 1], [0, 1], [0, 0, 9, 9]);
          rhs('<=?', 'div,islte', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('<=?', 'div,islte', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!&?', 'div,isnall', [0, 1], [0, 1], [0, 1]);
          both('!&?', 'div,isnall', [0, 2], [0, 1], [0, 2]);
          both('!&?', 'div,isnall', [0, 2], [0, 2], [0, 2]);
          both('!&?', 'div,isnall', [0, 1], [0, 2], [0, 2]);
          both('!&?', 'div,isnall', [0, 1], [0, 1], [0, 10]);
          both('!&?', 'div,isnall', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('!&?', 'div,isnall', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!&?', 'div,isnall', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('|?', 'div,issome', [0, 1], [0, 1], [0, 1]);
          both('|?', 'div,issome', [0, 2], [0, 1], [0, 2]);
          both('|?', 'div,issome', [0, 2], [0, 2], [0, 2]);
          both('|?', 'div,issome', [0, 1], [0, 2], [0, 2]);
          both('|?', 'div,issome', [0, 1], [0, 1], [0, 10]);
          both('|?', 'div,issome', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('|?', 'div,issome', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('|?', 'div,issome', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('!|?', 'div,isnone', [0, 1], [0, 1], [0, 1]);
          both('!|?', 'div,isnone', [0, 2], [0, 1], [0, 2]);
          both('!|?', 'div,isnone', [0, 2], [0, 2], [0, 2]);
          both('!|?', 'div,isnone', [0, 1], [0, 2], [0, 2]);
          both('!|?', 'div,isnone', [0, 1], [0, 1], [0, 10]);
          both('!|?', 'div,isnone', [0, 1], [0, 1], [0, 0, 9, 9]);
          both('!|?', 'div,isnone', [0, 1], [0, 1], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('!|?', 'div,isnone', [0, 1], [0, 1], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('+', 'div,issome', [0, 1], [0, 20], [0, 1]);
          both('+', 'div,sum', [0, 2], [0, 1], [0, 2]);
          both('+', 'div,sum', [0, 2], [0, 2], [0, 2]);
          both('+', 'div,sum', [0, 1], [0, 2], [0, 2]);
          both('+', 'div,issome', [0, 1], [0, 20], [0, 10]);
          both('+', 'div,issome', [0, 1], [0, 20], [0, 0, 9, 9]);
          both('+', 'div,issome', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('+', 'div,issome', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('-', 'div,minus', [0, 1], [0, 20], [0, 1]);
          lhs('-', 'div,minus', [0, 2], [0, 1], [0, 2]);
          lhs('-', 'div,minus', [0, 2], [0, 2], [0, 2]);
          lhs('-', 'div,minus', [0, 1], [0, 2], [0, 2]);
          lhs('-', 'div,minus', [0, 1], [0, 20], [0, 10]);
          lhs('-', 'div,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
          lhs('-', 'div', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('-', 'div,minus', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('-', 'div,minus', [0, 1], [0, 20], [0, 1]);
          rhs('-', 'div,minus', [0, 2], [0, 1], [0, 2]);
          rhs('-', 'div,minus', [0, 2], [0, 2], [0, 2]);
          rhs('-', 'div,minus', [0, 1], [0, 2], [0, 2]);
          rhs('-', 'div,minus', [0, 1], [0, 20], [0, 10]);
          rhs('-', 'div,minus', [0, 1], [0, 20], [0, 0, 9, 9]);
          rhs('-', 'div,minus', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('-', 'reject', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          both('*', 'div,product', [0, 1], [0, 100], [0, 1]);
          both('*', 'div,product', [0, 2], [0, 1], [0, 2]);
          both('*', 'div,product', [0, 2], [0, 2], [0, 2]);
          both('*', 'div,product', [0, 1], [0, 2], [0, 2]);
          both('*', 'div,product', [0, 1], [0, 100], [0, 10]);
          both('*', 'div,product', [0, 1], [0, 100], [0, 0, 9, 9]);
          both('*', 'div,product', [0, 1], [0, 100], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          both('*', 'div,product', [0, 1], [0, 100], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          lhs('/', 'div,div', [0, 1], [0, 20], [0, 1]);
          lhs('/', 'div,div', [0, 2], [0, 1], [0, 2]);
          lhs('/', 'div,div', [0, 2], [0, 2], [0, 2]);
          lhs('/', 'div,div', [0, 1], [0, 2], [0, 2]);
          lhs('/', 'div,div', [0, 1], [0, 20], [0, 10]);
          lhs('/', 'div,div', [0, 1], [0, 20], [0, 0, 9, 9]);
          lhs('/', 'div,div', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          lhs('/', 'div,div', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);

          rhs('/', 'div,div', [0, 1], [0, 20], [0, 1]);
          rhs('/', 'div,div', [0, 2], [0, 1], [0, 2]);
          rhs('/', 'div,div', [0, 2], [0, 2], [0, 2]);
          rhs('/', 'div,div', [0, 1], [0, 2], [0, 2]);
          rhs('/', 'div,div', [0, 1], [0, 20], [0, 10]);
          rhs('/', 'div,div', [0, 1], [0, 20], [0, 0, 9, 9]);
          rhs('/', 'div,div', [0, 1], [0, 20], [0, 0, 3, 3], [0, 0, 6, 6], [0, 0, 9, 9]);
          rhs('/', 'div,div', [0, 1], [0, 20], [0, 0, 9, 9], [0, 0, 6, 6], [0, 0, 3, 3]);
        });
      });
    });
  });
});

function runWithoutFD(ori, op1, direction1, op2, direction2, dslpart, ifThrowThenOps) {
  if (typeof ifThrowThenOps !== 'string') throw new Error('bad test');

  let dsl = `
    @custom var-strat throw
    ${dslpart}
  `;

  let e = new Error();
  it(++counter + ' [' + ori + '][runWithoutFD; ' + op1 + ' ' + direction1 + ', ' + op2 + ' ' + direction2 + '] ' + dsl + ' ==> ' + ifThrowThenOps, function() {
    verify(dsl, ifThrowThenOps, {stack: e.stack});
  });
}
function runWithFD(ori, op1, direction1, op2, direction2, rejects, dsl) {
  if (typeof rejects !== 'boolean') throw new Error('bad test');

  let e = new Error();
  it(++counter + ' [' + ori + '][runWithFD; ' + op1 + ' ' + direction1 + ', ' + op2 + ' ' + direction2 + '] ' + dsl, function() {
    verify(dsl, rejects ? 'reject' : '', {stack: e.stack});
  });
}

function testBinaryBinary(op1, direction1, direction2, op2, ifThrowThenOps, A, B, C, _bad) {
  if (_bad !== undefined) throw new Error('got too many args, check test');
  if (typeof ifThrowThenOps !== 'string' && ifThrowThenOps !== false) return testBinaryBinary(op1, direction1, direction2, op2, '', ifThrowThenOps, A, B);
  if (C === undefined) {
    if (B !== undefined) throw new Error('define all ABC args or only A');
    return testBinaryBinary(op1, direction1, direction2, op2, ifThrowThenOps, A, A, A);
  }
  if ([op1, direction1, direction2, op2, ifThrowThenOps, A, B, C].indexOf(undefined) >= 0) throw new Error('testBinaryBinary invalid args error: ' + INSPECT([op1, direction1, direction2, op2, ifThrowThenOps, A, B, C]));

  let max = MAX_PER_TEST;
  // direction1 = '', 'lhs', 'rhs'
  // lhs means shared var is left of op, rhs means right of op, '' will test both sides

  // op1 first
  if ((!direction1 || direction1 === 'lhs') && (!direction2 || direction2 === 'lhs') && max-- > 0) {
    let dsl = `
      : A [${A}]
      : B [${B}]
      : C [${C}]
      A ${op1} B
      A ${op2} C
      @custom noleaf B C
    `;
    runWithoutFD('[' + max + ']testBinaryBinary', op1, direction1, op2, direction2, dsl, ifThrowThenOps);
    runWithFD('[' + max + ']testBinaryBinary', op1, direction1, op2, direction2, ifThrowThenOps === 'reject', dsl);
  }
  if ((!direction1 || direction1 === 'lhs') && (!direction2 || direction2 === 'rhs') && max-- > 0) {
    let dsl = `
      : A [${A}]
      : B [${B}]
      : C [${C}]
      A ${op1} B
      C ${op2} A
      @custom noleaf B C
    `;
    runWithoutFD('[' + max + ']testBinaryBinary', op1, direction1, op2, direction2, dsl, ifThrowThenOps);
    runWithFD('[' + max + ']testBinaryBinary', op1, direction1, op2, direction2, ifThrowThenOps === 'reject', dsl);
  }
  if ((!direction1 || direction1 === 'rhs') && (!direction2 || direction2 === 'lhs') && max-- > 0) {
    let dsl = `
      : A [${A}]
      : B [${B}]
      : C [${C}]
      B ${op1} A
      A ${op2} C
      @custom noleaf B C
    `;
    runWithoutFD('[' + max + ']testBinaryBinary', op1, direction1, op2, direction2, dsl, ifThrowThenOps);
    runWithFD('[' + max + ']testBinaryBinary', op1, direction1, op2, direction2, ifThrowThenOps === 'reject', dsl);
  }
  if ((!direction1 || direction1 === 'rhs') && (!direction2 || direction2 === 'rhs') && max-- > 0) {
    let dsl = `
      : A [${A}]
      : B [${B}]
      : C [${C}]
      B ${op1} A
      C ${op2} A
      @custom noleaf B C
    `;
    runWithoutFD('[' + max + ']testBinaryBinary', op1, direction1, op2, direction2, dsl, ifThrowThenOps);
    runWithFD('[' + max + ']testBinaryBinary', op1, direction1, op2, direction2, ifThrowThenOps === 'reject', dsl);
  }

  // reverse op order:
  if ((!direction1 || direction1 === 'lhs') && (!direction2 || direction2 === 'lhs') && max-- > 0) {
    let dsl = `
      : A [${A}]
      : B [${B}]
      : C [${C}]
      A ${op2} C
      A ${op1} B
      @custom noleaf B C
    `;
    runWithoutFD('[' + max + ']testBinaryBinary', op1, direction1, op2, direction2, dsl, ifThrowThenOps);
    runWithFD('[' + max + ']testBinaryBinary', op1, direction1, op2, direction2, ifThrowThenOps === 'reject', dsl);
  }
  if ((!direction1 || direction1 === 'lhs') && (!direction2 || direction2 === 'rhs') && max-- > 0) {
    let dsl = `
      : A [${A}]
      : B [${B}]
      : C [${C}]
      C ${op2} A
      A ${op1} B
      @custom noleaf B C
    `;
    runWithoutFD('[' + max + ']testBinaryBinary', op1, direction1, op2, direction2, dsl, ifThrowThenOps);
    runWithFD('[' + max + ']testBinaryBinary', op1, direction1, op2, direction2, ifThrowThenOps === 'reject', dsl);
  }
  if ((!direction1 || direction1 === 'rhs') && (!direction2 || direction2 === 'lhs') && max-- > 0) {
    let dsl = `
      : A [${A}]
      : B [${B}]
      : C [${C}]
      A ${op2} C
      B ${op1} A
      @custom noleaf B C
    `;
    runWithoutFD('[' + max + ']testBinaryBinary', op1, direction1, op2, direction2, dsl, ifThrowThenOps);
    runWithFD('[' + max + ']testBinaryBinary', op1, direction1, op2, direction2, ifThrowThenOps === 'reject', dsl);
  }
  if ((!direction1 || direction1 === 'rhs') && (!direction2 || direction2 === 'rhs') && max-- > 0) {
    let dsl = `
      : A [${A}]
      : B [${B}]
      : C [${C}]
      C ${op2} A
      B ${op1} A
      @custom noleaf B C
    `;
    runWithoutFD('[' + max + ']testBinaryBinary', op1, direction1, op2, direction2, dsl, ifThrowThenOps);
    runWithFD('[' + max + ']testBinaryBinary', op1, direction1, op2, direction2, ifThrowThenOps === 'reject', dsl);
  }
}
function testBinaryTernarySharedArgs(op1, direction1, direction2, op2, ifThrowThenOps, R, A, B, C, _bad) {
  if (_bad !== undefined) throw new Error('got too many args, check test');
  if (typeof ifThrowThenOps !== 'string' && ifThrowThenOps !== false) return testBinaryTernarySharedArgs(op1, direction1, direction2, op2, '', ifThrowThenOps, R, A, B);
  if (C === undefined) {
    if (B !== undefined) throw new Error('define all ABC args or only A');
    return testBinaryTernarySharedArgs(op1, direction1, direction2, op2, ifThrowThenOps, R, A, A, A);
  }
  if ([op1, direction1, direction2, op2, ifThrowThenOps, R, A, B, C].indexOf(undefined) >= 0) throw new Error('testBinaryTernarySharedArgs invalid args error: ' + INSPECT([op1, direction1, direction2, op2, ifThrowThenOps, R, A, B, C]));

  let max = MAX_PER_TEST;

  // op1 first
  if ((!direction1 || direction1 === 'lhs') && (!direction2 || direction2 === 'lhs') && max-- > 0) {
    let dsl = `
      : A [${A}]
      : B [${B}]
      : C [${C}]
      : R [${R}]
      A ${op1} B
      R = A ${op2} C
      @custom noleaf B C R
    `;
    runWithoutFD('[' + max + ']testBinaryTernarySharedArgs', op1, direction1, op2, direction2, dsl, ifThrowThenOps);
    //runWithFD('['+max+']testBinaryTernarySharedArgs', op1, direction1, op2, direction2, ifThrowThenOps === 'reject', dsl);
  }
  if ((!direction1 || direction1 === 'lhs') && (!direction2 || direction2 === 'rhs') && max-- > 0) {
    let dsl = `
      : A [${A}]
      : B [${B}]
      : C [${C}]
      : R [${R}]
      A ${op1} B
      R = C ${op2} A
      @custom noleaf B C R
    `;
    runWithoutFD('[' + max + ']testBinaryTernarySharedArgs', op1, direction1, op2, direction2, dsl, ifThrowThenOps);
    runWithFD('[' + max + ']testBinaryTernarySharedArgs', op1, direction1, op2, direction2, ifThrowThenOps === 'reject', dsl);
  }
  if ((!direction1 || direction1 === 'rhs') && (!direction2 || direction2 === 'lhs') && max-- > 0) {
    let dsl = `
      : A [${A}]
      : B [${B}]
      : C [${C}]
      : R [${R}]
      B ${op1} A
      R = A ${op2} C
      @custom noleaf B C R
    `;
    runWithoutFD('[' + max + ']testBinaryTernarySharedArgs', op1, direction1, op2, direction2, dsl, ifThrowThenOps);
    runWithFD('[' + max + ']testBinaryTernarySharedArgs', op1, direction1, op2, direction2, ifThrowThenOps === 'reject', dsl);
  }
  if ((!direction1 || direction1 === 'rhs') && (!direction2 || direction2 === 'rhs') && max-- > 0) {
    let dsl = `
      : A [${A}]
      : B [${B}]
      : C [${C}]
      : R [${R}]
      B ${op1} A
      R = C ${op2} A
      @custom noleaf B C R
    `;
    runWithoutFD('[' + max + ']testBinaryTernarySharedArgs', op1, direction1, op2, direction2, dsl, ifThrowThenOps);
    runWithFD('[' + max + ']testBinaryTernarySharedArgs', op1, direction1, op2, direction2, ifThrowThenOps === 'reject', dsl);
  }

  // reverse op order:
  if ((!direction1 || direction1 === 'lhs') && (!direction2 || direction2 === 'lhs') && max-- > 0) {
    let dsl = `
      : A [${A}]
      : B [${B}]
      : C [${C}]
      : R [${R}]
      R = A ${op2} C
      A ${op1} B
      @custom noleaf B C R
    `;
    runWithoutFD('[' + max + ']testBinaryTernarySharedArgs', op1, direction1, op2, direction2, dsl, ifThrowThenOps);
    runWithFD('[' + max + ']testBinaryTernarySharedArgs', op1, direction1, op2, direction2, ifThrowThenOps === 'reject', dsl);
  }
  if ((!direction1 || direction1 === 'lhs') && (!direction2 || direction2 === 'rhs') && max-- > 0) {
    let dsl = `
      : A [${A}]
      : B [${B}]
      : C [${C}]
      : R [${R}]
      R = C ${op2} A
      A ${op1} B
      @custom noleaf B C R
    `;
    runWithoutFD('[' + max + ']testBinaryTernarySharedArgs', op1, direction1, op2, direction2, dsl, ifThrowThenOps);
    runWithFD('[' + max + ']testBinaryTernarySharedArgs', op1, direction1, op2, direction2, ifThrowThenOps === 'reject', dsl);
  }
  if ((!direction1 || direction1 === 'rhs') && (!direction2 || direction2 === 'lhs') && max-- > 0) {
    let dsl = `
      : A [${A}]
      : B [${B}]
      : C [${C}]
      : R [${R}]
      R = A ${op2} C
      B ${op1} A
      @custom noleaf B C R
    `;
    runWithoutFD('[' + max + ']testBinaryTernarySharedArgs', op1, direction1, op2, direction2, dsl, ifThrowThenOps);
    runWithFD('[' + max + ']testBinaryTernarySharedArgs', op1, direction1, op2, direction2, ifThrowThenOps === 'reject', dsl);
  }
  if ((!direction1 || direction1 === 'rhs') && (!direction2 || direction2 === 'rhs') && max-- > 0) {
    let dsl = `
      : A [${A}]
      : B [${B}]
      : C [${C}]
      : R [${R}]
      R = C ${op2} A
      B ${op1} A
      @custom noleaf B C R
    `;
    runWithoutFD('[' + max + ']testBinaryTernarySharedArgs', op1, direction1, op2, direction2, dsl, ifThrowThenOps);
    runWithFD('[' + max + ']testBinaryTernarySharedArgs', op1, direction1, op2, direction2, ifThrowThenOps === 'reject', dsl);
  }
}
function testBinaryTernarySharedResult(op1, direction1, direction2, op2, ifThrowThenOps, R, A, B = A, C = A, _bad) {
  if (_bad !== undefined) throw new Error('got too many args, check test');
  if (typeof ifThrowThenOps !== 'string' && ifThrowThenOps !== false) return testBinaryTernarySharedResult(op1, direction1, direction2, op2, '', ifThrowThenOps, R, A, B);
  if ([op1, direction1, direction2, op2, ifThrowThenOps, R, A, B, C].indexOf(undefined) >= 0) throw new Error('testBinaryTernarySharedResult invalid args error: ' + INSPECT([op1, direction1, direction2, op2, ifThrowThenOps, R, A, B, C]));

  let max = MAX_PER_TEST;

  // op1 first
  if ((!direction1 || direction1 === 'lhs') && (!direction2 || direction2 === 'lhs') && max-- > 0) {
    let dsl = `
      : A [${A}]
      : B [${B}]
      : C [${C}]
      : R [${R}]
      R ${op1} B
      R = A ${op2} C
      @custom noleaf A B C
    `;
    runWithoutFD('[' + max + ']testBinaryTernarySharedResult', op1, direction1, op2, direction2, dsl, ifThrowThenOps);
    runWithFD('[' + max + ']testBinaryTernarySharedResult', op1, direction1, op2, direction2, ifThrowThenOps === 'reject', dsl);
  }
  if ((!direction1 || direction1 === 'lhs') && (!direction2 || direction2 === 'rhs') && max-- > 0) {
    let dsl = `
      : A [${A}]
      : B [${B}]
      : C [${C}]
      : R [${R}]
      R ${op1} B
      R = C ${op2} A
      @custom noleaf A B C
    `;
    runWithoutFD('[' + max + ']testBinaryTernarySharedResult', op1, direction1, op2, direction2, dsl, ifThrowThenOps);
    runWithFD('[' + max + ']testBinaryTernarySharedResult', op1, direction1, op2, direction2, ifThrowThenOps === 'reject', dsl);
  }
  if ((!direction1 || direction1 === 'rhs') && (!direction2 || direction2 === 'lhs') && max-- > 0) {
    let dsl = `
      : A [${A}]
      : B [${B}]
      : C [${C}]
      : R [${R}]
      B ${op1} R
      R = A ${op2} C
      @custom noleaf A B C
    `;
    runWithoutFD('[' + max + ']testBinaryTernarySharedResult', op1, direction1, op2, direction2, dsl, ifThrowThenOps);
    runWithFD('[' + max + ']testBinaryTernarySharedResult', op1, direction1, op2, direction2, ifThrowThenOps === 'reject', dsl);
  }
  if ((!direction1 || direction1 === 'rhs') && (!direction2 || direction2 === 'rhs') && max-- > 0) {
    let dsl = `
      : A [${A}]
      : B [${B}]
      : C [${C}]
      : R [${R}]
      B ${op1} R
      R = C ${op2} A
      @custom noleaf A B C
    `;
    runWithoutFD('[' + max + ']testBinaryTernarySharedResult', op1, direction1, op2, direction2, dsl, ifThrowThenOps);
    runWithFD('[' + max + ']testBinaryTernarySharedResult', op1, direction1, op2, direction2, ifThrowThenOps === 'reject', dsl);
  }

  // reverse op order:
  if ((!direction1 || direction1 === 'lhs') && (!direction2 || direction2 === 'lhs') && max-- > 0) {
    let dsl = `
      : A [${A}]
      : B [${B}]
      : C [${C}]
      : R [${R}]
      R = A ${op2} C
      R ${op1} B
      @custom noleaf A B C
    `;
    runWithoutFD('[' + max + ']testBinaryTernarySharedResult', op1, direction1, op2, direction2, dsl, ifThrowThenOps);
    runWithFD('[' + max + ']testBinaryTernarySharedResult', op1, direction1, op2, direction2, ifThrowThenOps === 'reject', dsl);
  }
  if ((!direction1 || direction1 === 'lhs') && (!direction2 || direction2 === 'rhs') && max-- > 0) {
    let dsl = `
      : A [${A}]
      : B [${B}]
      : C [${C}]
      : R [${R}]
      R = C ${op2} A
      R ${op1} B
      @custom noleaf A B C
    `;
    runWithoutFD('[' + max + ']testBinaryTernarySharedResult', op1, direction1, op2, direction2, dsl, ifThrowThenOps);
    runWithFD('[' + max + ']testBinaryTernarySharedResult', op1, direction1, op2, direction2, ifThrowThenOps === 'reject', dsl);
  }
  if ((!direction1 || direction1 === 'rhs') && (!direction2 || direction2 === 'lhs') && max-- > 0) {
    let dsl = `
      : A [${A}]
      : B [${B}]
      : C [${C}]
      : R [${R}]
      R = A ${op2} C
      B ${op1} R
      @custom noleaf A B C
    `;
    runWithoutFD('[' + max + ']testBinaryTernarySharedResult', op1, direction1, op2, direction2, dsl, ifThrowThenOps);
    runWithFD('[' + max + ']testBinaryTernarySharedResult', op1, direction1, op2, direction2, ifThrowThenOps === 'reject', dsl);
  }
  if ((!direction1 || direction1 === 'rhs') && (!direction2 || direction2 === 'rhs') && max-- > 0) {
    let dsl = `
      : A [${A}]
      : B [${B}]
      : C [${C}]
      : R [${R}]
      R = C ${op2} A
      B ${op1} R
      @custom noleaf A B C
    `;
    runWithoutFD('[' + max + ']testBinaryTernarySharedResult', op1, direction1, op2, direction2, dsl, ifThrowThenOps);
    runWithFD('[' + max + ']testBinaryTernarySharedResult', op1, direction1, op2, direction2, ifThrowThenOps === 'reject', dsl);
  }
}
function testTernaryBinarySharedArgs(op1, direction1, direction2, op2, ifThrowThenOps, R, A, B = A, C = A, _bad) {
  if (_bad !== undefined) throw new Error('got too many args, check test');
  if (typeof ifThrowThenOps !== 'string' && ifThrowThenOps !== false) return testTernaryBinarySharedArgs(op1, direction1, direction2, op2, '', ifThrowThenOps, R, A, B);
  if ([op1, direction1, direction2, op2, ifThrowThenOps, R, A, B, C].indexOf(undefined) >= 0) throw new Error('testTernaryBinarySharedArgs invalid args error: ' + INSPECT([op1, direction1, direction2, op2, ifThrowThenOps, R, A, B, C]) + '->' + INSPECT(arguments));

  let max = MAX_PER_TEST;

  // direction1 = '', 'lhs', 'rhs'
  // lhs means shared var is left of op, rhs means right of op, '' will test both sides

  // op1 first
  if ((!direction1 || direction1 === 'lhs') && (!direction2 || direction2 === 'lhs') && max-- > 0) {
    let dsl = `
      : A [${A}]
      : B [${B}]
      : C [${C}]
      : R [${R}]
      R = A ${op1} B
      A ${op2} C
      @custom noleaf B C R
    `;
    runWithoutFD('[' + max + ']testTernaryBinarySharedArgs', op1, direction1, op2, direction2, dsl, ifThrowThenOps);
    runWithFD('[' + max + ']testTernaryBinarySharedArgs', op1, direction1, op2, direction2, ifThrowThenOps === 'reject', dsl);
  }
  if ((!direction1 || direction1 === 'lhs') && (!direction2 || direction2 === 'rhs') && max-- > 0) {
    let dsl = `
      : A [${A}]
      : B [${B}]
      : C [${C}]
      : R [${R}]
      R = A ${op1} B
      C ${op2} A
      @custom noleaf B C R
    `;
    runWithoutFD('[' + max + ']testTernaryBinarySharedArgs', op1, direction1, op2, direction2, dsl, ifThrowThenOps);
    runWithFD('[' + max + ']testTernaryBinarySharedArgs', op1, direction1, op2, direction2, ifThrowThenOps === 'reject', dsl);
  }
  if ((!direction1 || direction1 === 'rhs') && (!direction2 || direction2 === 'lhs') && max-- > 0) {
    let dsl = `
      : A [${A}]
      : B [${B}]
      : C [${C}]
      : R [${R}]
      R = B ${op1} A
      A ${op2} C
      @custom noleaf B C R
    `;
    runWithoutFD('[' + max + ']testTernaryBinarySharedArgs', op1, direction1, op2, direction2, dsl, ifThrowThenOps);
    runWithFD('[' + max + ']testTernaryBinarySharedArgs', op1, direction1, op2, direction2, ifThrowThenOps === 'reject', dsl);
  }
  if ((!direction1 || direction1 === 'rhs') && (!direction2 || direction2 === 'rhs') && max-- > 0) {
    let dsl = `
      : A [${A}]
      : B [${B}]
      : C [${C}]
      : R [${R}]
      R = B ${op1} A
      C ${op2} A
      @custom noleaf B C R
    `;
    runWithoutFD('[' + max + ']testTernaryBinarySharedArgs', op1, direction1, op2, direction2, dsl, ifThrowThenOps);
    runWithFD('[' + max + ']testTernaryBinarySharedArgs', op1, direction1, op2, direction2, ifThrowThenOps === 'reject', dsl);
  }

  // reverse op order:
  if ((!direction1 || direction1 === 'lhs') && (!direction2 || direction2 === 'lhs') && max-- > 0) {
    let dsl = `
      : A [${A}]
      : B [${B}]
      : C [${C}]
      : R [${R}]
      A ${op2} C
      R = A ${op1} B
      @custom noleaf B C R
    `;
    runWithoutFD('[' + max + ']testTernaryBinarySharedArgs', op1, direction1, op2, direction2, dsl, ifThrowThenOps);
    runWithFD('[' + max + ']testTernaryBinarySharedArgs', op1, direction1, op2, direction2, ifThrowThenOps === 'reject', dsl);
  }
  if ((!direction1 || direction1 === 'lhs') && (!direction2 || direction2 === 'rhs') && max-- > 0) {
    let dsl = `
      : A [${A}]
      : B [${B}]
      : C [${C}]
      : R [${R}]
      C ${op2} A
      R = A ${op1} B
      @custom noleaf B C R
    `;
    runWithoutFD('[' + max + ']testTernaryBinarySharedArgs', op1, direction1, op2, direction2, dsl, ifThrowThenOps);
    runWithFD('[' + max + ']testTernaryBinarySharedArgs', op1, direction1, op2, direction2, ifThrowThenOps === 'reject', dsl);
  }
  if ((!direction1 || direction1 === 'rhs') && (!direction2 || direction2 === 'lhs') && max-- > 0) {
    let dsl = `
      : A [${A}]
      : B [${B}]
      : C [${C}]
      : R [${R}]
      A ${op2} C
      R = B ${op1} A
      @custom noleaf B C R
    `;
    runWithoutFD('[' + max + ']testTernaryBinarySharedArgs', op1, direction1, op2, direction2, dsl, ifThrowThenOps);
    runWithFD('[' + max + ']testTernaryBinarySharedArgs', op1, direction1, op2, direction2, ifThrowThenOps === 'reject', dsl);
  }
  if ((!direction1 || direction1 === 'rhs') && (!direction2 || direction2 === 'rhs') && max-- > 0) {
    let dsl = `
      : A [${A}]
      : B [${B}]
      : C [${C}]
      : R [${R}]
      C ${op2} A
      R = B ${op1} A
      @custom noleaf B C R
    `;
    runWithoutFD('[' + max + ']testTernaryBinarySharedArgs', op1, direction1, op2, direction2, dsl, ifThrowThenOps);
    runWithFD('[' + max + ']testTernaryBinarySharedArgs', op1, direction1, op2, direction2, ifThrowThenOps === 'reject', dsl);
  }
}
function testTernaryBinarySharedResult(op1, direction1, direction2, op2, ifThrowThenOps, R, A, B = A, C = A, _bad) {
  if (_bad !== undefined) throw new Error('got too many args, check test');
  if (typeof ifThrowThenOps !== 'string' && ifThrowThenOps !== false) return testTernaryBinarySharedResult(op1, direction1, direction2, op2, '', ifThrowThenOps, R, A, B);
  if ([op1, direction1, direction2, op2, ifThrowThenOps, R, A, B, C].indexOf(undefined) >= 0) throw new Error('testTernaryBinarySharedResult invalid args error: ' + INSPECT([op1, direction1, direction2, op2, ifThrowThenOps, R, A, B, C]) + '->' + INSPECT(arguments));

  let max = MAX_PER_TEST;

  // direction1 = '', 'lhs', 'rhs'
  // lhs means shared var is left of op, rhs means right of op, '' will test both sides

  // op1 first
  if ((!direction1 || direction1 === 'lhs') && (!direction2 || direction2 === 'lhs') && max-- > 0) {
    let dsl = `
      : A [${A}]
      : B [${B}]
      : C [${C}]
      : R [${R}]
      R = A ${op1} B
      R ${op2} C
      @custom noleaf A B C
    `;
    runWithoutFD('[' + max + ']testTernaryBinarySharedResult', op1, direction1, op2, direction2, dsl, ifThrowThenOps);
    runWithFD('[' + max + ']testTernaryBinarySharedResult', op1, direction1, op2, direction2, ifThrowThenOps === 'reject', dsl);
  }
  if ((!direction1 || direction1 === 'lhs') && (!direction2 || direction2 === 'rhs') && max-- > 0) {
    let dsl = `
      : A [${A}]
      : B [${B}]
      : C [${C}]
      : R [${R}]
      R = A ${op1} B
      C ${op2} R
      @custom noleaf A B C
    `;
    runWithoutFD('[' + max + ']testTernaryBinarySharedResult', op1, direction1, op2, direction2, dsl, ifThrowThenOps);
    runWithFD('[' + max + ']testTernaryBinarySharedResult', op1, direction1, op2, direction2, ifThrowThenOps === 'reject', dsl);
  }
  if ((!direction1 || direction1 === 'rhs') && (!direction2 || direction2 === 'lhs') && max-- > 0) {
    let dsl = `
      : A [${A}]
      : B [${B}]
      : C [${C}]
      : R [${R}]
      R = B ${op1} A
      R ${op2} C
      @custom noleaf A B C
    `;
    runWithoutFD('[' + max + ']testTernaryBinarySharedResult', op1, direction1, op2, direction2, dsl, ifThrowThenOps);
    runWithFD('[' + max + ']testTernaryBinarySharedResult', op1, direction1, op2, direction2, ifThrowThenOps === 'reject', dsl);
  }
  if ((!direction1 || direction1 === 'rhs') && (!direction2 || direction2 === 'rhs') && max-- > 0) {
    let dsl = `
      : A [${A}]
      : B [${B}]
      : C [${C}]
      : R [${R}]
      R = B ${op1} A
      C ${op2} R
      @custom noleaf A B C
    `;
    runWithoutFD('[' + max + ']testTernaryBinarySharedResult', op1, direction1, op2, direction2, dsl, ifThrowThenOps);
    runWithFD('[' + max + ']testTernaryBinarySharedResult', op1, direction1, op2, direction2, ifThrowThenOps === 'reject', dsl);
  }

  // reverse op order:
  if ((!direction1 || direction1 === 'lhs') && (!direction2 || direction2 === 'lhs') && max-- > 0) {
    let dsl = `
      : A [${A}]
      : B [${B}]
      : C [${C}]
      : R [${R}]
      R ${op2} C
      R = A ${op1} B
      @custom noleaf A B C
    `;
    runWithoutFD('[' + max + ']testTernaryBinarySharedResult', op1, direction1, op2, direction2, dsl, ifThrowThenOps);
    runWithFD('[' + max + ']testTernaryBinarySharedResult', op1, direction1, op2, direction2, ifThrowThenOps === 'reject', dsl);
  }
  if ((!direction1 || direction1 === 'lhs') && (!direction2 || direction2 === 'rhs') && max-- > 0) {
    let dsl = `
      : A [${A}]
      : B [${B}]
      : C [${C}]
      : R [${R}]
      C ${op2} R
      R = A ${op1} B
      @custom noleaf A B C
    `;
    runWithoutFD('[' + max + ']testTernaryBinarySharedResult', op1, direction1, op2, direction2, dsl, ifThrowThenOps);
    runWithFD('[' + max + ']testTernaryBinarySharedResult', op1, direction1, op2, direction2, ifThrowThenOps === 'reject', dsl);
  }
  if ((!direction1 || direction1 === 'rhs') && (!direction2 || direction2 === 'lhs') && max-- > 0) {
    let dsl = `
      : A [${A}]
      : B [${B}]
      : C [${C}]
      : R [${R}]
      R ${op2} C
      R = B ${op1} A
      @custom noleaf A B C
    `;
    runWithoutFD('[' + max + ']testTernaryBinarySharedResult', op1, direction1, op2, direction2, dsl, ifThrowThenOps);
    runWithFD('[' + max + ']testTernaryBinarySharedResult', op1, direction1, op2, direction2, ifThrowThenOps === 'reject', dsl);
  }
  if ((!direction1 || direction1 === 'rhs') && (!direction2 || direction2 === 'rhs') && max-- > 0) {
    let dsl = `
      : A [${A}]
      : B [${B}]
      : C [${C}]
      : R [${R}]
      C ${op2} R
      R = B ${op1} A
      @custom noleaf A B C
    `;
    runWithoutFD('[' + max + ']testTernaryBinarySharedResult', op1, direction1, op2, direction2, dsl, ifThrowThenOps);
    runWithFD('[' + max + ']testTernaryBinarySharedResult', op1, direction1, op2, direction2, ifThrowThenOps === 'reject', dsl);
  }
}
function testTernaryTernarySharedArgs(op1, direction1, direction2, op2, ifThrowThenOps, R, S, A, B = A, C = A, _bad) {
  if (_bad !== undefined) throw new Error('got too many args, check test');
  if (typeof ifThrowThenOps !== 'string' && ifThrowThenOps !== false) return testTernaryTernarySharedArgs(op1, direction1, direction2, op2, '', ifThrowThenOps, R, S, A, B);
  if ([op1, direction1, direction2, op2, ifThrowThenOps, R, S, A, B, C].indexOf(undefined) >= 0) throw new Error('testTernaryTernarySharedArgs invalid args error: ' + INSPECT([op1, direction1, direction2, op2, ifThrowThenOps, R, S, A, B, C]));

  let max = MAX_PER_TEST;

  // direction1 = '', 'lhs', 'rhs'
  // lhs means shared var is left of op, rhs means right of op, '' will test both sides

  // op1 first
  if ((!direction1 || direction1 === 'lhs') && (!direction2 || direction2 === 'lhs') && max-- > 0) {
    let dsl = `
      : A [${A}]
      : B [${B}]
      : C [${C}]
      : R [${R}]
      : S [${S}]
      R = A ${op1} B
      S = A ${op2} C
      @custom noleaf B C R S
    `;
    runWithoutFD('[' + max + ']testTernaryTernarySharedArgs', op1, direction1, op2, direction2, dsl, ifThrowThenOps);
    runWithFD('[' + max + ']testTernaryTernarySharedArgs', op1, direction1, op2, direction2, ifThrowThenOps === 'reject', dsl);
  }
  if ((!direction1 || direction1 === 'lhs') && (!direction2 || direction2 === 'rhs') && max-- > 0) {
    let dsl = `
      : A [${A}]
      : B [${B}]
      : C [${C}]
      : R [${R}]
      : S [${S}]
      R = A ${op1} B
      S = C ${op2} A
      @custom noleaf B C R S
    `;
    runWithoutFD('[' + max + ']testTernaryTernarySharedArgs', op1, direction1, op2, direction2, dsl, ifThrowThenOps);
    runWithFD('[' + max + ']testTernaryTernarySharedArgs', op1, direction1, op2, direction2, ifThrowThenOps === 'reject', dsl);
  }
  if ((!direction1 || direction1 === 'rhs') && (!direction2 || direction2 === 'lhs') && max-- > 0) {
    let dsl = `
      : A [${A}]
      : B [${B}]
      : C [${C}]
      : R [${R}]
      : S [${S}]
      R = B ${op1} A
      S = A ${op2} C
      @custom noleaf B C R S
    `;
    runWithoutFD('[' + max + ']testTernaryTernarySharedArgs', op1, direction1, op2, direction2, dsl, ifThrowThenOps);
    runWithFD('[' + max + ']testTernaryTernarySharedArgs', op1, direction1, op2, direction2, ifThrowThenOps === 'reject', dsl);
  }
  if ((!direction1 || direction1 === 'rhs') && (!direction2 || direction2 === 'rhs') && max-- > 0) {
    let dsl = `
      : A [${A}]
      : B [${B}]
      : C [${C}]
      : R [${R}]
      : S [${S}]
      R = B ${op1} A
      S = C ${op2} A
      @custom noleaf B C R S
    `;
    runWithoutFD('[' + max + ']testTernaryTernarySharedArgs', op1, direction1, op2, direction2, dsl, ifThrowThenOps);
    runWithFD('[' + max + ']testTernaryTernarySharedArgs', op1, direction1, op2, direction2, ifThrowThenOps === 'reject', dsl);
  }

  // reverse op order:
  if ((!direction1 || direction1 === 'lhs') && (!direction2 || direction2 === 'lhs') && max-- > 0) {
    let dsl = `
      : A [${A}]
      : B [${B}]
      : C [${C}]
      : R [${R}]
      : S [${S}]
      S = A ${op2} C
      R = A ${op1} B
      @custom noleaf B C R S
    `;
    runWithoutFD('[' + max + ']testTernaryTernarySharedArgs', op1, direction1, op2, direction2, dsl, ifThrowThenOps);
    runWithFD('[' + max + ']testTernaryTernarySharedArgs', op1, direction1, op2, direction2, ifThrowThenOps === 'reject', dsl);
  }
  if ((!direction1 || direction1 === 'lhs') && (!direction2 || direction2 === 'rhs') && max-- > 0) {
    let dsl = `
      : A [${A}]
      : B [${B}]
      : C [${C}]
      : R [${R}]
      : S [${S}]
      S = C ${op2} A
      R = A ${op1} B
      @custom noleaf B C R S
    `;
    runWithoutFD('[' + max + ']testTernaryTernarySharedArgs', op1, direction1, op2, direction2, dsl, ifThrowThenOps);
    runWithFD('[' + max + ']testTernaryTernarySharedArgs', op1, direction1, op2, direction2, ifThrowThenOps === 'reject', dsl);
  }
  if ((!direction1 || direction1 === 'rhs') && (!direction2 || direction2 === 'lhs') && max-- > 0) {
    let dsl = `
      : A [${A}]
      : B [${B}]
      : C [${C}]
      : R [${R}]
      : S [${S}]
      S = A ${op2} C
      R = B ${op1} A
      @custom noleaf B C R S
    `;
    runWithoutFD('[' + max + ']testTernaryTernarySharedArgs', op1, direction1, op2, direction2, dsl, ifThrowThenOps);
    runWithFD('[' + max + ']testTernaryTernarySharedArgs', op1, direction1, op2, direction2, ifThrowThenOps === 'reject', dsl);
  }
  if ((!direction1 || direction1 === 'rhs') && (!direction2 || direction2 === 'rhs') && max-- > 0) {
    let dsl = `
      : A [${A}]
      : B [${B}]
      : C [${C}]
      : R [${R}]
      : S [${S}]
      S = C ${op2} A
      R = B ${op1} A
      @custom noleaf B C R S
    `;
    runWithoutFD('[' + max + ']testTernaryTernarySharedArgs', op1, direction1, op2, direction2, dsl, ifThrowThenOps);
    runWithFD('[' + max + ']testTernaryTernarySharedArgs', op1, direction1, op2, direction2, ifThrowThenOps === 'reject', dsl);
  }
}
function testTernaryTernarySharedR(op1, direction1, direction2, op2, ifThrowThenOps, S, A, B = A, C = A, D = A, _bad) {
  if (_bad !== undefined) throw new Error('got too many args, check test');
  if (typeof ifThrowThenOps !== 'string' && ifThrowThenOps !== false) return testTernaryTernarySharedR(op1, direction1, direction2, op2, '', ifThrowThenOps, S, A, B, C);
  if ([op1, direction1, direction2, op2, ifThrowThenOps, S, A, B, C, D].indexOf(undefined) >= 0) throw new Error('testTernaryTernarySharedR invalid args error: ' + INSPECT([op1, direction1, direction2, op2, ifThrowThenOps, S, A, B, C, D]));

  let max = MAX_PER_TEST;

  // direction1 = '', 'lhs', 'rhs'
  // lhs means shared var is left of op, rhs means right of op, '' will test both sides

  // op1 first
  if ((!direction1 || direction1 === 'lhs') && (!direction2 || direction2 === 'lhs') && max-- > 0) {
    let dsl = `
      : A [${A}]
      : B [${B}]
      : C [${C}]
      : D [${D}]
      : S [${S}]
      C = A ${op1} B
      S = C ${op2} D
      @custom noleaf A B D S
    `;
    runWithoutFD('[' + max + ']testTernaryTernarySharedR', op1, direction1, op2, direction2, dsl, ifThrowThenOps);
    runWithFD('[' + max + ']testTernaryTernarySharedR', op1, direction1, op2, direction2, ifThrowThenOps === 'reject', dsl);
  }
  if ((!direction1 || direction1 === 'lhs') && (!direction2 || direction2 === 'rhs') && max-- > 0) {
    let dsl = `
      : A [${A}]
      : B [${B}]
      : C [${C}]
      : D [${D}]
      : S [${S}]
      C = A ${op1} B
      S = D ${op2} C
      @custom noleaf A B D S
    `;
    runWithoutFD('[' + max + ']testTernaryTernarySharedR', op1, direction1, op2, direction2, dsl, ifThrowThenOps);
    runWithFD('[' + max + ']testTernaryTernarySharedR', op1, direction1, op2, direction2, ifThrowThenOps === 'reject', dsl);
  }
  if ((!direction1 || direction1 === 'rhs') && (!direction2 || direction2 === 'lhs') && max-- > 0) {
    let dsl = `
      : A [${A}]
      : B [${B}]
      : C [${C}]
      : D [${D}]
      : S [${S}]
      C = B ${op1} A
      S = C ${op2} D
      @custom noleaf A B D S
    `;
    runWithoutFD('[' + max + ']testTernaryTernarySharedR', op1, direction1, op2, direction2, dsl, ifThrowThenOps);
    runWithFD('[' + max + ']testTernaryTernarySharedR', op1, direction1, op2, direction2, ifThrowThenOps === 'reject', dsl);
  }
  if ((!direction1 || direction1 === 'rhs') && (!direction2 || direction2 === 'rhs') && max-- > 0) {
    let dsl = `
      : A [${A}]
      : B [${B}]
      : C [${C}]
      : D [${D}]
      : S [${S}]
      C = B ${op1} A
      S = D ${op2} C
      @custom noleaf A B D S
    `;
    runWithoutFD('[' + max + ']testTernaryTernarySharedR', op1, direction1, op2, direction2, dsl, ifThrowThenOps);
    runWithFD('[' + max + ']testTernaryTernarySharedR', op1, direction1, op2, direction2, ifThrowThenOps === 'reject', dsl);
  }

  // reverse op order:
  if ((!direction1 || direction1 === 'lhs') && (!direction2 || direction2 === 'lhs') && max-- > 0) {
    let dsl = `
      : A [${A}]
      : B [${B}]
      : C [${C}]
      : D [${D}]
      : S [${S}]
      S = C ${op2} D
      C = A ${op1} B
      @custom noleaf A B D S
    `;
    runWithoutFD('[' + max + ']testTernaryTernarySharedR', op1, direction1, op2, direction2, dsl, ifThrowThenOps);
    runWithFD('[' + max + ']testTernaryTernarySharedR', op1, direction1, op2, direction2, ifThrowThenOps === 'reject', dsl);
  }
  if ((!direction1 || direction1 === 'lhs') && (!direction2 || direction2 === 'rhs') && max-- > 0) {
    let dsl = `
      : A [${A}]
      : B [${B}]
      : C [${C}]
      : D [${D}]
      : S [${S}]
      S = D ${op2} C
      C = A ${op1} B
      @custom noleaf A B D S
    `;
    runWithoutFD('[' + max + ']testTernaryTernarySharedR', op1, direction1, op2, direction2, dsl, ifThrowThenOps);
    runWithFD('[' + max + ']testTernaryTernarySharedR', op1, direction1, op2, direction2, ifThrowThenOps === 'reject', dsl);
  }
  if ((!direction1 || direction1 === 'rhs') && (!direction2 || direction2 === 'lhs') && max-- > 0) {
    let dsl = `
      : A [${A}]
      : B [${B}]
      : C [${C}]
      : D [${D}]
      : S [${S}]
      S = C ${op2} D
      C = B ${op1} A
      @custom noleaf A B D S
    `;
    runWithoutFD('[' + max + ']testTernaryTernarySharedR', op1, direction1, op2, direction2, dsl, ifThrowThenOps);
    runWithFD('[' + max + ']testTernaryTernarySharedR', op1, direction1, op2, direction2, ifThrowThenOps === 'reject', dsl);
  }
  if ((!direction1 || direction1 === 'rhs') && (!direction2 || direction2 === 'rhs') && max-- > 0) {
    let dsl = `
      : A [${A}]
      : B [${B}]
      : C [${C}]
      : D [${D}]
      : S [${S}]
      S = D ${op2} C
      C = B ${op1} A
      @custom noleaf A B D S
    `;
    runWithoutFD('[' + max + ']testTernaryTernarySharedR', op1, direction1, op2, direction2, dsl, ifThrowThenOps);
    runWithFD('[' + max + ']testTernaryTernarySharedR', op1, direction1, op2, direction2, ifThrowThenOps === 'reject', dsl);
  }
}
function testTernaryTernarySharedS(op1, direction1, direction2, op2, ifThrowThenOps, R, A, B = A, C = A, D = A, _bad) {
  if (_bad !== undefined) throw new Error('got too many args, check test');
  if (typeof ifThrowThenOps !== 'string' && ifThrowThenOps !== false) return testTernaryTernarySharedS(op1, direction1, direction2, op2, '', ifThrowThenOps, R, A, B, C);
  if ([op1, direction1, direction2, op2, ifThrowThenOps, R, A, B, C, D].indexOf(undefined) >= 0) throw new Error('testTernaryTernarySharedS invalid args error: ' + INSPECT([op1, direction1, direction2, op2, ifThrowThenOps, R, A, B, C, D]));

  let max = MAX_PER_TEST;

  // direction1 = '', 'lhs', 'rhs'
  // lhs means shared var is left of op, rhs means right of op, '' will test both sides

  // op1 first
  if ((!direction1 || direction1 === 'lhs') && (!direction2 || direction2 === 'lhs') && max-- > 0) {
    let dsl = `
      : A [${A}]
      : B [${B}]
      : C [${C}]
      : D [${D}]
      : R [${R}]
      R = A ${op1} B
      A = C ${op2} D
      @custom noleaf B C D R
    `;
    runWithoutFD('[' + max + ']testTernaryTernarySharedS', op1, direction1, op2, direction2, dsl, ifThrowThenOps);
    runWithFD('[' + max + ']testTernaryTernarySharedS', op1, direction1, op2, direction2, ifThrowThenOps === 'reject', dsl);
  }
  if ((!direction1 || direction1 === 'lhs') && (!direction2 || direction2 === 'rhs') && max-- > 0) {
    let dsl = `
      : A [${A}]
      : B [${B}]
      : C [${C}]
      : D [${D}]
      : R [${R}]
      R = A ${op1} B
      A = D ${op2} C
      @custom noleaf B C D R
    `;
    runWithoutFD('[' + max + ']testTernaryTernarySharedS', op1, direction1, op2, direction2, dsl, ifThrowThenOps);
    runWithFD('[' + max + ']testTernaryTernarySharedS', op1, direction1, op2, direction2, ifThrowThenOps === 'reject', dsl);
  }
  if ((!direction1 || direction1 === 'rhs') && (!direction2 || direction2 === 'lhs') && max-- > 0) {
    let dsl = `
      : A [${A}]
      : B [${B}]
      : C [${C}]
      : D [${D}]
      : R [${R}]
      R = B ${op1} A
      A = C ${op2} D
      @custom noleaf B C D R
    `;
    runWithoutFD('[' + max + ']testTernaryTernarySharedS', op1, direction1, op2, direction2, dsl, ifThrowThenOps);
    runWithFD('[' + max + ']testTernaryTernarySharedS', op1, direction1, op2, direction2, ifThrowThenOps === 'reject', dsl);
  }
  if ((!direction1 || direction1 === 'rhs') && (!direction2 || direction2 === 'rhs' && max-- > 0)) {
    let dsl = `
      : A [${A}]
      : B [${B}]
      : C [${C}]
      : D [${D}]
      : R [${R}]
      R = B ${op1} A
      A = D ${op2} C
      @custom noleaf B C D R
    `;
    runWithoutFD('[' + max + ']testTernaryTernarySharedS', op1, direction1, op2, direction2, dsl, ifThrowThenOps);
    runWithFD('[' + max + ']testTernaryTernarySharedS', op1, direction1, op2, direction2, ifThrowThenOps === 'reject', dsl);
  }

  // reverse op order:
  if ((!direction1 || direction1 === 'lhs') && (!direction2 || direction2 === 'lhs') && max-- > 0) {
    let dsl = `
      : A [${A}]
      : B [${B}]
      : C [${C}]
      : D [${D}]
      : R [${R}]
      A = C ${op2} D
      R = A ${op1} B
      @custom noleaf B C D R
    `;
    runWithoutFD('[' + max + ']testTernaryTernarySharedS', op1, direction1, op2, direction2, dsl, ifThrowThenOps);
    runWithFD('[' + max + ']testTernaryTernarySharedS', op1, direction1, op2, direction2, ifThrowThenOps === 'reject', dsl);
  }
  if ((!direction1 || direction1 === 'lhs') && (!direction2 || direction2 === 'rhs') && max-- > 0) {
    let dsl = `
      : A [${A}]
      : B [${B}]
      : C [${C}]
      : D [${D}]
      : R [${R}]
      A = D ${op2} C
      R = A ${op1} B
      @custom noleaf B C D R
    `;
    runWithoutFD('[' + max + ']testTernaryTernarySharedS', op1, direction1, op2, direction2, dsl, ifThrowThenOps);
    runWithFD('[' + max + ']testTernaryTernarySharedS', op1, direction1, op2, direction2, ifThrowThenOps === 'reject', dsl);
  }
  if ((!direction1 || direction1 === 'rhs') && (!direction2 || direction2 === 'lhs') && max-- > 0) {
    let dsl = `
      : A [${A}]
      : B [${B}]
      : C [${C}]
      : D [${D}]
      : R [${R}]
      A = C ${op2} D
      R = B ${op1} A
      @custom noleaf B C D R
    `;
    runWithoutFD('[' + max + ']testTernaryTernarySharedS', op1, direction1, op2, direction2, dsl, ifThrowThenOps);
    runWithFD('[' + max + ']testTernaryTernarySharedS', op1, direction1, op2, direction2, ifThrowThenOps === 'reject', dsl);
  }
  if ((!direction1 || direction1 === 'rhs') && (!direction2 || direction2 === 'rhs') && max-- > 0) {
    let dsl = `
      : A [${A}]
      : B [${B}]
      : C [${C}]
      : D [${D}]
      : R [${R}]
      A = D ${op2} C
      R = B ${op1} A
      @custom noleaf B C D R
    `;
    runWithoutFD('[' + max + ']testTernaryTernarySharedS', op1, direction1, op2, direction2, dsl, ifThrowThenOps);
    runWithFD('[' + max + ']testTernaryTernarySharedS', op1, direction1, op2, direction2, ifThrowThenOps === 'reject', dsl);
  }
}
function testTernaryTernarySharedResults(op1, direction1, direction2, op2, ifThrowThenOps, R, A, B = A, C = A, D = A, _bad) {
  if (_bad !== undefined) throw new Error('got too many args, check test');
  if (typeof ifThrowThenOps !== 'string' && ifThrowThenOps !== false) return testTernaryTernarySharedResults(op1, direction1, direction2, op2, '', ifThrowThenOps, R, A, B, C);
  if ([op1, direction1, direction2, op2, ifThrowThenOps, R, A, B, C, D].indexOf(undefined) >= 0) throw new Error('testTernaryTernarySharedResults invalid args error: ' + INSPECT([op1, direction1, direction2, op2, ifThrowThenOps, R, A, B, C, D]));

  let max = MAX_PER_TEST;

  // direction1 = '', 'lhs', 'rhs'
  // lhs means shared var is left of op, rhs means right of op, '' will test both sides

  // op1 first
  if ((!direction1 || direction1 === 'lhs') && (!direction2 || direction2 === 'lhs') && max-- > 0) {
    let dsl = `
      : A [${A}]
      : B [${B}]
      : C [${C}]
      : D [${D}]
      : R [${R}]
      R = A ${op1} B
      R = C ${op2} D
      @custom noleaf A B C D
    `;
    runWithoutFD('[' + max + ']testTernaryTernarySharedResults', op1, direction1, op2, direction2, dsl, ifThrowThenOps);
    runWithFD('[' + max + ']testTernaryTernarySharedResults', op1, direction1, op2, direction2, ifThrowThenOps === 'reject', dsl);
  }
  if ((!direction1 || direction1 === 'lhs') && (!direction2 || direction2 === 'rhs') && max-- > 0) {
    let dsl = `
      : A [${A}]
      : B [${B}]
      : C [${C}]
      : D [${D}]
      : R [${R}]
      R = A ${op1} B
      R = D ${op2} C
      @custom noleaf A B C D
    `;
    runWithoutFD('[' + max + ']testTernaryTernarySharedResults', op1, direction1, op2, direction2, dsl, ifThrowThenOps);
    runWithFD('[' + max + ']testTernaryTernarySharedResults', op1, direction1, op2, direction2, ifThrowThenOps === 'reject', dsl);
  }
  if ((!direction1 || direction1 === 'rhs') && (!direction2 || direction2 === 'lhs') && max-- > 0) {
    let dsl = `
      : A [${A}]
      : B [${B}]
      : C [${C}]
      : D [${D}]
      : R [${R}]
      R = B ${op1} A
      R = C ${op2} D
      @custom noleaf A B C D
    `;
    runWithoutFD('[' + max + ']testTernaryTernarySharedResults', op1, direction1, op2, direction2, dsl, ifThrowThenOps);
    runWithFD('[' + max + ']testTernaryTernarySharedResults', op1, direction1, op2, direction2, ifThrowThenOps === 'reject', dsl);
  }
  if ((!direction1 || direction1 === 'rhs') && (!direction2 || direction2 === 'rhs') && max-- > 0) {
    let dsl = `
      : A [${A}]
      : B [${B}]
      : C [${C}]
      : D [${D}]
      : R [${R}]
      R = B ${op1} A
      R = D ${op2} C
      @custom noleaf A B C D
    `;
    runWithoutFD('[' + max + ']testTernaryTernarySharedResults', op1, direction1, op2, direction2, dsl, ifThrowThenOps);
    runWithFD('[' + max + ']testTernaryTernarySharedResults', op1, direction1, op2, direction2, ifThrowThenOps === 'reject', dsl);
  }

  // reverse op order:
  if ((!direction1 || direction1 === 'lhs') && (!direction2 || direction2 === 'lhs') && max-- > 0) {
    let dsl = `
      : A [${A}]
      : B [${B}]
      : C [${C}]
      : D [${D}]
      : R [${R}]
      R = C ${op2} D
      R = A ${op1} B
      @custom noleaf A B C D
    `;
    runWithoutFD('[' + max + ']testTernaryTernarySharedResults', op1, direction1, op2, direction2, dsl, ifThrowThenOps);
    runWithFD('[' + max + ']testTernaryTernarySharedResults', op1, direction1, op2, direction2, ifThrowThenOps === 'reject', dsl);
  }
  if ((!direction1 || direction1 === 'lhs') && (!direction2 || direction2 === 'rhs') && max-- > 0) {
    let dsl = `
      : A [${A}]
      : B [${B}]
      : C [${C}]
      : D [${D}]
      : R [${R}]
      R = D ${op2} C
      R = A ${op1} B
      @custom noleaf A B C D
    `;
    runWithoutFD('[' + max + ']testTernaryTernarySharedResults', op1, direction1, op2, direction2, dsl, ifThrowThenOps);
    runWithFD('[' + max + ']testTernaryTernarySharedResults', op1, direction1, op2, direction2, ifThrowThenOps === 'reject', dsl);
  }
  if ((!direction1 || direction1 === 'rhs') && (!direction2 || direction2 === 'lhs') && max-- > 0) {
    let dsl = `
      : A [${A}]
      : B [${B}]
      : C [${C}]
      : D [${D}]
      : R [${R}]
      R = C ${op2} D
      R = B ${op1} A
      @custom noleaf A B C D
    `;
    runWithoutFD('[' + max + ']testTernaryTernarySharedResults', op1, direction1, op2, direction2, dsl, ifThrowThenOps);
    runWithFD('[' + max + ']testTernaryTernarySharedResults', op1, direction1, op2, direction2, ifThrowThenOps === 'reject', dsl);
  }
  if ((!direction1 || direction1 === 'rhs') && (!direction2 || direction2 === 'rhs') && max-- > 0) {
    let dsl = `
      : A [${A}]
      : B [${B}]
      : C [${C}]
      : D [${D}]
      : R [${R}]
      R = D ${op2} C
      R = B ${op1} A
      @custom noleaf A B C D
    `;
    runWithoutFD('[' + max + ']testTernaryTernarySharedResults', op1, direction1, op2, direction2, dsl, ifThrowThenOps);
    runWithFD('[' + max + ']testTernaryTernarySharedResults', op1, direction1, op2, direction2, ifThrowThenOps === 'reject', dsl);
  }
}
